{"id":"c82efcfed65cbb5faf569e4aaeed6019","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {ERC1155Utils} from \"./utils/ERC1155Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                ERC1155Utils.checkOnERC1155Received(operator, from, to, id, value, data);\n            } else {\n                ERC1155Utils.checkOnERC1155BatchReceived(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        assembly (\"memory-safe\") {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[ERC].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC-1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC-1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/utils/ERC1155Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155Receiver} from \"../IERC1155Receiver.sol\";\nimport {IERC1155Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-1155 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n *\n * _Available since v5.1._\n */\nlibrary ERC1155Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC1155-onERC1155Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155Received(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155-onERC1155BatchReceived}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155BatchReceived(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Arrays.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Arrays.sol)\n// This file was procedurally generated from scripts/generate/templates/Arrays.js.\n\npragma solidity ^0.8.20;\n\nimport {Comparators} from \"./Comparators.sol\";\nimport {SlotDerivation} from \"./SlotDerivation.sol\";\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using SlotDerivation for bytes32;\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Sort an array of uint256 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        uint256[] memory array,\n        function(uint256, uint256) pure returns (bool) comp\n    ) internal pure returns (uint256[] memory) {\n        _quickSort(_begin(array), _end(array), comp);\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of uint256 in increasing order.\n     */\n    function sort(uint256[] memory array) internal pure returns (uint256[] memory) {\n        sort(array, Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of address (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        address[] memory array,\n        function(address, address) pure returns (bool) comp\n    ) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of address in increasing order.\n     */\n    function sort(address[] memory array) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        bytes32[] memory array,\n        function(bytes32, bytes32) pure returns (bool) comp\n    ) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of bytes32 in increasing order.\n     */\n    function sort(bytes32[] memory array) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n     * at end (exclusive). Sorting follows the `comp` comparator.\n     *\n     * Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n     *\n     * IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n     * be used only if the limits are within a memory array.\n     */\n    function _quickSort(uint256 begin, uint256 end, function(uint256, uint256) pure returns (bool) comp) private pure {\n        unchecked {\n            if (end - begin < 0x40) return;\n\n            // Use first element as pivot\n            uint256 pivot = _mload(begin);\n            // Position where the pivot should be at the end of the loop\n            uint256 pos = begin;\n\n            for (uint256 it = begin + 0x20; it < end; it += 0x20) {\n                if (comp(_mload(it), pivot)) {\n                    // If the value stored at the iterator's position comes before the pivot, we increment the\n                    // position of the pivot and move the value there.\n                    pos += 0x20;\n                    _swap(pos, it);\n                }\n            }\n\n            _swap(begin, pos); // Swap pivot into place\n            _quickSort(begin, pos, comp); // Sort the left side of the pivot\n            _quickSort(pos + 0x20, end, comp); // Sort the right side of the pivot\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first element of `array`.\n     */\n    function _begin(uint256[] memory array) private pure returns (uint256 ptr) {\n        assembly (\"memory-safe\") {\n            ptr := add(array, 0x20)\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n     * that comes just after the last element of the array.\n     */\n    function _end(uint256[] memory array) private pure returns (uint256 ptr) {\n        unchecked {\n            return _begin(array) + array.length * 0x20;\n        }\n    }\n\n    /**\n     * @dev Load memory word (as a uint256) at location `ptr`.\n     */\n    function _mload(uint256 ptr) private pure returns (uint256 value) {\n        assembly {\n            value := mload(ptr)\n        }\n    }\n\n    /**\n     * @dev Swaps the elements memory location `ptr1` and `ptr2`.\n     */\n    function _swap(uint256 ptr1, uint256 ptr2) private pure {\n        assembly {\n            let value1 := mload(ptr1)\n            let value2 := mload(ptr2)\n            mstore(ptr1, value2)\n            mstore(ptr2, value1)\n        }\n    }\n\n    /// @dev Helper: low level cast address memory array to uint256 memory array\n    function _castToUint256Array(address[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 memory array to uint256 memory array\n    function _castToUint256Array(bytes32[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast address comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(address, address) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(bytes32, bytes32) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * NOTE: The `array` is expected to be sorted in ascending order, and to\n     * contain no repeated elements.\n     *\n     * IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n     * support for repeated elements in the array. The {lowerBound} function should\n     * be used instead.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value greater or equal than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound].\n     */\n    function lowerBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value strictly greater than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound].\n     */\n    function upperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {lowerBound}, but with an array in memory.\n     */\n    function lowerBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {upperBound}, but with an array in memory.\n     */\n    function upperBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes32[] memory arr, uint256 pos) internal pure returns (bytes32 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(address[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes32[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(uint256[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Comparators.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Comparators.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to compare values.\n *\n * _Available since v5.1._\n */\nlibrary Comparators {\n    function lt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a < b;\n    }\n\n    function gt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a > b;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/SlotDerivation.sol)\n// This file was procedurally generated from scripts/generate/templates/SlotDerivation.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n * corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n * the solidity language / compiler.\n *\n * See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n *\n * Example usage:\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using StorageSlot for bytes32;\n *     using SlotDerivation for bytes32;\n *\n *     // Declare a namespace\n *     string private constant _NAMESPACE = \"<namespace>\" // eg. OpenZeppelin.Slot\n *\n *     function setValueInNamespace(uint256 key, address newValue) internal {\n *         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n *     }\n *\n *     function getValueInNamespace(uint256 key) internal view returns (address) {\n *         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {StorageSlot}.\n *\n * NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n * upgrade safety will ignore the slots accessed through this library.\n *\n * _Available since v5.1._\n */\nlibrary SlotDerivation {\n    /**\n     * @dev Derive an ERC-7201 slot from a string (namespace).\n     */\n    function erc7201Slot(string memory namespace) internal pure returns (bytes32 slot) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, sub(keccak256(add(namespace, 0x20), mload(namespace)), 1))\n            slot := and(keccak256(0x00, 0x20), not(0xff))\n        }\n    }\n\n    /**\n     * @dev Add an offset to a slot to get the n-th element of a structure or an array.\n     */\n    function offset(bytes32 slot, uint256 pos) internal pure returns (bytes32 result) {\n        unchecked {\n            return bytes32(uint256(slot) + pos);\n        }\n    }\n\n    /**\n     * @dev Derive the location of the first element in an array from the slot where the length is stored.\n     */\n    function deriveArray(bytes32 slot) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, slot)\n            result := keccak256(0x00, 0x20)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, address key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, and(key, shr(96, not(0))))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bool key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, iszero(iszero(key)))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes32 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, uint256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, int256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, string memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"src/core/LMSRPredictionMarket.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @title LMSR Prediction Market\n * @dev Implements a Logarithmic Market Scoring Rule (LMSR) prediction market with ERC20 token support.\n */\n\nimport \"../utils/ABDKMath64x64.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./PredictionMarketPositions.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\n\ncontract LMSRPredictionMarket is Ownable, ReentrancyGuard, Pausable {\n    using ABDKMath64x64 for int128;\n\n    // ==============================\n    // State variables\n    // ==============================\n\n    struct Outcome {\n        string name;\n        uint256 totalShares; // Quantity q_i\n    }\n\n    Outcome[] public outcomes;\n    uint256 public marketEndTime;\n    bool public marketClosed;\n    bool public marketSettled;\n    uint256 public winningOutcome;\n    string public title;\n    address public oracle;\n\n    uint256 public marketMakerFunds = 0;\n    uint256 public initialFunds = 0;\n    uint256 public collectedFees = 0;\n    PredictionMarketPositions public positions;\n\n    // ==============================\n    // IMMUTABLE VARIABLES\n    // ==============================\n\n    uint256 public immutable b; // LMSR liquidity parameter\n    IERC20 public immutable token;\n    uint256 public immutable marketId;\n    uint256 public immutable feePercent;\n    address public immutable feeRecipient;\n    uint8 public immutable tokenDecimals;\n    uint256 public immutable payoutPerShare;\n    uint256 public  unitScalingFactor;\n    uint256 public immutable i_numOutcomes;\n\n    // ==============================\n    // CONSTANTS\n    // ==============================\n\n    uint256 public constant SHARES_DECIMALS = 0; // Decimals for shares scaling\n    uint256 public constant PERCENT_DENOMINATOR = 100; // Denominator for percentage calculations\n    uint256 public constant FEE_REINVEST_PERCENT = 50; // Percentage of fees reinvested into the market maker\n    uint256 public constant MAX_SHARE_TRADE = 10000; // Maximum number of shares that can be bought\n    uint256 public constant MAX_OUTCOME = 5; // Maximum number of outcomes allowed\n    uint256 public constant MIN_LIQUIDITY_PARAM = 100; // Minimum liquidity parameter\n    uint256 public constant MAX_LIQUIDITY_PARAM = 10000; // Maximum liquidity parameter\n\n    // ==============================\n    // EVENTS\n    // ==============================\n\n    event SharesPurchased(\n        address indexed user,\n        uint256 outcomeIndex,\n        uint256 numShares,\n        uint256 cost\n    );\n    event SharesSold(\n        address indexed user,\n        uint256 outcomeIndex,\n        uint256 numShares,\n        uint256 payment\n    );\n    event MarketClosed();\n    event OutcomeSet(uint256 indexed winningOutcome);\n    event PayoutClaimed(address indexed user, uint256 amount);\n    event FeesWithdrawn(address indexed feeRecipient, uint256 amount);\n    event FundsDeposited(address indexed depositor, uint256 amount);\n\n    // ==============================\n    // CONSTRUCTOR\n    // ==============================\n\n    /**\n     * @dev Initializes the prediction market with the specified parameters.\n     * @param _marketId Unique identifier for the market.\n     * @param _title Title of the prediction market.\n     * @param _outcomes Array of outcome names for the market.\n     * @param _oracle Address of the oracle responsible for setting the outcome.\n     * @param _b Liquidity parameter (LMSR constant) that affects share pricing dynamics.\n     * @param _positionsAddress Address of the ERC1155 contract managing tokenized positions.\n     * @param _duration Duration (in seconds) for the market to remain open.\n     * @param _feePercent Fee percentage applied to trades.\n     * @param _feeRecipient Address receiving the collected fees.\n     * @param _tokenAddress Address of the ERC20 token used for trades.\n     * @param _initialFunds Initial funds deposited into the market maker.\n     */\n\n    constructor(\n        uint256 _marketId,\n        string memory _title,\n        string[] memory _outcomes,\n        address _oracle,\n        uint256 _b,\n        uint256 _duration,\n        uint256 _feePercent,\n        address _feeRecipient,\n        address _tokenAddress,\n        uint256 _initialFunds,\n        address _positionsAddress\n    ) Ownable(msg.sender) {\n        require(_tokenAddress != address(0), \"Invalid token address\");\n        require(_feeRecipient != address(0), \"Invalid fee recipient address\");\n        require(_outcomes.length > 0, \"At least one outcome required\");\n        require(_b > 0, \"Liquidity parameter b must be greater than zero\");\n        require(_duration > 0, \"Duration must be positive\");\n        require(\n            _outcomes.length > 0 && _outcomes.length <= MAX_OUTCOME,\n            \"Invalid number of outcomes\"\n        );\n        require(\n            _b <= MAX_LIQUIDITY_PARAM,\n            \"Liquidity parameter 'b' exceeds the limit maximum\"\n        );\n        require(\n            _b >= MIN_LIQUIDITY_PARAM,\n            \"Liquidity parameter 'b' must be greater than minimum\"\n        );\n        // Enforce the condition: initialFunds > b * ln(num_outcomes)\n\n        require(\n            _initialFunds >=\n                calculateMinimumInitialFunds(_b, _outcomes.length) *\n                    (10 ** IERC20Metadata(_tokenAddress).decimals()),\n            \"Initial funds must exceed b * ln(num_outcomes)\"\n        );\n\n        marketId = _marketId;\n        title = _title;\n        oracle = _oracle;\n        b = _b;\n        marketEndTime = block.timestamp + _duration;\n        marketClosed = false;\n        marketSettled = false;\n        feePercent = _feePercent;\n        feeRecipient = _feeRecipient;\n        token = IERC20(_tokenAddress);\n        i_numOutcomes = _outcomes.length;\n        // Get token decimals dynamically\n        tokenDecimals = IERC20Metadata(_tokenAddress).decimals();\n        positions = PredictionMarketPositions(_positionsAddress);\n\n        // Grant roles to this contract\n        //positions.grantRole(positions.MINTER_ROLE(), address(this));\n        //positions.grantRole(positions.BURNER_ROLE(), address(this));\n\n        // Adjust scaling factor dynamically\n        if (tokenDecimals > SHARES_DECIMALS) {\n            unitScalingFactor = 10 ** (tokenDecimals - SHARES_DECIMALS);\n        } else {\n            unitScalingFactor = 10 ** (SHARES_DECIMALS - tokenDecimals);\n        }\n\n        payoutPerShare = 1 * (10 ** tokenDecimals);\n\n        for (uint256 i = 0; i < _outcomes.length; i++) {\n            outcomes.push(Outcome({name: _outcomes[i], totalShares: 0}));\n        }\n    }\n\n    // ==============================\n    // MODIFIERS\n    // ==============================\n\n    modifier onlyOracle() {\n        require(msg.sender == oracle, \"Not authorized\");\n        _;\n    }\n\n    // ==============================\n    // FUNCTIONS\n    // ==============================\n\n    /**\n     * @notice Purchases shares for a specific outcome.\n     * @param outcomeIndex The index of the selected outcome.\n     * @param numShares The number of shares to purchase.\n     * @dev Transfers tokens from the user to the contract and mints new shares.\n     * Emits a {SharesPurchased} event.\n     */\n\n    function buyShares(\n        uint256 outcomeIndex,\n        uint256 numShares\n    ) public nonReentrant whenNotPaused {\n        require(!marketClosed, \"Market is closed\");\n        require(outcomeIndex < outcomes.length, \"Invalid outcome\");\n        require(numShares > 0, \"Must buy at least one share\");\n        require(numShares < MAX_SHARE_TRADE, \"Share trade limit exceeded\");\n\n        // Calculate cost before purchase\n        uint256[] memory qBefore = getQuantities();\n        int128 costBefore = calculateCost(qBefore);\n\n        // Update quantity for the selected outcome\n        outcomes[outcomeIndex].totalShares += numShares;\n\n        // Calculate cost after purchase\n        uint256[] memory qAfter = getQuantities();\n        int128 costAfter = calculateCost(qAfter);\n\n        // Calculate the cost difference\n        int128 costDifference = ABDKMath64x64.sub(costAfter, costBefore);\n        require(costDifference >= 0, \"Cost difference is negative\");\n        int128 scaledCostDifference = ABDKMath64x64.mul(\n            costDifference,\n            ABDKMath64x64.fromUInt(10 ** SHARES_DECIMALS)\n        );\n        uint256 cost = ABDKMath64x64.toUInt(scaledCostDifference) *\n            unitScalingFactor;\n\n        // Calculate the fee\n        uint256 feeAmount = (cost * feePercent) / PERCENT_DENOMINATOR;\n        uint256 reinvestAmount = (feeAmount * FEE_REINVEST_PERCENT) /\n            PERCENT_DENOMINATOR;\n        uint256 feeRecipientAmount = feeAmount - reinvestAmount;\n        uint256 netCost = cost + feeAmount;\n\n        // Transfer tokens from user to contract\n        require(\n            token.transferFrom(msg.sender, address(this), netCost),\n            \"Token transfer failed\"\n        );\n\n        positions.mint(msg.sender, marketId, outcomeIndex, numShares);\n\n        // Update market maker's funds (cost + reinvested fee)\n        marketMakerFunds += cost + reinvestAmount;\n\n        // Update collected fees (fee to be collected by feeRecipient)\n        collectedFees += feeRecipientAmount;\n\n        // Emit an event\n        emit SharesPurchased(msg.sender, outcomeIndex, numShares, netCost);\n    }\n\n    /**\n     * @notice Sells shares for a specific outcome.\n     * @param outcomeIndex The index of the selected outcome.\n     * @param numShares The number of shares to sell.\n     * @dev Burns the user's shares and transfers tokens back to the user.\n     * Emits a {SharesSold} event.\n     */\n\n    function sellShares(\n        uint256 outcomeIndex,\n        uint256 numShares\n    ) public nonReentrant whenNotPaused {\n        require(!marketClosed, \"Market is closed\");\n        require(outcomeIndex < outcomes.length, \"Invalid outcome\");\n        require(numShares > 0, \"Must sell at least one share\");\n\n        // Calculate a unique token ID based on marketId and outcomeIndex\n        uint256 tokenId = positions.getTokenId(marketId, outcomeIndex);\n\n        // Check if the user has enough shares to sell\n        uint256 userSharesAmount = positions.balanceOf(msg.sender, tokenId);\n        require(userSharesAmount >= numShares, \"Not enough shares to sell\");\n\n        // Calculate cost before selling\n        uint256[] memory qBefore = getQuantities();\n        int128 costBefore = calculateCost(qBefore);\n\n        // Update quantity for the selected outcome\n        outcomes[outcomeIndex].totalShares -= numShares;\n\n        // Calculate cost after selling\n        uint256[] memory qAfter = getQuantities();\n        int128 costAfter = calculateCost(qAfter);\n\n        // Calculate the payment difference\n        int128 costDifference = ABDKMath64x64.sub(costBefore, costAfter);\n        require(costDifference >= 0, \"Cost difference is negative\");\n        int128 scaledCostDifference = ABDKMath64x64.mul(\n            costDifference,\n            ABDKMath64x64.fromUInt(10 ** SHARES_DECIMALS)\n        );\n        uint256 payment = ABDKMath64x64.toUInt(scaledCostDifference) *\n            unitScalingFactor;\n\n        // Apply fees\n        uint256 feeAmount = (payment * feePercent) / PERCENT_DENOMINATOR;\n        uint256 reinvestAmount = (feeAmount * FEE_REINVEST_PERCENT) /\n            PERCENT_DENOMINATOR;\n        uint256 feeRecipientAmount = feeAmount - reinvestAmount;\n        uint256 netPayment = payment - feeAmount;\n\n        // Update market maker's funds (reduce by netPayment and reinvested fee)\n        require(\n            marketMakerFunds >= netPayment + reinvestAmount,\n            \"Insufficient market maker funds\"\n        );\n        marketMakerFunds -= (netPayment + reinvestAmount);\n\n        // Update collected fees (fee to be collected by feeRecipient)\n        collectedFees += feeRecipientAmount;\n\n        // Burn the shares from the user's balance\n        positions.burn(msg.sender, marketId, outcomeIndex, numShares);\n\n        // Transfer tokens to the user\n        require(\n            token.transfer(msg.sender, netPayment),\n            \"Token transfer failed\"\n        );\n\n        // Emit an event\n        emit SharesSold(msg.sender, outcomeIndex, numShares, netPayment);\n    }\n\n    /**\n     * @notice Deposits additional funds into the market maker.\n     * @param amount The amount of funds to deposit (in the ERC20 token's smallest unit).\n     * @dev Can only be called by the owner. Updates the market maker's available funds.\n     * Emits a {FundsDeposited} event.\n     */\n    function depositInitialFunds(uint256 amount) external onlyOwner {\n        require(\n            token.transferFrom(msg.sender, address(this), amount),\n            \"Initial fund transfer failed\"\n        );\n        marketMakerFunds += amount;\n        emit FundsDeposited(msg.sender, amount);\n    }\n\n    /**\n     * @notice Closes the market when the end time is reached.\n     * @dev Can only be called after the market end time.\n     * Emits a {MarketClosed} event.\n     */\n    function closeMarket() public {\n        require(block.timestamp >= marketEndTime, \"Market not over yet\");\n        marketClosed = true;\n        emit MarketClosed();\n    }\n\n    /**\n     * @notice Sets the winning outcome for the market.\n     * @param _winningOutcome The index of the winning outcome.\n     * @dev Can only be called by the oracle and after the market is closed.\n     * Emits an {OutcomeSet} event.\n     */\n\n    function setOutcome(uint256 _winningOutcome) public onlyOracle {\n        require(marketClosed, \"Market still open\");\n        require(!marketSettled, \"Market already settled\");\n        require(_winningOutcome < outcomes.length, \"Invalid outcome\");\n        require(!marketSettled, \"Market already settled\");\n\n        winningOutcome = _winningOutcome;\n        marketSettled = true;\n\n        emit OutcomeSet(_winningOutcome);\n    }\n\n    /**\n     * @notice Claims the payout for a user holding shares of the winning outcome.\n     * @dev Transfers tokens to the user based on their shareholding.\n     * Emits a {PayoutClaimed} event.\n     */\n    function claimPayout() public nonReentrant whenNotPaused {\n        require(marketSettled, \"Market not settled yet\");\n\n        // Calculate a unique token ID based on marketId and outcomeIndex\n        uint256 tokenId = positions.getTokenId(marketId, winningOutcome);\n\n        // Get the user's share balance for the winning outcome\n        uint256 userSharesAmount = positions.balanceOf(msg.sender, tokenId);\n        require(userSharesAmount > 0, \"No winnings to claim\");\n\n        // Calculate payout based on dynamic formula\n        uint256 totalWinningShares = outcomes[winningOutcome].totalShares;\n        require(\n            totalWinningShares >= userSharesAmount,\n            \"Invalid share amounts\"\n        );\n\n        // Calculate payout: number of winning shares times payout per share ($1)\n        //uint256 payout = userSharesAmount * payoutPerShare;\n        //Aren't we missing the scaling factor here? as we should divine number of shares by 10^share_decimals\n        uint256 payout = (userSharesAmount * payoutPerShare); // / (10 ** SHARES_DECIMALS);\n\n        // Ensure the market maker has enough funds\n        require(marketMakerFunds >= payout, \"Insufficient market maker funds\");\n\n        // Update market maker funds\n        marketMakerFunds -= payout;\n\n        // Burn the ERC-1155 tokens representing the user's shares\n        positions.burn(msg.sender, marketId, winningOutcome, userSharesAmount);\n\n        // Transfer the payout in ERC-20 tokens to the user\n        require(token.transfer(msg.sender, payout), \"Token payout failed\");\n\n        emit PayoutClaimed(msg.sender, payout);\n    }\n\n    /**\n     * @notice Withdraws collected fees to the fee recipient.\n     * @dev Can only be called by the fee recipient.\n     * Emits a {FeesWithdrawn} event.\n     */\n    function withdrawFees() external {\n        require(msg.sender == feeRecipient, \"Not authorized\");\n        uint256 amount = collectedFees;\n        collectedFees = 0;\n        // Transfer the collected fees in ERC-20 tokens to the feeRecipient\n        require(token.transfer(feeRecipient, amount), \"Fee withdrawal failed\");\n        emit FeesWithdrawn(feeRecipient, amount);\n    }\n\n    /**\n     * @notice Estimates the cost of purchasing a given number of shares.\n     * @param outcomeIndex The index of the selected outcome.\n     * @param numShares The number of shares to purchase.\n     * @return The estimated cost of purchasing the shares.\n     */\n\n    function estimateCost(\n        uint256 outcomeIndex,\n        uint256 numShares\n    ) public view returns (uint256) {\n        require(outcomeIndex < outcomes.length, \"Invalid outcome index\");\n        require(numShares > 0, \"Number of shares must be greater than zero\");\n        require(b > 0, \"Liquidity parameter b must be greater than zero\");\n        uint256[] memory qBefore = getQuantities();\n        int128 costBefore = calculateCost(qBefore);\n\n        // Simulate the purchase\n        qBefore[outcomeIndex] += numShares;\n        int128 costAfter = calculateCost(qBefore);\n\n        int128 costDifference = ABDKMath64x64.sub(costAfter, costBefore);\n        int128 scaledCostDifference = ABDKMath64x64.mul(\n            costDifference,\n            ABDKMath64x64.fromUInt(10 ** SHARES_DECIMALS)\n        );\n        uint256 cost = ABDKMath64x64.toUInt(scaledCostDifference) *\n            unitScalingFactor;\n\n        uint256 feeAmount = (cost * feePercent) / PERCENT_DENOMINATOR;\n        uint256 netCost = cost + feeAmount;\n\n        return netCost;\n    }\n\n    /**\n     * @notice Estimates the payment for selling a given number of shares.\n     * @param outcomeIndex The index of the selected outcome.\n     * @param numShares The number of shares to sell.\n     * @return The estimated payment for selling the shares.\n     */\n    function estimatePayment(\n        uint256 outcomeIndex,\n        uint256 numShares\n    ) public view returns (uint256) {\n        require(outcomeIndex < outcomes.length, \"Invalid outcome index\");\n        require(numShares > 0, \"Number of shares must be greater than zero\");\n        require(b > 0, \"Liquidity parameter b must be greater than zero\");\n        uint256[] memory qBefore = getQuantities();\n        int128 costBefore = calculateCost(qBefore);\n\n        // Simulate the purchase\n        qBefore[outcomeIndex] -= numShares;\n        int128 costAfter = calculateCost(qBefore);\n\n        int128 costDifference = ABDKMath64x64.sub(costBefore, costAfter);\n        int128 scaledCostDifference = ABDKMath64x64.mul(\n            costDifference,\n            ABDKMath64x64.fromUInt(10 ** SHARES_DECIMALS)\n        );\n        uint256 payment = ABDKMath64x64.toUInt(scaledCostDifference) *\n            unitScalingFactor;\n\n        uint256 feeAmount = (payment * feePercent) / PERCENT_DENOMINATOR;\n        uint256 netpayment = payment + feeAmount;\n\n        return netpayment;\n    }\n\n    /**\n     * @notice Updates the oracle address.\n     * @param _newOracle The new oracle address.\n     * @dev Can only be called by the owner.\n     */\n    function updateOracle(address _newOracle) external onlyOwner {\n        require(_newOracle != address(0), \"Invalid oracle address\");\n        oracle = _newOracle;\n    }\n\n    /**\n     * @notice Withdraws any remaining funds from the market maker.\n     * @dev Can only be called by the owner and after the market is settled.\n     * Transfers all remaining funds in the market maker to the fee recipient.\n     * Emits no specific event; uses the token transfer to signal success.\n     */\n    // shouldn't this be restricted to owner can withdrawa only all users have claimed their payouts, otherwise the market maker can withdraw all the funds before the users claim their payouts\n    function withdrawRemainingFunds() external onlyOwner {\n        require(marketSettled, \"Market not settled yet\");\n        uint256 remainingFunds = marketMakerFunds;\n        marketMakerFunds = 0;\n        require(\n            token.transfer(feeRecipient, remainingFunds),\n            \"Withdrawal failed\"\n        );\n    }\n\n    /**\n     * @notice Pauses the contract.\n     * @dev Can only be called by the owner.\n     */\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    /**\n     * @notice Unpauses the contract.\n     * @dev Can only be called by the owner.\n     */\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    // ==============================\n    // Helper FUNCTIONS\n    // ==============================\n\n    /**\n     * @notice Helper function to retrieve the quantities of all outcomes.\n     * @return Array of quantities representing total shares for each outcome.\n     */\n\n    function getQuantities() internal view returns (uint256[] memory) {\n        uint256[] memory q = new uint256[](outcomes.length);\n        for (uint256 i = 0; i < outcomes.length; i++) {\n            q[i] = outcomes[i].totalShares;\n        }\n        return q;\n    }\n\n    /**\n     * @notice Internal function to calculate the cost of purchasing shares.\n     * @param q Array of quantities representing total shares for each outcome.\n     * @return The cost of purchasing shares as a 64x64 fixed-point number.\n     */\n    function calculateCost(uint256[] memory q) internal view returns (int128) {\n        require(q.length > 0, \"No outcomes available\");\n        int128 sumExp = ABDKMath64x64.fromUInt(0);\n        for (uint256 i = 0; i < q.length; i++) {\n            int128 qiDivB = ABDKMath64x64.divu(q[i], b);\n            int128 expQiDivB = ABDKMath64x64.exp(qiDivB);\n            sumExp = ABDKMath64x64.add(sumExp, expQiDivB);\n        }\n        return\n            ABDKMath64x64.mul(\n                ABDKMath64x64.fromUInt(b),\n                ABDKMath64x64.ln(sumExp)\n            );\n    }\n\n    /**\n     * @dev Calculates the minimum initial funds required: b * ln(num_outcomes)\n     * @param _b The LMSR liquidity parameter\n     * @param numOutcomes The number of outcomes in the market\n     * @return The minimum initial funds required\n     */\n    function calculateMinimumInitialFunds(\n        uint256 _b,\n        uint256 numOutcomes\n    ) public pure returns (uint256) {\n        require(numOutcomes > 1, \"At least two outcomes required\");\n        // Use ABDKMath64x64 for precision logarithmic calculations\n        int128 lnOutcomes = ABDKMath64x64.ln(\n            ABDKMath64x64.fromUInt(numOutcomes)\n        );\n        return ABDKMath64x64.mulu(lnOutcomes, _b);\n    }\n\n    // ==============================\n    // Gettor FUNCTIONS\n    // ==============================\n\n    \n    /**\n     * @notice Gets the unique position ID for a user in a specific outcome.\n     * @param _marketId The ID of the market.\n     * @param outcomeIndex The index of the outcome.\n     * @return The unique position ID.\n     */\n    function getPositionId(\n        uint256 _marketId,\n        uint256 outcomeIndex\n    ) public pure returns (uint256) {\n        return uint256(keccak256(abi.encode(_marketId, outcomeIndex)));\n    }\n\n    /**\n     * @notice Gets the total number of outcomes in the market.\n     * @return The number of outcomes.\n     */\n    function getOutcomeCount() external view returns (uint256) {\n        return outcomes.length;\n    }\n\n    /**\n     * @notice Gets the total shares for a specific outcome.\n     * @param outcomeIndex The index of the outcome.\n     * @return The total shares for the outcome.\n     */\n    function getOutcomeTotalShares(\n        uint256 outcomeIndex\n    ) external view returns (uint256) {\n        require(outcomeIndex < outcomes.length, \"Invalid outcome index\");\n        return outcomes[outcomeIndex].totalShares;\n    }\n\n    /**\n     * @notice Gets the user's share balance for a specific outcome.\n     * @param user The address of the user.\n     * @param outcomeIndex The index of the outcome.\n     * @return The user's share balance for the specified outcome.\n     * @dev Uses the PredictionMarketPositions contract to retrieve the balance.\n     */\n\n    function getUserShares(\n        address user,\n        uint256 outcomeIndex\n    ) external view returns (uint256) {\n        uint256 tokenId = positions.getTokenId(marketId, outcomeIndex);\n        return positions.balanceOf(user, tokenId);\n    }\n\n    /**\n     * @notice Gets the current price of shares for a specific outcome.\n     * @param outcomeIndex The index of the selected outcome.\n     * @return The price of a single share (scaled to match SHARES_DECIMALS precision).\n     * @dev Uses the LMSR formula to calculate the price based on current share quantities.\n     * The price is normalized to the precision defined by SHARES_DECIMALS.\n     */\n\n    function getPrice(uint256 outcomeIndex) public view returns (uint256) {\n        require(outcomeIndex < outcomes.length, \"Invalid outcome\");\n\n        int128 numerator = ABDKMath64x64.exp(\n            ABDKMath64x64.divu(outcomes[outcomeIndex].totalShares, b)\n        );\n        int128 denominator = ABDKMath64x64.fromUInt(0);\n        for (uint256 i = 0; i < outcomes.length; i++) {\n            int128 expQiDivB = ABDKMath64x64.exp(\n                ABDKMath64x64.divu(outcomes[i].totalShares, b)\n            );\n            denominator = ABDKMath64x64.add(denominator, expQiDivB);\n        }\n        int128 price = ABDKMath64x64.div(numerator, denominator);\n        return\n            ABDKMath64x64.toUInt(\n                ABDKMath64x64.mul(\n                    price,\n                    ABDKMath64x64.fromUInt(10 ** SHARES_DECIMALS)\n                )\n            );\n    }\n}\n"},"src/core/MarketFactory.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./LMSRPredictionMarket.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./PredictionMarketPositions.sol\"; // Import the ERC-1155 contract\n\ncontract MarketFactory is Ownable {\n    address[] public activeMarkets;\n    PredictionMarketPositions public positions;\n    // Mapping to store market titles\n    mapping(address => string) public marketTitles;\n\n    event MinterAuthorized(address indexed marketAddress);\n    event MarketCreated(address indexed marketAddress, string title);\n    event RolesGranted(address indexed marketAddress);\n    event FundsTransferred(address indexed marketAddress, uint256 amount);\n\n    /**\n     * @dev Constructor to initialize the factory with the ERC-1155 positions contract\n     * @param _positionsAddress Address of the deployed PredictionMarketPositions contract\n     */\n\n    constructor(address _positionsAddress) Ownable(msg.sender) {\n        positions = PredictionMarketPositions(_positionsAddress);\n    }\n\n    function createMarket(\n        uint256 marketId,\n        string memory title,\n        string[] memory outcomes,\n        address oracle,\n        uint256 b,\n        uint256 duration,\n        uint256 feePercent,\n        address feeRecipient,\n        address tokenAddress,\n        uint256 initialFunds\n    ) public {\n        // Deploy the LMSRPredictionMarket contract\n\n        LMSRPredictionMarket newMarket = new LMSRPredictionMarket(\n            marketId,\n            title,\n            outcomes,\n            oracle,\n            b,\n            duration,\n            feePercent,\n            feeRecipient,\n            tokenAddress,\n            initialFunds,\n            address(positions)\n        );\n\n        // Add the new market to the list of active markets\n        activeMarkets.push(address(newMarket));\n\n        marketTitles[address(newMarket)] = title;\n        emit MarketCreated(address(newMarket), title);\n\n        // Grant roles to this contract\n        positions.grantRole(positions.MINTER_ROLE(), address(this));\n        positions.grantRole(positions.BURNER_ROLE(), address(this));\n        emit RolesGranted(address(newMarket));\n\n        if (initialFunds > 0) {\n            require(\n                IERC20(tokenAddress).transferFrom(\n                    msg.sender,\n                    address(newMarket),\n                    initialFunds\n                ),\n                \"Initial fund transfer failed\"\n            );\n        }\n    // Transfer ownership of the deployed market to the creator\n        newMarket.transferOwnership(msg.sender);\n    }\n\n    /**\n     * @dev Returns the list of all active markets\n     */\n    function getActiveMarkets() public view returns (address[] memory) {\n        return activeMarkets;\n    }\n}\n"},"src/core/PredictionMarketPositions.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\ncontract PredictionMarketPositions is ERC1155, Ownable, AccessControl {\n    // Base URI for token metadata\n    string private baseURI;\n    // Define roles\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\");\n\n    constructor(string memory _uri, address _initialOwner) ERC1155(_uri) Ownable(_initialOwner) {\n        // Metadata URI for each token\n        baseURI = _uri;\n        // Grant roles to the initial owner\n        _grantRole(DEFAULT_ADMIN_ROLE, _initialOwner);\n        _grantRole(MINTER_ROLE, _initialOwner);\n        _grantRole(BURNER_ROLE, _initialOwner);\n    }\n    // Override supportsInterface to resolve conflict between AccessControl and ERC1155\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override(ERC1155, AccessControl)\n        returns (bool)\n    {\n        return super.supportsInterface(interfaceId);\n    }\n   \n    /**\n     * @notice Mint tokens for a specific market and outcome.\n     * @dev Only accounts with MINTER_ROLE can call this function.\n     */\n\n    function mint(address to, uint256 marketId, uint256 outcomeIndex, uint256 amount) external onlyRole(MINTER_ROLE)  {\n        uint256 tokenId = _getTokenId(marketId, outcomeIndex); // Create unique token ID\n        _mint(to, tokenId, amount, \"\");\n        emit TokensMinted(to, tokenId, amount);\n    }\n\n    /**\n     * @notice Burn tokens for a specific market and outcome.\n     * @dev Only accounts with BURNER_ROLE can call this function.\n     */\n\n    function burn(address from, uint256 marketId, uint256 outcomeIndex, uint256 amount) external onlyRole(BURNER_ROLE) {\n        require(from != address(0), \"Cannot burn from zero address\");\n        require(amount > 0, \"Burn amount must be greater than zero\");\n        uint256 tokenId = _getTokenId(marketId, outcomeIndex);\n        _burn(from, tokenId, amount);\n        emit TokensBurned(from, tokenId, amount);\n    }\n    /**\n     * @notice Internal function to compute a unique token ID based on marketId and outcomeIndex.\n     */\n    function _getTokenId(uint256 marketId, uint256 outcomeIndex) internal pure returns (uint256) {\n        return uint256(keccak256(abi.encode(marketId, outcomeIndex)));\n    }\n\n    /**\n     * @notice Public function to get the token ID for a specific market and outcome.\n     */\n\n    // Add a public function to get the token ID\n    function getTokenId(uint256 marketId, uint256 outcomeIndex) external pure returns (uint256) {\n        return _getTokenId(marketId, outcomeIndex);\n    }\n\n    /**\n     * @notice Override URI function to return metadata URI for a token.\n     */\n    function uri(uint256 tokenId) public view override returns (string memory) {\n        return string(abi.encodePacked(baseURI, Strings.toString(tokenId), \".json\"));\n    }\n\n    event TokensMinted(address indexed to, uint256 indexed tokenId, uint256 amount);\n    event TokensBurned(address indexed from, uint256 indexed tokenId, uint256 amount);\n}\n"},"src/mock/ERC20Token.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract ERC20Token is ERC20 {\n    constructor(uint256 initialSupply) ERC20(\"SSL USD Token\", \"SSLUSD\") {\n        _mint(msg.sender, initialSupply); // Mint initial supply to the deployer\n    }\n}\n"},"src/utils/ABDKMath64x64.sol":{"content":"// SPDX-License-Identifier: BSD-4-Clause\n/*\n * ABDK Math 64.64 Smart Contract Library.  Copyright © 2019 by ABDK Consulting.\n * Author: Mikhail Vladimirov <mikhail.vladimirov@gmail.com>\n */\npragma solidity ^0.8.0;\n\n/**\n * Smart contract library of mathematical functions operating with signed\n * 64.64-bit fixed point numbers.  Signed 64.64-bit fixed point number is\n * basically a simple fraction whose numerator is signed 128-bit integer and\n * denominator is 2^64.  As long as denominator is always the same, there is no\n * need to store it, thus in Solidity signed 64.64-bit fixed point numbers are\n * represented by int128 type holding only the numerator.\n */\nlibrary ABDKMath64x64 {\n    /*\n    * Minimum value signed 64.64-bit fixed point number may have. \n    */\n    int128 private constant MIN_64x64 = -0x80000000000000000000000000000000;\n\n    /*\n    * Maximum value signed 64.64-bit fixed point number may have. \n    */\n    int128 private constant MAX_64x64 = 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\n\n    /**\n     * Convert signed 256-bit integer number into signed 64.64-bit fixed point\n     * number.  Revert on overflow.\n     *\n     * @param x signed 256-bit integer number\n     * @return signed 64.64-bit fixed point number\n     */\n    function fromInt(int256 x) internal pure returns (int128) {\n        unchecked {\n            require(x >= -0x8000000000000000 && x <= 0x7FFFFFFFFFFFFFFF);\n            return int128(x << 64);\n        }\n    }\n\n    /**\n     * Convert signed 64.64 fixed point number into signed 64-bit integer number\n     * rounding down.\n     *\n     * @param x signed 64.64-bit fixed point number\n     * @return signed 64-bit integer number\n     */\n    function toInt(int128 x) internal pure returns (int64) {\n        unchecked {\n            return int64(x >> 64);\n        }\n    }\n\n    /**\n     * Convert unsigned 256-bit integer number into signed 64.64-bit fixed point\n     * number.  Revert on overflow.\n     *\n     * @param x unsigned 256-bit integer number\n     * @return signed 64.64-bit fixed point number\n     */\n    function fromUInt(uint256 x) internal pure returns (int128) {\n        unchecked {\n            require(x <= 0x7FFFFFFFFFFFFFFF);\n            return int128(int256(x << 64));\n        }\n    }\n\n    /**\n     * Convert signed 64.64 fixed point number into unsigned 64-bit integer\n     * number rounding down.  Revert on underflow.\n     *\n     * @param x signed 64.64-bit fixed point number\n     * @return unsigned 64-bit integer number\n     */\n    function toUInt(int128 x) internal pure returns (uint64) {\n        unchecked {\n            require(x >= 0);\n            return uint64(uint128(x >> 64));\n        }\n    }\n\n    /**\n     * Convert signed 128.128 fixed point number into signed 64.64-bit fixed point\n     * number rounding down.  Revert on overflow.\n     *\n     * @param x signed 128.128-bin fixed point number\n     * @return signed 64.64-bit fixed point number\n     */\n    function from128x128(int256 x) internal pure returns (int128) {\n        unchecked {\n            int256 result = x >> 64;\n            require(result >= MIN_64x64 && result <= MAX_64x64);\n            return int128(result);\n        }\n    }\n\n    /**\n     * Convert signed 64.64 fixed point number into signed 128.128 fixed point\n     * number.\n     *\n     * @param x signed 64.64-bit fixed point number\n     * @return signed 128.128 fixed point number\n     */\n    function to128x128(int128 x) internal pure returns (int256) {\n        unchecked {\n            return int256(x) << 64;\n        }\n    }\n\n    /**\n     * Calculate x + y.  Revert on overflow.\n     *\n     * @param x signed 64.64-bit fixed point number\n     * @param y signed 64.64-bit fixed point number\n     * @return signed 64.64-bit fixed point number\n     */\n    function add(int128 x, int128 y) internal pure returns (int128) {\n        unchecked {\n            int256 result = int256(x) + y;\n            require(result >= MIN_64x64 && result <= MAX_64x64);\n            return int128(result);\n        }\n    }\n\n    /**\n     * Calculate x - y.  Revert on overflow.\n     *\n     * @param x signed 64.64-bit fixed point number\n     * @param y signed 64.64-bit fixed point number\n     * @return signed 64.64-bit fixed point number\n     */\n    function sub(int128 x, int128 y) internal pure returns (int128) {\n        unchecked {\n            int256 result = int256(x) - y;\n            require(result >= MIN_64x64 && result <= MAX_64x64);\n            return int128(result);\n        }\n    }\n\n    /**\n     * Calculate x * y rounding down.  Revert on overflow.\n     *\n     * @param x signed 64.64-bit fixed point number\n     * @param y signed 64.64-bit fixed point number\n     * @return signed 64.64-bit fixed point number\n     */\n    function mul(int128 x, int128 y) internal pure returns (int128) {\n        unchecked {\n            int256 result = int256(x) * y >> 64;\n            require(result >= MIN_64x64 && result <= MAX_64x64);\n            return int128(result);\n        }\n    }\n\n    /**\n     * Calculate x * y rounding towards zero, where x is signed 64.64 fixed point\n     * number and y is signed 256-bit integer number.  Revert on overflow.\n     *\n     * @param x signed 64.64 fixed point number\n     * @param y signed 256-bit integer number\n     * @return signed 256-bit integer number\n     */\n    function muli(int128 x, int256 y) internal pure returns (int256) {\n        unchecked {\n            if (x == MIN_64x64) {\n                require(\n                    y >= -0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\n                        && y <= 0x1000000000000000000000000000000000000000000000000\n                );\n                return -y << 63;\n            } else {\n                bool negativeResult = false;\n                if (x < 0) {\n                    x = -x;\n                    negativeResult = true;\n                }\n                if (y < 0) {\n                    y = -y; // We rely on overflow behavior here\n                    negativeResult = !negativeResult;\n                }\n                uint256 absoluteResult = mulu(x, uint256(y));\n                if (negativeResult) {\n                    require(absoluteResult <= 0x8000000000000000000000000000000000000000000000000000000000000000);\n                    return -int256(absoluteResult); // We rely on overflow behavior here\n                } else {\n                    require(absoluteResult <= 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF);\n                    return int256(absoluteResult);\n                }\n            }\n        }\n    }\n\n    /**\n     * Calculate x * y rounding down, where x is signed 64.64 fixed point number\n     * and y is unsigned 256-bit integer number.  Revert on overflow.\n     *\n     * @param x signed 64.64 fixed point number\n     * @param y unsigned 256-bit integer number\n     * @return unsigned 256-bit integer number\n     */\n    function mulu(int128 x, uint256 y) internal pure returns (uint256) {\n        unchecked {\n            if (y == 0) return 0;\n\n            require(x >= 0);\n\n            uint256 lo = (uint256(int256(x)) * (y & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF)) >> 64;\n            uint256 hi = uint256(int256(x)) * (y >> 128);\n\n            require(hi <= 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF);\n            hi <<= 64;\n\n            require(hi <= 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF - lo);\n            return hi + lo;\n        }\n    }\n\n    /**\n     * Calculate x / y rounding towards zero.  Revert on overflow or when y is\n     * zero.\n     *\n     * @param x signed 64.64-bit fixed point number\n     * @param y signed 64.64-bit fixed point number\n     * @return signed 64.64-bit fixed point number\n     */\n    function div(int128 x, int128 y) internal pure returns (int128) {\n        unchecked {\n            require(y != 0);\n            int256 result = (int256(x) << 64) / y;\n            require(result >= MIN_64x64 && result <= MAX_64x64);\n            return int128(result);\n        }\n    }\n\n    /**\n     * Calculate x / y rounding towards zero, where x and y are signed 256-bit\n     * integer numbers.  Revert on overflow or when y is zero.\n     *\n     * @param x signed 256-bit integer number\n     * @param y signed 256-bit integer number\n     * @return signed 64.64-bit fixed point number\n     */\n    function divi(int256 x, int256 y) internal pure returns (int128) {\n        unchecked {\n            require(y != 0);\n\n            bool negativeResult = false;\n            if (x < 0) {\n                x = -x; // We rely on overflow behavior here\n                negativeResult = true;\n            }\n            if (y < 0) {\n                y = -y; // We rely on overflow behavior here\n                negativeResult = !negativeResult;\n            }\n            uint128 absoluteResult = divuu(uint256(x), uint256(y));\n            if (negativeResult) {\n                require(absoluteResult <= 0x80000000000000000000000000000000);\n                return -int128(absoluteResult); // We rely on overflow behavior here\n            } else {\n                require(absoluteResult <= 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF);\n                return int128(absoluteResult); // We rely on overflow behavior here\n            }\n        }\n    }\n\n    /**\n     * Calculate x / y rounding towards zero, where x and y are unsigned 256-bit\n     * integer numbers.  Revert on overflow or when y is zero.\n     *\n     * @param x unsigned 256-bit integer number\n     * @param y unsigned 256-bit integer number\n     * @return signed 64.64-bit fixed point number\n     */\n    function divu(uint256 x, uint256 y) internal pure returns (int128) {\n        unchecked {\n            require(y != 0);\n            uint128 result = divuu(x, y);\n            require(result <= uint128(MAX_64x64));\n            return int128(result);\n        }\n    }\n\n    /**\n     * Calculate -x.  Revert on overflow.\n     *\n     * @param x signed 64.64-bit fixed point number\n     * @return signed 64.64-bit fixed point number\n     */\n    function neg(int128 x) internal pure returns (int128) {\n        unchecked {\n            require(x != MIN_64x64);\n            return -x;\n        }\n    }\n\n    /**\n     * Calculate |x|.  Revert on overflow.\n     *\n     * @param x signed 64.64-bit fixed point number\n     * @return signed 64.64-bit fixed point number\n     */\n    function abs(int128 x) internal pure returns (int128) {\n        unchecked {\n            require(x != MIN_64x64);\n            return x < 0 ? -x : x;\n        }\n    }\n\n    /**\n     * Calculate 1 / x rounding towards zero.  Revert on overflow or when x is\n     * zero.\n     *\n     * @param x signed 64.64-bit fixed point number\n     * @return signed 64.64-bit fixed point number\n     */\n    function inv(int128 x) internal pure returns (int128) {\n        unchecked {\n            require(x != 0);\n            int256 result = int256(0x100000000000000000000000000000000) / x;\n            require(result >= MIN_64x64 && result <= MAX_64x64);\n            return int128(result);\n        }\n    }\n\n    /**\n     * Calculate arithmetics average of x and y, i.e. (x + y) / 2 rounding down.\n     *\n     * @param x signed 64.64-bit fixed point number\n     * @param y signed 64.64-bit fixed point number\n     * @return signed 64.64-bit fixed point number\n     */\n    function avg(int128 x, int128 y) internal pure returns (int128) {\n        unchecked {\n            return int128((int256(x) + int256(y)) >> 1);\n        }\n    }\n\n    /**\n     * Calculate geometric average of x and y, i.e. sqrt (x * y) rounding down.\n     * Revert on overflow or in case x * y is negative.\n     *\n     * @param x signed 64.64-bit fixed point number\n     * @param y signed 64.64-bit fixed point number\n     * @return signed 64.64-bit fixed point number\n     */\n    function gavg(int128 x, int128 y) internal pure returns (int128) {\n        unchecked {\n            int256 m = int256(x) * int256(y);\n            require(m >= 0);\n            require(m < 0x4000000000000000000000000000000000000000000000000000000000000000);\n            return int128(sqrtu(uint256(m)));\n        }\n    }\n\n    /**\n     * Calculate x^y assuming 0^0 is 1, where x is signed 64.64 fixed point number\n     * and y is unsigned 256-bit integer number.  Revert on overflow.\n     *\n     * @param x signed 64.64-bit fixed point number\n     * @param y uint256 value\n     * @return signed 64.64-bit fixed point number\n     */\n    function pow(int128 x, uint256 y) internal pure returns (int128) {\n        unchecked {\n            bool negative = x < 0 && y & 1 == 1;\n\n            uint256 absX = uint128(x < 0 ? -x : x);\n            uint256 absResult;\n            absResult = 0x100000000000000000000000000000000;\n\n            if (absX <= 0x10000000000000000) {\n                absX <<= 63;\n                while (y != 0) {\n                    if (y & 0x1 != 0) {\n                        absResult = absResult * absX >> 127;\n                    }\n                    absX = absX * absX >> 127;\n\n                    if (y & 0x2 != 0) {\n                        absResult = absResult * absX >> 127;\n                    }\n                    absX = absX * absX >> 127;\n\n                    if (y & 0x4 != 0) {\n                        absResult = absResult * absX >> 127;\n                    }\n                    absX = absX * absX >> 127;\n\n                    if (y & 0x8 != 0) {\n                        absResult = absResult * absX >> 127;\n                    }\n                    absX = absX * absX >> 127;\n\n                    y >>= 4;\n                }\n\n                absResult >>= 64;\n            } else {\n                uint256 absXShift = 63;\n                if (absX < 0x1000000000000000000000000) {\n                    absX <<= 32;\n                    absXShift -= 32;\n                }\n                if (absX < 0x10000000000000000000000000000) {\n                    absX <<= 16;\n                    absXShift -= 16;\n                }\n                if (absX < 0x1000000000000000000000000000000) {\n                    absX <<= 8;\n                    absXShift -= 8;\n                }\n                if (absX < 0x10000000000000000000000000000000) {\n                    absX <<= 4;\n                    absXShift -= 4;\n                }\n                if (absX < 0x40000000000000000000000000000000) {\n                    absX <<= 2;\n                    absXShift -= 2;\n                }\n                if (absX < 0x80000000000000000000000000000000) {\n                    absX <<= 1;\n                    absXShift -= 1;\n                }\n\n                uint256 resultShift = 0;\n                while (y != 0) {\n                    require(absXShift < 64);\n\n                    if (y & 0x1 != 0) {\n                        absResult = absResult * absX >> 127;\n                        resultShift += absXShift;\n                        if (absResult > 0x100000000000000000000000000000000) {\n                            absResult >>= 1;\n                            resultShift += 1;\n                        }\n                    }\n                    absX = absX * absX >> 127;\n                    absXShift <<= 1;\n                    if (absX >= 0x100000000000000000000000000000000) {\n                        absX >>= 1;\n                        absXShift += 1;\n                    }\n\n                    y >>= 1;\n                }\n\n                require(resultShift < 64);\n                absResult >>= 64 - resultShift;\n            }\n            int256 result = negative ? -int256(absResult) : int256(absResult);\n            require(result >= MIN_64x64 && result <= MAX_64x64);\n            return int128(result);\n        }\n    }\n\n    /**\n     * Calculate sqrt (x) rounding down.  Revert if x < 0.\n     *\n     * @param x signed 64.64-bit fixed point number\n     * @return signed 64.64-bit fixed point number\n     */\n    function sqrt(int128 x) internal pure returns (int128) {\n        unchecked {\n            require(x >= 0);\n            return int128(sqrtu(uint256(int256(x)) << 64));\n        }\n    }\n\n    /**\n     * Calculate binary logarithm of x.  Revert if x <= 0.\n     *\n     * @param x signed 64.64-bit fixed point number\n     * @return signed 64.64-bit fixed point number\n     */\n    function log_2(int128 x) internal pure returns (int128) {\n        unchecked {\n            require(x > 0);\n\n            int256 msb = 0;\n            int256 xc = x;\n            if (xc >= 0x10000000000000000) {\n                xc >>= 64;\n                msb += 64;\n            }\n            if (xc >= 0x100000000) {\n                xc >>= 32;\n                msb += 32;\n            }\n            if (xc >= 0x10000) {\n                xc >>= 16;\n                msb += 16;\n            }\n            if (xc >= 0x100) {\n                xc >>= 8;\n                msb += 8;\n            }\n            if (xc >= 0x10) {\n                xc >>= 4;\n                msb += 4;\n            }\n            if (xc >= 0x4) {\n                xc >>= 2;\n                msb += 2;\n            }\n            if (xc >= 0x2) msb += 1; // No need to shift xc anymore\n\n            int256 result = msb - 64 << 64;\n            uint256 ux = uint256(int256(x)) << uint256(127 - msb);\n            for (int256 bit = 0x8000000000000000; bit > 0; bit >>= 1) {\n                ux *= ux;\n                uint256 b = ux >> 255;\n                ux >>= 127 + b;\n                result += bit * int256(b);\n            }\n\n            return int128(result);\n        }\n    }\n\n    /**\n     * Calculate natural logarithm of x.  Revert if x <= 0.\n     *\n     * @param x signed 64.64-bit fixed point number\n     * @return signed 64.64-bit fixed point number\n     */\n    function ln(int128 x) internal pure returns (int128) {\n        unchecked {\n            require(x > 0);\n\n            return int128(int256(uint256(int256(log_2(x))) * 0xB17217F7D1CF79ABC9E3B39803F2F6AF >> 128));\n        }\n    }\n\n    /**\n     * Calculate binary exponent of x.  Revert on overflow.\n     *\n     * @param x signed 64.64-bit fixed point number\n     * @return signed 64.64-bit fixed point number\n     */\n    function exp_2(int128 x) internal pure returns (int128) {\n        unchecked {\n            require(x < 0x400000000000000000); // Overflow\n\n            if (x < -0x400000000000000000) return 0; // Underflow\n\n            uint256 result = 0x80000000000000000000000000000000;\n\n            if (x & 0x8000000000000000 > 0) {\n                result = result * 0x16A09E667F3BCC908B2FB1366EA957D3E >> 128;\n            }\n            if (x & 0x4000000000000000 > 0) {\n                result = result * 0x1306FE0A31B7152DE8D5A46305C85EDEC >> 128;\n            }\n            if (x & 0x2000000000000000 > 0) {\n                result = result * 0x1172B83C7D517ADCDF7C8C50EB14A791F >> 128;\n            }\n            if (x & 0x1000000000000000 > 0) {\n                result = result * 0x10B5586CF9890F6298B92B71842A98363 >> 128;\n            }\n            if (x & 0x800000000000000 > 0) {\n                result = result * 0x1059B0D31585743AE7C548EB68CA417FD >> 128;\n            }\n            if (x & 0x400000000000000 > 0) {\n                result = result * 0x102C9A3E778060EE6F7CACA4F7A29BDE8 >> 128;\n            }\n            if (x & 0x200000000000000 > 0) {\n                result = result * 0x10163DA9FB33356D84A66AE336DCDFA3F >> 128;\n            }\n            if (x & 0x100000000000000 > 0) {\n                result = result * 0x100B1AFA5ABCBED6129AB13EC11DC9543 >> 128;\n            }\n            if (x & 0x80000000000000 > 0) {\n                result = result * 0x10058C86DA1C09EA1FF19D294CF2F679B >> 128;\n            }\n            if (x & 0x40000000000000 > 0) {\n                result = result * 0x1002C605E2E8CEC506D21BFC89A23A00F >> 128;\n            }\n            if (x & 0x20000000000000 > 0) {\n                result = result * 0x100162F3904051FA128BCA9C55C31E5DF >> 128;\n            }\n            if (x & 0x10000000000000 > 0) {\n                result = result * 0x1000B175EFFDC76BA38E31671CA939725 >> 128;\n            }\n            if (x & 0x8000000000000 > 0) {\n                result = result * 0x100058BA01FB9F96D6CACD4B180917C3D >> 128;\n            }\n            if (x & 0x4000000000000 > 0) {\n                result = result * 0x10002C5CC37DA9491D0985C348C68E7B3 >> 128;\n            }\n            if (x & 0x2000000000000 > 0) {\n                result = result * 0x1000162E525EE054754457D5995292026 >> 128;\n            }\n            if (x & 0x1000000000000 > 0) {\n                result = result * 0x10000B17255775C040618BF4A4ADE83FC >> 128;\n            }\n            if (x & 0x800000000000 > 0) {\n                result = result * 0x1000058B91B5BC9AE2EED81E9B7D4CFAB >> 128;\n            }\n            if (x & 0x400000000000 > 0) {\n                result = result * 0x100002C5C89D5EC6CA4D7C8ACC017B7C9 >> 128;\n            }\n            if (x & 0x200000000000 > 0) {\n                result = result * 0x10000162E43F4F831060E02D839A9D16D >> 128;\n            }\n            if (x & 0x100000000000 > 0) {\n                result = result * 0x100000B1721BCFC99D9F890EA06911763 >> 128;\n            }\n            if (x & 0x80000000000 > 0) {\n                result = result * 0x10000058B90CF1E6D97F9CA14DBCC1628 >> 128;\n            }\n            if (x & 0x40000000000 > 0) {\n                result = result * 0x1000002C5C863B73F016468F6BAC5CA2B >> 128;\n            }\n            if (x & 0x20000000000 > 0) {\n                result = result * 0x100000162E430E5A18F6119E3C02282A5 >> 128;\n            }\n            if (x & 0x10000000000 > 0) {\n                result = result * 0x1000000B1721835514B86E6D96EFD1BFE >> 128;\n            }\n            if (x & 0x8000000000 > 0) {\n                result = result * 0x100000058B90C0B48C6BE5DF846C5B2EF >> 128;\n            }\n            if (x & 0x4000000000 > 0) {\n                result = result * 0x10000002C5C8601CC6B9E94213C72737A >> 128;\n            }\n            if (x & 0x2000000000 > 0) {\n                result = result * 0x1000000162E42FFF037DF38AA2B219F06 >> 128;\n            }\n            if (x & 0x1000000000 > 0) {\n                result = result * 0x10000000B17217FBA9C739AA5819F44F9 >> 128;\n            }\n            if (x & 0x800000000 > 0) {\n                result = result * 0x1000000058B90BFCDEE5ACD3C1CEDC823 >> 128;\n            }\n            if (x & 0x400000000 > 0) {\n                result = result * 0x100000002C5C85FE31F35A6A30DA1BE50 >> 128;\n            }\n            if (x & 0x200000000 > 0) {\n                result = result * 0x10000000162E42FF0999CE3541B9FFFCF >> 128;\n            }\n            if (x & 0x100000000 > 0) {\n                result = result * 0x100000000B17217F80F4EF5AADDA45554 >> 128;\n            }\n            if (x & 0x80000000 > 0) {\n                result = result * 0x10000000058B90BFBF8479BD5A81B51AD >> 128;\n            }\n            if (x & 0x40000000 > 0) {\n                result = result * 0x1000000002C5C85FDF84BD62AE30A74CC >> 128;\n            }\n            if (x & 0x20000000 > 0) {\n                result = result * 0x100000000162E42FEFB2FED257559BDAA >> 128;\n            }\n            if (x & 0x10000000 > 0) {\n                result = result * 0x1000000000B17217F7D5A7716BBA4A9AE >> 128;\n            }\n            if (x & 0x8000000 > 0) {\n                result = result * 0x100000000058B90BFBE9DDBAC5E109CCE >> 128;\n            }\n            if (x & 0x4000000 > 0) {\n                result = result * 0x10000000002C5C85FDF4B15DE6F17EB0D >> 128;\n            }\n            if (x & 0x2000000 > 0) {\n                result = result * 0x1000000000162E42FEFA494F1478FDE05 >> 128;\n            }\n            if (x & 0x1000000 > 0) {\n                result = result * 0x10000000000B17217F7D20CF927C8E94C >> 128;\n            }\n            if (x & 0x800000 > 0) {\n                result = result * 0x1000000000058B90BFBE8F71CB4E4B33D >> 128;\n            }\n            if (x & 0x400000 > 0) {\n                result = result * 0x100000000002C5C85FDF477B662B26945 >> 128;\n            }\n            if (x & 0x200000 > 0) {\n                result = result * 0x10000000000162E42FEFA3AE53369388C >> 128;\n            }\n            if (x & 0x100000 > 0) {\n                result = result * 0x100000000000B17217F7D1D351A389D40 >> 128;\n            }\n            if (x & 0x80000 > 0) {\n                result = result * 0x10000000000058B90BFBE8E8B2D3D4EDE >> 128;\n            }\n            if (x & 0x40000 > 0) {\n                result = result * 0x1000000000002C5C85FDF4741BEA6E77E >> 128;\n            }\n            if (x & 0x20000 > 0) {\n                result = result * 0x100000000000162E42FEFA39FE95583C2 >> 128;\n            }\n            if (x & 0x10000 > 0) {\n                result = result * 0x1000000000000B17217F7D1CFB72B45E1 >> 128;\n            }\n            if (x & 0x8000 > 0) {\n                result = result * 0x100000000000058B90BFBE8E7CC35C3F0 >> 128;\n            }\n            if (x & 0x4000 > 0) {\n                result = result * 0x10000000000002C5C85FDF473E242EA38 >> 128;\n            }\n            if (x & 0x2000 > 0) {\n                result = result * 0x1000000000000162E42FEFA39F02B772C >> 128;\n            }\n            if (x & 0x1000 > 0) {\n                result = result * 0x10000000000000B17217F7D1CF7D83C1A >> 128;\n            }\n            if (x & 0x800 > 0) {\n                result = result * 0x1000000000000058B90BFBE8E7BDCBE2E >> 128;\n            }\n            if (x & 0x400 > 0) {\n                result = result * 0x100000000000002C5C85FDF473DEA871F >> 128;\n            }\n            if (x & 0x200 > 0) {\n                result = result * 0x10000000000000162E42FEFA39EF44D91 >> 128;\n            }\n            if (x & 0x100 > 0) {\n                result = result * 0x100000000000000B17217F7D1CF79E949 >> 128;\n            }\n            if (x & 0x80 > 0) {\n                result = result * 0x10000000000000058B90BFBE8E7BCE544 >> 128;\n            }\n            if (x & 0x40 > 0) {\n                result = result * 0x1000000000000002C5C85FDF473DE6ECA >> 128;\n            }\n            if (x & 0x20 > 0) {\n                result = result * 0x100000000000000162E42FEFA39EF366F >> 128;\n            }\n            if (x & 0x10 > 0) {\n                result = result * 0x1000000000000000B17217F7D1CF79AFA >> 128;\n            }\n            if (x & 0x8 > 0) {\n                result = result * 0x100000000000000058B90BFBE8E7BCD6D >> 128;\n            }\n            if (x & 0x4 > 0) {\n                result = result * 0x10000000000000002C5C85FDF473DE6B2 >> 128;\n            }\n            if (x & 0x2 > 0) {\n                result = result * 0x1000000000000000162E42FEFA39EF358 >> 128;\n            }\n            if (x & 0x1 > 0) {\n                result = result * 0x10000000000000000B17217F7D1CF79AB >> 128;\n            }\n\n            result >>= uint256(int256(63 - (x >> 64)));\n            require(result <= uint256(int256(MAX_64x64)));\n\n            return int128(int256(result));\n        }\n    }\n\n    /**\n     * Calculate natural exponent of x.  Revert on overflow.\n     *\n     * @param x signed 64.64-bit fixed point number\n     * @return signed 64.64-bit fixed point number\n     */\n    function exp(int128 x) internal pure returns (int128) {\n        unchecked {\n            require(x < 0x400000000000000000); // Overflow\n\n            if (x < -0x400000000000000000) return 0; // Underflow\n\n            return exp_2(int128(int256(x) * 0x171547652B82FE1777D0FFDA0D23A7D12 >> 128));\n        }\n    }\n\n    /**\n     * Calculate x / y rounding towards zero, where x and y are unsigned 256-bit\n     * integer numbers.  Revert on overflow or when y is zero.\n     *\n     * @param x unsigned 256-bit integer number\n     * @param y unsigned 256-bit integer number\n     * @return unsigned 64.64-bit fixed point number\n     */\n    function divuu(uint256 x, uint256 y) private pure returns (uint128) {\n        unchecked {\n            require(y != 0);\n\n            uint256 result;\n\n            if (x <= 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF) {\n                result = (x << 64) / y;\n            } else {\n                uint256 msb = 192;\n                uint256 xc = x >> 192;\n                if (xc >= 0x100000000) {\n                    xc >>= 32;\n                    msb += 32;\n                }\n                if (xc >= 0x10000) {\n                    xc >>= 16;\n                    msb += 16;\n                }\n                if (xc >= 0x100) {\n                    xc >>= 8;\n                    msb += 8;\n                }\n                if (xc >= 0x10) {\n                    xc >>= 4;\n                    msb += 4;\n                }\n                if (xc >= 0x4) {\n                    xc >>= 2;\n                    msb += 2;\n                }\n                if (xc >= 0x2) msb += 1; // No need to shift xc anymore\n\n                result = (x << 255 - msb) / ((y - 1 >> msb - 191) + 1);\n                require(result <= 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF);\n\n                uint256 hi = result * (y >> 128);\n                uint256 lo = result * (y & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF);\n\n                uint256 xh = x >> 192;\n                uint256 xl = x << 64;\n\n                if (xl < lo) xh -= 1;\n                xl -= lo; // We rely on overflow behavior here\n                lo = hi << 128;\n                if (xl < lo) xh -= 1;\n                xl -= lo; // We rely on overflow behavior here\n\n                result += xh == hi >> 128 ? xl / y : 1;\n            }\n\n            require(result <= 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF);\n            return uint128(result);\n        }\n    }\n\n    /**\n     * Calculate sqrt (x) rounding down, where x is unsigned 256-bit integer\n     * number.\n     *\n     * @param x unsigned 256-bit integer number\n     * @return unsigned 128-bit integer number\n     */\n    function sqrtu(uint256 x) private pure returns (uint128) {\n        unchecked {\n            if (x == 0) {\n                return 0;\n            } else {\n                uint256 xx = x;\n                uint256 r = 1;\n                if (xx >= 0x100000000000000000000000000000000) {\n                    xx >>= 128;\n                    r <<= 64;\n                }\n                if (xx >= 0x10000000000000000) {\n                    xx >>= 64;\n                    r <<= 32;\n                }\n                if (xx >= 0x100000000) {\n                    xx >>= 32;\n                    r <<= 16;\n                }\n                if (xx >= 0x10000) {\n                    xx >>= 16;\n                    r <<= 8;\n                }\n                if (xx >= 0x100) {\n                    xx >>= 8;\n                    r <<= 4;\n                }\n                if (xx >= 0x10) {\n                    xx >>= 4;\n                    r <<= 2;\n                }\n                if (xx >= 0x4) r <<= 1;\n                r = (r + x / r) >> 1;\n                r = (r + x / r) >> 1;\n                r = (r + x / r) >> 1;\n                r = (r + x / r) >> 1;\n                r = (r + x / r) >> 1;\n                r = (r + x / r) >> 1;\n                r = (r + x / r) >> 1; // Seven iterations should be enough\n                uint256 r1 = x / r;\n                return uint128(r < r1 ? r : r1);\n            }\n        }\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[295],"Context":[3474],"ERC165":[4310],"IAccessControl":[378]},"id":296,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":379,"src":"134:52:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":3475,"src":"187:45:0","symbolAliases":[{"foreign":{"id":4,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"195:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":4311,"src":"233:57:0","symbolAliases":[{"foreign":{"id":6,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"241:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":9,"name":"Context","nameLocations":["1988:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3474,"src":"1988:7:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1988:7:0"},{"baseName":{"id":11,"name":"IAccessControl","nameLocations":["1997:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":378,"src":"1997:14:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1997:14:0"},{"baseName":{"id":13,"name":"ERC165","nameLocations":["2013:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":4310,"src":"2013:6:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2013:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":8,"nodeType":"StructuredDocumentation","src":"292:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":295,"linearizedBaseContracts":[295,4310,4322,378,3474],"name":"AccessControl","nameLocation":"1971:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":21,"members":[{"constant":false,"id":18,"mutability":"mutable","name":"hasRole","nameLocation":"2085:7:0","nodeType":"VariableDeclaration","scope":21,"src":"2052:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":17,"keyName":"account","keyNameLocation":"2068:7:0","keyType":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"2060:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2052:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":16,"name":"bool","nodeType":"ElementaryTypeName","src":"2079:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"adminRole","nameLocation":"2110:9:0","nodeType":"VariableDeclaration","scope":21,"src":"2102:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2102:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2033:8:0","nodeType":"StructDefinition","scope":295,"src":"2026:100:0","visibility":"public"},{"constant":false,"id":26,"mutability":"mutable","name":"_roles","nameLocation":"2174:6:0","nodeType":"VariableDeclaration","scope":295,"src":"2132:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":25,"keyName":"role","keyNameLocation":"2148:4:0","keyType":{"id":22,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2140:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2132:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":24,"nodeType":"UserDefinedTypeName","pathNode":{"id":23,"name":"RoleData","nameLocations":["2156:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":21,"src":"2156:8:0"},"referencedDeclaration":21,"src":"2156:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":29,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2211:18:0","nodeType":"VariableDeclaration","scope":295,"src":"2187:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":27,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2187:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":28,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2232:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":39,"nodeType":"Block","src":"2454:44:0","statements":[{"expression":{"arguments":[{"id":35,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"2475:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":34,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":93,"src":"2464:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":36,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2464:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":37,"nodeType":"ExpressionStatement","src":"2464:16:0"},{"id":38,"nodeType":"PlaceholderStatement","src":"2490:1:0"}]},"documentation":{"id":30,"nodeType":"StructuredDocumentation","src":"2243:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":40,"name":"onlyRole","nameLocation":"2431:8:0","nodeType":"ModifierDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"role","nameLocation":"2448:4:0","nodeType":"VariableDeclaration","scope":40,"src":"2440:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2440:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2439:14:0"},"src":"2422:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[4309],"body":{"id":61,"nodeType":"Block","src":"2656:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2673:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":51,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"2693:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}],"id":50,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"2688:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":52,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2688:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$378","typeString":"type(contract IAccessControl)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2709:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2688:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2673:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":57,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2748:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":55,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967271,"src":"2724:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$295_$","typeString":"type(contract super AccessControl)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2730:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4309,"src":"2724:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2724:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2673:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":48,"id":60,"nodeType":"Return","src":"2666:94:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"2504:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":62,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2574:17:0","nodeType":"FunctionDefinition","overrides":{"id":45,"nodeType":"OverrideSpecifier","overrides":[],"src":"2632:8:0"},"parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"interfaceId","nameLocation":"2599:11:0","nodeType":"VariableDeclaration","scope":62,"src":"2592:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":42,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2592:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2591:20:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62,"src":"2650:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":46,"name":"bool","nodeType":"ElementaryTypeName","src":"2650:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2649:6:0"},"scope":295,"src":"2565:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[345],"body":{"id":79,"nodeType":"Block","src":"2937:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":72,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"2954:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":74,"indexExpression":{"id":73,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"2961:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":75,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2967:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"2954:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":77,"indexExpression":{"id":76,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"2975:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":71,"id":78,"nodeType":"Return","src":"2947:36:0"}]},"documentation":{"id":63,"nodeType":"StructuredDocumentation","src":"2773:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":80,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2863:7:0","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"role","nameLocation":"2879:4:0","nodeType":"VariableDeclaration","scope":80,"src":"2871:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":64,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2871:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"account","nameLocation":"2893:7:0","nodeType":"VariableDeclaration","scope":80,"src":"2885:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"2885:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2870:31:0"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":80,"src":"2931:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":69,"name":"bool","nodeType":"ElementaryTypeName","src":"2931:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2930:6:0"},"scope":295,"src":"2854:136:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":92,"nodeType":"Block","src":"3255:47:0","statements":[{"expression":{"arguments":[{"id":87,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"3276:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":88,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"3282:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":114,"src":"3265:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":91,"nodeType":"ExpressionStatement","src":"3265:30:0"}]},"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"2996:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":93,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3208:10:0","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"role","nameLocation":"3227:4:0","nodeType":"VariableDeclaration","scope":93,"src":"3219:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":82,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3219:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3218:14:0"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[],"src":"3255:0:0"},"scope":295,"src":"3199:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":113,"nodeType":"Block","src":"3505:124:0","statements":[{"condition":{"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3519:23:0","subExpression":{"arguments":[{"id":102,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3528:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":103,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3534:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":101,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3520:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3520:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":112,"nodeType":"IfStatement","src":"3515:108:0","trueBody":{"id":111,"nodeType":"Block","src":"3544:79:0","statements":[{"errorCall":{"arguments":[{"id":107,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3598:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":108,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3607:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":106,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3565:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":110,"nodeType":"RevertStatement","src":"3558:54:0"}]}}]},"documentation":{"id":94,"nodeType":"StructuredDocumentation","src":"3308:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":114,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3441:10:0","nodeType":"FunctionDefinition","parameters":{"id":99,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"role","nameLocation":"3460:4:0","nodeType":"VariableDeclaration","scope":114,"src":"3452:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":95,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3452:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":98,"mutability":"mutable","name":"account","nameLocation":"3474:7:0","nodeType":"VariableDeclaration","scope":114,"src":"3466:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"3466:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3451:31:0"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[],"src":"3505:0:0"},"scope":295,"src":"3432:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[353],"body":{"id":127,"nodeType":"Block","src":"3884:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":122,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"3901:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":124,"indexExpression":{"id":123,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"3908:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3914:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"3901:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":121,"id":126,"nodeType":"Return","src":"3894:29:0"}]},"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"3635:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":128,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3819:12:0","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"role","nameLocation":"3840:4:0","nodeType":"VariableDeclaration","scope":128,"src":"3832:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3832:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3831:14:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":128,"src":"3875:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3875:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3874:9:0"},"scope":295,"src":"3810:120:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[361],"body":{"id":146,"nodeType":"Block","src":"4320:42:0","statements":[{"expression":{"arguments":[{"id":142,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4341:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"4347:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":141,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4330:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4330:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":145,"nodeType":"ExpressionStatement","src":"4330:25:0"}]},"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"3936:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":147,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":137,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4313:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":136,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4300:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4300:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":139,"kind":"modifierInvocation","modifierName":{"id":135,"name":"onlyRole","nameLocations":["4291:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4291:8:0"},"nodeType":"ModifierInvocation","src":"4291:28:0"}],"name":"grantRole","nameLocation":"4235:9:0","nodeType":"FunctionDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"role","nameLocation":"4253:4:0","nodeType":"VariableDeclaration","scope":147,"src":"4245:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4245:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"account","nameLocation":"4267:7:0","nodeType":"VariableDeclaration","scope":147,"src":"4259:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"4259:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4244:31:0"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[],"src":"4320:0:0"},"scope":295,"src":"4226:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[369],"body":{"id":165,"nodeType":"Block","src":"4737:43:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4759:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"4765:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4747:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4747:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":164,"nodeType":"ExpressionStatement","src":"4747:26:0"}]},"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"4368:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4730:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4717:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nameLocations":["4708:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4708:8:0"},"nodeType":"ModifierInvocation","src":"4708:28:0"}],"name":"revokeRole","nameLocation":"4651:10:0","nodeType":"FunctionDefinition","parameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"role","nameLocation":"4670:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4662:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4662:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"account","nameLocation":"4684:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4676:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"4676:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4661:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"4737:0:0"},"scope":295,"src":"4642:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[377],"body":{"id":188,"nodeType":"Block","src":"5407:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":174,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5421:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":175,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"5443:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5443:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5421:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":182,"nodeType":"IfStatement","src":"5417:102:0","trueBody":{"id":181,"nodeType":"Block","src":"5457:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":178,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"5478:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5478:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":180,"nodeType":"RevertStatement","src":"5471:37:0"}]}},{"expression":{"arguments":[{"id":184,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5541:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":185,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5547:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":183,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"5529:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":187,"nodeType":"ExpressionStatement","src":"5529:37:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4786:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":189,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5337:12:0","nodeType":"FunctionDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5358:4:0","nodeType":"VariableDeclaration","scope":189,"src":"5350:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5350:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5372:18:0","nodeType":"VariableDeclaration","scope":189,"src":"5364:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5364:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5349:42:0"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[],"src":"5407:0:0"},"scope":295,"src":"5328:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":216,"nodeType":"Block","src":"5771:174:0","statements":[{"assignments":[198],"declarations":[{"constant":false,"id":198,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5789:17:0","nodeType":"VariableDeclaration","scope":216,"src":"5781:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":202,"initialValue":{"arguments":[{"id":200,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5822:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":199,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"5809:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5809:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5781:46:0"},{"expression":{"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":203,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"5837:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":205,"indexExpression":{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5844:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5837:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5850:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"5837:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":207,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5862:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5837:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":209,"nodeType":"ExpressionStatement","src":"5837:34:0"},{"eventCall":{"arguments":[{"id":211,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5903:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":212,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"5909:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5928:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":210,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"5886:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5886:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":215,"nodeType":"EmitStatement","src":"5881:57:0"}]},"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"5579:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":217,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5707:13:0","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"role","nameLocation":"5729:4:0","nodeType":"VariableDeclaration","scope":217,"src":"5721:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5721:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"adminRole","nameLocation":"5743:9:0","nodeType":"VariableDeclaration","scope":217,"src":"5735:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5735:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5720:33:0"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[],"src":"5771:0:0"},"scope":295,"src":"5698:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":255,"nodeType":"Block","src":"6262:233:0","statements":[{"condition":{"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6276:23:0","subExpression":{"arguments":[{"id":228,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6285:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":229,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6291:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":227,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6277:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6277:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":253,"nodeType":"Block","src":"6452:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6473:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":226,"id":252,"nodeType":"Return","src":"6466:12:0"}]},"id":254,"nodeType":"IfStatement","src":"6272:217:0","trueBody":{"id":250,"nodeType":"Block","src":"6301:145:0","statements":[{"expression":{"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":232,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6315:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":234,"indexExpression":{"id":233,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6322:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6315:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6328:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6315:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":237,"indexExpression":{"id":236,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6336:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6315:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6315:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":240,"nodeType":"ExpressionStatement","src":"6315:36:0"},{"eventCall":{"arguments":[{"id":242,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6382:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":243,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6388:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":244,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"6397:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6397:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":241,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"6370:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6370:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"EmitStatement","src":"6365:45:0"},{"expression":{"hexValue":"74727565","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6431:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":226,"id":249,"nodeType":"Return","src":"6424:11:0"}]}}]},"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"5951:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":256,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6188:10:0","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"role","nameLocation":"6207:4:0","nodeType":"VariableDeclaration","scope":256,"src":"6199:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6199:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"account","nameLocation":"6221:7:0","nodeType":"VariableDeclaration","scope":256,"src":"6213:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"6213:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6198:31:0"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":256,"src":"6256:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":224,"name":"bool","nodeType":"ElementaryTypeName","src":"6256:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6255:6:0"},"scope":295,"src":"6179:316:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":293,"nodeType":"Block","src":"6814:233:0","statements":[{"condition":{"arguments":[{"id":267,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6836:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6842:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":266,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6828:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6828:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":291,"nodeType":"Block","src":"7004:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7025:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":265,"id":290,"nodeType":"Return","src":"7018:12:0"}]},"id":292,"nodeType":"IfStatement","src":"6824:217:0","trueBody":{"id":288,"nodeType":"Block","src":"6852:146:0","statements":[{"expression":{"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":270,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6866:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":272,"indexExpression":{"id":271,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6873:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6866:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6879:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6866:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":275,"indexExpression":{"id":274,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6887:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6866:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6898:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6866:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":278,"nodeType":"ExpressionStatement","src":"6866:37:0"},{"eventCall":{"arguments":[{"id":280,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6934:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":281,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6940:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":282,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"6949:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6949:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":279,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"6922:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6922:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":285,"nodeType":"EmitStatement","src":"6917:45:0"},{"expression":{"hexValue":"74727565","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6983:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":265,"id":287,"nodeType":"Return","src":"6976:11:0"}]}}]},"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"6501:224:0","text":" @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":294,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6739:11:0","nodeType":"FunctionDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"role","nameLocation":"6759:4:0","nodeType":"VariableDeclaration","scope":294,"src":"6751:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6751:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"account","nameLocation":"6773:7:0","nodeType":"VariableDeclaration","scope":294,"src":"6765:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"6765:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6750:31:0"},"returnParameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":294,"src":"6808:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":263,"name":"bool","nodeType":"ElementaryTypeName","src":"6808:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6807:6:0"},"scope":295,"src":"6730:317:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":296,"src":"1953:5096:0","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"108:6942:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[378]},"id":379,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":297,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"135:90:1","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":378,"linearizedBaseContracts":[378],"name":"IAccessControl","nameLocation":"236:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"257:56:1","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":305,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:1","nodeType":"ErrorDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"account","nameLocation":"365:7:1","nodeType":"VariableDeclaration","scope":305,"src":"357:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:1","nodeType":"VariableDeclaration","scope":305,"src":"374:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:1"},"src":"318:76:1"},{"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"400:148:1","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":308,"name":"AccessControlBadConfirmation","nameLocation":"559:28:1","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"587:2:1"},"src":"553:37:1"},{"anonymous":false,"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"596:254:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":317,"name":"RoleAdminChanged","nameLocation":"861:16:1","nodeType":"EventDefinition","parameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:1","nodeType":"VariableDeclaration","scope":317,"src":"878:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":313,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:1","nodeType":"VariableDeclaration","scope":317,"src":"900:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":315,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:1","nodeType":"VariableDeclaration","scope":317,"src":"935:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:1"},"src":"855:110:1"},{"anonymous":false,"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"971:295:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":326,"name":"RoleGranted","nameLocation":"1277:11:1","nodeType":"EventDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:1","nodeType":"VariableDeclaration","scope":326,"src":"1289:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":322,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:1","nodeType":"VariableDeclaration","scope":326,"src":"1311:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":324,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:1","nodeType":"VariableDeclaration","scope":326,"src":"1336:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:1"},"src":"1271:89:1"},{"anonymous":false,"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"1366:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":335,"name":"RoleRevoked","nameLocation":"1652:11:1","nodeType":"EventDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:1","nodeType":"VariableDeclaration","scope":335,"src":"1664:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":331,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:1","nodeType":"VariableDeclaration","scope":335,"src":"1686:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":333,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:1","nodeType":"VariableDeclaration","scope":335,"src":"1711:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:1"},"src":"1646:89:1"},{"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"1741:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":345,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:1","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"role","nameLocation":"1847:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1839:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"account","nameLocation":"1861:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1853:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:1"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"1893:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":342,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:1"},"scope":378,"src":"1822:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1905:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":353,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:1","nodeType":"FunctionDefinition","parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"2124:4:1","nodeType":"VariableDeclaration","scope":353,"src":"2116:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:1"},"returnParameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":353,"src":"2153:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:1"},"scope":378,"src":"2094:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"2168:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":361,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"role","nameLocation":"2439:4:1","nodeType":"VariableDeclaration","scope":361,"src":"2431:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"account","nameLocation":"2453:7:1","nodeType":"VariableDeclaration","scope":361,"src":"2445:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"2470:0:1"},"scope":378,"src":"2412:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"2477:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":369,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:1","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"role","nameLocation":"2733:4:1","nodeType":"VariableDeclaration","scope":369,"src":"2725:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"account","nameLocation":"2747:7:1","nodeType":"VariableDeclaration","scope":369,"src":"2739:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:1"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"2764:0:1"},"scope":378,"src":"2705:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"2771:491:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":377,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:1","nodeType":"FunctionDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"role","nameLocation":"3297:4:1","nodeType":"VariableDeclaration","scope":377,"src":"3289:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:1","nodeType":"VariableDeclaration","scope":377,"src":"3303:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:1"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"3339:0:1"},"scope":378,"src":"3267:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":379,"src":"226:3116:1","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"109:3234:1"},"id":1},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[3474],"Ownable":[526]},"id":527,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":380,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":382,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":527,"sourceUnit":3475,"src":"128:45:2","symbolAliases":[{"foreign":{"id":381,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"136:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":384,"name":"Context","nameLocations":["692:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":3474,"src":"692:7:2"},"id":385,"nodeType":"InheritanceSpecifier","src":"692:7:2"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"175:487:2","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":526,"linearizedBaseContracts":[526,3474],"name":"Ownable","nameLocation":"681:7:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":387,"mutability":"mutable","name":"_owner","nameLocation":"722:6:2","nodeType":"VariableDeclaration","scope":526,"src":"706:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"735:85:2","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":392,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:2","nodeType":"ErrorDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"account","nameLocation":"866:7:2","nodeType":"VariableDeclaration","scope":392,"src":"858:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:2"},"src":"825:50:2"},{"documentation":{"id":393,"nodeType":"StructuredDocumentation","src":"881:82:2","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":397,"name":"OwnableInvalidOwner","nameLocation":"974:19:2","nodeType":"ErrorDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"owner","nameLocation":"1002:5:2","nodeType":"VariableDeclaration","scope":397,"src":"994:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:2"},"src":"968:41:2"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":403,"name":"OwnershipTransferred","nameLocation":"1021:20:2","nodeType":"EventDefinition","parameters":{"id":402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:2","nodeType":"VariableDeclaration","scope":403,"src":"1042:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":401,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:2","nodeType":"VariableDeclaration","scope":403,"src":"1073:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":400,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:2"},"src":"1015:84:2"},{"body":{"id":428,"nodeType":"Block","src":"1259:153:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":409,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"1273:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":410,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:2","typeDescriptions":{}}},"id":413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":423,"nodeType":"IfStatement","src":"1269:95:2","trueBody":{"id":422,"nodeType":"Block","src":"1301:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":416,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:2","typeDescriptions":{}}},"id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":415,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"1322:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":421,"nodeType":"RevertStatement","src":"1315:38:2"}]}},{"expression":{"arguments":[{"id":425,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"1392:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":424,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"1373:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":427,"nodeType":"ExpressionStatement","src":"1373:32:2"}]},"documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"1105:115:2","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":429,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:2","nodeType":"VariableDeclaration","scope":429,"src":"1237:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":405,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:2"},"returnParameters":{"id":408,"nodeType":"ParameterList","parameters":[],"src":"1259:0:2"},"scope":526,"src":"1225:187:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":436,"nodeType":"Block","src":"1521:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":432,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"1531:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":434,"nodeType":"ExpressionStatement","src":"1531:13:2"},{"id":435,"nodeType":"PlaceholderStatement","src":"1554:1:2"}]},"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"1418:77:2","text":" @dev Throws if called by any account other than the owner."},"id":437,"name":"onlyOwner","nameLocation":"1509:9:2","nodeType":"ModifierDefinition","parameters":{"id":431,"nodeType":"ParameterList","parameters":[],"src":"1518:2:2"},"src":"1500:62:2","virtual":false,"visibility":"internal"},{"body":{"id":445,"nodeType":"Block","src":"1693:30:2","statements":[{"expression":{"id":443,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"1710:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":442,"id":444,"nodeType":"Return","src":"1703:13:2"}]},"documentation":{"id":438,"nodeType":"StructuredDocumentation","src":"1568:65:2","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":446,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:2","nodeType":"FunctionDefinition","parameters":{"id":439,"nodeType":"ParameterList","parameters":[],"src":"1652:2:2"},"returnParameters":{"id":442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":446,"src":"1684:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":440,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:2"},"scope":526,"src":"1638:85:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":462,"nodeType":"Block","src":"1841:117:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":450,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"1855:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":452,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"1866:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":461,"nodeType":"IfStatement","src":"1851:101:2","trueBody":{"id":460,"nodeType":"Block","src":"1880:72:2","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":456,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"1928:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":455,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"1901:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":459,"nodeType":"RevertStatement","src":"1894:47:2"}]}}]},"documentation":{"id":447,"nodeType":"StructuredDocumentation","src":"1729:62:2","text":" @dev Throws if the sender is not the owner."},"id":463,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:2","nodeType":"FunctionDefinition","parameters":{"id":448,"nodeType":"ParameterList","parameters":[],"src":"1816:2:2"},"returnParameters":{"id":449,"nodeType":"ParameterList","parameters":[],"src":"1841:0:2"},"scope":526,"src":"1796:162:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":476,"nodeType":"Block","src":"2347:47:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":470,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:2","typeDescriptions":{}}},"id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":469,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"2357:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":475,"nodeType":"ExpressionStatement","src":"2357:30:2"}]},"documentation":{"id":464,"nodeType":"StructuredDocumentation","src":"1964:324:2","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":477,"implemented":true,"kind":"function","modifiers":[{"id":467,"kind":"modifierInvocation","modifierName":{"id":466,"name":"onlyOwner","nameLocations":["2337:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"2337:9:2"},"nodeType":"ModifierInvocation","src":"2337:9:2"}],"name":"renounceOwnership","nameLocation":"2302:17:2","nodeType":"FunctionDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"2319:2:2"},"returnParameters":{"id":468,"nodeType":"ParameterList","parameters":[],"src":"2347:0:2"},"scope":526,"src":"2293:101:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":504,"nodeType":"Block","src":"2613:145:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":485,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"2627:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:2","typeDescriptions":{}}},"id":489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":499,"nodeType":"IfStatement","src":"2623:91:2","trueBody":{"id":498,"nodeType":"Block","src":"2651:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:2","typeDescriptions":{}}},"id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":491,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"2672:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":497,"nodeType":"RevertStatement","src":"2665:38:2"}]}},{"expression":{"arguments":[{"id":501,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"2742:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":500,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"2723:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"2723:28:2"}]},"documentation":{"id":478,"nodeType":"StructuredDocumentation","src":"2400:138:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":505,"implemented":true,"kind":"function","modifiers":[{"id":483,"kind":"modifierInvocation","modifierName":{"id":482,"name":"onlyOwner","nameLocations":["2603:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"2603:9:2"},"nodeType":"ModifierInvocation","src":"2603:9:2"}],"name":"transferOwnership","nameLocation":"2552:17:2","nodeType":"FunctionDefinition","parameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":480,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:2","nodeType":"VariableDeclaration","scope":505,"src":"2570:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:2"},"returnParameters":{"id":484,"nodeType":"ParameterList","parameters":[],"src":"2613:0:2"},"scope":526,"src":"2543:215:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":524,"nodeType":"Block","src":"2975:124:2","statements":[{"assignments":[512],"declarations":[{"constant":false,"id":512,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:2","nodeType":"VariableDeclaration","scope":524,"src":"2985:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":514,"initialValue":{"id":513,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"3004:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:2"},{"expression":{"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":515,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"3020:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":516,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3029:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":518,"nodeType":"ExpressionStatement","src":"3020:17:2"},{"eventCall":{"arguments":[{"id":520,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"3073:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":521,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3083:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":519,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"3052:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":523,"nodeType":"EmitStatement","src":"3047:45:2"}]},"documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"2764:143:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":525,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:2","nodeType":"FunctionDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:2","nodeType":"VariableDeclaration","scope":525,"src":"2940:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:2"},"returnParameters":{"id":510,"nodeType":"ParameterList","parameters":[],"src":"2975:0:2"},"scope":526,"src":"2912:187:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":527,"src":"663:2438:2","usedErrors":[392,397],"usedEvents":[403]}],"src":"102:3000:2"},"id":2},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[663],"IERC20Errors":[568],"IERC721Errors":[616]},"id":664,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":528,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":529,"nodeType":"StructuredDocumentation","src":"138:141:3","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":568,"linearizedBaseContracts":[568],"name":"IERC20Errors","nameLocation":"290:12:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":530,"nodeType":"StructuredDocumentation","src":"309:309:3","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":538,"name":"ERC20InsufficientBalance","nameLocation":"629:24:3","nodeType":"ErrorDefinition","parameters":{"id":537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"mutability":"mutable","name":"sender","nameLocation":"662:6:3","nodeType":"VariableDeclaration","scope":538,"src":"654:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":531,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":534,"mutability":"mutable","name":"balance","nameLocation":"678:7:3","nodeType":"VariableDeclaration","scope":538,"src":"670:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":533,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":536,"mutability":"mutable","name":"needed","nameLocation":"695:6:3","nodeType":"VariableDeclaration","scope":538,"src":"687:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":535,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:3"},"src":"623:80:3"},{"documentation":{"id":539,"nodeType":"StructuredDocumentation","src":"709:152:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":543,"name":"ERC20InvalidSender","nameLocation":"872:18:3","nodeType":"ErrorDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":541,"mutability":"mutable","name":"sender","nameLocation":"899:6:3","nodeType":"VariableDeclaration","scope":543,"src":"891:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:3"},"src":"866:41:3"},{"documentation":{"id":544,"nodeType":"StructuredDocumentation","src":"913:159:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":548,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:3","nodeType":"ErrorDefinition","parameters":{"id":547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":546,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:3","nodeType":"VariableDeclaration","scope":548,"src":"1104:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":545,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:3"},"src":"1077:45:3"},{"documentation":{"id":549,"nodeType":"StructuredDocumentation","src":"1128:345:3","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":557,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:3","nodeType":"ErrorDefinition","parameters":{"id":556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"mutability":"mutable","name":"spender","nameLocation":"1519:7:3","nodeType":"VariableDeclaration","scope":557,"src":"1511:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":550,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":553,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:3","nodeType":"VariableDeclaration","scope":557,"src":"1528:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":552,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":555,"mutability":"mutable","name":"needed","nameLocation":"1555:6:3","nodeType":"VariableDeclaration","scope":557,"src":"1547:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":554,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:3"},"src":"1478:85:3"},{"documentation":{"id":558,"nodeType":"StructuredDocumentation","src":"1569:174:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":562,"name":"ERC20InvalidApprover","nameLocation":"1754:20:3","nodeType":"ErrorDefinition","parameters":{"id":561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":560,"mutability":"mutable","name":"approver","nameLocation":"1783:8:3","nodeType":"VariableDeclaration","scope":562,"src":"1775:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":559,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:3"},"src":"1748:45:3"},{"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"1799:195:3","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":567,"name":"ERC20InvalidSpender","nameLocation":"2005:19:3","nodeType":"ErrorDefinition","parameters":{"id":566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":565,"mutability":"mutable","name":"spender","nameLocation":"2033:7:3","nodeType":"VariableDeclaration","scope":567,"src":"2025:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":564,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:3"},"src":"1999:43:3"}],"scope":664,"src":"280:1764:3","usedErrors":[538,543,548,557,562,567],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":569,"nodeType":"StructuredDocumentation","src":"2046:143:3","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":616,"linearizedBaseContracts":[616],"name":"IERC721Errors","nameLocation":"2200:13:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":570,"nodeType":"StructuredDocumentation","src":"2220:219:3","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":574,"name":"ERC721InvalidOwner","nameLocation":"2450:18:3","nodeType":"ErrorDefinition","parameters":{"id":573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":572,"mutability":"mutable","name":"owner","nameLocation":"2477:5:3","nodeType":"VariableDeclaration","scope":574,"src":"2469:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":571,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:3"},"src":"2444:40:3"},{"documentation":{"id":575,"nodeType":"StructuredDocumentation","src":"2490:132:3","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":579,"name":"ERC721NonexistentToken","nameLocation":"2633:22:3","nodeType":"ErrorDefinition","parameters":{"id":578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":577,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:3","nodeType":"VariableDeclaration","scope":579,"src":"2656:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":576,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:3"},"src":"2627:46:3"},{"documentation":{"id":580,"nodeType":"StructuredDocumentation","src":"2679:289:3","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":588,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:3","nodeType":"ErrorDefinition","parameters":{"id":587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":582,"mutability":"mutable","name":"sender","nameLocation":"3008:6:3","nodeType":"VariableDeclaration","scope":588,"src":"3000:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":581,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":584,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:3","nodeType":"VariableDeclaration","scope":588,"src":"3016:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":583,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":586,"mutability":"mutable","name":"owner","nameLocation":"3041:5:3","nodeType":"VariableDeclaration","scope":588,"src":"3033:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":585,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:3"},"src":"2973:75:3"},{"documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"3054:152:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":593,"name":"ERC721InvalidSender","nameLocation":"3217:19:3","nodeType":"ErrorDefinition","parameters":{"id":592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"mutability":"mutable","name":"sender","nameLocation":"3245:6:3","nodeType":"VariableDeclaration","scope":593,"src":"3237:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:3"},"src":"3211:42:3"},{"documentation":{"id":594,"nodeType":"StructuredDocumentation","src":"3259:159:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":598,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:3","nodeType":"ErrorDefinition","parameters":{"id":597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":596,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:3","nodeType":"VariableDeclaration","scope":598,"src":"3451:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":595,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:3"},"src":"3423:46:3"},{"documentation":{"id":599,"nodeType":"StructuredDocumentation","src":"3475:247:3","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":605,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:3","nodeType":"ErrorDefinition","parameters":{"id":604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":601,"mutability":"mutable","name":"operator","nameLocation":"3768:8:3","nodeType":"VariableDeclaration","scope":605,"src":"3760:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":600,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":603,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:3","nodeType":"VariableDeclaration","scope":605,"src":"3778:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":602,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:3"},"src":"3727:68:3"},{"documentation":{"id":606,"nodeType":"StructuredDocumentation","src":"3801:174:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":610,"name":"ERC721InvalidApprover","nameLocation":"3986:21:3","nodeType":"ErrorDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":608,"mutability":"mutable","name":"approver","nameLocation":"4016:8:3","nodeType":"VariableDeclaration","scope":610,"src":"4008:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":607,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:3"},"src":"3980:46:3"},{"documentation":{"id":611,"nodeType":"StructuredDocumentation","src":"4032:197:3","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":615,"name":"ERC721InvalidOperator","nameLocation":"4240:21:3","nodeType":"ErrorDefinition","parameters":{"id":614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":613,"mutability":"mutable","name":"operator","nameLocation":"4270:8:3","nodeType":"VariableDeclaration","scope":615,"src":"4262:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":612,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:3"},"src":"4234:46:3"}],"scope":664,"src":"2190:2092:3","usedErrors":[574,579,588,593,598,605,610,615],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":617,"nodeType":"StructuredDocumentation","src":"4284:145:3","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":663,"linearizedBaseContracts":[663],"name":"IERC1155Errors","nameLocation":"4440:14:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":618,"nodeType":"StructuredDocumentation","src":"4461:361:3","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":628,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:3","nodeType":"ErrorDefinition","parameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"mutability":"mutable","name":"sender","nameLocation":"4868:6:3","nodeType":"VariableDeclaration","scope":628,"src":"4860:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":619,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":622,"mutability":"mutable","name":"balance","nameLocation":"4884:7:3","nodeType":"VariableDeclaration","scope":628,"src":"4876:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":621,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":624,"mutability":"mutable","name":"needed","nameLocation":"4901:6:3","nodeType":"VariableDeclaration","scope":628,"src":"4893:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":623,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:3","nodeType":"VariableDeclaration","scope":628,"src":"4909:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":625,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:3"},"src":"4827:99:3"},{"documentation":{"id":629,"nodeType":"StructuredDocumentation","src":"4932:152:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":633,"name":"ERC1155InvalidSender","nameLocation":"5095:20:3","nodeType":"ErrorDefinition","parameters":{"id":632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":631,"mutability":"mutable","name":"sender","nameLocation":"5124:6:3","nodeType":"VariableDeclaration","scope":633,"src":"5116:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:3"},"src":"5089:43:3"},{"documentation":{"id":634,"nodeType":"StructuredDocumentation","src":"5138:159:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":638,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:3","nodeType":"ErrorDefinition","parameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":636,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:3","nodeType":"VariableDeclaration","scope":638,"src":"5331:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":635,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:3"},"src":"5302:47:3"},{"documentation":{"id":639,"nodeType":"StructuredDocumentation","src":"5355:256:3","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":645,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:3","nodeType":"ErrorDefinition","parameters":{"id":644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":641,"mutability":"mutable","name":"operator","nameLocation":"5659:8:3","nodeType":"VariableDeclaration","scope":645,"src":"5651:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":640,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":643,"mutability":"mutable","name":"owner","nameLocation":"5677:5:3","nodeType":"VariableDeclaration","scope":645,"src":"5669:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":642,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:3"},"src":"5616:68:3"},{"documentation":{"id":646,"nodeType":"StructuredDocumentation","src":"5690:174:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":650,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:3","nodeType":"ErrorDefinition","parameters":{"id":649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":648,"mutability":"mutable","name":"approver","nameLocation":"5906:8:3","nodeType":"VariableDeclaration","scope":650,"src":"5898:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":647,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:3"},"src":"5869:47:3"},{"documentation":{"id":651,"nodeType":"StructuredDocumentation","src":"5922:197:3","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":655,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:3","nodeType":"ErrorDefinition","parameters":{"id":654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":653,"mutability":"mutable","name":"operator","nameLocation":"6161:8:3","nodeType":"VariableDeclaration","scope":655,"src":"6153:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":652,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:3"},"src":"6124:47:3"},{"documentation":{"id":656,"nodeType":"StructuredDocumentation","src":"6177:280:3","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":662,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:3","nodeType":"ErrorDefinition","parameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":658,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:3","nodeType":"VariableDeclaration","scope":662,"src":"6494:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":657,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":660,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:3","nodeType":"VariableDeclaration","scope":662,"src":"6513:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":659,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:3"},"src":"6462:73:3"}],"scope":664,"src":"4430:2107:3","usedErrors":[628,633,638,645,650,655,662],"usedEvents":[]}],"src":"112:6426:3"},"id":3},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","exportedSymbols":{"Arrays":[3412],"Context":[3474],"ERC1155":[1580],"ERC1155Utils":[1915],"ERC165":[4310],"IERC1155":[1703],"IERC1155Errors":[663],"IERC1155MetadataURI":[1761],"IERC165":[4322]},"id":1581,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":665,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"./IERC1155.sol","id":667,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1581,"sourceUnit":1704,"src":"135:40:4","symbolAliases":[{"foreign":{"id":666,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"143:8:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","file":"./extensions/IERC1155MetadataURI.sol","id":669,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1581,"sourceUnit":1762,"src":"176:73:4","symbolAliases":[{"foreign":{"id":668,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"184:19:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","file":"./utils/ERC1155Utils.sol","id":671,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1581,"sourceUnit":1916,"src":"250:54:4","symbolAliases":[{"foreign":{"id":670,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"258:12:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":673,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1581,"sourceUnit":3475,"src":"305:48:4","symbolAliases":[{"foreign":{"id":672,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"313:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":676,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1581,"sourceUnit":4311,"src":"354:69:4","symbolAliases":[{"foreign":{"id":674,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"362:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":675,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"371:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"../../utils/Arrays.sol","id":678,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1581,"sourceUnit":3413,"src":"424:46:4","symbolAliases":[{"foreign":{"id":677,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"432:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":680,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1581,"sourceUnit":664,"src":"471:67:4","symbolAliases":[{"foreign":{"id":679,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"479:14:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":682,"name":"Context","nameLocations":["754:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":3474,"src":"754:7:4"},"id":683,"nodeType":"InheritanceSpecifier","src":"754:7:4"},{"baseName":{"id":684,"name":"ERC165","nameLocations":["763:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":4310,"src":"763:6:4"},"id":685,"nodeType":"InheritanceSpecifier","src":"763:6:4"},{"baseName":{"id":686,"name":"IERC1155","nameLocations":["771:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":1703,"src":"771:8:4"},"id":687,"nodeType":"InheritanceSpecifier","src":"771:8:4"},{"baseName":{"id":688,"name":"IERC1155MetadataURI","nameLocations":["781:19:4"],"nodeType":"IdentifierPath","referencedDeclaration":1761,"src":"781:19:4"},"id":689,"nodeType":"InheritanceSpecifier","src":"781:19:4"},{"baseName":{"id":690,"name":"IERC1155Errors","nameLocations":["802:14:4"],"nodeType":"IdentifierPath","referencedDeclaration":663,"src":"802:14:4"},"id":691,"nodeType":"InheritanceSpecifier","src":"802:14:4"}],"canonicalName":"ERC1155","contractDependencies":[],"contractKind":"contract","documentation":{"id":681,"nodeType":"StructuredDocumentation","src":"540:184:4","text":" @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"},"fullyImplemented":true,"id":1580,"linearizedBaseContracts":[1580,663,1761,1703,4310,4322,3474],"name":"ERC1155","nameLocation":"743:7:4","nodeType":"ContractDefinition","nodes":[{"global":false,"id":695,"libraryName":{"id":692,"name":"Arrays","nameLocations":["829:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":3412,"src":"829:6:4"},"nodeType":"UsingForDirective","src":"823:27:4","typeName":{"baseType":{"id":693,"name":"uint256","nodeType":"ElementaryTypeName","src":"840:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":694,"nodeType":"ArrayTypeName","src":"840:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},{"global":false,"id":699,"libraryName":{"id":696,"name":"Arrays","nameLocations":["861:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":3412,"src":"861:6:4"},"nodeType":"UsingForDirective","src":"855:27:4","typeName":{"baseType":{"id":697,"name":"address","nodeType":"ElementaryTypeName","src":"872:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":698,"nodeType":"ArrayTypeName","src":"872:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},{"constant":false,"id":705,"mutability":"mutable","name":"_balances","nameLocation":"955:9:4","nodeType":"VariableDeclaration","scope":1580,"src":"888:76:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":704,"keyName":"id","keyNameLocation":"904:2:4","keyType":{"id":700,"name":"uint256","nodeType":"ElementaryTypeName","src":"896:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"888:58:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":703,"keyName":"account","keyNameLocation":"926:7:4","keyType":{"id":701,"name":"address","nodeType":"ElementaryTypeName","src":"918:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"910:35:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":702,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":711,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1041:18:4","nodeType":"VariableDeclaration","scope":1580,"src":"971:88:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":710,"keyName":"account","keyNameLocation":"987:7:4","keyType":{"id":706,"name":"address","nodeType":"ElementaryTypeName","src":"979:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"971:61:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":709,"keyName":"operator","keyNameLocation":"1014:8:4","keyType":{"id":707,"name":"address","nodeType":"ElementaryTypeName","src":"1006:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"998:33:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":708,"name":"bool","nodeType":"ElementaryTypeName","src":"1026:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":713,"mutability":"mutable","name":"_uri","nameLocation":"1195:4:4","nodeType":"VariableDeclaration","scope":1580,"src":"1180:19:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":712,"name":"string","nodeType":"ElementaryTypeName","src":"1180:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":723,"nodeType":"Block","src":"1281:30:4","statements":[{"expression":{"arguments":[{"id":720,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"1299:4:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":719,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"1291:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1291:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":722,"nodeType":"ExpressionStatement","src":"1291:13:4"}]},"documentation":{"id":714,"nodeType":"StructuredDocumentation","src":"1206:38:4","text":" @dev See {_setURI}."},"id":724,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":716,"mutability":"mutable","name":"uri_","nameLocation":"1275:4:4","nodeType":"VariableDeclaration","scope":724,"src":"1261:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":715,"name":"string","nodeType":"ElementaryTypeName","src":"1261:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1260:20:4"},"returnParameters":{"id":718,"nodeType":"ParameterList","parameters":[],"src":"1281:0:4"},"scope":1580,"src":"1249:62:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[4309,4321],"body":{"id":754,"nodeType":"Block","src":"1486:197:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":735,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"1515:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":737,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"1535:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1703_$","typeString":"type(contract IERC1155)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1703_$","typeString":"type(contract IERC1155)"}],"id":736,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"1530:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1530:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155_$1703","typeString":"type(contract IERC1155)"}},"id":739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1545:11:4","memberName":"interfaceId","nodeType":"MemberAccess","src":"1530:26:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1515:41:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":741,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"1572:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":743,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"1592:19:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1761_$","typeString":"type(contract IERC1155MetadataURI)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1761_$","typeString":"type(contract IERC1155MetadataURI)"}],"id":742,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"1587:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1587:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1761","typeString":"type(contract IERC1155MetadataURI)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1613:11:4","memberName":"interfaceId","nodeType":"MemberAccess","src":"1587:37:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1572:52:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1515:109:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":750,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"1664:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":748,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967271,"src":"1640:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155_$1580_$","typeString":"type(contract super ERC1155)"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1646:17:4","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4309,"src":"1640:23:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1640:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1515:161:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":734,"id":753,"nodeType":"Return","src":"1496:180:4"}]},"documentation":{"id":725,"nodeType":"StructuredDocumentation","src":"1317:56:4","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":755,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1387:17:4","nodeType":"FunctionDefinition","overrides":{"id":731,"nodeType":"OverrideSpecifier","overrides":[{"id":729,"name":"ERC165","nameLocations":["1454:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":4310,"src":"1454:6:4"},{"id":730,"name":"IERC165","nameLocations":["1462:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":4322,"src":"1462:7:4"}],"src":"1445:25:4"},"parameters":{"id":728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":727,"mutability":"mutable","name":"interfaceId","nameLocation":"1412:11:4","nodeType":"VariableDeclaration","scope":755,"src":"1405:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":726,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1405:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1404:20:4"},"returnParameters":{"id":734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":755,"src":"1480:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":732,"name":"bool","nodeType":"ElementaryTypeName","src":"1480:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1479:6:4"},"scope":1580,"src":"1378:305:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1760],"body":{"id":765,"nodeType":"Block","src":"2157:28:4","statements":[{"expression":{"id":763,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"2174:4:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":762,"id":764,"nodeType":"Return","src":"2167:11:4"}]},"documentation":{"id":756,"nodeType":"StructuredDocumentation","src":"1689:388:4","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."},"functionSelector":"0e89341c","id":766,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"2091:3:4","nodeType":"FunctionDefinition","parameters":{"id":759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":766,"src":"2095:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":757,"name":"uint256","nodeType":"ElementaryTypeName","src":"2095:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2094:18:4"},"returnParameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":766,"src":"2142:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":760,"name":"string","nodeType":"ElementaryTypeName","src":"2142:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2141:15:4"},"scope":1580,"src":"2082:103:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1641],"body":{"id":782,"nodeType":"Block","src":"2331:46:4","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":776,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"2348:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":778,"indexExpression":{"id":777,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"2358:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2348:13:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":780,"indexExpression":{"id":779,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"2362:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2348:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":775,"id":781,"nodeType":"Return","src":"2341:29:4"}]},"documentation":{"id":767,"nodeType":"StructuredDocumentation","src":"2191:49:4","text":" @dev See {IERC1155-balanceOf}."},"functionSelector":"00fdd58e","id":783,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2254:9:4","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"mutability":"mutable","name":"account","nameLocation":"2272:7:4","nodeType":"VariableDeclaration","scope":783,"src":"2264:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":768,"name":"address","nodeType":"ElementaryTypeName","src":"2264:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":771,"mutability":"mutable","name":"id","nameLocation":"2289:2:4","nodeType":"VariableDeclaration","scope":783,"src":"2281:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":770,"name":"uint256","nodeType":"ElementaryTypeName","src":"2281:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2263:29:4"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":783,"src":"2322:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":773,"name":"uint256","nodeType":"ElementaryTypeName","src":"2322:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2321:9:4"},"scope":1580,"src":"2245:132:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1654],"body":{"id":852,"nodeType":"Block","src":"2676:410:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":796,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"2690:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2699:6:4","memberName":"length","nodeType":"MemberAccess","src":"2690:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":798,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"2709:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2713:6:4","memberName":"length","nodeType":"MemberAccess","src":"2709:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2690:29:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":809,"nodeType":"IfStatement","src":"2686:121:4","trueBody":{"id":808,"nodeType":"Block","src":"2721:86:4","statements":[{"errorCall":{"arguments":[{"expression":{"id":802,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"2768:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2772:6:4","memberName":"length","nodeType":"MemberAccess","src":"2768:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":804,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"2780:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2789:6:4","memberName":"length","nodeType":"MemberAccess","src":"2780:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":801,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"2742:25:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2742:54:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":807,"nodeType":"RevertStatement","src":"2735:61:4"}]}},{"assignments":[814],"declarations":[{"constant":false,"id":814,"mutability":"mutable","name":"batchBalances","nameLocation":"2834:13:4","nodeType":"VariableDeclaration","scope":852,"src":"2817:30:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":812,"name":"uint256","nodeType":"ElementaryTypeName","src":"2817:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":813,"nodeType":"ArrayTypeName","src":"2817:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":821,"initialValue":{"arguments":[{"expression":{"id":818,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"2864:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2873:6:4","memberName":"length","nodeType":"MemberAccess","src":"2864:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2850:13:4","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":815,"name":"uint256","nodeType":"ElementaryTypeName","src":"2854:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":816,"nodeType":"ArrayTypeName","src":"2854:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2850:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2817:63:4"},{"body":{"id":848,"nodeType":"Block","src":"2937:112:4","statements":[{"expression":{"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":833,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"2951:13:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":835,"indexExpression":{"id":834,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"2965:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2951:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":839,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"3008:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":837,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"2980:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2989:18:4","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3352,"src":"2980:27:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address[] memory,uint256) pure returns (address)"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2980:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":843,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"3035:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":841,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"3012:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3016:18:4","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3378,"src":"3012:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3012:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":836,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"2970:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2970:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2951:87:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":847,"nodeType":"ExpressionStatement","src":"2951:87:4"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":826,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"2911:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":827,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"2915:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2924:6:4","memberName":"length","nodeType":"MemberAccess","src":"2915:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2911:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":849,"initializationExpression":{"assignments":[823],"declarations":[{"constant":false,"id":823,"mutability":"mutable","name":"i","nameLocation":"2904:1:4","nodeType":"VariableDeclaration","scope":849,"src":"2896:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":822,"name":"uint256","nodeType":"ElementaryTypeName","src":"2896:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":825,"initialValue":{"hexValue":"30","id":824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2908:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2896:13:4"},"loopExpression":{"expression":{"id":831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2932:3:4","subExpression":{"id":830,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"2934:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":832,"nodeType":"ExpressionStatement","src":"2932:3:4"},"nodeType":"ForStatement","src":"2891:158:4"},{"expression":{"id":850,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"3066:13:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":795,"id":851,"nodeType":"Return","src":"3059:20:4"}]},"documentation":{"id":784,"nodeType":"StructuredDocumentation","src":"2383:146:4","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":853,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2543:14:4","nodeType":"FunctionDefinition","parameters":{"id":791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":787,"mutability":"mutable","name":"accounts","nameLocation":"2584:8:4","nodeType":"VariableDeclaration","scope":853,"src":"2567:25:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":785,"name":"address","nodeType":"ElementaryTypeName","src":"2567:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":786,"nodeType":"ArrayTypeName","src":"2567:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":790,"mutability":"mutable","name":"ids","nameLocation":"2619:3:4","nodeType":"VariableDeclaration","scope":853,"src":"2602:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"2602:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":789,"nodeType":"ArrayTypeName","src":"2602:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2557:71:4"},"returnParameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":853,"src":"2658:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":792,"name":"uint256","nodeType":"ElementaryTypeName","src":"2658:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":793,"nodeType":"ArrayTypeName","src":"2658:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2657:18:4"},"scope":1580,"src":"2534:552:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1662],"body":{"id":868,"nodeType":"Block","src":"3229:69:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":862,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"3258:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3258:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":864,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"3272:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":865,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"3282:8:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":861,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"3239:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3239:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":867,"nodeType":"ExpressionStatement","src":"3239:52:4"}]},"documentation":{"id":854,"nodeType":"StructuredDocumentation","src":"3092:57:4","text":" @dev See {IERC1155-setApprovalForAll}."},"functionSelector":"a22cb465","id":869,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3163:17:4","nodeType":"FunctionDefinition","parameters":{"id":859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":856,"mutability":"mutable","name":"operator","nameLocation":"3189:8:4","nodeType":"VariableDeclaration","scope":869,"src":"3181:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":855,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":858,"mutability":"mutable","name":"approved","nameLocation":"3204:8:4","nodeType":"VariableDeclaration","scope":869,"src":"3199:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":857,"name":"bool","nodeType":"ElementaryTypeName","src":"3199:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3180:33:4"},"returnParameters":{"id":860,"nodeType":"ParameterList","parameters":[],"src":"3229:0:4"},"scope":1580,"src":"3154:144:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1672],"body":{"id":885,"nodeType":"Block","src":"3461:61:4","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":879,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"3478:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":881,"indexExpression":{"id":880,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"3497:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3478:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":883,"indexExpression":{"id":882,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"3506:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3478:37:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":878,"id":884,"nodeType":"Return","src":"3471:44:4"}]},"documentation":{"id":870,"nodeType":"StructuredDocumentation","src":"3304:56:4","text":" @dev See {IERC1155-isApprovedForAll}."},"functionSelector":"e985e9c5","id":886,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3374:16:4","nodeType":"FunctionDefinition","parameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":872,"mutability":"mutable","name":"account","nameLocation":"3399:7:4","nodeType":"VariableDeclaration","scope":886,"src":"3391:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":871,"name":"address","nodeType":"ElementaryTypeName","src":"3391:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":874,"mutability":"mutable","name":"operator","nameLocation":"3416:8:4","nodeType":"VariableDeclaration","scope":886,"src":"3408:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":873,"name":"address","nodeType":"ElementaryTypeName","src":"3408:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3390:35:4"},"returnParameters":{"id":878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":886,"src":"3455:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":876,"name":"bool","nodeType":"ElementaryTypeName","src":"3455:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3454:6:4"},"scope":1580,"src":"3365:157:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1686],"body":{"id":929,"nodeType":"Block","src":"3702:238:4","statements":[{"assignments":[901],"declarations":[{"constant":false,"id":901,"mutability":"mutable","name":"sender","nameLocation":"3720:6:4","nodeType":"VariableDeclaration","scope":929,"src":"3712:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":900,"name":"address","nodeType":"ElementaryTypeName","src":"3712:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":904,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":902,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"3729:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3729:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3712:29:4"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":905,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"3755:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":906,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"3763:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3755:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3773:31:4","subExpression":{"arguments":[{"id":909,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"3791:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":910,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"3797:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":908,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"3774:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3774:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3755:49:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":920,"nodeType":"IfStatement","src":"3751:129:4","trueBody":{"id":919,"nodeType":"Block","src":"3806:74:4","statements":[{"errorCall":{"arguments":[{"id":915,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"3856:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":916,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"3864:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":914,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"3827:28:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3827:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":918,"nodeType":"RevertStatement","src":"3820:49:4"}]}},{"expression":{"arguments":[{"id":922,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"3907:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":923,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"3913:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":924,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"3917:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"3921:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":926,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"3928:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":921,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"3889:17:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3889:44:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":928,"nodeType":"ExpressionStatement","src":"3889:44:4"}]},"documentation":{"id":887,"nodeType":"StructuredDocumentation","src":"3528:56:4","text":" @dev See {IERC1155-safeTransferFrom}."},"functionSelector":"f242432a","id":930,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3598:16:4","nodeType":"FunctionDefinition","parameters":{"id":898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":889,"mutability":"mutable","name":"from","nameLocation":"3623:4:4","nodeType":"VariableDeclaration","scope":930,"src":"3615:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":888,"name":"address","nodeType":"ElementaryTypeName","src":"3615:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":891,"mutability":"mutable","name":"to","nameLocation":"3637:2:4","nodeType":"VariableDeclaration","scope":930,"src":"3629:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":890,"name":"address","nodeType":"ElementaryTypeName","src":"3629:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":893,"mutability":"mutable","name":"id","nameLocation":"3649:2:4","nodeType":"VariableDeclaration","scope":930,"src":"3641:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":892,"name":"uint256","nodeType":"ElementaryTypeName","src":"3641:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":895,"mutability":"mutable","name":"value","nameLocation":"3661:5:4","nodeType":"VariableDeclaration","scope":930,"src":"3653:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":894,"name":"uint256","nodeType":"ElementaryTypeName","src":"3653:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":897,"mutability":"mutable","name":"data","nameLocation":"3681:4:4","nodeType":"VariableDeclaration","scope":930,"src":"3668:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":896,"name":"bytes","nodeType":"ElementaryTypeName","src":"3668:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3614:72:4"},"returnParameters":{"id":899,"nodeType":"ParameterList","parameters":[],"src":"3702:0:4"},"scope":1580,"src":"3589:351:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1702],"body":{"id":975,"nodeType":"Block","src":"4196:245:4","statements":[{"assignments":[947],"declarations":[{"constant":false,"id":947,"mutability":"mutable","name":"sender","nameLocation":"4214:6:4","nodeType":"VariableDeclaration","scope":975,"src":"4206:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":946,"name":"address","nodeType":"ElementaryTypeName","src":"4206:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":950,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":948,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"4223:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4223:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4206:29:4"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":951,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"4249:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":952,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"4257:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4249:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4267:31:4","subExpression":{"arguments":[{"id":955,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"4285:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":956,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"4291:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":954,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"4268:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4268:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4249:49:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":966,"nodeType":"IfStatement","src":"4245:129:4","trueBody":{"id":965,"nodeType":"Block","src":"4300:74:4","statements":[{"errorCall":{"arguments":[{"id":961,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"4350:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":962,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"4358:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":960,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"4321:28:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4321:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":964,"nodeType":"RevertStatement","src":"4314:49:4"}]}},{"expression":{"arguments":[{"id":968,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"4406:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":969,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"4412:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":970,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"4416:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":971,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"4421:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":972,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"4429:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":967,"name":"_safeBatchTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"4383:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4383:51:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":974,"nodeType":"ExpressionStatement","src":"4383:51:4"}]},"documentation":{"id":931,"nodeType":"StructuredDocumentation","src":"3946:61:4","text":" @dev See {IERC1155-safeBatchTransferFrom}."},"functionSelector":"2eb2c2d6","id":976,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4021:21:4","nodeType":"FunctionDefinition","parameters":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":933,"mutability":"mutable","name":"from","nameLocation":"4060:4:4","nodeType":"VariableDeclaration","scope":976,"src":"4052:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":932,"name":"address","nodeType":"ElementaryTypeName","src":"4052:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":935,"mutability":"mutable","name":"to","nameLocation":"4082:2:4","nodeType":"VariableDeclaration","scope":976,"src":"4074:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":934,"name":"address","nodeType":"ElementaryTypeName","src":"4074:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":938,"mutability":"mutable","name":"ids","nameLocation":"4111:3:4","nodeType":"VariableDeclaration","scope":976,"src":"4094:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":936,"name":"uint256","nodeType":"ElementaryTypeName","src":"4094:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":937,"nodeType":"ArrayTypeName","src":"4094:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":941,"mutability":"mutable","name":"values","nameLocation":"4141:6:4","nodeType":"VariableDeclaration","scope":976,"src":"4124:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":939,"name":"uint256","nodeType":"ElementaryTypeName","src":"4124:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":940,"nodeType":"ArrayTypeName","src":"4124:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":943,"mutability":"mutable","name":"data","nameLocation":"4170:4:4","nodeType":"VariableDeclaration","scope":976,"src":"4157:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":942,"name":"bytes","nodeType":"ElementaryTypeName","src":"4157:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4042:138:4"},"returnParameters":{"id":945,"nodeType":"ParameterList","parameters":[],"src":"4196:0:4"},"scope":1580,"src":"4012:429:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1128,"nodeType":"Block","src":"5249:1174:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":990,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"5263:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5267:6:4","memberName":"length","nodeType":"MemberAccess","src":"5263:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":992,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"5277:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5284:6:4","memberName":"length","nodeType":"MemberAccess","src":"5277:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5263:27:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1003,"nodeType":"IfStatement","src":"5259:117:4","trueBody":{"id":1002,"nodeType":"Block","src":"5292:84:4","statements":[{"errorCall":{"arguments":[{"expression":{"id":996,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"5339:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5343:6:4","memberName":"length","nodeType":"MemberAccess","src":"5339:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":998,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"5351:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5358:6:4","memberName":"length","nodeType":"MemberAccess","src":"5351:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":995,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"5313:25:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5313:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1001,"nodeType":"RevertStatement","src":"5306:59:4"}]}},{"assignments":[1005],"declarations":[{"constant":false,"id":1005,"mutability":"mutable","name":"operator","nameLocation":"5394:8:4","nodeType":"VariableDeclaration","scope":1128,"src":"5386:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1004,"name":"address","nodeType":"ElementaryTypeName","src":"5386:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1008,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1006,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"5405:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5405:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5386:31:4"},{"body":{"id":1089,"nodeType":"Block","src":"5469:650:4","statements":[{"assignments":[1021],"declarations":[{"constant":false,"id":1021,"mutability":"mutable","name":"id","nameLocation":"5491:2:4","nodeType":"VariableDeclaration","scope":1089,"src":"5483:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1020,"name":"uint256","nodeType":"ElementaryTypeName","src":"5483:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1026,"initialValue":{"arguments":[{"id":1024,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"5519:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1022,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"5496:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5500:18:4","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3378,"src":"5496:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5496:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5483:38:4"},{"assignments":[1028],"declarations":[{"constant":false,"id":1028,"mutability":"mutable","name":"value","nameLocation":"5543:5:4","nodeType":"VariableDeclaration","scope":1089,"src":"5535:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1027,"name":"uint256","nodeType":"ElementaryTypeName","src":"5535:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1033,"initialValue":{"arguments":[{"id":1031,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"5577:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1029,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"5551:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5558:18:4","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3378,"src":"5551:25:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5551:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5535:44:4"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1034,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"5598:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5614:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5606:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"5606:7:4","typeDescriptions":{}}},"id":1038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5606:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5598:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1072,"nodeType":"IfStatement","src":"5594:420:4","trueBody":{"id":1071,"nodeType":"Block","src":"5618:396:4","statements":[{"assignments":[1041],"declarations":[{"constant":false,"id":1041,"mutability":"mutable","name":"fromBalance","nameLocation":"5644:11:4","nodeType":"VariableDeclaration","scope":1071,"src":"5636:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1040,"name":"uint256","nodeType":"ElementaryTypeName","src":"5636:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1047,"initialValue":{"baseExpression":{"baseExpression":{"id":1042,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"5658:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1044,"indexExpression":{"id":1043,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"5668:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5658:13:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1046,"indexExpression":{"id":1045,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"5672:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5658:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5636:41:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1048,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"5699:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"5713:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5699:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1059,"nodeType":"IfStatement","src":"5695:129:4","trueBody":{"id":1058,"nodeType":"Block","src":"5720:104:4","statements":[{"errorCall":{"arguments":[{"id":1052,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"5776:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1053,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"5782:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"5795:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1055,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"5802:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1051,"name":"ERC1155InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"5749:26:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256) pure"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5749:56:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1057,"nodeType":"RevertStatement","src":"5742:63:4"}]}},{"id":1070,"nodeType":"UncheckedBlock","src":"5841:159:4","statements":[{"expression":{"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1060,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"5940:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1063,"indexExpression":{"id":1061,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"5950:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5940:13:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1064,"indexExpression":{"id":1062,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"5954:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5940:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1065,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"5962:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"5976:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5962:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5940:41:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1069,"nodeType":"ExpressionStatement","src":"5940:41:4"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1073,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"6032:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6046:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6038:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1074,"name":"address","nodeType":"ElementaryTypeName","src":"6038:7:4","typeDescriptions":{}}},"id":1077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6038:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6032:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1088,"nodeType":"IfStatement","src":"6028:81:4","trueBody":{"id":1087,"nodeType":"Block","src":"6050:59:4","statements":[{"expression":{"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1079,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"6068:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1082,"indexExpression":{"id":1080,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"6078:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6068:13:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1083,"indexExpression":{"id":1081,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"6082:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6068:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"6089:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6068:26:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1086,"nodeType":"ExpressionStatement","src":"6068:26:4"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1013,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"5448:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1014,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"5452:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5456:6:4","memberName":"length","nodeType":"MemberAccess","src":"5452:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5448:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1090,"initializationExpression":{"assignments":[1010],"declarations":[{"constant":false,"id":1010,"mutability":"mutable","name":"i","nameLocation":"5441:1:4","nodeType":"VariableDeclaration","scope":1090,"src":"5433:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1009,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1012,"initialValue":{"hexValue":"30","id":1011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5445:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5433:13:4"},"loopExpression":{"expression":{"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5464:3:4","subExpression":{"id":1017,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"5466:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1019,"nodeType":"ExpressionStatement","src":"5464:3:4"},"nodeType":"ForStatement","src":"5428:691:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1091,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"6133:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6137:6:4","memberName":"length","nodeType":"MemberAccess","src":"6133:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6147:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6133:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1126,"nodeType":"Block","src":"6341:76:4","statements":[{"eventCall":{"arguments":[{"id":1119,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"6374:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1120,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"6384:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1121,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"6390:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1122,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"6394:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1123,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"6399:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1118,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"6360:13:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6360:46:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1125,"nodeType":"EmitStatement","src":"6355:51:4"}]},"id":1127,"nodeType":"IfStatement","src":"6129:288:4","trueBody":{"id":1117,"nodeType":"Block","src":"6150:185:4","statements":[{"assignments":[1096],"declarations":[{"constant":false,"id":1096,"mutability":"mutable","name":"id","nameLocation":"6172:2:4","nodeType":"VariableDeclaration","scope":1117,"src":"6164:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1095,"name":"uint256","nodeType":"ElementaryTypeName","src":"6164:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1101,"initialValue":{"arguments":[{"hexValue":"30","id":1099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6200:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1097,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"6177:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6181:18:4","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3378,"src":"6177:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6177:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6164:38:4"},{"assignments":[1103],"declarations":[{"constant":false,"id":1103,"mutability":"mutable","name":"value","nameLocation":"6224:5:4","nodeType":"VariableDeclaration","scope":1117,"src":"6216:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1102,"name":"uint256","nodeType":"ElementaryTypeName","src":"6216:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1108,"initialValue":{"arguments":[{"hexValue":"30","id":1106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6258:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1104,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"6232:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6239:18:4","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3378,"src":"6232:25:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6232:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6216:44:4"},{"eventCall":{"arguments":[{"id":1110,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"6294:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1111,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"6304:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1112,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"6310:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1113,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"6314:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"6318:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1109,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"6279:14:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6279:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1116,"nodeType":"EmitStatement","src":"6274:50:4"}]}}]},"documentation":{"id":977,"nodeType":"StructuredDocumentation","src":"4447:690:4","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."},"id":1129,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5151:7:4","nodeType":"FunctionDefinition","parameters":{"id":988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":979,"mutability":"mutable","name":"from","nameLocation":"5167:4:4","nodeType":"VariableDeclaration","scope":1129,"src":"5159:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":978,"name":"address","nodeType":"ElementaryTypeName","src":"5159:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":981,"mutability":"mutable","name":"to","nameLocation":"5181:2:4","nodeType":"VariableDeclaration","scope":1129,"src":"5173:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":980,"name":"address","nodeType":"ElementaryTypeName","src":"5173:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":984,"mutability":"mutable","name":"ids","nameLocation":"5202:3:4","nodeType":"VariableDeclaration","scope":1129,"src":"5185:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":982,"name":"uint256","nodeType":"ElementaryTypeName","src":"5185:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":983,"nodeType":"ArrayTypeName","src":"5185:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":987,"mutability":"mutable","name":"values","nameLocation":"5224:6:4","nodeType":"VariableDeclaration","scope":1129,"src":"5207:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":985,"name":"uint256","nodeType":"ElementaryTypeName","src":"5207:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":986,"nodeType":"ArrayTypeName","src":"5207:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5158:73:4"},"returnParameters":{"id":989,"nodeType":"ParameterList","parameters":[],"src":"5249:0:4"},"scope":1580,"src":"5142:1281:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1208,"nodeType":"Block","src":"7193:509:4","statements":[{"expression":{"arguments":[{"id":1146,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"7211:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1147,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"7217:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1148,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"7221:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1149,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"7226:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1145,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"7203:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7203:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1151,"nodeType":"ExpressionStatement","src":"7203:30:4"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1152,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"7247:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7261:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7253:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1153,"name":"address","nodeType":"ElementaryTypeName","src":"7253:7:4","typeDescriptions":{}}},"id":1156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7253:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7247:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1207,"nodeType":"IfStatement","src":"7243:453:4","trueBody":{"id":1206,"nodeType":"Block","src":"7265:431:4","statements":[{"assignments":[1159],"declarations":[{"constant":false,"id":1159,"mutability":"mutable","name":"operator","nameLocation":"7287:8:4","nodeType":"VariableDeclaration","scope":1206,"src":"7279:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1158,"name":"address","nodeType":"ElementaryTypeName","src":"7279:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1162,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1160,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"7298:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7298:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7279:31:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1163,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"7328:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7332:6:4","memberName":"length","nodeType":"MemberAccess","src":"7328:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7342:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7328:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1204,"nodeType":"Block","src":"7574:112:4","statements":[{"expression":{"arguments":[{"id":1196,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7633:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1197,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"7643:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1198,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"7649:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1199,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"7653:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1200,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"7658:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1201,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"7666:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1193,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"7592:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$1915_$","typeString":"type(library ERC1155Utils)"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7605:27:4","memberName":"checkOnERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1914,"src":"7592:40:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7592:79:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1203,"nodeType":"ExpressionStatement","src":"7592:79:4"}]},"id":1205,"nodeType":"IfStatement","src":"7324:362:4","trueBody":{"id":1192,"nodeType":"Block","src":"7345:223:4","statements":[{"assignments":[1168],"declarations":[{"constant":false,"id":1168,"mutability":"mutable","name":"id","nameLocation":"7371:2:4","nodeType":"VariableDeclaration","scope":1192,"src":"7363:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1167,"name":"uint256","nodeType":"ElementaryTypeName","src":"7363:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1173,"initialValue":{"arguments":[{"hexValue":"30","id":1171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7399:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1169,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"7376:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7380:18:4","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3378,"src":"7376:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7376:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7363:38:4"},{"assignments":[1175],"declarations":[{"constant":false,"id":1175,"mutability":"mutable","name":"value","nameLocation":"7427:5:4","nodeType":"VariableDeclaration","scope":1192,"src":"7419:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1174,"name":"uint256","nodeType":"ElementaryTypeName","src":"7419:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1180,"initialValue":{"arguments":[{"hexValue":"30","id":1178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7461:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1176,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"7435:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7442:18:4","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3378,"src":"7435:25:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7435:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7419:44:4"},{"expression":{"arguments":[{"id":1184,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7517:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1185,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"7527:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1186,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"7533:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1187,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"7537:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"7541:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1189,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"7548:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1181,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"7481:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$1915_$","typeString":"type(library ERC1155Utils)"}},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7494:22:4","memberName":"checkOnERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1840,"src":"7481:35:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7481:72:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1191,"nodeType":"ExpressionStatement","src":"7481:72:4"}]}}]}}]},"documentation":{"id":1130,"nodeType":"StructuredDocumentation","src":"6429:568:4","text":" @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."},"id":1209,"implemented":true,"kind":"function","modifiers":[],"name":"_updateWithAcceptanceCheck","nameLocation":"7011:26:4","nodeType":"FunctionDefinition","parameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1132,"mutability":"mutable","name":"from","nameLocation":"7055:4:4","nodeType":"VariableDeclaration","scope":1209,"src":"7047:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1131,"name":"address","nodeType":"ElementaryTypeName","src":"7047:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1134,"mutability":"mutable","name":"to","nameLocation":"7077:2:4","nodeType":"VariableDeclaration","scope":1209,"src":"7069:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1133,"name":"address","nodeType":"ElementaryTypeName","src":"7069:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1137,"mutability":"mutable","name":"ids","nameLocation":"7106:3:4","nodeType":"VariableDeclaration","scope":1209,"src":"7089:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1135,"name":"uint256","nodeType":"ElementaryTypeName","src":"7089:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1136,"nodeType":"ArrayTypeName","src":"7089:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1140,"mutability":"mutable","name":"values","nameLocation":"7136:6:4","nodeType":"VariableDeclaration","scope":1209,"src":"7119:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1138,"name":"uint256","nodeType":"ElementaryTypeName","src":"7119:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1139,"nodeType":"ArrayTypeName","src":"7119:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1142,"mutability":"mutable","name":"data","nameLocation":"7165:4:4","nodeType":"VariableDeclaration","scope":1209,"src":"7152:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1141,"name":"bytes","nodeType":"ElementaryTypeName","src":"7152:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7037:138:4"},"returnParameters":{"id":1144,"nodeType":"ParameterList","parameters":[],"src":"7193:0:4"},"scope":1580,"src":"7002:700:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1274,"nodeType":"Block","src":"8267:355:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1223,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"8281:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8295:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8287:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1224,"name":"address","nodeType":"ElementaryTypeName","src":"8287:7:4","typeDescriptions":{}}},"id":1227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8287:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8281:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1237,"nodeType":"IfStatement","src":"8277:88:4","trueBody":{"id":1236,"nodeType":"Block","src":"8299:66:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8351:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8343:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1230,"name":"address","nodeType":"ElementaryTypeName","src":"8343:7:4","typeDescriptions":{}}},"id":1233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8343:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1229,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"8320:22:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8320:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1235,"nodeType":"RevertStatement","src":"8313:41:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1238,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"8378:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8394:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8386:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1239,"name":"address","nodeType":"ElementaryTypeName","src":"8386:7:4","typeDescriptions":{}}},"id":1242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8386:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8378:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1252,"nodeType":"IfStatement","src":"8374:88:4","trueBody":{"id":1251,"nodeType":"Block","src":"8398:64:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8448:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8440:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1245,"name":"address","nodeType":"ElementaryTypeName","src":"8440:7:4","typeDescriptions":{}}},"id":1248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8440:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1244,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"8419:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8419:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1250,"nodeType":"RevertStatement","src":"8412:39:4"}]}},{"assignments":[1257,1260],"declarations":[{"constant":false,"id":1257,"mutability":"mutable","name":"ids","nameLocation":"8489:3:4","nodeType":"VariableDeclaration","scope":1274,"src":"8472:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1255,"name":"uint256","nodeType":"ElementaryTypeName","src":"8472:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1256,"nodeType":"ArrayTypeName","src":"8472:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1260,"mutability":"mutable","name":"values","nameLocation":"8511:6:4","nodeType":"VariableDeclaration","scope":1274,"src":"8494:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1258,"name":"uint256","nodeType":"ElementaryTypeName","src":"8494:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1259,"nodeType":"ArrayTypeName","src":"8494:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1265,"initialValue":{"arguments":[{"id":1262,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"8540:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"8544:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1261,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"8521:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8521:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"8471:79:4"},{"expression":{"arguments":[{"id":1267,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"8587:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1268,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"8593:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1269,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"8597:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1270,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"8602:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1271,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"8610:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1266,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"8560:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1273,"nodeType":"ExpressionStatement","src":"8560:55:4"}]},"documentation":{"id":1210,"nodeType":"StructuredDocumentation","src":"7708:446:4","text":" @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1275,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nameLocation":"8168:17:4","nodeType":"FunctionDefinition","parameters":{"id":1221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1212,"mutability":"mutable","name":"from","nameLocation":"8194:4:4","nodeType":"VariableDeclaration","scope":1275,"src":"8186:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1211,"name":"address","nodeType":"ElementaryTypeName","src":"8186:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1214,"mutability":"mutable","name":"to","nameLocation":"8208:2:4","nodeType":"VariableDeclaration","scope":1275,"src":"8200:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1213,"name":"address","nodeType":"ElementaryTypeName","src":"8200:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1216,"mutability":"mutable","name":"id","nameLocation":"8220:2:4","nodeType":"VariableDeclaration","scope":1275,"src":"8212:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1215,"name":"uint256","nodeType":"ElementaryTypeName","src":"8212:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1218,"mutability":"mutable","name":"value","nameLocation":"8232:5:4","nodeType":"VariableDeclaration","scope":1275,"src":"8224:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1217,"name":"uint256","nodeType":"ElementaryTypeName","src":"8224:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1220,"mutability":"mutable","name":"data","nameLocation":"8252:4:4","nodeType":"VariableDeclaration","scope":1275,"src":"8239:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1219,"name":"bytes","nodeType":"ElementaryTypeName","src":"8239:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8185:72:4"},"returnParameters":{"id":1222,"nodeType":"ParameterList","parameters":[],"src":"8267:0:4"},"scope":1580,"src":"8159:463:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1329,"nodeType":"Block","src":"9202:266:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1291,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"9216:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9230:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9222:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1292,"name":"address","nodeType":"ElementaryTypeName","src":"9222:7:4","typeDescriptions":{}}},"id":1295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9216:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1305,"nodeType":"IfStatement","src":"9212:88:4","trueBody":{"id":1304,"nodeType":"Block","src":"9234:66:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9286:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9278:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1298,"name":"address","nodeType":"ElementaryTypeName","src":"9278:7:4","typeDescriptions":{}}},"id":1301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9278:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1297,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"9255:22:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9255:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1303,"nodeType":"RevertStatement","src":"9248:41:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1306,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"9313:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9329:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9321:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"9321:7:4","typeDescriptions":{}}},"id":1310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9321:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9313:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1320,"nodeType":"IfStatement","src":"9309:88:4","trueBody":{"id":1319,"nodeType":"Block","src":"9333:64:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9383:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9375:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1313,"name":"address","nodeType":"ElementaryTypeName","src":"9375:7:4","typeDescriptions":{}}},"id":1316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9375:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1312,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"9354:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9354:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1318,"nodeType":"RevertStatement","src":"9347:39:4"}]}},{"expression":{"arguments":[{"id":1322,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"9433:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1323,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"9439:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1324,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"9443:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1325,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"9448:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1326,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"9456:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1321,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"9406:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9406:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1328,"nodeType":"ExpressionStatement","src":"9406:55:4"}]},"documentation":{"id":1276,"nodeType":"StructuredDocumentation","src":"8628:390:4","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."},"id":1330,"implemented":true,"kind":"function","modifiers":[],"name":"_safeBatchTransferFrom","nameLocation":"9032:22:4","nodeType":"FunctionDefinition","parameters":{"id":1289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"from","nameLocation":"9072:4:4","nodeType":"VariableDeclaration","scope":1330,"src":"9064:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1277,"name":"address","nodeType":"ElementaryTypeName","src":"9064:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1280,"mutability":"mutable","name":"to","nameLocation":"9094:2:4","nodeType":"VariableDeclaration","scope":1330,"src":"9086:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1279,"name":"address","nodeType":"ElementaryTypeName","src":"9086:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1283,"mutability":"mutable","name":"ids","nameLocation":"9123:3:4","nodeType":"VariableDeclaration","scope":1330,"src":"9106:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1281,"name":"uint256","nodeType":"ElementaryTypeName","src":"9106:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1282,"nodeType":"ArrayTypeName","src":"9106:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1286,"mutability":"mutable","name":"values","nameLocation":"9153:6:4","nodeType":"VariableDeclaration","scope":1330,"src":"9136:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1284,"name":"uint256","nodeType":"ElementaryTypeName","src":"9136:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1285,"nodeType":"ArrayTypeName","src":"9136:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1288,"mutability":"mutable","name":"data","nameLocation":"9182:4:4","nodeType":"VariableDeclaration","scope":1330,"src":"9169:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1287,"name":"bytes","nodeType":"ElementaryTypeName","src":"9169:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9054:138:4"},"returnParameters":{"id":1290,"nodeType":"ParameterList","parameters":[],"src":"9202:0:4"},"scope":1580,"src":"9023:445:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1340,"nodeType":"Block","src":"10346:30:4","statements":[{"expression":{"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1336,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"10356:4:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1337,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"10363:6:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"10356:13:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1339,"nodeType":"ExpressionStatement","src":"10356:13:4"}]},"documentation":{"id":1331,"nodeType":"StructuredDocumentation","src":"9474:811:4","text":" @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."},"id":1341,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"10299:7:4","nodeType":"FunctionDefinition","parameters":{"id":1334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1333,"mutability":"mutable","name":"newuri","nameLocation":"10321:6:4","nodeType":"VariableDeclaration","scope":1341,"src":"10307:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1332,"name":"string","nodeType":"ElementaryTypeName","src":"10307:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10306:22:4"},"returnParameters":{"id":1335,"nodeType":"ParameterList","parameters":[],"src":"10346:0:4"},"scope":1580,"src":"10290:86:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1392,"nodeType":"Block","src":"10836:264:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1353,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"10850:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10864:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10856:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1354,"name":"address","nodeType":"ElementaryTypeName","src":"10856:7:4","typeDescriptions":{}}},"id":1357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10856:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10850:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1367,"nodeType":"IfStatement","src":"10846:88:4","trueBody":{"id":1366,"nodeType":"Block","src":"10868:66:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10920:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10912:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1360,"name":"address","nodeType":"ElementaryTypeName","src":"10912:7:4","typeDescriptions":{}}},"id":1363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10912:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1359,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"10889:22:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10889:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1365,"nodeType":"RevertStatement","src":"10882:41:4"}]}},{"assignments":[1372,1375],"declarations":[{"constant":false,"id":1372,"mutability":"mutable","name":"ids","nameLocation":"10961:3:4","nodeType":"VariableDeclaration","scope":1392,"src":"10944:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1370,"name":"uint256","nodeType":"ElementaryTypeName","src":"10944:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1371,"nodeType":"ArrayTypeName","src":"10944:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1375,"mutability":"mutable","name":"values","nameLocation":"10983:6:4","nodeType":"VariableDeclaration","scope":1392,"src":"10966:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1373,"name":"uint256","nodeType":"ElementaryTypeName","src":"10966:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1374,"nodeType":"ArrayTypeName","src":"10966:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1380,"initialValue":{"arguments":[{"id":1377,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"11012:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"11016:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1376,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"10993:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10993:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"10943:79:4"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11067:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11059:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1382,"name":"address","nodeType":"ElementaryTypeName","src":"11059:7:4","typeDescriptions":{}}},"id":1385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11059:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1386,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"11071:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1387,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"11075:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1388,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1375,"src":"11080:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1389,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"11088:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1381,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"11032:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11032:61:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1391,"nodeType":"ExpressionStatement","src":"11032:61:4"}]},"documentation":{"id":1342,"nodeType":"StructuredDocumentation","src":"10382:367:4","text":" @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1393,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"10763:5:4","nodeType":"FunctionDefinition","parameters":{"id":1351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1344,"mutability":"mutable","name":"to","nameLocation":"10777:2:4","nodeType":"VariableDeclaration","scope":1393,"src":"10769:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1343,"name":"address","nodeType":"ElementaryTypeName","src":"10769:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1346,"mutability":"mutable","name":"id","nameLocation":"10789:2:4","nodeType":"VariableDeclaration","scope":1393,"src":"10781:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1345,"name":"uint256","nodeType":"ElementaryTypeName","src":"10781:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1348,"mutability":"mutable","name":"value","nameLocation":"10801:5:4","nodeType":"VariableDeclaration","scope":1393,"src":"10793:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1347,"name":"uint256","nodeType":"ElementaryTypeName","src":"10793:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1350,"mutability":"mutable","name":"data","nameLocation":"10821:4:4","nodeType":"VariableDeclaration","scope":1393,"src":"10808:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1349,"name":"bytes","nodeType":"ElementaryTypeName","src":"10808:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10768:58:4"},"returnParameters":{"id":1352,"nodeType":"ParameterList","parameters":[],"src":"10836:0:4"},"scope":1580,"src":"10754:346:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1433,"nodeType":"Block","src":"11638:175:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1407,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"11652:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11666:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11658:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1408,"name":"address","nodeType":"ElementaryTypeName","src":"11658:7:4","typeDescriptions":{}}},"id":1411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11658:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11652:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1421,"nodeType":"IfStatement","src":"11648:88:4","trueBody":{"id":1420,"nodeType":"Block","src":"11670:66:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11722:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11714:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1414,"name":"address","nodeType":"ElementaryTypeName","src":"11714:7:4","typeDescriptions":{}}},"id":1417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11714:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1413,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"11691:22:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11691:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1419,"nodeType":"RevertStatement","src":"11684:41:4"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11780:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11772:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1423,"name":"address","nodeType":"ElementaryTypeName","src":"11772:7:4","typeDescriptions":{}}},"id":1426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11772:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1427,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"11784:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1428,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"11788:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1429,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"11793:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1430,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"11801:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1422,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"11745:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11745:61:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1432,"nodeType":"ExpressionStatement","src":"11745:61:4"}]},"documentation":{"id":1394,"nodeType":"StructuredDocumentation","src":"11106:420:4","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":1434,"implemented":true,"kind":"function","modifiers":[],"name":"_mintBatch","nameLocation":"11540:10:4","nodeType":"FunctionDefinition","parameters":{"id":1405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1396,"mutability":"mutable","name":"to","nameLocation":"11559:2:4","nodeType":"VariableDeclaration","scope":1434,"src":"11551:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1395,"name":"address","nodeType":"ElementaryTypeName","src":"11551:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1399,"mutability":"mutable","name":"ids","nameLocation":"11580:3:4","nodeType":"VariableDeclaration","scope":1434,"src":"11563:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"11563:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1398,"nodeType":"ArrayTypeName","src":"11563:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1402,"mutability":"mutable","name":"values","nameLocation":"11602:6:4","nodeType":"VariableDeclaration","scope":1434,"src":"11585:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1400,"name":"uint256","nodeType":"ElementaryTypeName","src":"11585:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1401,"nodeType":"ArrayTypeName","src":"11585:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1404,"mutability":"mutable","name":"data","nameLocation":"11623:4:4","nodeType":"VariableDeclaration","scope":1434,"src":"11610:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1403,"name":"bytes","nodeType":"ElementaryTypeName","src":"11610:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11550:78:4"},"returnParameters":{"id":1406,"nodeType":"ParameterList","parameters":[],"src":"11638:0:4"},"scope":1580,"src":"11531:282:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1483,"nodeType":"Block","src":"12172:264:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1444,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"12186:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12202:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12194:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1445,"name":"address","nodeType":"ElementaryTypeName","src":"12194:7:4","typeDescriptions":{}}},"id":1448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12194:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12186:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1458,"nodeType":"IfStatement","src":"12182:88:4","trueBody":{"id":1457,"nodeType":"Block","src":"12206:64:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12256:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12248:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1451,"name":"address","nodeType":"ElementaryTypeName","src":"12248:7:4","typeDescriptions":{}}},"id":1454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12248:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1450,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"12227:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12227:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1456,"nodeType":"RevertStatement","src":"12220:39:4"}]}},{"assignments":[1463,1466],"declarations":[{"constant":false,"id":1463,"mutability":"mutable","name":"ids","nameLocation":"12297:3:4","nodeType":"VariableDeclaration","scope":1483,"src":"12280:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1461,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1462,"nodeType":"ArrayTypeName","src":"12280:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1466,"mutability":"mutable","name":"values","nameLocation":"12319:6:4","nodeType":"VariableDeclaration","scope":1483,"src":"12302:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1464,"name":"uint256","nodeType":"ElementaryTypeName","src":"12302:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1465,"nodeType":"ArrayTypeName","src":"12302:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1471,"initialValue":{"arguments":[{"id":1468,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"12348:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"12352:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1467,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"12329:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12329:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"12279:79:4"},{"expression":{"arguments":[{"id":1473,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"12395:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12409:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12401:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1474,"name":"address","nodeType":"ElementaryTypeName","src":"12401:7:4","typeDescriptions":{}}},"id":1477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12401:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1478,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"12413:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1479,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"12418:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12426:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1472,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"12368:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12368:61:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1482,"nodeType":"ExpressionStatement","src":"12368:61:4"}]},"documentation":{"id":1435,"nodeType":"StructuredDocumentation","src":"11819:283:4","text":" @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."},"id":1484,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"12116:5:4","nodeType":"FunctionDefinition","parameters":{"id":1442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1437,"mutability":"mutable","name":"from","nameLocation":"12130:4:4","nodeType":"VariableDeclaration","scope":1484,"src":"12122:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1436,"name":"address","nodeType":"ElementaryTypeName","src":"12122:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1439,"mutability":"mutable","name":"id","nameLocation":"12144:2:4","nodeType":"VariableDeclaration","scope":1484,"src":"12136:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1438,"name":"uint256","nodeType":"ElementaryTypeName","src":"12136:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1441,"mutability":"mutable","name":"value","nameLocation":"12156:5:4","nodeType":"VariableDeclaration","scope":1484,"src":"12148:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1440,"name":"uint256","nodeType":"ElementaryTypeName","src":"12148:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12121:41:4"},"returnParameters":{"id":1443,"nodeType":"ParameterList","parameters":[],"src":"12172:0:4"},"scope":1580,"src":"12107:329:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1522,"nodeType":"Block","src":"12882:175:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1496,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"12896:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12912:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12904:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1497,"name":"address","nodeType":"ElementaryTypeName","src":"12904:7:4","typeDescriptions":{}}},"id":1500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12904:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12896:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1510,"nodeType":"IfStatement","src":"12892:88:4","trueBody":{"id":1509,"nodeType":"Block","src":"12916:64:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12966:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12958:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1503,"name":"address","nodeType":"ElementaryTypeName","src":"12958:7:4","typeDescriptions":{}}},"id":1506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12958:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1502,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"12937:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12937:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1508,"nodeType":"RevertStatement","src":"12930:39:4"}]}},{"expression":{"arguments":[{"id":1512,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"13016:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13030:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13022:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1513,"name":"address","nodeType":"ElementaryTypeName","src":"13022:7:4","typeDescriptions":{}}},"id":1516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13022:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1517,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"13034:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1518,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"13039:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13047:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1511,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"12989:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:61:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1521,"nodeType":"ExpressionStatement","src":"12989:61:4"}]},"documentation":{"id":1485,"nodeType":"StructuredDocumentation","src":"12442:345:4","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."},"id":1523,"implemented":true,"kind":"function","modifiers":[],"name":"_burnBatch","nameLocation":"12801:10:4","nodeType":"FunctionDefinition","parameters":{"id":1494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1487,"mutability":"mutable","name":"from","nameLocation":"12820:4:4","nodeType":"VariableDeclaration","scope":1523,"src":"12812:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1486,"name":"address","nodeType":"ElementaryTypeName","src":"12812:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1490,"mutability":"mutable","name":"ids","nameLocation":"12843:3:4","nodeType":"VariableDeclaration","scope":1523,"src":"12826:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1488,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1489,"nodeType":"ArrayTypeName","src":"12826:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1493,"mutability":"mutable","name":"values","nameLocation":"12865:6:4","nodeType":"VariableDeclaration","scope":1523,"src":"12848:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1491,"name":"uint256","nodeType":"ElementaryTypeName","src":"12848:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1492,"nodeType":"ArrayTypeName","src":"12848:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12811:61:4"},"returnParameters":{"id":1495,"nodeType":"ParameterList","parameters":[],"src":"12882:0:4"},"scope":1580,"src":"12792:265:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1562,"nodeType":"Block","src":"13369:222:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1533,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"13383:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13403:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13395:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1534,"name":"address","nodeType":"ElementaryTypeName","src":"13395:7:4","typeDescriptions":{}}},"id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13395:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13383:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1547,"nodeType":"IfStatement","src":"13379:94:4","trueBody":{"id":1546,"nodeType":"Block","src":"13407:66:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13459:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13451:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1540,"name":"address","nodeType":"ElementaryTypeName","src":"13451:7:4","typeDescriptions":{}}},"id":1543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13451:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1539,"name":"ERC1155InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"13428:22:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13428:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1545,"nodeType":"RevertStatement","src":"13421:41:4"}]}},{"expression":{"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1548,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"13482:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1551,"indexExpression":{"id":1549,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"13501:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13482:25:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1552,"indexExpression":{"id":1550,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"13508:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13482:35:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1553,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"13520:8:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13482:46:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1555,"nodeType":"ExpressionStatement","src":"13482:46:4"},{"eventCall":{"arguments":[{"id":1557,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"13558:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1558,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"13565:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1559,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"13575:8:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1556,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"13543:14:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13543:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1561,"nodeType":"EmitStatement","src":"13538:46:4"}]},"documentation":{"id":1524,"nodeType":"StructuredDocumentation","src":"13063:208:4","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"id":1563,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"13285:18:4","nodeType":"FunctionDefinition","parameters":{"id":1531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1526,"mutability":"mutable","name":"owner","nameLocation":"13312:5:4","nodeType":"VariableDeclaration","scope":1563,"src":"13304:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1525,"name":"address","nodeType":"ElementaryTypeName","src":"13304:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1528,"mutability":"mutable","name":"operator","nameLocation":"13327:8:4","nodeType":"VariableDeclaration","scope":1563,"src":"13319:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1527,"name":"address","nodeType":"ElementaryTypeName","src":"13319:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1530,"mutability":"mutable","name":"approved","nameLocation":"13342:8:4","nodeType":"VariableDeclaration","scope":1563,"src":"13337:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1529,"name":"bool","nodeType":"ElementaryTypeName","src":"13337:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13303:48:4"},"returnParameters":{"id":1532,"nodeType":"ParameterList","parameters":[],"src":"13369:0:4"},"scope":1580,"src":"13276:315:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1578,"nodeType":"Block","src":"13865:664:4","statements":[{"AST":{"nodeType":"YulBlock","src":"13900:623:4","statements":[{"nodeType":"YulAssignment","src":"13958:21:4","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13974:4:4","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13968:5:4"},"nodeType":"YulFunctionCall","src":"13968:11:4"},"variableNames":[{"name":"array1","nodeType":"YulIdentifier","src":"13958:6:4"}]},{"expression":{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"14036:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"14044:1:4","type":"","value":"1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14029:6:4"},"nodeType":"YulFunctionCall","src":"14029:17:4"},"nodeType":"YulExpressionStatement","src":"14029:17:4"},{"expression":{"arguments":[{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"14167:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"14175:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14163:3:4"},"nodeType":"YulFunctionCall","src":"14163:17:4"},{"name":"element1","nodeType":"YulIdentifier","src":"14182:8:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14156:6:4"},"nodeType":"YulFunctionCall","src":"14156:35:4"},"nodeType":"YulExpressionStatement","src":"14156:35:4"},{"nodeType":"YulAssignment","src":"14282:27:4","value":{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"14296:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"14304:4:4","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14292:3:4"},"nodeType":"YulFunctionCall","src":"14292:17:4"},"variableNames":[{"name":"array2","nodeType":"YulIdentifier","src":"14282:6:4"}]},{"expression":{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"14329:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"14337:1:4","type":"","value":"1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14322:6:4"},"nodeType":"YulFunctionCall","src":"14322:17:4"},"nodeType":"YulExpressionStatement","src":"14322:17:4"},{"expression":{"arguments":[{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"14363:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"14371:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14359:3:4"},"nodeType":"YulFunctionCall","src":"14359:17:4"},{"name":"element2","nodeType":"YulIdentifier","src":"14378:8:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14352:6:4"},"nodeType":"YulFunctionCall","src":"14352:35:4"},"nodeType":"YulExpressionStatement","src":"14352:35:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14489:4:4","type":"","value":"0x40"},{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"14499:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"14507:4:4","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14495:3:4"},"nodeType":"YulFunctionCall","src":"14495:17:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14482:6:4"},"nodeType":"YulFunctionCall","src":"14482:31:4"},"nodeType":"YulExpressionStatement","src":"14482:31:4"}]},"evmVersion":"paris","externalReferences":[{"declaration":1572,"isOffset":false,"isSlot":false,"src":"13958:6:4","valueSize":1},{"declaration":1572,"isOffset":false,"isSlot":false,"src":"14036:6:4","valueSize":1},{"declaration":1572,"isOffset":false,"isSlot":false,"src":"14167:6:4","valueSize":1},{"declaration":1572,"isOffset":false,"isSlot":false,"src":"14296:6:4","valueSize":1},{"declaration":1575,"isOffset":false,"isSlot":false,"src":"14282:6:4","valueSize":1},{"declaration":1575,"isOffset":false,"isSlot":false,"src":"14329:6:4","valueSize":1},{"declaration":1575,"isOffset":false,"isSlot":false,"src":"14363:6:4","valueSize":1},{"declaration":1575,"isOffset":false,"isSlot":false,"src":"14499:6:4","valueSize":1},{"declaration":1566,"isOffset":false,"isSlot":false,"src":"14182:8:4","valueSize":1},{"declaration":1568,"isOffset":false,"isSlot":false,"src":"14378:8:4","valueSize":1}],"flags":["memory-safe"],"id":1577,"nodeType":"InlineAssembly","src":"13875:648:4"}]},"documentation":{"id":1564,"nodeType":"StructuredDocumentation","src":"13597:105:4","text":" @dev Creates an array in memory with only one value for each of the elements provided."},"id":1579,"implemented":true,"kind":"function","modifiers":[],"name":"_asSingletonArrays","nameLocation":"13716:18:4","nodeType":"FunctionDefinition","parameters":{"id":1569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1566,"mutability":"mutable","name":"element1","nameLocation":"13752:8:4","nodeType":"VariableDeclaration","scope":1579,"src":"13744:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1565,"name":"uint256","nodeType":"ElementaryTypeName","src":"13744:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1568,"mutability":"mutable","name":"element2","nameLocation":"13778:8:4","nodeType":"VariableDeclaration","scope":1579,"src":"13770:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1567,"name":"uint256","nodeType":"ElementaryTypeName","src":"13770:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13734:58:4"},"returnParameters":{"id":1576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1572,"mutability":"mutable","name":"array1","nameLocation":"13832:6:4","nodeType":"VariableDeclaration","scope":1579,"src":"13815:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1570,"name":"uint256","nodeType":"ElementaryTypeName","src":"13815:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1571,"nodeType":"ArrayTypeName","src":"13815:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1575,"mutability":"mutable","name":"array2","nameLocation":"13857:6:4","nodeType":"VariableDeclaration","scope":1579,"src":"13840:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1573,"name":"uint256","nodeType":"ElementaryTypeName","src":"13840:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1574,"nodeType":"ArrayTypeName","src":"13840:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"13814:50:4"},"scope":1580,"src":"13707:822:4","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1581,"src":"725:13806:4","usedErrors":[628,633,638,645,650,655,662],"usedEvents":[1600,1615,1624,1631]}],"src":"109:14423:4"},"id":4},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[1703],"IERC165":[4322]},"id":1704,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1582,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"110:24:5"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1584,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1704,"sourceUnit":4323,"src":"136:62:5","symbolAliases":[{"foreign":{"id":1583,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"144:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1586,"name":"IERC165","nameLocations":["359:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":4322,"src":"359:7:5"},"id":1587,"nodeType":"InheritanceSpecifier","src":"359:7:5"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":1585,"nodeType":"StructuredDocumentation","src":"200:136:5","text":" @dev Required interface of an ERC-1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[ERC]."},"fullyImplemented":false,"id":1703,"linearizedBaseContracts":[1703,4322],"name":"IERC1155","nameLocation":"347:8:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1588,"nodeType":"StructuredDocumentation","src":"373:125:5","text":" @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":1600,"name":"TransferSingle","nameLocation":"509:14:5","nodeType":"EventDefinition","parameters":{"id":1599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1590,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"540:8:5","nodeType":"VariableDeclaration","scope":1600,"src":"524:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1589,"name":"address","nodeType":"ElementaryTypeName","src":"524:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1592,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"566:4:5","nodeType":"VariableDeclaration","scope":1600,"src":"550:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1591,"name":"address","nodeType":"ElementaryTypeName","src":"550:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1594,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"588:2:5","nodeType":"VariableDeclaration","scope":1600,"src":"572:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1593,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1596,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"600:2:5","nodeType":"VariableDeclaration","scope":1600,"src":"592:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1595,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1598,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"612:5:5","nodeType":"VariableDeclaration","scope":1600,"src":"604:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1597,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"523:95:5"},"src":"503:116:5"},{"anonymous":false,"documentation":{"id":1601,"nodeType":"StructuredDocumentation","src":"625:144:5","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":1615,"name":"TransferBatch","nameLocation":"780:13:5","nodeType":"EventDefinition","parameters":{"id":1614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1603,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"819:8:5","nodeType":"VariableDeclaration","scope":1615,"src":"803:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1602,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1605,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"853:4:5","nodeType":"VariableDeclaration","scope":1615,"src":"837:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1604,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1607,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"883:2:5","nodeType":"VariableDeclaration","scope":1615,"src":"867:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1606,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1610,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"905:3:5","nodeType":"VariableDeclaration","scope":1615,"src":"895:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1608,"name":"uint256","nodeType":"ElementaryTypeName","src":"895:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1609,"nodeType":"ArrayTypeName","src":"895:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1613,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"928:6:5","nodeType":"VariableDeclaration","scope":1615,"src":"918:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1611,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1612,"nodeType":"ArrayTypeName","src":"918:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"793:147:5"},"src":"774:167:5"},{"anonymous":false,"documentation":{"id":1616,"nodeType":"StructuredDocumentation","src":"947:147:5","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1624,"name":"ApprovalForAll","nameLocation":"1105:14:5","nodeType":"EventDefinition","parameters":{"id":1623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1618,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1136:7:5","nodeType":"VariableDeclaration","scope":1624,"src":"1120:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1617,"name":"address","nodeType":"ElementaryTypeName","src":"1120:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1620,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1161:8:5","nodeType":"VariableDeclaration","scope":1624,"src":"1145:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1619,"name":"address","nodeType":"ElementaryTypeName","src":"1145:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1622,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1176:8:5","nodeType":"VariableDeclaration","scope":1624,"src":"1171:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1621,"name":"bool","nodeType":"ElementaryTypeName","src":"1171:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1119:66:5"},"src":"1099:87:5"},{"anonymous":false,"documentation":{"id":1625,"nodeType":"StructuredDocumentation","src":"1192:343:5","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":1631,"name":"URI","nameLocation":"1546:3:5","nodeType":"EventDefinition","parameters":{"id":1630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1627,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1557:5:5","nodeType":"VariableDeclaration","scope":1631,"src":"1550:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1626,"name":"string","nodeType":"ElementaryTypeName","src":"1550:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1629,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1580:2:5","nodeType":"VariableDeclaration","scope":1631,"src":"1564:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1628,"name":"uint256","nodeType":"ElementaryTypeName","src":"1564:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:34:5"},"src":"1540:44:5"},{"documentation":{"id":1632,"nodeType":"StructuredDocumentation","src":"1590:90:5","text":" @dev Returns the value of tokens of token type `id` owned by `account`."},"functionSelector":"00fdd58e","id":1641,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1694:9:5","nodeType":"FunctionDefinition","parameters":{"id":1637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1634,"mutability":"mutable","name":"account","nameLocation":"1712:7:5","nodeType":"VariableDeclaration","scope":1641,"src":"1704:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1633,"name":"address","nodeType":"ElementaryTypeName","src":"1704:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1636,"mutability":"mutable","name":"id","nameLocation":"1729:2:5","nodeType":"VariableDeclaration","scope":1641,"src":"1721:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1635,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1703:29:5"},"returnParameters":{"id":1640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1641,"src":"1756:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1638,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1755:9:5"},"scope":1703,"src":"1685:80:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1642,"nodeType":"StructuredDocumentation","src":"1771:188:5","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":1654,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"1973:14:5","nodeType":"FunctionDefinition","parameters":{"id":1649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1645,"mutability":"mutable","name":"accounts","nameLocation":"2016:8:5","nodeType":"VariableDeclaration","scope":1654,"src":"1997:27:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1643,"name":"address","nodeType":"ElementaryTypeName","src":"1997:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1644,"nodeType":"ArrayTypeName","src":"1997:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1648,"mutability":"mutable","name":"ids","nameLocation":"2053:3:5","nodeType":"VariableDeclaration","scope":1654,"src":"2034:22:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1646,"name":"uint256","nodeType":"ElementaryTypeName","src":"2034:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1647,"nodeType":"ArrayTypeName","src":"2034:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1987:75:5"},"returnParameters":{"id":1653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1654,"src":"2086:16:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1650,"name":"uint256","nodeType":"ElementaryTypeName","src":"2086:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1651,"nodeType":"ArrayTypeName","src":"2086:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2085:18:5"},"scope":1703,"src":"1964:140:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1655,"nodeType":"StructuredDocumentation","src":"2110:254:5","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"functionSelector":"a22cb465","id":1662,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2378:17:5","nodeType":"FunctionDefinition","parameters":{"id":1660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1657,"mutability":"mutable","name":"operator","nameLocation":"2404:8:5","nodeType":"VariableDeclaration","scope":1662,"src":"2396:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1656,"name":"address","nodeType":"ElementaryTypeName","src":"2396:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1659,"mutability":"mutable","name":"approved","nameLocation":"2419:8:5","nodeType":"VariableDeclaration","scope":1662,"src":"2414:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1658,"name":"bool","nodeType":"ElementaryTypeName","src":"2414:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2395:33:5"},"returnParameters":{"id":1661,"nodeType":"ParameterList","parameters":[],"src":"2437:0:5"},"scope":1703,"src":"2369:69:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1663,"nodeType":"StructuredDocumentation","src":"2444:135:5","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":1672,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2593:16:5","nodeType":"FunctionDefinition","parameters":{"id":1668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1665,"mutability":"mutable","name":"account","nameLocation":"2618:7:5","nodeType":"VariableDeclaration","scope":1672,"src":"2610:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1664,"name":"address","nodeType":"ElementaryTypeName","src":"2610:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1667,"mutability":"mutable","name":"operator","nameLocation":"2635:8:5","nodeType":"VariableDeclaration","scope":1672,"src":"2627:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1666,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2609:35:5"},"returnParameters":{"id":1671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1672,"src":"2668:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1669,"name":"bool","nodeType":"ElementaryTypeName","src":"2668:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2667:6:5"},"scope":1703,"src":"2584:90:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1673,"nodeType":"StructuredDocumentation","src":"2680:910:5","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":1686,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3604:16:5","nodeType":"FunctionDefinition","parameters":{"id":1684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1675,"mutability":"mutable","name":"from","nameLocation":"3629:4:5","nodeType":"VariableDeclaration","scope":1686,"src":"3621:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1674,"name":"address","nodeType":"ElementaryTypeName","src":"3621:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1677,"mutability":"mutable","name":"to","nameLocation":"3643:2:5","nodeType":"VariableDeclaration","scope":1686,"src":"3635:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1676,"name":"address","nodeType":"ElementaryTypeName","src":"3635:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1679,"mutability":"mutable","name":"id","nameLocation":"3655:2:5","nodeType":"VariableDeclaration","scope":1686,"src":"3647:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1678,"name":"uint256","nodeType":"ElementaryTypeName","src":"3647:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1681,"mutability":"mutable","name":"value","nameLocation":"3667:5:5","nodeType":"VariableDeclaration","scope":1686,"src":"3659:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"3659:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1683,"mutability":"mutable","name":"data","nameLocation":"3689:4:5","nodeType":"VariableDeclaration","scope":1686,"src":"3674:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1682,"name":"bytes","nodeType":"ElementaryTypeName","src":"3674:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3620:74:5"},"returnParameters":{"id":1685,"nodeType":"ParameterList","parameters":[],"src":"3703:0:5"},"scope":1703,"src":"3595:109:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1687,"nodeType":"StructuredDocumentation","src":"3710:814:5","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":1702,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4538:21:5","nodeType":"FunctionDefinition","parameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1689,"mutability":"mutable","name":"from","nameLocation":"4577:4:5","nodeType":"VariableDeclaration","scope":1702,"src":"4569:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1688,"name":"address","nodeType":"ElementaryTypeName","src":"4569:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1691,"mutability":"mutable","name":"to","nameLocation":"4599:2:5","nodeType":"VariableDeclaration","scope":1702,"src":"4591:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1690,"name":"address","nodeType":"ElementaryTypeName","src":"4591:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1694,"mutability":"mutable","name":"ids","nameLocation":"4630:3:5","nodeType":"VariableDeclaration","scope":1702,"src":"4611:22:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1692,"name":"uint256","nodeType":"ElementaryTypeName","src":"4611:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1693,"nodeType":"ArrayTypeName","src":"4611:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1697,"mutability":"mutable","name":"values","nameLocation":"4662:6:5","nodeType":"VariableDeclaration","scope":1702,"src":"4643:25:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1695,"name":"uint256","nodeType":"ElementaryTypeName","src":"4643:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1696,"nodeType":"ArrayTypeName","src":"4643:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1699,"mutability":"mutable","name":"data","nameLocation":"4693:4:5","nodeType":"VariableDeclaration","scope":1702,"src":"4678:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1698,"name":"bytes","nodeType":"ElementaryTypeName","src":"4678:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4559:144:5"},"returnParameters":{"id":1701,"nodeType":"ParameterList","parameters":[],"src":"4712:0:5"},"scope":1703,"src":"4529:184:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1704,"src":"337:4378:5","usedErrors":[],"usedEvents":[1600,1615,1624,1631]}],"src":"110:4606:5"},"id":5},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[1745],"IERC165":[4322]},"id":1746,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1705,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1707,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1746,"sourceUnit":4323,"src":"144:62:6","symbolAliases":[{"foreign":{"id":1706,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"152:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1709,"name":"IERC165","nameLocations":["357:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":4322,"src":"357:7:6"},"id":1710,"nodeType":"InheritanceSpecifier","src":"357:7:6"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1708,"nodeType":"StructuredDocumentation","src":"208:118:6","text":" @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."},"fullyImplemented":false,"id":1745,"linearizedBaseContracts":[1745,4322],"name":"IERC1155Receiver","nameLocation":"337:16:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1711,"nodeType":"StructuredDocumentation","src":"371:827:6","text":" @dev Handles the receipt of a single ERC-1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":1726,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1212:17:6","nodeType":"FunctionDefinition","parameters":{"id":1722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1713,"mutability":"mutable","name":"operator","nameLocation":"1247:8:6","nodeType":"VariableDeclaration","scope":1726,"src":"1239:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1712,"name":"address","nodeType":"ElementaryTypeName","src":"1239:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1715,"mutability":"mutable","name":"from","nameLocation":"1273:4:6","nodeType":"VariableDeclaration","scope":1726,"src":"1265:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1714,"name":"address","nodeType":"ElementaryTypeName","src":"1265:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1717,"mutability":"mutable","name":"id","nameLocation":"1295:2:6","nodeType":"VariableDeclaration","scope":1726,"src":"1287:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1716,"name":"uint256","nodeType":"ElementaryTypeName","src":"1287:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1719,"mutability":"mutable","name":"value","nameLocation":"1315:5:6","nodeType":"VariableDeclaration","scope":1726,"src":"1307:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1718,"name":"uint256","nodeType":"ElementaryTypeName","src":"1307:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1721,"mutability":"mutable","name":"data","nameLocation":"1345:4:6","nodeType":"VariableDeclaration","scope":1726,"src":"1330:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1720,"name":"bytes","nodeType":"ElementaryTypeName","src":"1330:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1229:126:6"},"returnParameters":{"id":1725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1726,"src":"1374:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1723,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1374:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1373:8:6"},"scope":1745,"src":"1203:179:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1727,"nodeType":"StructuredDocumentation","src":"1388:995:6","text":" @dev Handles the receipt of a multiple ERC-1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":1744,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2397:22:6","nodeType":"FunctionDefinition","parameters":{"id":1740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1729,"mutability":"mutable","name":"operator","nameLocation":"2437:8:6","nodeType":"VariableDeclaration","scope":1744,"src":"2429:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1728,"name":"address","nodeType":"ElementaryTypeName","src":"2429:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1731,"mutability":"mutable","name":"from","nameLocation":"2463:4:6","nodeType":"VariableDeclaration","scope":1744,"src":"2455:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1730,"name":"address","nodeType":"ElementaryTypeName","src":"2455:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1734,"mutability":"mutable","name":"ids","nameLocation":"2496:3:6","nodeType":"VariableDeclaration","scope":1744,"src":"2477:22:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1732,"name":"uint256","nodeType":"ElementaryTypeName","src":"2477:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1733,"nodeType":"ArrayTypeName","src":"2477:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1737,"mutability":"mutable","name":"values","nameLocation":"2528:6:6","nodeType":"VariableDeclaration","scope":1744,"src":"2509:25:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1735,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1736,"nodeType":"ArrayTypeName","src":"2509:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1739,"mutability":"mutable","name":"data","nameLocation":"2559:4:6","nodeType":"VariableDeclaration","scope":1744,"src":"2544:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1738,"name":"bytes","nodeType":"ElementaryTypeName","src":"2544:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2419:150:6"},"returnParameters":{"id":1743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1744,"src":"2588:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1741,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2588:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2587:8:6"},"scope":1745,"src":"2388:208:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1746,"src":"327:2271:6","usedErrors":[],"usedEvents":[]}],"src":"118:2481:6"},"id":6},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","exportedSymbols":{"IERC1155":[1703],"IERC1155MetadataURI":[1761]},"id":1762,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1747,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"132:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"../IERC1155.sol","id":1749,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1762,"sourceUnit":1704,"src":"158:41:7","symbolAliases":[{"foreign":{"id":1748,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"166:8:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1751,"name":"IERC1155","nameLocations":["399:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":1703,"src":"399:8:7"},"id":1752,"nodeType":"InheritanceSpecifier","src":"399:8:7"}],"canonicalName":"IERC1155MetadataURI","contractDependencies":[],"contractKind":"interface","documentation":{"id":1750,"nodeType":"StructuredDocumentation","src":"201:164:7","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC]."},"fullyImplemented":false,"id":1761,"linearizedBaseContracts":[1761,1703,4322],"name":"IERC1155MetadataURI","nameLocation":"376:19:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1753,"nodeType":"StructuredDocumentation","src":"414:192:7","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":1760,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"620:3:7","nodeType":"FunctionDefinition","parameters":{"id":1756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1755,"mutability":"mutable","name":"id","nameLocation":"632:2:7","nodeType":"VariableDeclaration","scope":1760,"src":"624:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1754,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"623:12:7"},"returnParameters":{"id":1759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1760,"src":"659:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1757,"name":"string","nodeType":"ElementaryTypeName","src":"659:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"658:15:7"},"scope":1761,"src":"611:63:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1762,"src":"366:310:7","usedErrors":[],"usedEvents":[1600,1615,1624,1631]}],"src":"132:545:7"},"id":7},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","exportedSymbols":{"ERC1155Utils":[1915],"IERC1155Errors":[663],"IERC1155Receiver":[1745]},"id":1916,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1763,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"120:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"../IERC1155Receiver.sol","id":1765,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1916,"sourceUnit":1746,"src":"146:57:8","symbolAliases":[{"foreign":{"id":1764,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"154:16:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":1767,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1916,"sourceUnit":664,"src":"204:70:8","symbolAliases":[{"foreign":{"id":1766,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"212:14:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1155Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1768,"nodeType":"StructuredDocumentation","src":"276:162:8","text":" @dev Library that provide common ERC-1155 utility functions.\n See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n _Available since v5.1._"},"fullyImplemented":true,"id":1915,"linearizedBaseContracts":[1915],"name":"ERC1155Utils","nameLocation":"447:12:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1839,"nodeType":"Block","src":"1183:774:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1784,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"1197:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1200:4:8","memberName":"code","nodeType":"MemberAccess","src":"1197:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1205:6:8","memberName":"length","nodeType":"MemberAccess","src":"1197:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1214:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1197:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1838,"nodeType":"IfStatement","src":"1193:758:8","trueBody":{"id":1837,"nodeType":"Block","src":"1217:734:8","statements":[{"clauses":[{"block":{"id":1815,"nodeType":"Block","src":"1333:221:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1802,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"1355:8:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1803,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"1367:16:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1745_$","typeString":"type(contract IERC1155Receiver)"}},"id":1804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1384:17:8","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1726,"src":"1367:34:8","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1402:8:8","memberName":"selector","nodeType":"MemberAccess","src":"1367:43:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1355:55:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1814,"nodeType":"IfStatement","src":"1351:189:8","trueBody":{"id":1813,"nodeType":"Block","src":"1412:128:8","statements":[{"errorCall":{"arguments":[{"id":1810,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"1518:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1807,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"1480:14:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$663_$","typeString":"type(contract IERC1155Errors)"}},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1495:22:8","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":638,"src":"1480:37:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1480:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1812,"nodeType":"RevertStatement","src":"1473:48:8"}]}}]},"errorName":"","id":1816,"nodeType":"TryCatchClause","parameters":{"id":1801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1800,"mutability":"mutable","name":"response","nameLocation":"1323:8:8","nodeType":"VariableDeclaration","scope":1816,"src":"1316:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1799,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1316:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1315:17:8"},"src":"1307:247:8"},{"block":{"id":1834,"nodeType":"Block","src":"1583:358:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1820,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"1605:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1612:6:8","memberName":"length","nodeType":"MemberAccess","src":"1605:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1622:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1605:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1832,"nodeType":"Block","src":"1776:151:8","statements":[{"AST":{"nodeType":"YulBlock","src":"1823:86:8","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1860:2:8","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"1864:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1856:3:8"},"nodeType":"YulFunctionCall","src":"1856:15:8"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1879:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1873:5:8"},"nodeType":"YulFunctionCall","src":"1873:13:8"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1849:6:8"},"nodeType":"YulFunctionCall","src":"1849:38:8"},"nodeType":"YulExpressionStatement","src":"1849:38:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":1818,"isOffset":false,"isSlot":false,"src":"1864:6:8","valueSize":1},{"declaration":1818,"isOffset":false,"isSlot":false,"src":"1879:6:8","valueSize":1}],"flags":["memory-safe"],"id":1831,"nodeType":"InlineAssembly","src":"1798:111:8"}]},"id":1833,"nodeType":"IfStatement","src":"1601:326:8","trueBody":{"id":1830,"nodeType":"Block","src":"1625:145:8","statements":[{"errorCall":{"arguments":[{"id":1827,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"1748:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1824,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"1710:14:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$663_$","typeString":"type(contract IERC1155Errors)"}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1725:22:8","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":638,"src":"1710:37:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1710:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1829,"nodeType":"RevertStatement","src":"1703:48:8"}]}}]},"errorName":"","id":1835,"nodeType":"TryCatchClause","parameters":{"id":1819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1818,"mutability":"mutable","name":"reason","nameLocation":"1575:6:8","nodeType":"VariableDeclaration","scope":1835,"src":"1562:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1817,"name":"bytes","nodeType":"ElementaryTypeName","src":"1562:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1561:21:8"},"src":"1555:386:8"}],"externalCall":{"arguments":[{"id":1793,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"1274:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1794,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"1284:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1795,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"1290:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"1294:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1797,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"1301:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1790,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"1252:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1789,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"1235:16:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1745_$","typeString":"type(contract IERC1155Receiver)"}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1235:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1745","typeString":"contract IERC1155Receiver"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1256:17:8","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1726,"src":"1235:38:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1235:71:8","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1836,"nodeType":"TryStatement","src":"1231:710:8"}]}}]},"documentation":{"id":1769,"nodeType":"StructuredDocumentation","src":"466:527:8","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC1155-onERC1155Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":1840,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155Received","nameLocation":"1007:22:8","nodeType":"FunctionDefinition","parameters":{"id":1782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1771,"mutability":"mutable","name":"operator","nameLocation":"1047:8:8","nodeType":"VariableDeclaration","scope":1840,"src":"1039:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1770,"name":"address","nodeType":"ElementaryTypeName","src":"1039:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1773,"mutability":"mutable","name":"from","nameLocation":"1073:4:8","nodeType":"VariableDeclaration","scope":1840,"src":"1065:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1772,"name":"address","nodeType":"ElementaryTypeName","src":"1065:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1775,"mutability":"mutable","name":"to","nameLocation":"1095:2:8","nodeType":"VariableDeclaration","scope":1840,"src":"1087:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1774,"name":"address","nodeType":"ElementaryTypeName","src":"1087:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1777,"mutability":"mutable","name":"id","nameLocation":"1115:2:8","nodeType":"VariableDeclaration","scope":1840,"src":"1107:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1776,"name":"uint256","nodeType":"ElementaryTypeName","src":"1107:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1779,"mutability":"mutable","name":"value","nameLocation":"1135:5:8","nodeType":"VariableDeclaration","scope":1840,"src":"1127:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1778,"name":"uint256","nodeType":"ElementaryTypeName","src":"1127:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1781,"mutability":"mutable","name":"data","nameLocation":"1163:4:8","nodeType":"VariableDeclaration","scope":1840,"src":"1150:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1780,"name":"bytes","nodeType":"ElementaryTypeName","src":"1150:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1029:144:8"},"returnParameters":{"id":1783,"nodeType":"ParameterList","parameters":[],"src":"1183:0:8"},"scope":1915,"src":"998:959:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1913,"nodeType":"Block","src":"2715:816:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1858,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"2729:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2732:4:8","memberName":"code","nodeType":"MemberAccess","src":"2729:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2737:6:8","memberName":"length","nodeType":"MemberAccess","src":"2729:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2746:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2729:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1912,"nodeType":"IfStatement","src":"2725:800:8","trueBody":{"id":1911,"nodeType":"Block","src":"2749:776:8","statements":[{"clauses":[{"block":{"id":1889,"nodeType":"Block","src":"2902:226:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1876,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"2924:8:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1877,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"2936:16:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1745_$","typeString":"type(contract IERC1155Receiver)"}},"id":1878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2953:22:8","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1744,"src":"2936:39:8","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":1879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2976:8:8","memberName":"selector","nodeType":"MemberAccess","src":"2936:48:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2924:60:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1888,"nodeType":"IfStatement","src":"2920:194:8","trueBody":{"id":1887,"nodeType":"Block","src":"2986:128:8","statements":[{"errorCall":{"arguments":[{"id":1884,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"3092:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1881,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"3054:14:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$663_$","typeString":"type(contract IERC1155Errors)"}},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3069:22:8","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":638,"src":"3054:37:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3054:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1886,"nodeType":"RevertStatement","src":"3047:48:8"}]}}]},"errorName":"","id":1890,"nodeType":"TryCatchClause","parameters":{"id":1875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1874,"mutability":"mutable","name":"response","nameLocation":"2879:8:8","nodeType":"VariableDeclaration","scope":1890,"src":"2872:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1873,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2872:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2854:47:8"},"src":"2846:282:8"},{"block":{"id":1908,"nodeType":"Block","src":"3157:358:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1894,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"3179:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3186:6:8","memberName":"length","nodeType":"MemberAccess","src":"3179:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3196:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3179:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1906,"nodeType":"Block","src":"3350:151:8","statements":[{"AST":{"nodeType":"YulBlock","src":"3397:86:8","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3434:2:8","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"3438:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3430:3:8"},"nodeType":"YulFunctionCall","src":"3430:15:8"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"3453:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3447:5:8"},"nodeType":"YulFunctionCall","src":"3447:13:8"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3423:6:8"},"nodeType":"YulFunctionCall","src":"3423:38:8"},"nodeType":"YulExpressionStatement","src":"3423:38:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":1892,"isOffset":false,"isSlot":false,"src":"3438:6:8","valueSize":1},{"declaration":1892,"isOffset":false,"isSlot":false,"src":"3453:6:8","valueSize":1}],"flags":["memory-safe"],"id":1905,"nodeType":"InlineAssembly","src":"3372:111:8"}]},"id":1907,"nodeType":"IfStatement","src":"3175:326:8","trueBody":{"id":1904,"nodeType":"Block","src":"3199:145:8","statements":[{"errorCall":{"arguments":[{"id":1901,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"3322:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1898,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"3284:14:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$663_$","typeString":"type(contract IERC1155Errors)"}},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3299:22:8","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":638,"src":"3284:37:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1903,"nodeType":"RevertStatement","src":"3277:48:8"}]}}]},"errorName":"","id":1909,"nodeType":"TryCatchClause","parameters":{"id":1893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1892,"mutability":"mutable","name":"reason","nameLocation":"3149:6:8","nodeType":"VariableDeclaration","scope":1909,"src":"3136:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1891,"name":"bytes","nodeType":"ElementaryTypeName","src":"3136:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3135:21:8"},"src":"3129:386:8"}],"externalCall":{"arguments":[{"id":1867,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"2811:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1868,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"2821:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1869,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"2827:3:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1870,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"2832:6:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1871,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"2840:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1864,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"2784:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1863,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"2767:16:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1745_$","typeString":"type(contract IERC1155Receiver)"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2767:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1745","typeString":"contract IERC1155Receiver"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2788:22:8","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1744,"src":"2767:43:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2767:78:8","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1910,"nodeType":"TryStatement","src":"2763:752:8"}]}}]},"documentation":{"id":1841,"nodeType":"StructuredDocumentation","src":"1963:537:8","text":" @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155-onERC1155BatchReceived}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":1914,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155BatchReceived","nameLocation":"2514:27:8","nodeType":"FunctionDefinition","parameters":{"id":1856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1843,"mutability":"mutable","name":"operator","nameLocation":"2559:8:8","nodeType":"VariableDeclaration","scope":1914,"src":"2551:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1842,"name":"address","nodeType":"ElementaryTypeName","src":"2551:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1845,"mutability":"mutable","name":"from","nameLocation":"2585:4:8","nodeType":"VariableDeclaration","scope":1914,"src":"2577:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1844,"name":"address","nodeType":"ElementaryTypeName","src":"2577:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1847,"mutability":"mutable","name":"to","nameLocation":"2607:2:8","nodeType":"VariableDeclaration","scope":1914,"src":"2599:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1846,"name":"address","nodeType":"ElementaryTypeName","src":"2599:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1850,"mutability":"mutable","name":"ids","nameLocation":"2636:3:8","nodeType":"VariableDeclaration","scope":1914,"src":"2619:20:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1848,"name":"uint256","nodeType":"ElementaryTypeName","src":"2619:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1849,"nodeType":"ArrayTypeName","src":"2619:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1853,"mutability":"mutable","name":"values","nameLocation":"2666:6:8","nodeType":"VariableDeclaration","scope":1914,"src":"2649:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1851,"name":"uint256","nodeType":"ElementaryTypeName","src":"2649:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1852,"nodeType":"ArrayTypeName","src":"2649:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1855,"mutability":"mutable","name":"data","nameLocation":"2695:4:8","nodeType":"VariableDeclaration","scope":1914,"src":"2682:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1854,"name":"bytes","nodeType":"ElementaryTypeName","src":"2682:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2541:164:8"},"returnParameters":{"id":1857,"nodeType":"ParameterList","parameters":[],"src":"2715:0:8"},"scope":1915,"src":"2505:1026:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1916,"src":"439:3094:8","usedErrors":[],"usedEvents":[]}],"src":"120:3414:8"},"id":8},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[3474],"ERC20":[2430],"IERC20":[2508],"IERC20Errors":[568],"IERC20Metadata":[2534]},"id":2431,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1917,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":1919,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2431,"sourceUnit":2509,"src":"131:36:9","symbolAliases":[{"foreign":{"id":1918,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"139:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":1921,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2431,"sourceUnit":2535,"src":"168:63:9","symbolAliases":[{"foreign":{"id":1920,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2534,"src":"176:14:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1923,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2431,"sourceUnit":3475,"src":"232:48:9","symbolAliases":[{"foreign":{"id":1922,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"240:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1925,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2431,"sourceUnit":664,"src":"281:65:9","symbolAliases":[{"foreign":{"id":1924,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"289:12:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1927,"name":"Context","nameLocations":["1133:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":3474,"src":"1133:7:9"},"id":1928,"nodeType":"InheritanceSpecifier","src":"1133:7:9"},{"baseName":{"id":1929,"name":"IERC20","nameLocations":["1142:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":2508,"src":"1142:6:9"},"id":1930,"nodeType":"InheritanceSpecifier","src":"1142:6:9"},{"baseName":{"id":1931,"name":"IERC20Metadata","nameLocations":["1150:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":2534,"src":"1150:14:9"},"id":1932,"nodeType":"InheritanceSpecifier","src":"1150:14:9"},{"baseName":{"id":1933,"name":"IERC20Errors","nameLocations":["1166:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":568,"src":"1166:12:9"},"id":1934,"nodeType":"InheritanceSpecifier","src":"1166:12:9"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":1926,"nodeType":"StructuredDocumentation","src":"348:757:9","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":2430,"linearizedBaseContracts":[2430,568,2534,2508,3474],"name":"ERC20","nameLocation":"1124:5:9","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1938,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:9","nodeType":"VariableDeclaration","scope":2430,"src":"1185:53:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1937,"keyName":"account","keyNameLocation":"1201:7:9","keyType":{"id":1935,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1936,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1944,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:9","nodeType":"VariableDeclaration","scope":2430,"src":"1245:83:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1943,"keyName":"account","keyNameLocation":"1261:7:9","keyType":{"id":1939,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1942,"keyName":"spender","keyNameLocation":"1288:7:9","keyType":{"id":1940,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1941,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1946,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:9","nodeType":"VariableDeclaration","scope":2430,"src":"1335:28:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1945,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1948,"mutability":"mutable","name":"_name","nameLocation":"1385:5:9","nodeType":"VariableDeclaration","scope":2430,"src":"1370:20:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1947,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1950,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:9","nodeType":"VariableDeclaration","scope":2430,"src":"1396:22:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1949,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1966,"nodeType":"Block","src":"1657:57:9","statements":[{"expression":{"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1958,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"1667:5:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1959,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"1675:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1667:13:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1961,"nodeType":"ExpressionStatement","src":"1667:13:9"},{"expression":{"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1962,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"1690:7:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1963,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"1700:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1690:17:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1965,"nodeType":"ExpressionStatement","src":"1690:17:9"}]},"documentation":{"id":1951,"nodeType":"StructuredDocumentation","src":"1425:171:9","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":1967,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1953,"mutability":"mutable","name":"name_","nameLocation":"1627:5:9","nodeType":"VariableDeclaration","scope":1967,"src":"1613:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1952,"name":"string","nodeType":"ElementaryTypeName","src":"1613:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1955,"mutability":"mutable","name":"symbol_","nameLocation":"1648:7:9","nodeType":"VariableDeclaration","scope":1967,"src":"1634:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1954,"name":"string","nodeType":"ElementaryTypeName","src":"1634:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1612:44:9"},"returnParameters":{"id":1957,"nodeType":"ParameterList","parameters":[],"src":"1657:0:9"},"scope":2430,"src":"1601:113:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2521],"body":{"id":1975,"nodeType":"Block","src":"1839:29:9","statements":[{"expression":{"id":1973,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"1856:5:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1972,"id":1974,"nodeType":"Return","src":"1849:12:9"}]},"documentation":{"id":1968,"nodeType":"StructuredDocumentation","src":"1720:54:9","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1976,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1788:4:9","nodeType":"FunctionDefinition","parameters":{"id":1969,"nodeType":"ParameterList","parameters":[],"src":"1792:2:9"},"returnParameters":{"id":1972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1976,"src":"1824:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1970,"name":"string","nodeType":"ElementaryTypeName","src":"1824:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1823:15:9"},"scope":2430,"src":"1779:89:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2527],"body":{"id":1984,"nodeType":"Block","src":"2043:31:9","statements":[{"expression":{"id":1982,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"2060:7:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1981,"id":1983,"nodeType":"Return","src":"2053:14:9"}]},"documentation":{"id":1977,"nodeType":"StructuredDocumentation","src":"1874:102:9","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1985,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1990:6:9","nodeType":"FunctionDefinition","parameters":{"id":1978,"nodeType":"ParameterList","parameters":[],"src":"1996:2:9"},"returnParameters":{"id":1981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1985,"src":"2028:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1979,"name":"string","nodeType":"ElementaryTypeName","src":"2028:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2027:15:9"},"scope":2430,"src":"1981:93:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2533],"body":{"id":1993,"nodeType":"Block","src":"2763:26:9","statements":[{"expression":{"hexValue":"3138","id":1991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:2:9","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1990,"id":1992,"nodeType":"Return","src":"2773:9:9"}]},"documentation":{"id":1986,"nodeType":"StructuredDocumentation","src":"2080:622:9","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1994,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2716:8:9","nodeType":"FunctionDefinition","parameters":{"id":1987,"nodeType":"ParameterList","parameters":[],"src":"2724:2:9"},"returnParameters":{"id":1990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1994,"src":"2756:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1988,"name":"uint8","nodeType":"ElementaryTypeName","src":"2756:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2755:7:9"},"scope":2430,"src":"2707:82:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2457],"body":{"id":2002,"nodeType":"Block","src":"2910:36:9","statements":[{"expression":{"id":2000,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"2927:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1999,"id":2001,"nodeType":"Return","src":"2920:19:9"}]},"documentation":{"id":1995,"nodeType":"StructuredDocumentation","src":"2795:49:9","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":2003,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2858:11:9","nodeType":"FunctionDefinition","parameters":{"id":1996,"nodeType":"ParameterList","parameters":[],"src":"2869:2:9"},"returnParameters":{"id":1999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1998,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2003,"src":"2901:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1997,"name":"uint256","nodeType":"ElementaryTypeName","src":"2901:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2900:9:9"},"scope":2430,"src":"2849:97:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2465],"body":{"id":2015,"nodeType":"Block","src":"3078:42:9","statements":[{"expression":{"baseExpression":{"id":2011,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"3095:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2013,"indexExpression":{"id":2012,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"3105:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3095:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2010,"id":2014,"nodeType":"Return","src":"3088:25:9"}]},"documentation":{"id":2004,"nodeType":"StructuredDocumentation","src":"2952:47:9","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":2016,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3013:9:9","nodeType":"FunctionDefinition","parameters":{"id":2007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2006,"mutability":"mutable","name":"account","nameLocation":"3031:7:9","nodeType":"VariableDeclaration","scope":2016,"src":"3023:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2005,"name":"address","nodeType":"ElementaryTypeName","src":"3023:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3022:17:9"},"returnParameters":{"id":2010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2016,"src":"3069:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2008,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3068:9:9"},"scope":2430,"src":"3004:116:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2475],"body":{"id":2039,"nodeType":"Block","src":"3390:103:9","statements":[{"assignments":[2027],"declarations":[{"constant":false,"id":2027,"mutability":"mutable","name":"owner","nameLocation":"3408:5:9","nodeType":"VariableDeclaration","scope":2039,"src":"3400:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2026,"name":"address","nodeType":"ElementaryTypeName","src":"3400:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2030,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2028,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"3416:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3400:28:9"},{"expression":{"arguments":[{"id":2032,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"3448:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2033,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"3455:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"3459:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2031,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"3438:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3438:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2036,"nodeType":"ExpressionStatement","src":"3438:27:9"},{"expression":{"hexValue":"74727565","id":2037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3482:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2025,"id":2038,"nodeType":"Return","src":"3475:11:9"}]},"documentation":{"id":2017,"nodeType":"StructuredDocumentation","src":"3126:184:9","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":2040,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3324:8:9","nodeType":"FunctionDefinition","parameters":{"id":2022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2019,"mutability":"mutable","name":"to","nameLocation":"3341:2:9","nodeType":"VariableDeclaration","scope":2040,"src":"3333:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2018,"name":"address","nodeType":"ElementaryTypeName","src":"3333:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2021,"mutability":"mutable","name":"value","nameLocation":"3353:5:9","nodeType":"VariableDeclaration","scope":2040,"src":"3345:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2020,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3332:27:9"},"returnParameters":{"id":2025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2040,"src":"3384:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2023,"name":"bool","nodeType":"ElementaryTypeName","src":"3384:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3383:6:9"},"scope":2430,"src":"3315:178:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2485],"body":{"id":2056,"nodeType":"Block","src":"3640:51:9","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":2050,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"3657:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2052,"indexExpression":{"id":2051,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"3669:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2054,"indexExpression":{"id":2053,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"3676:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2049,"id":2055,"nodeType":"Return","src":"3650:34:9"}]},"documentation":{"id":2041,"nodeType":"StructuredDocumentation","src":"3499:47:9","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":2057,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3560:9:9","nodeType":"FunctionDefinition","parameters":{"id":2046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2043,"mutability":"mutable","name":"owner","nameLocation":"3578:5:9","nodeType":"VariableDeclaration","scope":2057,"src":"3570:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2042,"name":"address","nodeType":"ElementaryTypeName","src":"3570:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2045,"mutability":"mutable","name":"spender","nameLocation":"3593:7:9","nodeType":"VariableDeclaration","scope":2057,"src":"3585:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2044,"name":"address","nodeType":"ElementaryTypeName","src":"3585:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3569:32:9"},"returnParameters":{"id":2049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2048,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2057,"src":"3631:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2047,"name":"uint256","nodeType":"ElementaryTypeName","src":"3631:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3630:9:9"},"scope":2430,"src":"3551:140:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2495],"body":{"id":2080,"nodeType":"Block","src":"4077:107:9","statements":[{"assignments":[2068],"declarations":[{"constant":false,"id":2068,"mutability":"mutable","name":"owner","nameLocation":"4095:5:9","nodeType":"VariableDeclaration","scope":2080,"src":"4087:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2067,"name":"address","nodeType":"ElementaryTypeName","src":"4087:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2071,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2069,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"4103:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4087:28:9"},{"expression":{"arguments":[{"id":2073,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"4134:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2074,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"4141:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"4150:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2072,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2321,2381],"referencedDeclaration":2321,"src":"4125:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4125:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2077,"nodeType":"ExpressionStatement","src":"4125:31:9"},{"expression":{"hexValue":"74727565","id":2078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4173:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2066,"id":2079,"nodeType":"Return","src":"4166:11:9"}]},"documentation":{"id":2058,"nodeType":"StructuredDocumentation","src":"3697:296:9","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":2081,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4007:7:9","nodeType":"FunctionDefinition","parameters":{"id":2063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2060,"mutability":"mutable","name":"spender","nameLocation":"4023:7:9","nodeType":"VariableDeclaration","scope":2081,"src":"4015:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2059,"name":"address","nodeType":"ElementaryTypeName","src":"4015:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2062,"mutability":"mutable","name":"value","nameLocation":"4040:5:9","nodeType":"VariableDeclaration","scope":2081,"src":"4032:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2061,"name":"uint256","nodeType":"ElementaryTypeName","src":"4032:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4014:32:9"},"returnParameters":{"id":2066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2081,"src":"4071:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2064,"name":"bool","nodeType":"ElementaryTypeName","src":"4071:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4070:6:9"},"scope":2430,"src":"3998:186:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2507],"body":{"id":2112,"nodeType":"Block","src":"4869:151:9","statements":[{"assignments":[2094],"declarations":[{"constant":false,"id":2094,"mutability":"mutable","name":"spender","nameLocation":"4887:7:9","nodeType":"VariableDeclaration","scope":2112,"src":"4879:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2093,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2097,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2095,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"4897:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4897:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4879:30:9"},{"expression":{"arguments":[{"id":2099,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"4935:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2100,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"4941:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"4950:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2098,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"4919:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4919:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2103,"nodeType":"ExpressionStatement","src":"4919:37:9"},{"expression":{"arguments":[{"id":2105,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"4976:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2106,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"4982:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"4986:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2104,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"4966:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4966:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2109,"nodeType":"ExpressionStatement","src":"4966:26:9"},{"expression":{"hexValue":"74727565","id":2110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5009:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2092,"id":2111,"nodeType":"Return","src":"5002:11:9"}]},"documentation":{"id":2082,"nodeType":"StructuredDocumentation","src":"4190:581:9","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":2113,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4785:12:9","nodeType":"FunctionDefinition","parameters":{"id":2089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2084,"mutability":"mutable","name":"from","nameLocation":"4806:4:9","nodeType":"VariableDeclaration","scope":2113,"src":"4798:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2083,"name":"address","nodeType":"ElementaryTypeName","src":"4798:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2086,"mutability":"mutable","name":"to","nameLocation":"4820:2:9","nodeType":"VariableDeclaration","scope":2113,"src":"4812:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2085,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2088,"mutability":"mutable","name":"value","nameLocation":"4832:5:9","nodeType":"VariableDeclaration","scope":2113,"src":"4824:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2087,"name":"uint256","nodeType":"ElementaryTypeName","src":"4824:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4797:41:9"},"returnParameters":{"id":2092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2091,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2113,"src":"4863:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2090,"name":"bool","nodeType":"ElementaryTypeName","src":"4863:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4862:6:9"},"scope":2430,"src":"4776:244:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2159,"nodeType":"Block","src":"5462:231:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2123,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"5476:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5492:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5484:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2124,"name":"address","nodeType":"ElementaryTypeName","src":"5484:7:9","typeDescriptions":{}}},"id":2127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5476:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2137,"nodeType":"IfStatement","src":"5472:86:9","trueBody":{"id":2136,"nodeType":"Block","src":"5496:62:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5544:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5536:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2130,"name":"address","nodeType":"ElementaryTypeName","src":"5536:7:9","typeDescriptions":{}}},"id":2133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5536:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2129,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"5517:18:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2135,"nodeType":"RevertStatement","src":"5510:37:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2138,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"5571:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5585:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5577:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2139,"name":"address","nodeType":"ElementaryTypeName","src":"5577:7:9","typeDescriptions":{}}},"id":2142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5577:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5571:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2152,"nodeType":"IfStatement","src":"5567:86:9","trueBody":{"id":2151,"nodeType":"Block","src":"5589:64:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5639:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5631:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2145,"name":"address","nodeType":"ElementaryTypeName","src":"5631:7:9","typeDescriptions":{}}},"id":2148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5631:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2144,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"5610:20:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2150,"nodeType":"RevertStatement","src":"5603:39:9"}]}},{"expression":{"arguments":[{"id":2154,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"5670:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2155,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"5676:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"5680:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2153,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"5662:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5662:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2158,"nodeType":"ExpressionStatement","src":"5662:24:9"}]},"documentation":{"id":2114,"nodeType":"StructuredDocumentation","src":"5026:362:9","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":2160,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5402:9:9","nodeType":"FunctionDefinition","parameters":{"id":2121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2116,"mutability":"mutable","name":"from","nameLocation":"5420:4:9","nodeType":"VariableDeclaration","scope":2160,"src":"5412:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2115,"name":"address","nodeType":"ElementaryTypeName","src":"5412:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2118,"mutability":"mutable","name":"to","nameLocation":"5434:2:9","nodeType":"VariableDeclaration","scope":2160,"src":"5426:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2117,"name":"address","nodeType":"ElementaryTypeName","src":"5426:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2120,"mutability":"mutable","name":"value","nameLocation":"5446:5:9","nodeType":"VariableDeclaration","scope":2160,"src":"5438:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2119,"name":"uint256","nodeType":"ElementaryTypeName","src":"5438:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5411:41:9"},"returnParameters":{"id":2122,"nodeType":"ParameterList","parameters":[],"src":"5462:0:9"},"scope":2430,"src":"5393:300:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2236,"nodeType":"Block","src":"6083:1032:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2170,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"6097:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6113:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6105:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2171,"name":"address","nodeType":"ElementaryTypeName","src":"6105:7:9","typeDescriptions":{}}},"id":2174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6105:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6097:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2207,"nodeType":"Block","src":"6271:362:9","statements":[{"assignments":[2182],"declarations":[{"constant":false,"id":2182,"mutability":"mutable","name":"fromBalance","nameLocation":"6293:11:9","nodeType":"VariableDeclaration","scope":2207,"src":"6285:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2181,"name":"uint256","nodeType":"ElementaryTypeName","src":"6285:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2186,"initialValue":{"baseExpression":{"id":2183,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"6307:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2185,"indexExpression":{"id":2184,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"6317:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6307:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6285:37:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2187,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"6340:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"6354:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6340:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2197,"nodeType":"IfStatement","src":"6336:115:9","trueBody":{"id":2196,"nodeType":"Block","src":"6361:90:9","statements":[{"errorCall":{"arguments":[{"id":2191,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"6411:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2192,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"6417:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"6430:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2190,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"6386:24:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6386:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2195,"nodeType":"RevertStatement","src":"6379:57:9"}]}},{"id":2206,"nodeType":"UncheckedBlock","src":"6464:159:9","statements":[{"expression":{"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2198,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"6571:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2200,"indexExpression":{"id":2199,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"6581:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6571:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2201,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"6589:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"6603:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6589:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6571:37:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2205,"nodeType":"ExpressionStatement","src":"6571:37:9"}]}]},"id":2208,"nodeType":"IfStatement","src":"6093:540:9","trueBody":{"id":2180,"nodeType":"Block","src":"6117:148:9","statements":[{"expression":{"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2176,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"6233:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"6249:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6233:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2179,"nodeType":"ExpressionStatement","src":"6233:21:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2209,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"6647:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6661:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6653:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2210,"name":"address","nodeType":"ElementaryTypeName","src":"6653:7:9","typeDescriptions":{}}},"id":2213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6647:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2228,"nodeType":"Block","src":"6862:206:9","statements":[{"id":2227,"nodeType":"UncheckedBlock","src":"6876:182:9","statements":[{"expression":{"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2221,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"7021:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2223,"indexExpression":{"id":2222,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"7031:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7021:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"7038:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7021:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2226,"nodeType":"ExpressionStatement","src":"7021:22:9"}]}]},"id":2229,"nodeType":"IfStatement","src":"6643:425:9","trueBody":{"id":2220,"nodeType":"Block","src":"6665:191:9","statements":[{"id":2219,"nodeType":"UncheckedBlock","src":"6679:167:9","statements":[{"expression":{"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2215,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"6810:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"6826:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6810:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2218,"nodeType":"ExpressionStatement","src":"6810:21:9"}]}]}},{"eventCall":{"arguments":[{"id":2231,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"7092:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2232,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"7098:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"7102:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2230,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"7083:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7083:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2235,"nodeType":"EmitStatement","src":"7078:30:9"}]},"documentation":{"id":2161,"nodeType":"StructuredDocumentation","src":"5699:304:9","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":2237,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6017:7:9","nodeType":"FunctionDefinition","parameters":{"id":2168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2163,"mutability":"mutable","name":"from","nameLocation":"6033:4:9","nodeType":"VariableDeclaration","scope":2237,"src":"6025:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2162,"name":"address","nodeType":"ElementaryTypeName","src":"6025:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2165,"mutability":"mutable","name":"to","nameLocation":"6047:2:9","nodeType":"VariableDeclaration","scope":2237,"src":"6039:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2164,"name":"address","nodeType":"ElementaryTypeName","src":"6039:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2167,"mutability":"mutable","name":"value","nameLocation":"6059:5:9","nodeType":"VariableDeclaration","scope":2237,"src":"6051:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2166,"name":"uint256","nodeType":"ElementaryTypeName","src":"6051:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6024:41:9"},"returnParameters":{"id":2169,"nodeType":"ParameterList","parameters":[],"src":"6083:0:9"},"scope":2430,"src":"6008:1107:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2269,"nodeType":"Block","src":"7514:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2245,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"7528:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7547:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7539:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2246,"name":"address","nodeType":"ElementaryTypeName","src":"7539:7:9","typeDescriptions":{}}},"id":2249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7539:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7528:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2259,"nodeType":"IfStatement","src":"7524:91:9","trueBody":{"id":2258,"nodeType":"Block","src":"7551:64:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7601:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7593:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2252,"name":"address","nodeType":"ElementaryTypeName","src":"7593:7:9","typeDescriptions":{}}},"id":2255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2251,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"7572:20:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7572:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2257,"nodeType":"RevertStatement","src":"7565:39:9"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7640:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7632:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2261,"name":"address","nodeType":"ElementaryTypeName","src":"7632:7:9","typeDescriptions":{}}},"id":2264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7632:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2265,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"7644:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"7653:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2260,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"7624:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7624:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2268,"nodeType":"ExpressionStatement","src":"7624:35:9"}]},"documentation":{"id":2238,"nodeType":"StructuredDocumentation","src":"7121:332:9","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":2270,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7467:5:9","nodeType":"FunctionDefinition","parameters":{"id":2243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2240,"mutability":"mutable","name":"account","nameLocation":"7481:7:9","nodeType":"VariableDeclaration","scope":2270,"src":"7473:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2239,"name":"address","nodeType":"ElementaryTypeName","src":"7473:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2242,"mutability":"mutable","name":"value","nameLocation":"7498:5:9","nodeType":"VariableDeclaration","scope":2270,"src":"7490:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2241,"name":"uint256","nodeType":"ElementaryTypeName","src":"7490:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7472:32:9"},"returnParameters":{"id":2244,"nodeType":"ParameterList","parameters":[],"src":"7514:0:9"},"scope":2430,"src":"7458:208:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2302,"nodeType":"Block","src":"8040:150:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2278,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"8054:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8073:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8065:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2279,"name":"address","nodeType":"ElementaryTypeName","src":"8065:7:9","typeDescriptions":{}}},"id":2282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8065:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8054:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2292,"nodeType":"IfStatement","src":"8050:89:9","trueBody":{"id":2291,"nodeType":"Block","src":"8077:62:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8125:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8117:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2285,"name":"address","nodeType":"ElementaryTypeName","src":"8117:7:9","typeDescriptions":{}}},"id":2288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8117:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2284,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"8098:18:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2290,"nodeType":"RevertStatement","src":"8091:37:9"}]}},{"expression":{"arguments":[{"id":2294,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"8156:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8173:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8165:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2295,"name":"address","nodeType":"ElementaryTypeName","src":"8165:7:9","typeDescriptions":{}}},"id":2298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8165:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"8177:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2293,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"8148:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8148:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2301,"nodeType":"ExpressionStatement","src":"8148:35:9"}]},"documentation":{"id":2271,"nodeType":"StructuredDocumentation","src":"7672:307:9","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":2303,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7993:5:9","nodeType":"FunctionDefinition","parameters":{"id":2276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2273,"mutability":"mutable","name":"account","nameLocation":"8007:7:9","nodeType":"VariableDeclaration","scope":2303,"src":"7999:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2272,"name":"address","nodeType":"ElementaryTypeName","src":"7999:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2275,"mutability":"mutable","name":"value","nameLocation":"8024:5:9","nodeType":"VariableDeclaration","scope":2303,"src":"8016:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2274,"name":"uint256","nodeType":"ElementaryTypeName","src":"8016:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7998:32:9"},"returnParameters":{"id":2277,"nodeType":"ParameterList","parameters":[],"src":"8040:0:9"},"scope":2430,"src":"7984:206:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2320,"nodeType":"Block","src":"8800:54:9","statements":[{"expression":{"arguments":[{"id":2314,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"8819:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2315,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"8826:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"8835:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8842:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2313,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2321,2381],"referencedDeclaration":2381,"src":"8810:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8810:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2319,"nodeType":"ExpressionStatement","src":"8810:37:9"}]},"documentation":{"id":2304,"nodeType":"StructuredDocumentation","src":"8196:525:9","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":2321,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8735:8:9","nodeType":"FunctionDefinition","parameters":{"id":2311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2306,"mutability":"mutable","name":"owner","nameLocation":"8752:5:9","nodeType":"VariableDeclaration","scope":2321,"src":"8744:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2305,"name":"address","nodeType":"ElementaryTypeName","src":"8744:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2308,"mutability":"mutable","name":"spender","nameLocation":"8767:7:9","nodeType":"VariableDeclaration","scope":2321,"src":"8759:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2307,"name":"address","nodeType":"ElementaryTypeName","src":"8759:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2310,"mutability":"mutable","name":"value","nameLocation":"8784:5:9","nodeType":"VariableDeclaration","scope":2321,"src":"8776:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2309,"name":"uint256","nodeType":"ElementaryTypeName","src":"8776:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8743:47:9"},"returnParameters":{"id":2312,"nodeType":"ParameterList","parameters":[],"src":"8800:0:9"},"scope":2430,"src":"8726:128:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2380,"nodeType":"Block","src":"9799:334:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2333,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"9813:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9830:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9822:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2334,"name":"address","nodeType":"ElementaryTypeName","src":"9822:7:9","typeDescriptions":{}}},"id":2337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9813:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2347,"nodeType":"IfStatement","src":"9809:89:9","trueBody":{"id":2346,"nodeType":"Block","src":"9834:64:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9884:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9876:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2340,"name":"address","nodeType":"ElementaryTypeName","src":"9876:7:9","typeDescriptions":{}}},"id":2343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9876:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2339,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"9855:20:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9855:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2345,"nodeType":"RevertStatement","src":"9848:39:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2348,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"9911:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9922:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2349,"name":"address","nodeType":"ElementaryTypeName","src":"9922:7:9","typeDescriptions":{}}},"id":2352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9922:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9911:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2362,"nodeType":"IfStatement","src":"9907:90:9","trueBody":{"id":2361,"nodeType":"Block","src":"9934:63:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9983:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9975:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2355,"name":"address","nodeType":"ElementaryTypeName","src":"9975:7:9","typeDescriptions":{}}},"id":2358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9975:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2354,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"9955:19:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9955:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2360,"nodeType":"RevertStatement","src":"9948:38:9"}]}},{"expression":{"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2363,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"10006:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2366,"indexExpression":{"id":2364,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"10018:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10006:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2367,"indexExpression":{"id":2365,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"10025:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10006:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"10036:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10006:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2370,"nodeType":"ExpressionStatement","src":"10006:35:9"},{"condition":{"id":2371,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"10055:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2379,"nodeType":"IfStatement","src":"10051:76:9","trueBody":{"id":2378,"nodeType":"Block","src":"10066:61:9","statements":[{"eventCall":{"arguments":[{"id":2373,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"10094:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2374,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"10101:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"10110:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2372,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"10085:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10085:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2377,"nodeType":"EmitStatement","src":"10080:36:9"}]}}]},"documentation":{"id":2322,"nodeType":"StructuredDocumentation","src":"8860:836:9","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":2381,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9710:8:9","nodeType":"FunctionDefinition","parameters":{"id":2331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2324,"mutability":"mutable","name":"owner","nameLocation":"9727:5:9","nodeType":"VariableDeclaration","scope":2381,"src":"9719:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2323,"name":"address","nodeType":"ElementaryTypeName","src":"9719:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2326,"mutability":"mutable","name":"spender","nameLocation":"9742:7:9","nodeType":"VariableDeclaration","scope":2381,"src":"9734:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2325,"name":"address","nodeType":"ElementaryTypeName","src":"9734:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2328,"mutability":"mutable","name":"value","nameLocation":"9759:5:9","nodeType":"VariableDeclaration","scope":2381,"src":"9751:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2327,"name":"uint256","nodeType":"ElementaryTypeName","src":"9751:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2330,"mutability":"mutable","name":"emitEvent","nameLocation":"9771:9:9","nodeType":"VariableDeclaration","scope":2381,"src":"9766:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2329,"name":"bool","nodeType":"ElementaryTypeName","src":"9766:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9718:63:9"},"returnParameters":{"id":2332,"nodeType":"ParameterList","parameters":[],"src":"9799:0:9"},"scope":2430,"src":"9701:432:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2428,"nodeType":"Block","src":"10504:388:9","statements":[{"assignments":[2392],"declarations":[{"constant":false,"id":2392,"mutability":"mutable","name":"currentAllowance","nameLocation":"10522:16:9","nodeType":"VariableDeclaration","scope":2428,"src":"10514:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2391,"name":"uint256","nodeType":"ElementaryTypeName","src":"10514:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2397,"initialValue":{"arguments":[{"id":2394,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"10551:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2395,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"10558:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2393,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"10541:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10541:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10514:52:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2398,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"10580:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":2401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10605:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2400,"name":"uint256","nodeType":"ElementaryTypeName","src":"10605:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2399,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"10600:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10600:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10614:3:9","memberName":"max","nodeType":"MemberAccess","src":"10600:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10580:37:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2427,"nodeType":"IfStatement","src":"10576:310:9","trueBody":{"id":2426,"nodeType":"Block","src":"10619:267:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2405,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"10637:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"10656:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10637:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2415,"nodeType":"IfStatement","src":"10633:130:9","trueBody":{"id":2414,"nodeType":"Block","src":"10663:100:9","statements":[{"errorCall":{"arguments":[{"id":2409,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"10715:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2410,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"10724:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"10742:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2408,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"10688:26:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10688:60:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2413,"nodeType":"RevertStatement","src":"10681:67:9"}]}},{"id":2425,"nodeType":"UncheckedBlock","src":"10776:100:9","statements":[{"expression":{"arguments":[{"id":2417,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"10813:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2418,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"10820:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2419,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"10829:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"10848:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10829:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10855:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2416,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2321,2381],"referencedDeclaration":2381,"src":"10804:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10804:57:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2424,"nodeType":"ExpressionStatement","src":"10804:57:9"}]}]}}]},"documentation":{"id":2382,"nodeType":"StructuredDocumentation","src":"10139:271:9","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":2429,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10424:15:9","nodeType":"FunctionDefinition","parameters":{"id":2389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2384,"mutability":"mutable","name":"owner","nameLocation":"10448:5:9","nodeType":"VariableDeclaration","scope":2429,"src":"10440:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2383,"name":"address","nodeType":"ElementaryTypeName","src":"10440:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2386,"mutability":"mutable","name":"spender","nameLocation":"10463:7:9","nodeType":"VariableDeclaration","scope":2429,"src":"10455:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2385,"name":"address","nodeType":"ElementaryTypeName","src":"10455:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2388,"mutability":"mutable","name":"value","nameLocation":"10480:5:9","nodeType":"VariableDeclaration","scope":2429,"src":"10472:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2387,"name":"uint256","nodeType":"ElementaryTypeName","src":"10472:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10439:47:9"},"returnParameters":{"id":2390,"nodeType":"ParameterList","parameters":[],"src":"10504:0:9"},"scope":2430,"src":"10415:477:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2431,"src":"1106:9788:9","usedErrors":[538,543,548,557,562,567],"usedEvents":[2442,2451]}],"src":"105:10790:9"},"id":9},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[2508]},"id":2509,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2432,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":2433,"nodeType":"StructuredDocumentation","src":"132:71:10","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":2508,"linearizedBaseContracts":[2508],"name":"IERC20","nameLocation":"214:6:10","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2434,"nodeType":"StructuredDocumentation","src":"227:158:10","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2442,"name":"Transfer","nameLocation":"396:8:10","nodeType":"EventDefinition","parameters":{"id":2441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2436,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:10","nodeType":"VariableDeclaration","scope":2442,"src":"405:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2435,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2438,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:10","nodeType":"VariableDeclaration","scope":2442,"src":"427:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2437,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2440,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:10","nodeType":"VariableDeclaration","scope":2442,"src":"447:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2439,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:10"},"src":"390:72:10"},{"anonymous":false,"documentation":{"id":2443,"nodeType":"StructuredDocumentation","src":"468:148:10","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2451,"name":"Approval","nameLocation":"627:8:10","nodeType":"EventDefinition","parameters":{"id":2450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2445,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:10","nodeType":"VariableDeclaration","scope":2451,"src":"636:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2444,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2447,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:10","nodeType":"VariableDeclaration","scope":2451,"src":"659:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2446,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2449,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:10","nodeType":"VariableDeclaration","scope":2451,"src":"684:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2448,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:10"},"src":"621:78:10"},{"documentation":{"id":2452,"nodeType":"StructuredDocumentation","src":"705:65:10","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":2457,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:10","nodeType":"FunctionDefinition","parameters":{"id":2453,"nodeType":"ParameterList","parameters":[],"src":"795:2:10"},"returnParameters":{"id":2456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2457,"src":"821:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2454,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:10"},"scope":2508,"src":"775:55:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2458,"nodeType":"StructuredDocumentation","src":"836:71:10","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":2465,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:10","nodeType":"FunctionDefinition","parameters":{"id":2461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2460,"mutability":"mutable","name":"account","nameLocation":"939:7:10","nodeType":"VariableDeclaration","scope":2465,"src":"931:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2459,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:10"},"returnParameters":{"id":2464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2465,"src":"971:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2462,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:10"},"scope":2508,"src":"912:68:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2466,"nodeType":"StructuredDocumentation","src":"986:213:10","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":2475,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:10","nodeType":"FunctionDefinition","parameters":{"id":2471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2468,"mutability":"mutable","name":"to","nameLocation":"1230:2:10","nodeType":"VariableDeclaration","scope":2475,"src":"1222:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2467,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2470,"mutability":"mutable","name":"value","nameLocation":"1242:5:10","nodeType":"VariableDeclaration","scope":2475,"src":"1234:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2469,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:10"},"returnParameters":{"id":2474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2475,"src":"1267:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2472,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:10"},"scope":2508,"src":"1204:69:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2476,"nodeType":"StructuredDocumentation","src":"1279:264:10","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":2485,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:10","nodeType":"FunctionDefinition","parameters":{"id":2481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2478,"mutability":"mutable","name":"owner","nameLocation":"1575:5:10","nodeType":"VariableDeclaration","scope":2485,"src":"1567:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2477,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2480,"mutability":"mutable","name":"spender","nameLocation":"1590:7:10","nodeType":"VariableDeclaration","scope":2485,"src":"1582:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2479,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:10"},"returnParameters":{"id":2484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2485,"src":"1622:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2482,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:10"},"scope":2508,"src":"1548:83:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2486,"nodeType":"StructuredDocumentation","src":"1637:667:10","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2495,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:10","nodeType":"FunctionDefinition","parameters":{"id":2491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2488,"mutability":"mutable","name":"spender","nameLocation":"2334:7:10","nodeType":"VariableDeclaration","scope":2495,"src":"2326:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2487,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2490,"mutability":"mutable","name":"value","nameLocation":"2351:5:10","nodeType":"VariableDeclaration","scope":2495,"src":"2343:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2489,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:10"},"returnParameters":{"id":2494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2495,"src":"2376:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2492,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:10"},"scope":2508,"src":"2309:73:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2496,"nodeType":"StructuredDocumentation","src":"2388:297:10","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2507,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:10","nodeType":"FunctionDefinition","parameters":{"id":2503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2498,"mutability":"mutable","name":"from","nameLocation":"2720:4:10","nodeType":"VariableDeclaration","scope":2507,"src":"2712:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2497,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2500,"mutability":"mutable","name":"to","nameLocation":"2734:2:10","nodeType":"VariableDeclaration","scope":2507,"src":"2726:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2499,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2502,"mutability":"mutable","name":"value","nameLocation":"2746:5:10","nodeType":"VariableDeclaration","scope":2507,"src":"2738:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2501,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:10"},"returnParameters":{"id":2506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2507,"src":"2771:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2504,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:10"},"scope":2508,"src":"2690:87:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2509,"src":"204:2575:10","usedErrors":[],"usedEvents":[2442,2451]}],"src":"106:2674:10"},"id":10},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[2508],"IERC20Metadata":[2534]},"id":2535,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2510,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2512,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2535,"sourceUnit":2509,"src":"151:37:11","symbolAliases":[{"foreign":{"id":2511,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"159:6:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2514,"name":"IERC20","nameLocations":["306:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":2508,"src":"306:6:11"},"id":2515,"nodeType":"InheritanceSpecifier","src":"306:6:11"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2513,"nodeType":"StructuredDocumentation","src":"190:87:11","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":2534,"linearizedBaseContracts":[2534,2508],"name":"IERC20Metadata","nameLocation":"288:14:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2516,"nodeType":"StructuredDocumentation","src":"319:54:11","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2521,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:11","nodeType":"FunctionDefinition","parameters":{"id":2517,"nodeType":"ParameterList","parameters":[],"src":"391:2:11"},"returnParameters":{"id":2520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2521,"src":"417:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2518,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:11"},"scope":2534,"src":"378:54:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2522,"nodeType":"StructuredDocumentation","src":"438:56:11","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2527,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:11","nodeType":"FunctionDefinition","parameters":{"id":2523,"nodeType":"ParameterList","parameters":[],"src":"514:2:11"},"returnParameters":{"id":2526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2527,"src":"540:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2524,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:11"},"scope":2534,"src":"499:56:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2528,"nodeType":"StructuredDocumentation","src":"561:65:11","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2533,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:11","nodeType":"FunctionDefinition","parameters":{"id":2529,"nodeType":"ParameterList","parameters":[],"src":"648:2:11"},"returnParameters":{"id":2532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2533,"src":"674:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2530,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:11"},"scope":2534,"src":"631:50:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2535,"src":"278:405:11","usedErrors":[],"usedEvents":[2442,2451]}],"src":"125:559:11"},"id":11},"@openzeppelin/contracts/utils/Arrays.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","exportedSymbols":{"Arrays":[3412],"Comparators":[3444],"Math":[5928],"SlotDerivation":[3842],"StorageSlot":[3966]},"id":3413,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2536,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"183:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","file":"./Comparators.sol","id":2538,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3413,"sourceUnit":3445,"src":"209:46:12","symbolAliases":[{"foreign":{"id":2537,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"217:11:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","file":"./SlotDerivation.sol","id":2540,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3413,"sourceUnit":3843,"src":"256:52:12","symbolAliases":[{"foreign":{"id":2539,"name":"SlotDerivation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"264:14:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":2542,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3413,"sourceUnit":3967,"src":"309:46:12","symbolAliases":[{"foreign":{"id":2541,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"317:11:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2544,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3413,"sourceUnit":5929,"src":"356:37:12","symbolAliases":[{"foreign":{"id":2543,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5928,"src":"364:4:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Arrays","contractDependencies":[],"contractKind":"library","documentation":{"id":2545,"nodeType":"StructuredDocumentation","src":"395:63:12","text":" @dev Collection of functions related to array types."},"fullyImplemented":true,"id":3412,"linearizedBaseContracts":[3412],"name":"Arrays","nameLocation":"467:6:12","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2548,"libraryName":{"id":2546,"name":"SlotDerivation","nameLocations":["486:14:12"],"nodeType":"IdentifierPath","referencedDeclaration":3842,"src":"486:14:12"},"nodeType":"UsingForDirective","src":"480:33:12","typeName":{"id":2547,"name":"bytes32","nodeType":"ElementaryTypeName","src":"505:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":2551,"libraryName":{"id":2549,"name":"StorageSlot","nameLocations":["524:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":3966,"src":"524:11:12"},"nodeType":"UsingForDirective","src":"518:30:12","typeName":{"id":2550,"name":"bytes32","nodeType":"ElementaryTypeName","src":"540:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":2583,"nodeType":"Block","src":"1628:83:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":2573,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2555,"src":"1656:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2572,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"1649:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1649:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2576,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2555,"src":"1669:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2575,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"1664:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2578,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"1677:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2571,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"1638:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1638:44:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2580,"nodeType":"ExpressionStatement","src":"1638:44:12"},{"expression":{"id":2581,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2555,"src":"1699:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2570,"id":2582,"nodeType":"Return","src":"1692:12:12"}]},"documentation":{"id":2552,"nodeType":"StructuredDocumentation","src":"554:915:12","text":" @dev Sort an array of uint256 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":2584,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1483:4:12","nodeType":"FunctionDefinition","parameters":{"id":2566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2555,"mutability":"mutable","name":"array","nameLocation":"1514:5:12","nodeType":"VariableDeclaration","scope":2584,"src":"1497:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2553,"name":"uint256","nodeType":"ElementaryTypeName","src":"1497:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2554,"nodeType":"ArrayTypeName","src":"1497:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2565,"mutability":"mutable","name":"comp","nameLocation":"1576:4:12","nodeType":"VariableDeclaration","scope":2584,"src":"1529:51:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2564,"nodeType":"FunctionTypeName","parameterTypes":{"id":2560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2564,"src":"1538:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2556,"name":"uint256","nodeType":"ElementaryTypeName","src":"1538:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2564,"src":"1547:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2558,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1537:18:12"},"returnParameterTypes":{"id":2563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2564,"src":"1570:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2561,"name":"bool","nodeType":"ElementaryTypeName","src":"1570:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1569:6:12"},"src":"1529:51:12","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"1487:99:12"},"returnParameters":{"id":2570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2584,"src":"1610:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2567,"name":"uint256","nodeType":"ElementaryTypeName","src":"1610:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2568,"nodeType":"ArrayTypeName","src":"1610:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1609:18:12"},"scope":3412,"src":"1474:237:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2602,"nodeType":"Block","src":"1894:66:12","statements":[{"expression":{"arguments":[{"id":2595,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"1909:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2596,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"1916:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$3444_$","typeString":"type(library Comparators)"}},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1928:2:12","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":3429,"src":"1916:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2594,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2584,2603,2635,2656,2688,2709],"referencedDeclaration":2584,"src":"1904:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1904:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2599,"nodeType":"ExpressionStatement","src":"1904:27:12"},{"expression":{"id":2600,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"1948:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2593,"id":2601,"nodeType":"Return","src":"1941:12:12"}]},"documentation":{"id":2585,"nodeType":"StructuredDocumentation","src":"1717:93:12","text":" @dev Variant of {sort} that sorts an array of uint256 in increasing order."},"id":2603,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1824:4:12","nodeType":"FunctionDefinition","parameters":{"id":2589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2588,"mutability":"mutable","name":"array","nameLocation":"1846:5:12","nodeType":"VariableDeclaration","scope":2603,"src":"1829:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2586,"name":"uint256","nodeType":"ElementaryTypeName","src":"1829:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2587,"nodeType":"ArrayTypeName","src":"1829:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1828:24:12"},"returnParameters":{"id":2593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2603,"src":"1876:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2590,"name":"uint256","nodeType":"ElementaryTypeName","src":"1876:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2591,"nodeType":"ArrayTypeName","src":"1876:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1875:18:12"},"scope":3412,"src":"1815:145:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2634,"nodeType":"Block","src":"3040:97:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":2625,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"3075:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":2624,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[2860,2872],"referencedDeclaration":2860,"src":"3055:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3055:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":2628,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"3102:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}],"id":2627,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[2898,2924],"referencedDeclaration":2898,"src":"3083:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (address,address) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2623,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2584,2603,2635,2656,2688,2709],"referencedDeclaration":2584,"src":"3050:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3050:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2631,"nodeType":"ExpressionStatement","src":"3050:58:12"},{"expression":{"id":2632,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"3125:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2622,"id":2633,"nodeType":"Return","src":"3118:12:12"}]},"documentation":{"id":2604,"nodeType":"StructuredDocumentation","src":"1966:915:12","text":" @dev Sort an array of address (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":2635,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"2895:4:12","nodeType":"FunctionDefinition","parameters":{"id":2618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2607,"mutability":"mutable","name":"array","nameLocation":"2926:5:12","nodeType":"VariableDeclaration","scope":2635,"src":"2909:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2605,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2606,"nodeType":"ArrayTypeName","src":"2909:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2617,"mutability":"mutable","name":"comp","nameLocation":"2988:4:12","nodeType":"VariableDeclaration","scope":2635,"src":"2941:51:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":2616,"nodeType":"FunctionTypeName","parameterTypes":{"id":2612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2616,"src":"2950:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2608,"name":"address","nodeType":"ElementaryTypeName","src":"2950:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2616,"src":"2959:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2610,"name":"address","nodeType":"ElementaryTypeName","src":"2959:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2949:18:12"},"returnParameterTypes":{"id":2615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2616,"src":"2982:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2613,"name":"bool","nodeType":"ElementaryTypeName","src":"2982:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2981:6:12"},"src":"2941:51:12","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"2899:99:12"},"returnParameters":{"id":2622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2635,"src":"3022:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2619,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2620,"nodeType":"ArrayTypeName","src":"3022:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3021:18:12"},"scope":3412,"src":"2886:251:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2655,"nodeType":"Block","src":"3320:87:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":2647,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"3355:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":2646,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[2860,2872],"referencedDeclaration":2860,"src":"3335:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3335:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2649,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"3363:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$3444_$","typeString":"type(library Comparators)"}},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3375:2:12","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":3429,"src":"3363:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2645,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2584,2603,2635,2656,2688,2709],"referencedDeclaration":2584,"src":"3330:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3330:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2652,"nodeType":"ExpressionStatement","src":"3330:48:12"},{"expression":{"id":2653,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"3395:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2644,"id":2654,"nodeType":"Return","src":"3388:12:12"}]},"documentation":{"id":2636,"nodeType":"StructuredDocumentation","src":"3143:93:12","text":" @dev Variant of {sort} that sorts an array of address in increasing order."},"id":2656,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"3250:4:12","nodeType":"FunctionDefinition","parameters":{"id":2640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2639,"mutability":"mutable","name":"array","nameLocation":"3272:5:12","nodeType":"VariableDeclaration","scope":2656,"src":"3255:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2637,"name":"address","nodeType":"ElementaryTypeName","src":"3255:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2638,"nodeType":"ArrayTypeName","src":"3255:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3254:24:12"},"returnParameters":{"id":2644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2656,"src":"3302:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2641,"name":"address","nodeType":"ElementaryTypeName","src":"3302:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2642,"nodeType":"ArrayTypeName","src":"3302:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3301:18:12"},"scope":3412,"src":"3241:166:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2687,"nodeType":"Block","src":"4487:97:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":2678,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"4522:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":2677,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[2860,2872],"referencedDeclaration":2872,"src":"4502:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":2681,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"4549:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}],"id":2680,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[2898,2924],"referencedDeclaration":2924,"src":"4530:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (bytes32,bytes32) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4530:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2676,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2584,2603,2635,2656,2688,2709],"referencedDeclaration":2584,"src":"4497:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4497:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2684,"nodeType":"ExpressionStatement","src":"4497:58:12"},{"expression":{"id":2685,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"4572:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2675,"id":2686,"nodeType":"Return","src":"4565:12:12"}]},"documentation":{"id":2657,"nodeType":"StructuredDocumentation","src":"3413:915:12","text":" @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":2688,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4342:4:12","nodeType":"FunctionDefinition","parameters":{"id":2671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2660,"mutability":"mutable","name":"array","nameLocation":"4373:5:12","nodeType":"VariableDeclaration","scope":2688,"src":"4356:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2658,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4356:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2659,"nodeType":"ArrayTypeName","src":"4356:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2670,"mutability":"mutable","name":"comp","nameLocation":"4435:4:12","nodeType":"VariableDeclaration","scope":2688,"src":"4388:51:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":2669,"nodeType":"FunctionTypeName","parameterTypes":{"id":2665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2662,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2669,"src":"4397:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2661,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4397:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2669,"src":"4406:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2663,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4406:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4396:18:12"},"returnParameterTypes":{"id":2668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2667,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2669,"src":"4429:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2666,"name":"bool","nodeType":"ElementaryTypeName","src":"4429:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4428:6:12"},"src":"4388:51:12","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"4346:99:12"},"returnParameters":{"id":2675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2688,"src":"4469:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2672,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2673,"nodeType":"ArrayTypeName","src":"4469:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4468:18:12"},"scope":3412,"src":"4333:251:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2708,"nodeType":"Block","src":"4767:87:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":2700,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"4802:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":2699,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[2860,2872],"referencedDeclaration":2872,"src":"4782:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2702,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"4810:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$3444_$","typeString":"type(library Comparators)"}},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:2:12","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":3429,"src":"4810:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2698,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2584,2603,2635,2656,2688,2709],"referencedDeclaration":2584,"src":"4777:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4777:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2705,"nodeType":"ExpressionStatement","src":"4777:48:12"},{"expression":{"id":2706,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"4842:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2697,"id":2707,"nodeType":"Return","src":"4835:12:12"}]},"documentation":{"id":2689,"nodeType":"StructuredDocumentation","src":"4590:93:12","text":" @dev Variant of {sort} that sorts an array of bytes32 in increasing order."},"id":2709,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4697:4:12","nodeType":"FunctionDefinition","parameters":{"id":2693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2692,"mutability":"mutable","name":"array","nameLocation":"4719:5:12","nodeType":"VariableDeclaration","scope":2709,"src":"4702:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2690,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4702:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2691,"nodeType":"ArrayTypeName","src":"4702:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4701:24:12"},"returnParameters":{"id":2697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2709,"src":"4749:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2694,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4749:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2695,"nodeType":"ArrayTypeName","src":"4749:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4748:18:12"},"scope":3412,"src":"4688:166:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2796,"nodeType":"Block","src":"5470:889:12","statements":[{"id":2795,"nodeType":"UncheckedBlock","src":"5480:873:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2727,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"5508:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2728,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"5514:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5508:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30783430","id":2730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5522:4:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"5508:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2733,"nodeType":"IfStatement","src":"5504:31:12","trueBody":{"functionReturnParameters":2726,"id":2732,"nodeType":"Return","src":"5528:7:12"}},{"assignments":[2735],"declarations":[{"constant":false,"id":2735,"mutability":"mutable","name":"pivot","nameLocation":"5599:5:12","nodeType":"VariableDeclaration","scope":2795,"src":"5591:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2734,"name":"uint256","nodeType":"ElementaryTypeName","src":"5591:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2739,"initialValue":{"arguments":[{"id":2737,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"5614:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2736,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"5607:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5607:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5591:29:12"},{"assignments":[2741],"declarations":[{"constant":false,"id":2741,"mutability":"mutable","name":"pos","nameLocation":"5715:3:12","nodeType":"VariableDeclaration","scope":2795,"src":"5707:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2740,"name":"uint256","nodeType":"ElementaryTypeName","src":"5707:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2743,"initialValue":{"id":2742,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"5721:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5707:19:12"},{"body":{"id":2774,"nodeType":"Block","src":"5795:331:12","statements":[{"condition":{"arguments":[{"arguments":[{"id":2759,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"5829:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2758,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"5822:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5822:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2761,"name":"pivot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"5834:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2757,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"5817:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5817:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2773,"nodeType":"IfStatement","src":"5813:299:12","trueBody":{"id":2772,"nodeType":"Block","src":"5842:270:12","statements":[{"expression":{"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2763,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"6046:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":2764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6053:4:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6046:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2766,"nodeType":"ExpressionStatement","src":"6046:11:12"},{"expression":{"arguments":[{"id":2768,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"6085:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2769,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"6090:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2767,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"6079:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6079:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2771,"nodeType":"ExpressionStatement","src":"6079:14:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2750,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"5773:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2751,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"5778:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5773:8:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2775,"initializationExpression":{"assignments":[2745],"declarations":[{"constant":false,"id":2745,"mutability":"mutable","name":"it","nameLocation":"5754:2:12","nodeType":"VariableDeclaration","scope":2775,"src":"5746:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2744,"name":"uint256","nodeType":"ElementaryTypeName","src":"5746:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2749,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2746,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"5759:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":2747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5767:4:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5759:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5746:25:12"},"loopExpression":{"expression":{"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2753,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"5783:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":2754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5789:4:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5783:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2756,"nodeType":"ExpressionStatement","src":"5783:10:12"},"nodeType":"ForStatement","src":"5741:385:12"},{"expression":{"arguments":[{"id":2777,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"6146:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2778,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"6153:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2776,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"6140:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2780,"nodeType":"ExpressionStatement","src":"6140:17:12"},{"expression":{"arguments":[{"id":2782,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"6207:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2783,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"6214:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2784,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"6219:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2781,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"6196:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2786,"nodeType":"ExpressionStatement","src":"6196:28:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2788,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"6284:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":2789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6290:4:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6284:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2791,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"6296:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2792,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"6301:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2787,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"6273:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6273:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2794,"nodeType":"ExpressionStatement","src":"6273:33:12"}]}]},"documentation":{"id":2710,"nodeType":"StructuredDocumentation","src":"4860:491:12","text":" @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n at end (exclusive). Sorting follows the `comp` comparator.\n Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n be used only if the limits are within a memory array."},"id":2797,"implemented":true,"kind":"function","modifiers":[],"name":"_quickSort","nameLocation":"5365:10:12","nodeType":"FunctionDefinition","parameters":{"id":2725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2712,"mutability":"mutable","name":"begin","nameLocation":"5384:5:12","nodeType":"VariableDeclaration","scope":2797,"src":"5376:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2711,"name":"uint256","nodeType":"ElementaryTypeName","src":"5376:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2714,"mutability":"mutable","name":"end","nameLocation":"5399:3:12","nodeType":"VariableDeclaration","scope":2797,"src":"5391:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2713,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2724,"mutability":"mutable","name":"comp","nameLocation":"5451:4:12","nodeType":"VariableDeclaration","scope":2797,"src":"5404:51:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2723,"nodeType":"FunctionTypeName","parameterTypes":{"id":2719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2716,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2723,"src":"5413:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2715,"name":"uint256","nodeType":"ElementaryTypeName","src":"5413:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2718,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2723,"src":"5422:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2717,"name":"uint256","nodeType":"ElementaryTypeName","src":"5422:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5412:18:12"},"returnParameterTypes":{"id":2722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2723,"src":"5445:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2720,"name":"bool","nodeType":"ElementaryTypeName","src":"5445:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5444:6:12"},"src":"5404:51:12","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"5375:81:12"},"returnParameters":{"id":2726,"nodeType":"ParameterList","parameters":[],"src":"5470:0:12"},"scope":3412,"src":"5356:1003:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2807,"nodeType":"Block","src":"6532:88:12","statements":[{"AST":{"nodeType":"YulBlock","src":"6567:47:12","statements":[{"nodeType":"YulAssignment","src":"6581:23:12","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6592:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"6599:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6588:3:12"},"nodeType":"YulFunctionCall","src":"6588:16:12"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"6581:3:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2801,"isOffset":false,"isSlot":false,"src":"6592:5:12","valueSize":1},{"declaration":2804,"isOffset":false,"isSlot":false,"src":"6581:3:12","valueSize":1}],"flags":["memory-safe"],"id":2806,"nodeType":"InlineAssembly","src":"6542:72:12"}]},"documentation":{"id":2798,"nodeType":"StructuredDocumentation","src":"6365:87:12","text":" @dev Pointer to the memory location of the first element of `array`."},"id":2808,"implemented":true,"kind":"function","modifiers":[],"name":"_begin","nameLocation":"6466:6:12","nodeType":"FunctionDefinition","parameters":{"id":2802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2801,"mutability":"mutable","name":"array","nameLocation":"6490:5:12","nodeType":"VariableDeclaration","scope":2808,"src":"6473:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2799,"name":"uint256","nodeType":"ElementaryTypeName","src":"6473:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2800,"nodeType":"ArrayTypeName","src":"6473:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6472:24:12"},"returnParameters":{"id":2805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2804,"mutability":"mutable","name":"ptr","nameLocation":"6527:3:12","nodeType":"VariableDeclaration","scope":2808,"src":"6519:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2803,"name":"uint256","nodeType":"ElementaryTypeName","src":"6519:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6518:13:12"},"scope":3412,"src":"6457:163:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2827,"nodeType":"Block","src":"6892:93:12","statements":[{"id":2826,"nodeType":"UncheckedBlock","src":"6902:77:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2818,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"6940:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2817,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"6933:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6933:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2820,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"6949:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6955:6:12","memberName":"length","nodeType":"MemberAccess","src":"6949:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783230","id":2822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6964:4:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6949:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6933:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2816,"id":2825,"nodeType":"Return","src":"6926:42:12"}]}]},"documentation":{"id":2809,"nodeType":"StructuredDocumentation","src":"6626:188:12","text":" @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n that comes just after the last element of the array."},"id":2828,"implemented":true,"kind":"function","modifiers":[],"name":"_end","nameLocation":"6828:4:12","nodeType":"FunctionDefinition","parameters":{"id":2813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2812,"mutability":"mutable","name":"array","nameLocation":"6850:5:12","nodeType":"VariableDeclaration","scope":2828,"src":"6833:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2810,"name":"uint256","nodeType":"ElementaryTypeName","src":"6833:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2811,"nodeType":"ArrayTypeName","src":"6833:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6832:24:12"},"returnParameters":{"id":2816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2815,"mutability":"mutable","name":"ptr","nameLocation":"6887:3:12","nodeType":"VariableDeclaration","scope":2828,"src":"6879:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2814,"name":"uint256","nodeType":"ElementaryTypeName","src":"6879:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6878:13:12"},"scope":3412,"src":"6819:166:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2837,"nodeType":"Block","src":"7136:68:12","statements":[{"AST":{"nodeType":"YulBlock","src":"7155:43:12","statements":[{"nodeType":"YulAssignment","src":"7169:19:12","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7184:3:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7178:5:12"},"nodeType":"YulFunctionCall","src":"7178:10:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7169:5:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2831,"isOffset":false,"isSlot":false,"src":"7184:3:12","valueSize":1},{"declaration":2834,"isOffset":false,"isSlot":false,"src":"7169:5:12","valueSize":1}],"id":2836,"nodeType":"InlineAssembly","src":"7146:52:12"}]},"documentation":{"id":2829,"nodeType":"StructuredDocumentation","src":"6991:74:12","text":" @dev Load memory word (as a uint256) at location `ptr`."},"id":2838,"implemented":true,"kind":"function","modifiers":[],"name":"_mload","nameLocation":"7079:6:12","nodeType":"FunctionDefinition","parameters":{"id":2832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2831,"mutability":"mutable","name":"ptr","nameLocation":"7094:3:12","nodeType":"VariableDeclaration","scope":2838,"src":"7086:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2830,"name":"uint256","nodeType":"ElementaryTypeName","src":"7086:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7085:13:12"},"returnParameters":{"id":2835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2834,"mutability":"mutable","name":"value","nameLocation":"7129:5:12","nodeType":"VariableDeclaration","scope":2838,"src":"7121:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2833,"name":"uint256","nodeType":"ElementaryTypeName","src":"7121:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7120:15:12"},"scope":3412,"src":"7070:134:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2847,"nodeType":"Block","src":"7348:178:12","statements":[{"AST":{"nodeType":"YulBlock","src":"7367:153:12","statements":[{"nodeType":"YulVariableDeclaration","src":"7381:25:12","value":{"arguments":[{"name":"ptr1","nodeType":"YulIdentifier","src":"7401:4:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7395:5:12"},"nodeType":"YulFunctionCall","src":"7395:11:12"},"variables":[{"name":"value1","nodeType":"YulTypedName","src":"7385:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7419:25:12","value":{"arguments":[{"name":"ptr2","nodeType":"YulIdentifier","src":"7439:4:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7433:5:12"},"nodeType":"YulFunctionCall","src":"7433:11:12"},"variables":[{"name":"value2","nodeType":"YulTypedName","src":"7423:6:12","type":""}]},{"expression":{"arguments":[{"name":"ptr1","nodeType":"YulIdentifier","src":"7464:4:12"},{"name":"value2","nodeType":"YulIdentifier","src":"7470:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7457:6:12"},"nodeType":"YulFunctionCall","src":"7457:20:12"},"nodeType":"YulExpressionStatement","src":"7457:20:12"},{"expression":{"arguments":[{"name":"ptr2","nodeType":"YulIdentifier","src":"7497:4:12"},{"name":"value1","nodeType":"YulIdentifier","src":"7503:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7490:6:12"},"nodeType":"YulFunctionCall","src":"7490:20:12"},"nodeType":"YulExpressionStatement","src":"7490:20:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":2841,"isOffset":false,"isSlot":false,"src":"7401:4:12","valueSize":1},{"declaration":2841,"isOffset":false,"isSlot":false,"src":"7464:4:12","valueSize":1},{"declaration":2843,"isOffset":false,"isSlot":false,"src":"7439:4:12","valueSize":1},{"declaration":2843,"isOffset":false,"isSlot":false,"src":"7497:4:12","valueSize":1}],"id":2846,"nodeType":"InlineAssembly","src":"7358:162:12"}]},"documentation":{"id":2839,"nodeType":"StructuredDocumentation","src":"7210:77:12","text":" @dev Swaps the elements memory location `ptr1` and `ptr2`."},"id":2848,"implemented":true,"kind":"function","modifiers":[],"name":"_swap","nameLocation":"7301:5:12","nodeType":"FunctionDefinition","parameters":{"id":2844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2841,"mutability":"mutable","name":"ptr1","nameLocation":"7315:4:12","nodeType":"VariableDeclaration","scope":2848,"src":"7307:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2840,"name":"uint256","nodeType":"ElementaryTypeName","src":"7307:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2843,"mutability":"mutable","name":"ptr2","nameLocation":"7329:4:12","nodeType":"VariableDeclaration","scope":2848,"src":"7321:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2842,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7306:28:12"},"returnParameters":{"id":2845,"nodeType":"ParameterList","parameters":[],"src":"7348:0:12"},"scope":3412,"src":"7292:234:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2859,"nodeType":"Block","src":"7713:64:12","statements":[{"AST":{"nodeType":"YulBlock","src":"7732:39:12","statements":[{"nodeType":"YulAssignment","src":"7746:15:12","value":{"name":"input","nodeType":"YulIdentifier","src":"7756:5:12"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"7746:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2852,"isOffset":false,"isSlot":false,"src":"7756:5:12","valueSize":1},{"declaration":2856,"isOffset":false,"isSlot":false,"src":"7746:6:12","valueSize":1}],"id":2858,"nodeType":"InlineAssembly","src":"7723:48:12"}]},"documentation":{"id":2849,"nodeType":"StructuredDocumentation","src":"7532:76:12","text":"@dev Helper: low level cast address memory array to uint256 memory array"},"id":2860,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7622:19:12","nodeType":"FunctionDefinition","parameters":{"id":2853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2852,"mutability":"mutable","name":"input","nameLocation":"7659:5:12","nodeType":"VariableDeclaration","scope":2860,"src":"7642:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2850,"name":"address","nodeType":"ElementaryTypeName","src":"7642:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2851,"nodeType":"ArrayTypeName","src":"7642:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"7641:24:12"},"returnParameters":{"id":2857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2856,"mutability":"mutable","name":"output","nameLocation":"7705:6:12","nodeType":"VariableDeclaration","scope":2860,"src":"7688:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2854,"name":"uint256","nodeType":"ElementaryTypeName","src":"7688:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2855,"nodeType":"ArrayTypeName","src":"7688:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7687:25:12"},"scope":3412,"src":"7613:164:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2871,"nodeType":"Block","src":"7964:64:12","statements":[{"AST":{"nodeType":"YulBlock","src":"7983:39:12","statements":[{"nodeType":"YulAssignment","src":"7997:15:12","value":{"name":"input","nodeType":"YulIdentifier","src":"8007:5:12"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"7997:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2864,"isOffset":false,"isSlot":false,"src":"8007:5:12","valueSize":1},{"declaration":2868,"isOffset":false,"isSlot":false,"src":"7997:6:12","valueSize":1}],"id":2870,"nodeType":"InlineAssembly","src":"7974:48:12"}]},"documentation":{"id":2861,"nodeType":"StructuredDocumentation","src":"7783:76:12","text":"@dev Helper: low level cast bytes32 memory array to uint256 memory array"},"id":2872,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7873:19:12","nodeType":"FunctionDefinition","parameters":{"id":2865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2864,"mutability":"mutable","name":"input","nameLocation":"7910:5:12","nodeType":"VariableDeclaration","scope":2872,"src":"7893:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2862,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7893:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2863,"nodeType":"ArrayTypeName","src":"7893:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7892:24:12"},"returnParameters":{"id":2869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2868,"mutability":"mutable","name":"output","nameLocation":"7956:6:12","nodeType":"VariableDeclaration","scope":2872,"src":"7939:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2866,"name":"uint256","nodeType":"ElementaryTypeName","src":"7939:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2867,"nodeType":"ArrayTypeName","src":"7939:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7938:25:12"},"scope":3412,"src":"7864:164:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2897,"nodeType":"Block","src":"8290:64:12","statements":[{"AST":{"nodeType":"YulBlock","src":"8309:39:12","statements":[{"nodeType":"YulAssignment","src":"8323:15:12","value":{"name":"input","nodeType":"YulIdentifier","src":"8333:5:12"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"8323:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2883,"isOffset":false,"isSlot":false,"src":"8333:5:12","valueSize":1},{"declaration":2894,"isOffset":false,"isSlot":false,"src":"8323:6:12","valueSize":1}],"id":2896,"nodeType":"InlineAssembly","src":"8300:48:12"}]},"documentation":{"id":2873,"nodeType":"StructuredDocumentation","src":"8034:78:12","text":"@dev Helper: low level cast address comp function to uint256 comp function"},"id":2898,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8126:18:12","nodeType":"FunctionDefinition","parameters":{"id":2884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2883,"mutability":"mutable","name":"input","nameLocation":"8201:5:12","nodeType":"VariableDeclaration","scope":2898,"src":"8154:52:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":2882,"nodeType":"FunctionTypeName","parameterTypes":{"id":2878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2882,"src":"8163:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2874,"name":"address","nodeType":"ElementaryTypeName","src":"8163:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2882,"src":"8172:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2876,"name":"address","nodeType":"ElementaryTypeName","src":"8172:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8162:18:12"},"returnParameterTypes":{"id":2881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2882,"src":"8195:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2879,"name":"bool","nodeType":"ElementaryTypeName","src":"8195:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8194:6:12"},"src":"8154:52:12","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8144:68:12"},"returnParameters":{"id":2895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2894,"mutability":"mutable","name":"output","nameLocation":"8282:6:12","nodeType":"VariableDeclaration","scope":2898,"src":"8235:53:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2893,"nodeType":"FunctionTypeName","parameterTypes":{"id":2889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2893,"src":"8244:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2885,"name":"uint256","nodeType":"ElementaryTypeName","src":"8244:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2893,"src":"8253:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2887,"name":"uint256","nodeType":"ElementaryTypeName","src":"8253:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8243:18:12"},"returnParameterTypes":{"id":2892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2893,"src":"8276:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2890,"name":"bool","nodeType":"ElementaryTypeName","src":"8276:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8275:6:12"},"src":"8235:53:12","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8234:55:12"},"scope":3412,"src":"8117:237:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2923,"nodeType":"Block","src":"8616:64:12","statements":[{"AST":{"nodeType":"YulBlock","src":"8635:39:12","statements":[{"nodeType":"YulAssignment","src":"8649:15:12","value":{"name":"input","nodeType":"YulIdentifier","src":"8659:5:12"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"8649:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2909,"isOffset":false,"isSlot":false,"src":"8659:5:12","valueSize":1},{"declaration":2920,"isOffset":false,"isSlot":false,"src":"8649:6:12","valueSize":1}],"id":2922,"nodeType":"InlineAssembly","src":"8626:48:12"}]},"documentation":{"id":2899,"nodeType":"StructuredDocumentation","src":"8360:78:12","text":"@dev Helper: low level cast bytes32 comp function to uint256 comp function"},"id":2924,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8452:18:12","nodeType":"FunctionDefinition","parameters":{"id":2910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2909,"mutability":"mutable","name":"input","nameLocation":"8527:5:12","nodeType":"VariableDeclaration","scope":2924,"src":"8480:52:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":2908,"nodeType":"FunctionTypeName","parameterTypes":{"id":2904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2901,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2908,"src":"8489:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2900,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8489:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2908,"src":"8498:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2902,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8498:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8488:18:12"},"returnParameterTypes":{"id":2907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2908,"src":"8521:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2905,"name":"bool","nodeType":"ElementaryTypeName","src":"8521:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8520:6:12"},"src":"8480:52:12","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8470:68:12"},"returnParameters":{"id":2921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2920,"mutability":"mutable","name":"output","nameLocation":"8608:6:12","nodeType":"VariableDeclaration","scope":2924,"src":"8561:53:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2919,"nodeType":"FunctionTypeName","parameterTypes":{"id":2915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2919,"src":"8570:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2911,"name":"uint256","nodeType":"ElementaryTypeName","src":"8570:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2919,"src":"8579:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2913,"name":"uint256","nodeType":"ElementaryTypeName","src":"8579:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8569:18:12"},"returnParameterTypes":{"id":2918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2919,"src":"8602:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2916,"name":"bool","nodeType":"ElementaryTypeName","src":"8602:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8601:6:12"},"src":"8561:53:12","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8560:55:12"},"scope":3412,"src":"8443:237:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3006,"nodeType":"Block","src":"9405:834:12","statements":[{"assignments":[2936],"declarations":[{"constant":false,"id":2936,"mutability":"mutable","name":"low","nameLocation":"9423:3:12","nodeType":"VariableDeclaration","scope":3006,"src":"9415:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2935,"name":"uint256","nodeType":"ElementaryTypeName","src":"9415:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2938,"initialValue":{"hexValue":"30","id":2937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9429:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9415:15:12"},{"assignments":[2940],"declarations":[{"constant":false,"id":2940,"mutability":"mutable","name":"high","nameLocation":"9448:4:12","nodeType":"VariableDeclaration","scope":3006,"src":"9440:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2939,"name":"uint256","nodeType":"ElementaryTypeName","src":"9440:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2943,"initialValue":{"expression":{"id":2941,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"9455:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9461:6:12","memberName":"length","nodeType":"MemberAccess","src":"9455:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9440:27:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2944,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"9482:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9490:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9482:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2950,"nodeType":"IfStatement","src":"9478:48:12","trueBody":{"id":2949,"nodeType":"Block","src":"9493:33:12","statements":[{"expression":{"hexValue":"30","id":2947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9514:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2934,"id":2948,"nodeType":"Return","src":"9507:8:12"}]}},{"body":{"id":2982,"nodeType":"Block","src":"9555:423:12","statements":[{"assignments":[2955],"declarations":[{"constant":false,"id":2955,"mutability":"mutable","name":"mid","nameLocation":"9577:3:12","nodeType":"VariableDeclaration","scope":2982,"src":"9569:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2954,"name":"uint256","nodeType":"ElementaryTypeName","src":"9569:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2961,"initialValue":{"arguments":[{"id":2958,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"9596:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2959,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"9601:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2956,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5928,"src":"9583:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5928_$","typeString":"type(library Math)"}},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9588:7:12","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4580,"src":"9583:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9583:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9569:37:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2963,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"9844:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":2964,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"9851:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2962,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3287,3313,3339],"referencedDeclaration":3339,"src":"9831:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3857_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9831:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3857_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2966,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9856:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3856,"src":"9831:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2967,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"9864:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9831:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2980,"nodeType":"Block","src":"9922:46:12","statements":[{"expression":{"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2974,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"9940:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2975,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"9946:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9952:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9940:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2979,"nodeType":"ExpressionStatement","src":"9940:13:12"}]},"id":2981,"nodeType":"IfStatement","src":"9827:141:12","trueBody":{"id":2973,"nodeType":"Block","src":"9873:43:12","statements":[{"expression":{"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2969,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"9891:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2970,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"9898:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9891:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2972,"nodeType":"ExpressionStatement","src":"9891:10:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2951,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"9543:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2952,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"9549:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9543:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2983,"nodeType":"WhileStatement","src":"9536:442:12"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2984,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"10095:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10101:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10095:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2988,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"10119:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2989,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"10126:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10126:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2987,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3287,3313,3339],"referencedDeclaration":3339,"src":"10106:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3857_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3857_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2993,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10135:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3856,"src":"10106:34:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2994,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"10144:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10106:45:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10095:56:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3004,"nodeType":"Block","src":"10198:35:12","statements":[{"expression":{"id":3002,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"10219:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2934,"id":3003,"nodeType":"Return","src":"10212:10:12"}]},"id":3005,"nodeType":"IfStatement","src":"10091:142:12","trueBody":{"id":3001,"nodeType":"Block","src":"10153:39:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2997,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"10174:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10180:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10174:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2934,"id":3000,"nodeType":"Return","src":"10167:14:12"}]}}]},"documentation":{"id":2925,"nodeType":"StructuredDocumentation","src":"8686:616:12","text":" @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n NOTE: The `array` is expected to be sorted in ascending order, and to\n contain no repeated elements.\n IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n support for repeated elements in the array. The {lowerBound} function should\n be used instead."},"id":3007,"implemented":true,"kind":"function","modifiers":[],"name":"findUpperBound","nameLocation":"9316:14:12","nodeType":"FunctionDefinition","parameters":{"id":2931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2928,"mutability":"mutable","name":"array","nameLocation":"9349:5:12","nodeType":"VariableDeclaration","scope":3007,"src":"9331:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2926,"name":"uint256","nodeType":"ElementaryTypeName","src":"9331:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2927,"nodeType":"ArrayTypeName","src":"9331:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2930,"mutability":"mutable","name":"element","nameLocation":"9364:7:12","nodeType":"VariableDeclaration","scope":3007,"src":"9356:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2929,"name":"uint256","nodeType":"ElementaryTypeName","src":"9356:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9330:42:12"},"returnParameters":{"id":2934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3007,"src":"9396:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2932,"name":"uint256","nodeType":"ElementaryTypeName","src":"9396:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9395:9:12"},"scope":3412,"src":"9307:932:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3070,"nodeType":"Block","src":"10756:709:12","statements":[{"assignments":[3019],"declarations":[{"constant":false,"id":3019,"mutability":"mutable","name":"low","nameLocation":"10774:3:12","nodeType":"VariableDeclaration","scope":3070,"src":"10766:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3018,"name":"uint256","nodeType":"ElementaryTypeName","src":"10766:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3021,"initialValue":{"hexValue":"30","id":3020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10780:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10766:15:12"},{"assignments":[3023],"declarations":[{"constant":false,"id":3023,"mutability":"mutable","name":"high","nameLocation":"10799:4:12","nodeType":"VariableDeclaration","scope":3070,"src":"10791:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3022,"name":"uint256","nodeType":"ElementaryTypeName","src":"10791:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3026,"initialValue":{"expression":{"id":3024,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"10806:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10812:6:12","memberName":"length","nodeType":"MemberAccess","src":"10806:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10791:27:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3027,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"10833:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10833:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3033,"nodeType":"IfStatement","src":"10829:48:12","trueBody":{"id":3032,"nodeType":"Block","src":"10844:33:12","statements":[{"expression":{"hexValue":"30","id":3030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10865:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3017,"id":3031,"nodeType":"Return","src":"10858:8:12"}]}},{"body":{"id":3066,"nodeType":"Block","src":"10906:532:12","statements":[{"assignments":[3038],"declarations":[{"constant":false,"id":3038,"mutability":"mutable","name":"mid","nameLocation":"10928:3:12","nodeType":"VariableDeclaration","scope":3066,"src":"10920:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3037,"name":"uint256","nodeType":"ElementaryTypeName","src":"10920:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3044,"initialValue":{"arguments":[{"id":3041,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"10947:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3042,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"10952:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3039,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5928,"src":"10934:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5928_$","typeString":"type(library Math)"}},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10939:7:12","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4580,"src":"10934:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10934:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10920:37:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3046,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"11195:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3047,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"11202:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3045,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3287,3313,3339],"referencedDeclaration":3339,"src":"11182:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3857_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11182:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3857_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3049,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11207:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3856,"src":"11182:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3050,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"11215:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11182:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3064,"nodeType":"Block","src":"11385:43:12","statements":[{"expression":{"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3060,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"11403:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3061,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"11410:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11403:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3063,"nodeType":"ExpressionStatement","src":"11403:10:12"}]},"id":3065,"nodeType":"IfStatement","src":"11178:250:12","trueBody":{"id":3059,"nodeType":"Block","src":"11224:155:12","statements":[{"id":3058,"nodeType":"UncheckedBlock","src":"11301:64:12","statements":[{"expression":{"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3052,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"11333:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3053,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"11339:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11345:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11339:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11333:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3057,"nodeType":"ExpressionStatement","src":"11333:13:12"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3034,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"10894:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3035,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"10900:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10894:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3067,"nodeType":"WhileStatement","src":"10887:551:12"},{"expression":{"id":3068,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"11455:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3017,"id":3069,"nodeType":"Return","src":"11448:10:12"}]},"documentation":{"id":3008,"nodeType":"StructuredDocumentation","src":"10245:412:12","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value greater or equal than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound]."},"id":3071,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBound","nameLocation":"10671:10:12","nodeType":"FunctionDefinition","parameters":{"id":3014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3011,"mutability":"mutable","name":"array","nameLocation":"10700:5:12","nodeType":"VariableDeclaration","scope":3071,"src":"10682:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3009,"name":"uint256","nodeType":"ElementaryTypeName","src":"10682:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3010,"nodeType":"ArrayTypeName","src":"10682:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3013,"mutability":"mutable","name":"element","nameLocation":"10715:7:12","nodeType":"VariableDeclaration","scope":3071,"src":"10707:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3012,"name":"uint256","nodeType":"ElementaryTypeName","src":"10707:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10681:42:12"},"returnParameters":{"id":3017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3016,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3071,"src":"10747:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3015,"name":"uint256","nodeType":"ElementaryTypeName","src":"10747:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10746:9:12"},"scope":3412,"src":"10662:803:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3134,"nodeType":"Block","src":"11982:709:12","statements":[{"assignments":[3083],"declarations":[{"constant":false,"id":3083,"mutability":"mutable","name":"low","nameLocation":"12000:3:12","nodeType":"VariableDeclaration","scope":3134,"src":"11992:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3082,"name":"uint256","nodeType":"ElementaryTypeName","src":"11992:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3085,"initialValue":{"hexValue":"30","id":3084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12006:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11992:15:12"},{"assignments":[3087],"declarations":[{"constant":false,"id":3087,"mutability":"mutable","name":"high","nameLocation":"12025:4:12","nodeType":"VariableDeclaration","scope":3134,"src":"12017:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3086,"name":"uint256","nodeType":"ElementaryTypeName","src":"12017:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3090,"initialValue":{"expression":{"id":3088,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"12032:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12038:6:12","memberName":"length","nodeType":"MemberAccess","src":"12032:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12017:27:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3091,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"12059:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12059:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3097,"nodeType":"IfStatement","src":"12055:48:12","trueBody":{"id":3096,"nodeType":"Block","src":"12070:33:12","statements":[{"expression":{"hexValue":"30","id":3094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12091:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3081,"id":3095,"nodeType":"Return","src":"12084:8:12"}]}},{"body":{"id":3130,"nodeType":"Block","src":"12132:532:12","statements":[{"assignments":[3102],"declarations":[{"constant":false,"id":3102,"mutability":"mutable","name":"mid","nameLocation":"12154:3:12","nodeType":"VariableDeclaration","scope":3130,"src":"12146:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3101,"name":"uint256","nodeType":"ElementaryTypeName","src":"12146:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3108,"initialValue":{"arguments":[{"id":3105,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"12173:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3106,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"12178:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3103,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5928,"src":"12160:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5928_$","typeString":"type(library Math)"}},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12165:7:12","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4580,"src":"12160:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12160:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12146:37:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3110,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"12421:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3111,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"12428:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3109,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3287,3313,3339],"referencedDeclaration":3339,"src":"12408:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3857_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12408:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3857_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12433:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3856,"src":"12408:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3114,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"12441:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12408:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3128,"nodeType":"Block","src":"12499:155:12","statements":[{"id":3127,"nodeType":"UncheckedBlock","src":"12576:64:12","statements":[{"expression":{"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3121,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"12608:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3122,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"12614:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12614:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12608:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3126,"nodeType":"ExpressionStatement","src":"12608:13:12"}]}]},"id":3129,"nodeType":"IfStatement","src":"12404:250:12","trueBody":{"id":3120,"nodeType":"Block","src":"12450:43:12","statements":[{"expression":{"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3116,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"12468:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3117,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"12475:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12468:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3119,"nodeType":"ExpressionStatement","src":"12468:10:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3098,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"12120:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3099,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"12126:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12120:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3131,"nodeType":"WhileStatement","src":"12113:551:12"},{"expression":{"id":3132,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"12681:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3081,"id":3133,"nodeType":"Return","src":"12674:10:12"}]},"documentation":{"id":3072,"nodeType":"StructuredDocumentation","src":"11471:412:12","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value strictly greater than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound]."},"id":3135,"implemented":true,"kind":"function","modifiers":[],"name":"upperBound","nameLocation":"11897:10:12","nodeType":"FunctionDefinition","parameters":{"id":3078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3075,"mutability":"mutable","name":"array","nameLocation":"11926:5:12","nodeType":"VariableDeclaration","scope":3135,"src":"11908:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3073,"name":"uint256","nodeType":"ElementaryTypeName","src":"11908:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3074,"nodeType":"ArrayTypeName","src":"11908:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3077,"mutability":"mutable","name":"element","nameLocation":"11941:7:12","nodeType":"VariableDeclaration","scope":3135,"src":"11933:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3076,"name":"uint256","nodeType":"ElementaryTypeName","src":"11933:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11907:42:12"},"returnParameters":{"id":3081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3135,"src":"11973:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3079,"name":"uint256","nodeType":"ElementaryTypeName","src":"11973:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11972:9:12"},"scope":3412,"src":"11888:803:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3197,"nodeType":"Block","src":"12875:709:12","statements":[{"assignments":[3147],"declarations":[{"constant":false,"id":3147,"mutability":"mutable","name":"low","nameLocation":"12893:3:12","nodeType":"VariableDeclaration","scope":3197,"src":"12885:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3146,"name":"uint256","nodeType":"ElementaryTypeName","src":"12885:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3149,"initialValue":{"hexValue":"30","id":3148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12899:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12885:15:12"},{"assignments":[3151],"declarations":[{"constant":false,"id":3151,"mutability":"mutable","name":"high","nameLocation":"12918:4:12","nodeType":"VariableDeclaration","scope":3197,"src":"12910:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3150,"name":"uint256","nodeType":"ElementaryTypeName","src":"12910:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3154,"initialValue":{"expression":{"id":3152,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"12925:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12931:6:12","memberName":"length","nodeType":"MemberAccess","src":"12925:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12910:27:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3155,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"12952:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12960:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12952:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3161,"nodeType":"IfStatement","src":"12948:48:12","trueBody":{"id":3160,"nodeType":"Block","src":"12963:33:12","statements":[{"expression":{"hexValue":"30","id":3158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12984:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3145,"id":3159,"nodeType":"Return","src":"12977:8:12"}]}},{"body":{"id":3193,"nodeType":"Block","src":"13025:532:12","statements":[{"assignments":[3166],"declarations":[{"constant":false,"id":3166,"mutability":"mutable","name":"mid","nameLocation":"13047:3:12","nodeType":"VariableDeclaration","scope":3193,"src":"13039:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3165,"name":"uint256","nodeType":"ElementaryTypeName","src":"13039:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3172,"initialValue":{"arguments":[{"id":3169,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"13066:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3170,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"13071:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3167,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5928,"src":"13053:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5928_$","typeString":"type(library Math)"}},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13058:7:12","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4580,"src":"13053:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13053:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13039:37:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3174,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"13320:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3175,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"13327:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3173,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[3352,3365,3378],"referencedDeclaration":3378,"src":"13301:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13301:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3177,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"13334:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13301:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3191,"nodeType":"Block","src":"13504:43:12","statements":[{"expression":{"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3187,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"13522:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3188,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"13529:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13522:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3190,"nodeType":"ExpressionStatement","src":"13522:10:12"}]},"id":3192,"nodeType":"IfStatement","src":"13297:250:12","trueBody":{"id":3186,"nodeType":"Block","src":"13343:155:12","statements":[{"id":3185,"nodeType":"UncheckedBlock","src":"13420:64:12","statements":[{"expression":{"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3179,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"13452:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3180,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"13458:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13464:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13458:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13452:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3184,"nodeType":"ExpressionStatement","src":"13452:13:12"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3162,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"13013:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3163,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"13019:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13013:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3194,"nodeType":"WhileStatement","src":"13006:551:12"},{"expression":{"id":3195,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"13574:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3145,"id":3196,"nodeType":"Return","src":"13567:10:12"}]},"documentation":{"id":3136,"nodeType":"StructuredDocumentation","src":"12697:74:12","text":" @dev Same as {lowerBound}, but with an array in memory."},"id":3198,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBoundMemory","nameLocation":"12785:16:12","nodeType":"FunctionDefinition","parameters":{"id":3142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3139,"mutability":"mutable","name":"array","nameLocation":"12819:5:12","nodeType":"VariableDeclaration","scope":3198,"src":"12802:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3137,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3138,"nodeType":"ArrayTypeName","src":"12802:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3141,"mutability":"mutable","name":"element","nameLocation":"12834:7:12","nodeType":"VariableDeclaration","scope":3198,"src":"12826:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3140,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12801:41:12"},"returnParameters":{"id":3145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3198,"src":"12866:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3143,"name":"uint256","nodeType":"ElementaryTypeName","src":"12866:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12865:9:12"},"scope":3412,"src":"12776:808:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3260,"nodeType":"Block","src":"13768:709:12","statements":[{"assignments":[3210],"declarations":[{"constant":false,"id":3210,"mutability":"mutable","name":"low","nameLocation":"13786:3:12","nodeType":"VariableDeclaration","scope":3260,"src":"13778:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3209,"name":"uint256","nodeType":"ElementaryTypeName","src":"13778:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3212,"initialValue":{"hexValue":"30","id":3211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13792:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13778:15:12"},{"assignments":[3214],"declarations":[{"constant":false,"id":3214,"mutability":"mutable","name":"high","nameLocation":"13811:4:12","nodeType":"VariableDeclaration","scope":3260,"src":"13803:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3213,"name":"uint256","nodeType":"ElementaryTypeName","src":"13803:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3217,"initialValue":{"expression":{"id":3215,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"13818:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13824:6:12","memberName":"length","nodeType":"MemberAccess","src":"13818:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13803:27:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3218,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3214,"src":"13845:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13853:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13845:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3224,"nodeType":"IfStatement","src":"13841:48:12","trueBody":{"id":3223,"nodeType":"Block","src":"13856:33:12","statements":[{"expression":{"hexValue":"30","id":3221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13877:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3208,"id":3222,"nodeType":"Return","src":"13870:8:12"}]}},{"body":{"id":3256,"nodeType":"Block","src":"13918:532:12","statements":[{"assignments":[3229],"declarations":[{"constant":false,"id":3229,"mutability":"mutable","name":"mid","nameLocation":"13940:3:12","nodeType":"VariableDeclaration","scope":3256,"src":"13932:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3228,"name":"uint256","nodeType":"ElementaryTypeName","src":"13932:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3235,"initialValue":{"arguments":[{"id":3232,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"13959:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3233,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3214,"src":"13964:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3230,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5928,"src":"13946:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5928_$","typeString":"type(library Math)"}},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13951:7:12","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4580,"src":"13946:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13946:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13932:37:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3237,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"14213:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3238,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"14220:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3236,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[3352,3365,3378],"referencedDeclaration":3378,"src":"14194:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14194:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3240,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"14227:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14194:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3254,"nodeType":"Block","src":"14285:155:12","statements":[{"id":3253,"nodeType":"UncheckedBlock","src":"14362:64:12","statements":[{"expression":{"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3247,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"14394:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3248,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"14400:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14406:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14400:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14394:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3252,"nodeType":"ExpressionStatement","src":"14394:13:12"}]}]},"id":3255,"nodeType":"IfStatement","src":"14190:250:12","trueBody":{"id":3246,"nodeType":"Block","src":"14236:43:12","statements":[{"expression":{"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3242,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3214,"src":"14254:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3243,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"14261:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14254:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3245,"nodeType":"ExpressionStatement","src":"14254:10:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3225,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"13906:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3226,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3214,"src":"13912:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13906:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3257,"nodeType":"WhileStatement","src":"13899:551:12"},{"expression":{"id":3258,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"14467:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3208,"id":3259,"nodeType":"Return","src":"14460:10:12"}]},"documentation":{"id":3199,"nodeType":"StructuredDocumentation","src":"13590:74:12","text":" @dev Same as {upperBound}, but with an array in memory."},"id":3261,"implemented":true,"kind":"function","modifiers":[],"name":"upperBoundMemory","nameLocation":"13678:16:12","nodeType":"FunctionDefinition","parameters":{"id":3205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3202,"mutability":"mutable","name":"array","nameLocation":"13712:5:12","nodeType":"VariableDeclaration","scope":3261,"src":"13695:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3200,"name":"uint256","nodeType":"ElementaryTypeName","src":"13695:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3201,"nodeType":"ArrayTypeName","src":"13695:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3204,"mutability":"mutable","name":"element","nameLocation":"13727:7:12","nodeType":"VariableDeclaration","scope":3261,"src":"13719:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3203,"name":"uint256","nodeType":"ElementaryTypeName","src":"13719:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13694:41:12"},"returnParameters":{"id":3208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3261,"src":"13759:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3206,"name":"uint256","nodeType":"ElementaryTypeName","src":"13759:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13758:9:12"},"scope":3412,"src":"13669:808:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3286,"nodeType":"Block","src":"14793:167:12","statements":[{"assignments":[3274],"declarations":[{"constant":false,"id":3274,"mutability":"mutable","name":"slot","nameLocation":"14811:4:12","nodeType":"VariableDeclaration","scope":3286,"src":"14803:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3273,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14803:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3275,"nodeType":"VariableDeclarationStatement","src":"14803:12:12"},{"AST":{"nodeType":"YulBlock","src":"14850:40:12","statements":[{"nodeType":"YulAssignment","src":"14864:16:12","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"14872:8:12"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"14864:4:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3265,"isOffset":false,"isSlot":true,"src":"14872:8:12","suffix":"slot","valueSize":1},{"declaration":3274,"isOffset":false,"isSlot":false,"src":"14864:4:12","valueSize":1}],"flags":["memory-safe"],"id":3276,"nodeType":"InlineAssembly","src":"14825:65:12"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3281,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"14932:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3277,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"14906:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14911:11:12","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3757,"src":"14906:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14925:6:12","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3747,"src":"14906:25:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14937:14:12","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3877,"src":"14906:45:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3848_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3848_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"functionReturnParameters":3272,"id":3285,"nodeType":"Return","src":"14899:54:12"}]},"documentation":{"id":3262,"nodeType":"StructuredDocumentation","src":"14483:191:12","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3287,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"14688:12:12","nodeType":"FunctionDefinition","parameters":{"id":3268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3265,"mutability":"mutable","name":"arr","nameLocation":"14719:3:12","nodeType":"VariableDeclaration","scope":3287,"src":"14701:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3263,"name":"address","nodeType":"ElementaryTypeName","src":"14701:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3264,"nodeType":"ArrayTypeName","src":"14701:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3267,"mutability":"mutable","name":"pos","nameLocation":"14732:3:12","nodeType":"VariableDeclaration","scope":3287,"src":"14724:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3266,"name":"uint256","nodeType":"ElementaryTypeName","src":"14724:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14700:36:12"},"returnParameters":{"id":3272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3287,"src":"14760:31:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3848_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":3270,"nodeType":"UserDefinedTypeName","pathNode":{"id":3269,"name":"StorageSlot.AddressSlot","nameLocations":["14760:11:12","14772:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":3848,"src":"14760:23:12"},"referencedDeclaration":3848,"src":"14760:23:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3848_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"14759:33:12"},"scope":3412,"src":"14679:281:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3312,"nodeType":"Block","src":"15276:167:12","statements":[{"assignments":[3300],"declarations":[{"constant":false,"id":3300,"mutability":"mutable","name":"slot","nameLocation":"15294:4:12","nodeType":"VariableDeclaration","scope":3312,"src":"15286:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3299,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15286:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3301,"nodeType":"VariableDeclarationStatement","src":"15286:12:12"},{"AST":{"nodeType":"YulBlock","src":"15333:40:12","statements":[{"nodeType":"YulAssignment","src":"15347:16:12","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"15355:8:12"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"15347:4:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3291,"isOffset":false,"isSlot":true,"src":"15355:8:12","suffix":"slot","valueSize":1},{"declaration":3300,"isOffset":false,"isSlot":false,"src":"15347:4:12","valueSize":1}],"flags":["memory-safe"],"id":3302,"nodeType":"InlineAssembly","src":"15308:65:12"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3307,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"15415:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3303,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"15389:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15394:11:12","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3757,"src":"15389:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15408:6:12","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3747,"src":"15389:25:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15420:14:12","memberName":"getBytes32Slot","nodeType":"MemberAccess","referencedDeclaration":3899,"src":"15389:45:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$3854_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"}},"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3854_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot storage pointer"}},"functionReturnParameters":3298,"id":3311,"nodeType":"Return","src":"15382:54:12"}]},"documentation":{"id":3288,"nodeType":"StructuredDocumentation","src":"14966:191:12","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3313,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15171:12:12","nodeType":"FunctionDefinition","parameters":{"id":3294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3291,"mutability":"mutable","name":"arr","nameLocation":"15202:3:12","nodeType":"VariableDeclaration","scope":3313,"src":"15184:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3289,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15184:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3290,"nodeType":"ArrayTypeName","src":"15184:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3293,"mutability":"mutable","name":"pos","nameLocation":"15215:3:12","nodeType":"VariableDeclaration","scope":3313,"src":"15207:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3292,"name":"uint256","nodeType":"ElementaryTypeName","src":"15207:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15183:36:12"},"returnParameters":{"id":3298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3313,"src":"15243:31:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3854_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":3296,"nodeType":"UserDefinedTypeName","pathNode":{"id":3295,"name":"StorageSlot.Bytes32Slot","nameLocations":["15243:11:12","15255:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":3854,"src":"15243:23:12"},"referencedDeclaration":3854,"src":"15243:23:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3854_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"15242:33:12"},"scope":3412,"src":"15162:281:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3338,"nodeType":"Block","src":"15759:167:12","statements":[{"assignments":[3326],"declarations":[{"constant":false,"id":3326,"mutability":"mutable","name":"slot","nameLocation":"15777:4:12","nodeType":"VariableDeclaration","scope":3338,"src":"15769:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3325,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15769:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3327,"nodeType":"VariableDeclarationStatement","src":"15769:12:12"},{"AST":{"nodeType":"YulBlock","src":"15816:40:12","statements":[{"nodeType":"YulAssignment","src":"15830:16:12","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"15838:8:12"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"15830:4:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3317,"isOffset":false,"isSlot":true,"src":"15838:8:12","suffix":"slot","valueSize":1},{"declaration":3326,"isOffset":false,"isSlot":false,"src":"15830:4:12","valueSize":1}],"flags":["memory-safe"],"id":3328,"nodeType":"InlineAssembly","src":"15791:65:12"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3333,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"15898:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3329,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"15872:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15877:11:12","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3757,"src":"15872:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15891:6:12","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3747,"src":"15872:25:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15903:14:12","memberName":"getUint256Slot","nodeType":"MemberAccess","referencedDeclaration":3910,"src":"15872:45:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$3857_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3857_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"functionReturnParameters":3324,"id":3337,"nodeType":"Return","src":"15865:54:12"}]},"documentation":{"id":3314,"nodeType":"StructuredDocumentation","src":"15449:191:12","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3339,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15654:12:12","nodeType":"FunctionDefinition","parameters":{"id":3320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3317,"mutability":"mutable","name":"arr","nameLocation":"15685:3:12","nodeType":"VariableDeclaration","scope":3339,"src":"15667:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3315,"name":"uint256","nodeType":"ElementaryTypeName","src":"15667:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3316,"nodeType":"ArrayTypeName","src":"15667:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3319,"mutability":"mutable","name":"pos","nameLocation":"15698:3:12","nodeType":"VariableDeclaration","scope":3339,"src":"15690:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3318,"name":"uint256","nodeType":"ElementaryTypeName","src":"15690:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15666:36:12"},"returnParameters":{"id":3324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3339,"src":"15726:31:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3857_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":3322,"nodeType":"UserDefinedTypeName","pathNode":{"id":3321,"name":"StorageSlot.Uint256Slot","nameLocations":["15726:11:12","15738:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":3857,"src":"15726:23:12"},"referencedDeclaration":3857,"src":"15726:23:12","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3857_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"15725:33:12"},"scope":3412,"src":"15645:281:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3351,"nodeType":"Block","src":"16227:98:12","statements":[{"AST":{"nodeType":"YulBlock","src":"16246:73:12","statements":[{"nodeType":"YulAssignment","src":"16260:49:12","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"16281:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"16286:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16277:3:12"},"nodeType":"YulFunctionCall","src":"16277:14:12"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16297:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"16302:4:12","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16293:3:12"},"nodeType":"YulFunctionCall","src":"16293:14:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16273:3:12"},"nodeType":"YulFunctionCall","src":"16273:35:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16267:5:12"},"nodeType":"YulFunctionCall","src":"16267:42:12"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"16260:3:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3343,"isOffset":false,"isSlot":false,"src":"16281:3:12","valueSize":1},{"declaration":3345,"isOffset":false,"isSlot":false,"src":"16297:3:12","valueSize":1},{"declaration":3348,"isOffset":false,"isSlot":false,"src":"16260:3:12","valueSize":1}],"id":3350,"nodeType":"InlineAssembly","src":"16237:82:12"}]},"documentation":{"id":3340,"nodeType":"StructuredDocumentation","src":"15932:191:12","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3352,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16137:18:12","nodeType":"FunctionDefinition","parameters":{"id":3346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3343,"mutability":"mutable","name":"arr","nameLocation":"16173:3:12","nodeType":"VariableDeclaration","scope":3352,"src":"16156:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3341,"name":"address","nodeType":"ElementaryTypeName","src":"16156:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3342,"nodeType":"ArrayTypeName","src":"16156:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3345,"mutability":"mutable","name":"pos","nameLocation":"16186:3:12","nodeType":"VariableDeclaration","scope":3352,"src":"16178:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3344,"name":"uint256","nodeType":"ElementaryTypeName","src":"16178:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16155:35:12"},"returnParameters":{"id":3349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3348,"mutability":"mutable","name":"res","nameLocation":"16222:3:12","nodeType":"VariableDeclaration","scope":3352,"src":"16214:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3347,"name":"address","nodeType":"ElementaryTypeName","src":"16214:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16213:13:12"},"scope":3412,"src":"16128:197:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3364,"nodeType":"Block","src":"16626:98:12","statements":[{"AST":{"nodeType":"YulBlock","src":"16645:73:12","statements":[{"nodeType":"YulAssignment","src":"16659:49:12","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"16680:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"16685:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16676:3:12"},"nodeType":"YulFunctionCall","src":"16676:14:12"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16696:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"16701:4:12","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16692:3:12"},"nodeType":"YulFunctionCall","src":"16692:14:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16672:3:12"},"nodeType":"YulFunctionCall","src":"16672:35:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16666:5:12"},"nodeType":"YulFunctionCall","src":"16666:42:12"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"16659:3:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3356,"isOffset":false,"isSlot":false,"src":"16680:3:12","valueSize":1},{"declaration":3358,"isOffset":false,"isSlot":false,"src":"16696:3:12","valueSize":1},{"declaration":3361,"isOffset":false,"isSlot":false,"src":"16659:3:12","valueSize":1}],"id":3363,"nodeType":"InlineAssembly","src":"16636:82:12"}]},"documentation":{"id":3353,"nodeType":"StructuredDocumentation","src":"16331:191:12","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3365,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16536:18:12","nodeType":"FunctionDefinition","parameters":{"id":3359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3356,"mutability":"mutable","name":"arr","nameLocation":"16572:3:12","nodeType":"VariableDeclaration","scope":3365,"src":"16555:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3354,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16555:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3355,"nodeType":"ArrayTypeName","src":"16555:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3358,"mutability":"mutable","name":"pos","nameLocation":"16585:3:12","nodeType":"VariableDeclaration","scope":3365,"src":"16577:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3357,"name":"uint256","nodeType":"ElementaryTypeName","src":"16577:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16554:35:12"},"returnParameters":{"id":3362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3361,"mutability":"mutable","name":"res","nameLocation":"16621:3:12","nodeType":"VariableDeclaration","scope":3365,"src":"16613:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16613:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16612:13:12"},"scope":3412,"src":"16527:197:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3377,"nodeType":"Block","src":"17025:98:12","statements":[{"AST":{"nodeType":"YulBlock","src":"17044:73:12","statements":[{"nodeType":"YulAssignment","src":"17058:49:12","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"17079:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"17084:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17075:3:12"},"nodeType":"YulFunctionCall","src":"17075:14:12"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17095:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"17100:4:12","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17091:3:12"},"nodeType":"YulFunctionCall","src":"17091:14:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17071:3:12"},"nodeType":"YulFunctionCall","src":"17071:35:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17065:5:12"},"nodeType":"YulFunctionCall","src":"17065:42:12"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"17058:3:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3369,"isOffset":false,"isSlot":false,"src":"17079:3:12","valueSize":1},{"declaration":3371,"isOffset":false,"isSlot":false,"src":"17095:3:12","valueSize":1},{"declaration":3374,"isOffset":false,"isSlot":false,"src":"17058:3:12","valueSize":1}],"id":3376,"nodeType":"InlineAssembly","src":"17035:82:12"}]},"documentation":{"id":3366,"nodeType":"StructuredDocumentation","src":"16730:191:12","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3378,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16935:18:12","nodeType":"FunctionDefinition","parameters":{"id":3372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3369,"mutability":"mutable","name":"arr","nameLocation":"16971:3:12","nodeType":"VariableDeclaration","scope":3378,"src":"16954:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3367,"name":"uint256","nodeType":"ElementaryTypeName","src":"16954:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3368,"nodeType":"ArrayTypeName","src":"16954:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3371,"mutability":"mutable","name":"pos","nameLocation":"16984:3:12","nodeType":"VariableDeclaration","scope":3378,"src":"16976:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3370,"name":"uint256","nodeType":"ElementaryTypeName","src":"16976:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16953:35:12"},"returnParameters":{"id":3375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3374,"mutability":"mutable","name":"res","nameLocation":"17020:3:12","nodeType":"VariableDeclaration","scope":3378,"src":"17012:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3373,"name":"uint256","nodeType":"ElementaryTypeName","src":"17012:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17011:13:12"},"scope":3412,"src":"16926:197:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3388,"nodeType":"Block","src":"17440:88:12","statements":[{"AST":{"nodeType":"YulBlock","src":"17475:47:12","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"17496:10:12"},{"name":"len","nodeType":"YulIdentifier","src":"17508:3:12"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17489:6:12"},"nodeType":"YulFunctionCall","src":"17489:23:12"},"nodeType":"YulExpressionStatement","src":"17489:23:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":3382,"isOffset":false,"isSlot":true,"src":"17496:10:12","suffix":"slot","valueSize":1},{"declaration":3384,"isOffset":false,"isSlot":false,"src":"17508:3:12","valueSize":1}],"flags":["memory-safe"],"id":3387,"nodeType":"InlineAssembly","src":"17450:72:12"}]},"documentation":{"id":3379,"nodeType":"StructuredDocumentation","src":"17129:234:12","text":" @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":3389,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17377:15:12","nodeType":"FunctionDefinition","parameters":{"id":3385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3382,"mutability":"mutable","name":"array","nameLocation":"17411:5:12","nodeType":"VariableDeclaration","scope":3389,"src":"17393:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3380,"name":"address","nodeType":"ElementaryTypeName","src":"17393:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3381,"nodeType":"ArrayTypeName","src":"17393:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3384,"mutability":"mutable","name":"len","nameLocation":"17426:3:12","nodeType":"VariableDeclaration","scope":3389,"src":"17418:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3383,"name":"uint256","nodeType":"ElementaryTypeName","src":"17418:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17392:38:12"},"returnParameters":{"id":3386,"nodeType":"ParameterList","parameters":[],"src":"17440:0:12"},"scope":3412,"src":"17368:160:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3399,"nodeType":"Block","src":"17845:88:12","statements":[{"AST":{"nodeType":"YulBlock","src":"17880:47:12","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"17901:10:12"},{"name":"len","nodeType":"YulIdentifier","src":"17913:3:12"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17894:6:12"},"nodeType":"YulFunctionCall","src":"17894:23:12"},"nodeType":"YulExpressionStatement","src":"17894:23:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":3393,"isOffset":false,"isSlot":true,"src":"17901:10:12","suffix":"slot","valueSize":1},{"declaration":3395,"isOffset":false,"isSlot":false,"src":"17913:3:12","valueSize":1}],"flags":["memory-safe"],"id":3398,"nodeType":"InlineAssembly","src":"17855:72:12"}]},"documentation":{"id":3390,"nodeType":"StructuredDocumentation","src":"17534:234:12","text":" @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":3400,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17782:15:12","nodeType":"FunctionDefinition","parameters":{"id":3396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3393,"mutability":"mutable","name":"array","nameLocation":"17816:5:12","nodeType":"VariableDeclaration","scope":3400,"src":"17798:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3391,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17798:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3392,"nodeType":"ArrayTypeName","src":"17798:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3395,"mutability":"mutable","name":"len","nameLocation":"17831:3:12","nodeType":"VariableDeclaration","scope":3400,"src":"17823:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3394,"name":"uint256","nodeType":"ElementaryTypeName","src":"17823:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17797:38:12"},"returnParameters":{"id":3397,"nodeType":"ParameterList","parameters":[],"src":"17845:0:12"},"scope":3412,"src":"17773:160:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3410,"nodeType":"Block","src":"18250:88:12","statements":[{"AST":{"nodeType":"YulBlock","src":"18285:47:12","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"18306:10:12"},{"name":"len","nodeType":"YulIdentifier","src":"18318:3:12"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"18299:6:12"},"nodeType":"YulFunctionCall","src":"18299:23:12"},"nodeType":"YulExpressionStatement","src":"18299:23:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":3404,"isOffset":false,"isSlot":true,"src":"18306:10:12","suffix":"slot","valueSize":1},{"declaration":3406,"isOffset":false,"isSlot":false,"src":"18318:3:12","valueSize":1}],"flags":["memory-safe"],"id":3409,"nodeType":"InlineAssembly","src":"18260:72:12"}]},"documentation":{"id":3401,"nodeType":"StructuredDocumentation","src":"17939:234:12","text":" @dev Helper to set the length of an dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":3411,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"18187:15:12","nodeType":"FunctionDefinition","parameters":{"id":3407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3404,"mutability":"mutable","name":"array","nameLocation":"18221:5:12","nodeType":"VariableDeclaration","scope":3411,"src":"18203:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3402,"name":"uint256","nodeType":"ElementaryTypeName","src":"18203:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3403,"nodeType":"ArrayTypeName","src":"18203:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3406,"mutability":"mutable","name":"len","nameLocation":"18236:3:12","nodeType":"VariableDeclaration","scope":3411,"src":"18228:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3405,"name":"uint256","nodeType":"ElementaryTypeName","src":"18228:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18202:38:12"},"returnParameters":{"id":3408,"nodeType":"ParameterList","parameters":[],"src":"18250:0:12"},"scope":3412,"src":"18178:160:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3413,"src":"459:17881:12","usedErrors":[],"usedEvents":[]}],"src":"183:18158:12"},"id":12},"@openzeppelin/contracts/utils/Comparators.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","exportedSymbols":{"Comparators":[3444]},"id":3445,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3414,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"Comparators","contractDependencies":[],"contractKind":"library","documentation":{"id":3415,"nodeType":"StructuredDocumentation","src":"131:92:13","text":" @dev Provides a set of functions to compare values.\n _Available since v5.1._"},"fullyImplemented":true,"id":3444,"linearizedBaseContracts":[3444],"name":"Comparators","nameLocation":"232:11:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":3428,"nodeType":"Block","src":"313:29:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3424,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"330:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3425,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"334:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"330:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3423,"id":3427,"nodeType":"Return","src":"323:12:13"}]},"id":3429,"implemented":true,"kind":"function","modifiers":[],"name":"lt","nameLocation":"259:2:13","nodeType":"FunctionDefinition","parameters":{"id":3420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3417,"mutability":"mutable","name":"a","nameLocation":"270:1:13","nodeType":"VariableDeclaration","scope":3429,"src":"262:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3416,"name":"uint256","nodeType":"ElementaryTypeName","src":"262:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3419,"mutability":"mutable","name":"b","nameLocation":"281:1:13","nodeType":"VariableDeclaration","scope":3429,"src":"273:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3418,"name":"uint256","nodeType":"ElementaryTypeName","src":"273:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"261:22:13"},"returnParameters":{"id":3423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3422,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3429,"src":"307:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3421,"name":"bool","nodeType":"ElementaryTypeName","src":"307:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"306:6:13"},"scope":3444,"src":"250:92:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3442,"nodeType":"Block","src":"411:29:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3438,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"428:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3439,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"432:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"428:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3437,"id":3441,"nodeType":"Return","src":"421:12:13"}]},"id":3443,"implemented":true,"kind":"function","modifiers":[],"name":"gt","nameLocation":"357:2:13","nodeType":"FunctionDefinition","parameters":{"id":3434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3431,"mutability":"mutable","name":"a","nameLocation":"368:1:13","nodeType":"VariableDeclaration","scope":3443,"src":"360:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3430,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3433,"mutability":"mutable","name":"b","nameLocation":"379:1:13","nodeType":"VariableDeclaration","scope":3443,"src":"371:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3432,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"359:22:13"},"returnParameters":{"id":3437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3443,"src":"405:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3435,"name":"bool","nodeType":"ElementaryTypeName","src":"405:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"404:6:13"},"scope":3444,"src":"348:92:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3445,"src":"224:218:13","usedErrors":[],"usedEvents":[]}],"src":"105:338:13"},"id":13},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[3474]},"id":3475,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3446,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:14"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":3447,"nodeType":"StructuredDocumentation","src":"127:496:14","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":3474,"linearizedBaseContracts":[3474],"name":"Context","nameLocation":"642:7:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":3455,"nodeType":"Block","src":"718:34:14","statements":[{"expression":{"expression":{"id":3452,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"735:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:14","memberName":"sender","nodeType":"MemberAccess","src":"735:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3451,"id":3454,"nodeType":"Return","src":"728:17:14"}]},"id":3456,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:14","nodeType":"FunctionDefinition","parameters":{"id":3448,"nodeType":"ParameterList","parameters":[],"src":"675:2:14"},"returnParameters":{"id":3451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3450,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3456,"src":"709:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3449,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:14"},"scope":3474,"src":"656:96:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3464,"nodeType":"Block","src":"825:32:14","statements":[{"expression":{"expression":{"id":3461,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"842:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:14","memberName":"data","nodeType":"MemberAccess","src":"842:8:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":3460,"id":3463,"nodeType":"Return","src":"835:15:14"}]},"id":3465,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:14","nodeType":"FunctionDefinition","parameters":{"id":3457,"nodeType":"ParameterList","parameters":[],"src":"775:2:14"},"returnParameters":{"id":3460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3465,"src":"809:14:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3458,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:14"},"scope":3474,"src":"758:99:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3472,"nodeType":"Block","src":"935:25:14","statements":[{"expression":{"hexValue":"30","id":3470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3469,"id":3471,"nodeType":"Return","src":"945:8:14"}]},"id":3473,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:14","nodeType":"FunctionDefinition","parameters":{"id":3466,"nodeType":"ParameterList","parameters":[],"src":"892:2:14"},"returnParameters":{"id":3469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3473,"src":"926:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3467,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:14"},"scope":3474,"src":"863:97:14","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":3475,"src":"624:338:14","usedErrors":[],"usedEvents":[]}],"src":"101:862:14"},"id":14},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[3526]},"id":3527,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3476,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":3477,"nodeType":"StructuredDocumentation","src":"125:489:15","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":3526,"linearizedBaseContracts":[3526],"name":"Panic","nameLocation":"665:5:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":3478,"nodeType":"StructuredDocumentation","src":"677:36:15","text":"@dev generic / unspecified error"},"id":3481,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:15","nodeType":"VariableDeclaration","scope":3526,"src":"718:40:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3479,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":3480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":3482,"nodeType":"StructuredDocumentation","src":"764:37:15","text":"@dev used by the assert() builtin"},"id":3485,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:15","nodeType":"VariableDeclaration","scope":3526,"src":"806:39:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3483,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":3484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":3486,"nodeType":"StructuredDocumentation","src":"851:41:15","text":"@dev arithmetic underflow or overflow"},"id":3489,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:15","nodeType":"VariableDeclaration","scope":3526,"src":"897:47:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3487,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":3488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:15","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":3490,"nodeType":"StructuredDocumentation","src":"950:35:15","text":"@dev division or modulo by zero"},"id":3493,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:15","nodeType":"VariableDeclaration","scope":3526,"src":"990:49:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3491,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":3492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:15","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":3494,"nodeType":"StructuredDocumentation","src":"1045:30:15","text":"@dev enum conversion error"},"id":3497,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:15","nodeType":"VariableDeclaration","scope":3526,"src":"1080:54:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3495,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":3496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:15","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":3498,"nodeType":"StructuredDocumentation","src":"1140:36:15","text":"@dev invalid encoding in storage"},"id":3501,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:15","nodeType":"VariableDeclaration","scope":3526,"src":"1181:55:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3499,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":3500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:15","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":3502,"nodeType":"StructuredDocumentation","src":"1242:24:15","text":"@dev empty array pop"},"id":3505,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:15","nodeType":"VariableDeclaration","scope":3526,"src":"1271:48:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3503,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":3504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:15","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":3506,"nodeType":"StructuredDocumentation","src":"1325:35:15","text":"@dev array out of bounds access"},"id":3509,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:15","nodeType":"VariableDeclaration","scope":3526,"src":"1365:52:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3507,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":3508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:15","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":3510,"nodeType":"StructuredDocumentation","src":"1423:65:15","text":"@dev resource error (too large allocation or too large array)"},"id":3513,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:15","nodeType":"VariableDeclaration","scope":3526,"src":"1493:47:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3511,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":3512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:15","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":3514,"nodeType":"StructuredDocumentation","src":"1546:42:15","text":"@dev calling invalid internal function"},"id":3517,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:15","nodeType":"VariableDeclaration","scope":3526,"src":"1593:58:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3515,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":3516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:15","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":3524,"nodeType":"Block","src":"1819:151:15","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:15","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:15","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:15"},"nodeType":"YulFunctionCall","src":"1868:24:15"},"nodeType":"YulExpressionStatement","src":"1868:24:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:15","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:15"},"nodeType":"YulFunctionCall","src":"1905:18:15"},"nodeType":"YulExpressionStatement","src":"1905:18:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:15","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:15"},"nodeType":"YulFunctionCall","src":"1936:18:15"},"nodeType":"YulExpressionStatement","src":"1936:18:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":3520,"isOffset":false,"isSlot":false,"src":"1918:4:15","valueSize":1}],"flags":["memory-safe"],"id":3523,"nodeType":"InlineAssembly","src":"1829:135:15"}]},"documentation":{"id":3518,"nodeType":"StructuredDocumentation","src":"1658:113:15","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":3525,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:15","nodeType":"FunctionDefinition","parameters":{"id":3521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3520,"mutability":"mutable","name":"code","nameLocation":"1799:4:15","nodeType":"VariableDeclaration","scope":3525,"src":"1791:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3519,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:15"},"returnParameters":{"id":3522,"nodeType":"ParameterList","parameters":[],"src":"1819:0:15"},"scope":3526,"src":"1776:194:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3527,"src":"657:1315:15","usedErrors":[],"usedEvents":[]}],"src":"99:1874:15"},"id":15},"@openzeppelin/contracts/utils/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","exportedSymbols":{"Context":[3474],"Pausable":[3643]},"id":3644,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3528,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3530,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3644,"sourceUnit":3475,"src":"128:45:16","symbolAliases":[{"foreign":{"id":3529,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"136:7:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3532,"name":"Context","nameLocations":["645:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":3474,"src":"645:7:16"},"id":3533,"nodeType":"InheritanceSpecifier","src":"645:7:16"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3531,"nodeType":"StructuredDocumentation","src":"175:439:16","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":3643,"linearizedBaseContracts":[3643,3474],"name":"Pausable","nameLocation":"633:8:16","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":3535,"mutability":"mutable","name":"_paused","nameLocation":"672:7:16","nodeType":"VariableDeclaration","scope":3643,"src":"659:20:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3534,"name":"bool","nodeType":"ElementaryTypeName","src":"659:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":3536,"nodeType":"StructuredDocumentation","src":"686:73:16","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":3540,"name":"Paused","nameLocation":"770:6:16","nodeType":"EventDefinition","parameters":{"id":3539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3538,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"785:7:16","nodeType":"VariableDeclaration","scope":3540,"src":"777:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3537,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:17:16"},"src":"764:30:16"},{"anonymous":false,"documentation":{"id":3541,"nodeType":"StructuredDocumentation","src":"800:70:16","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":3545,"name":"Unpaused","nameLocation":"881:8:16","nodeType":"EventDefinition","parameters":{"id":3544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3543,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"898:7:16","nodeType":"VariableDeclaration","scope":3545,"src":"890:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3542,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"889:17:16"},"src":"875:32:16"},{"documentation":{"id":3546,"nodeType":"StructuredDocumentation","src":"913:76:16","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":3548,"name":"EnforcedPause","nameLocation":"1000:13:16","nodeType":"ErrorDefinition","parameters":{"id":3547,"nodeType":"ParameterList","parameters":[],"src":"1013:2:16"},"src":"994:22:16"},{"documentation":{"id":3549,"nodeType":"StructuredDocumentation","src":"1022:80:16","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":3551,"name":"ExpectedPause","nameLocation":"1113:13:16","nodeType":"ErrorDefinition","parameters":{"id":3550,"nodeType":"ParameterList","parameters":[],"src":"1126:2:16"},"src":"1107:22:16"},{"body":{"id":3559,"nodeType":"Block","src":"1221:32:16","statements":[{"expression":{"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3555,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"1231:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1241:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1231:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3558,"nodeType":"ExpressionStatement","src":"1231:15:16"}]},"documentation":{"id":3552,"nodeType":"StructuredDocumentation","src":"1135:67:16","text":" @dev Initializes the contract in unpaused state."},"id":3560,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3553,"nodeType":"ParameterList","parameters":[],"src":"1218:2:16"},"returnParameters":{"id":3554,"nodeType":"ParameterList","parameters":[],"src":"1221:0:16"},"scope":3643,"src":"1207:46:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3567,"nodeType":"Block","src":"1464:47:16","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3563,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3597,"src":"1474:17:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1474:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3565,"nodeType":"ExpressionStatement","src":"1474:19:16"},{"id":3566,"nodeType":"PlaceholderStatement","src":"1503:1:16"}]},"documentation":{"id":3561,"nodeType":"StructuredDocumentation","src":"1259:175:16","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":3568,"name":"whenNotPaused","nameLocation":"1448:13:16","nodeType":"ModifierDefinition","parameters":{"id":3562,"nodeType":"ParameterList","parameters":[],"src":"1461:2:16"},"src":"1439:72:16","virtual":false,"visibility":"internal"},{"body":{"id":3575,"nodeType":"Block","src":"1711:44:16","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3571,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"1721:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1721:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3573,"nodeType":"ExpressionStatement","src":"1721:16:16"},{"id":3574,"nodeType":"PlaceholderStatement","src":"1747:1:16"}]},"documentation":{"id":3569,"nodeType":"StructuredDocumentation","src":"1517:167:16","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":3576,"name":"whenPaused","nameLocation":"1698:10:16","nodeType":"ModifierDefinition","parameters":{"id":3570,"nodeType":"ParameterList","parameters":[],"src":"1708:2:16"},"src":"1689:66:16","virtual":false,"visibility":"internal"},{"body":{"id":3584,"nodeType":"Block","src":"1903:31:16","statements":[{"expression":{"id":3582,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"1920:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3581,"id":3583,"nodeType":"Return","src":"1913:14:16"}]},"documentation":{"id":3577,"nodeType":"StructuredDocumentation","src":"1761:84:16","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":3585,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1859:6:16","nodeType":"FunctionDefinition","parameters":{"id":3578,"nodeType":"ParameterList","parameters":[],"src":"1865:2:16"},"returnParameters":{"id":3581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3585,"src":"1897:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3579,"name":"bool","nodeType":"ElementaryTypeName","src":"1897:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1896:6:16"},"scope":3643,"src":"1850:84:16","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3596,"nodeType":"Block","src":"2053:77:16","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":3589,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"2067:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2067:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3595,"nodeType":"IfStatement","src":"2063:61:16","trueBody":{"id":3594,"nodeType":"Block","src":"2077:47:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3591,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"2098:13:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2098:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3593,"nodeType":"RevertStatement","src":"2091:22:16"}]}}]},"documentation":{"id":3586,"nodeType":"StructuredDocumentation","src":"1940:57:16","text":" @dev Throws if the contract is paused."},"id":3597,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2011:17:16","nodeType":"FunctionDefinition","parameters":{"id":3587,"nodeType":"ParameterList","parameters":[],"src":"2028:2:16"},"returnParameters":{"id":3588,"nodeType":"ParameterList","parameters":[],"src":"2053:0:16"},"scope":3643,"src":"2002:128:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3609,"nodeType":"Block","src":"2250:78:16","statements":[{"condition":{"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2264:9:16","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3601,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3585,"src":"2265:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2265:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3608,"nodeType":"IfStatement","src":"2260:62:16","trueBody":{"id":3607,"nodeType":"Block","src":"2275:47:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3604,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"2296:13:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3606,"nodeType":"RevertStatement","src":"2289:22:16"}]}}]},"documentation":{"id":3598,"nodeType":"StructuredDocumentation","src":"2136:61:16","text":" @dev Throws if the contract is not paused."},"id":3610,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2211:14:16","nodeType":"FunctionDefinition","parameters":{"id":3599,"nodeType":"ParameterList","parameters":[],"src":"2225:2:16"},"returnParameters":{"id":3600,"nodeType":"ParameterList","parameters":[],"src":"2250:0:16"},"scope":3643,"src":"2202:126:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3625,"nodeType":"Block","src":"2512:66:16","statements":[{"expression":{"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3616,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"2522:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2532:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2522:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3619,"nodeType":"ExpressionStatement","src":"2522:14:16"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3621,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"2558:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2558:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3620,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"2551:6:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2551:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3624,"nodeType":"EmitStatement","src":"2546:25:16"}]},"documentation":{"id":3611,"nodeType":"StructuredDocumentation","src":"2334:124:16","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":3626,"implemented":true,"kind":"function","modifiers":[{"id":3614,"kind":"modifierInvocation","modifierName":{"id":3613,"name":"whenNotPaused","nameLocations":["2498:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":3568,"src":"2498:13:16"},"nodeType":"ModifierInvocation","src":"2498:13:16"}],"name":"_pause","nameLocation":"2472:6:16","nodeType":"FunctionDefinition","parameters":{"id":3612,"nodeType":"ParameterList","parameters":[],"src":"2478:2:16"},"returnParameters":{"id":3615,"nodeType":"ParameterList","parameters":[],"src":"2512:0:16"},"scope":3643,"src":"2463:115:16","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3641,"nodeType":"Block","src":"2758:69:16","statements":[{"expression":{"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3632,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"2768:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2778:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2768:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3635,"nodeType":"ExpressionStatement","src":"2768:15:16"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3637,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"2807:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2807:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3636,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"2798:8:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2798:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3640,"nodeType":"EmitStatement","src":"2793:27:16"}]},"documentation":{"id":3627,"nodeType":"StructuredDocumentation","src":"2584:121:16","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":3642,"implemented":true,"kind":"function","modifiers":[{"id":3630,"kind":"modifierInvocation","modifierName":{"id":3629,"name":"whenPaused","nameLocations":["2747:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":3576,"src":"2747:10:16"},"nodeType":"ModifierInvocation","src":"2747:10:16"}],"name":"_unpause","nameLocation":"2719:8:16","nodeType":"FunctionDefinition","parameters":{"id":3628,"nodeType":"ParameterList","parameters":[],"src":"2727:2:16"},"returnParameters":{"id":3631,"nodeType":"ParameterList","parameters":[],"src":"2758:0:16"},"scope":3643,"src":"2710:117:16","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3644,"src":"615:2214:16","usedErrors":[3548,3551],"usedEvents":[3540,3545]}],"src":"102:2728:16"},"id":16},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[3712]},"id":3713,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3645,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:17"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":3646,"nodeType":"StructuredDocumentation","src":"135:894:17","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":3712,"linearizedBaseContracts":[3712],"name":"ReentrancyGuard","nameLocation":"1048:15:17","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3649,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:17","nodeType":"VariableDeclaration","scope":3712,"src":"1818:40:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3647,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":3648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":3652,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:17","nodeType":"VariableDeclaration","scope":3712,"src":"1864:36:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3650,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":3651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":3654,"mutability":"mutable","name":"_status","nameLocation":"1923:7:17","nodeType":"VariableDeclaration","scope":3712,"src":"1907:23:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3653,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":3655,"nodeType":"StructuredDocumentation","src":"1937:52:17","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":3657,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:17","nodeType":"ErrorDefinition","parameters":{"id":3656,"nodeType":"ParameterList","parameters":[],"src":"2028:2:17"},"src":"1994:37:17"},{"body":{"id":3664,"nodeType":"Block","src":"2051:38:17","statements":[{"expression":{"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3660,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"2061:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3661,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"2071:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3663,"nodeType":"ExpressionStatement","src":"2061:21:17"}]},"id":3665,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3658,"nodeType":"ParameterList","parameters":[],"src":"2048:2:17"},"returnParameters":{"id":3659,"nodeType":"ParameterList","parameters":[],"src":"2051:0:17"},"scope":3712,"src":"2037:52:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3675,"nodeType":"Block","src":"2490:79:17","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3668,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"2500:19:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3670,"nodeType":"ExpressionStatement","src":"2500:21:17"},{"id":3671,"nodeType":"PlaceholderStatement","src":"2531:1:17"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3672,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"2542:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3674,"nodeType":"ExpressionStatement","src":"2542:20:17"}]},"documentation":{"id":3666,"nodeType":"StructuredDocumentation","src":"2095:366:17","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":3676,"name":"nonReentrant","nameLocation":"2475:12:17","nodeType":"ModifierDefinition","parameters":{"id":3667,"nodeType":"ParameterList","parameters":[],"src":"2487:2:17"},"src":"2466:103:17","virtual":false,"visibility":"internal"},{"body":{"id":3691,"nodeType":"Block","src":"2614:268:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3679,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"2702:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3680,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"2713:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3686,"nodeType":"IfStatement","src":"2698:86:17","trueBody":{"id":3685,"nodeType":"Block","src":"2722:62:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3682,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"2743:28:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3684,"nodeType":"RevertStatement","src":"2736:37:17"}]}},{"expression":{"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3687,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"2858:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3688,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"2868:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3690,"nodeType":"ExpressionStatement","src":"2858:17:17"}]},"id":3692,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:17","nodeType":"FunctionDefinition","parameters":{"id":3677,"nodeType":"ParameterList","parameters":[],"src":"2603:2:17"},"returnParameters":{"id":3678,"nodeType":"ParameterList","parameters":[],"src":"2614:0:17"},"scope":3712,"src":"2575:307:17","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3699,"nodeType":"Block","src":"2926:170:17","statements":[{"expression":{"id":3697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3695,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"3068:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3696,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"3078:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3698,"nodeType":"ExpressionStatement","src":"3068:21:17"}]},"id":3700,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:17","nodeType":"FunctionDefinition","parameters":{"id":3693,"nodeType":"ParameterList","parameters":[],"src":"2915:2:17"},"returnParameters":{"id":3694,"nodeType":"ParameterList","parameters":[],"src":"2926:0:17"},"scope":3712,"src":"2888:208:17","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3710,"nodeType":"Block","src":"3339:42:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3706,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"3356:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3707,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"3367:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3705,"id":3709,"nodeType":"Return","src":"3349:25:17"}]},"documentation":{"id":3701,"nodeType":"StructuredDocumentation","src":"3102:168:17","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":3711,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:17","nodeType":"FunctionDefinition","parameters":{"id":3702,"nodeType":"ParameterList","parameters":[],"src":"3307:2:17"},"returnParameters":{"id":3705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3711,"src":"3333:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3703,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:17"},"scope":3712,"src":"3275:106:17","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3713,"src":"1030:2353:17","usedErrors":[3657],"usedEvents":[]}],"src":"109:3275:17"},"id":17},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","exportedSymbols":{"SlotDerivation":[3842]},"id":3843,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3714,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"199:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"SlotDerivation","contractDependencies":[],"contractKind":"library","documentation":{"id":3715,"nodeType":"StructuredDocumentation","src":"225:1372:18","text":" @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n the solidity language / compiler.\n See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n Example usage:\n ```solidity\n contract Example {\n     // Add the library methods\n     using StorageSlot for bytes32;\n     using SlotDerivation for bytes32;\n     // Declare a namespace\n     string private constant _NAMESPACE = \"<namespace>\" // eg. OpenZeppelin.Slot\n     function setValueInNamespace(uint256 key, address newValue) internal {\n         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n     }\n     function getValueInNamespace(uint256 key) internal view returns (address) {\n         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n     }\n }\n ```\n TIP: Consider using this library along with {StorageSlot}.\n NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n upgrade safety will ignore the slots accessed through this library.\n _Available since v5.1._"},"fullyImplemented":true,"id":3842,"linearizedBaseContracts":[3842],"name":"SlotDerivation","nameLocation":"1606:14:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":3724,"nodeType":"Block","src":"1789:194:18","statements":[{"AST":{"nodeType":"YulBlock","src":"1824:153:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1845:4:18","type":"","value":"0x00"},{"arguments":[{"arguments":[{"arguments":[{"name":"namespace","nodeType":"YulIdentifier","src":"1869:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1880:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1865:3:18"},"nodeType":"YulFunctionCall","src":"1865:20:18"},{"arguments":[{"name":"namespace","nodeType":"YulIdentifier","src":"1893:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1887:5:18"},"nodeType":"YulFunctionCall","src":"1887:16:18"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1855:9:18"},"nodeType":"YulFunctionCall","src":"1855:49:18"},{"kind":"number","nodeType":"YulLiteral","src":"1906:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1851:3:18"},"nodeType":"YulFunctionCall","src":"1851:57:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1838:6:18"},"nodeType":"YulFunctionCall","src":"1838:71:18"},"nodeType":"YulExpressionStatement","src":"1838:71:18"},{"nodeType":"YulAssignment","src":"1922:45:18","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1944:4:18","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1950:4:18","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1934:9:18"},"nodeType":"YulFunctionCall","src":"1934:21:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1961:4:18","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1957:3:18"},"nodeType":"YulFunctionCall","src":"1957:9:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1930:3:18"},"nodeType":"YulFunctionCall","src":"1930:37:18"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"1922:4:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3718,"isOffset":false,"isSlot":false,"src":"1869:9:18","valueSize":1},{"declaration":3718,"isOffset":false,"isSlot":false,"src":"1893:9:18","valueSize":1},{"declaration":3721,"isOffset":false,"isSlot":false,"src":"1922:4:18","valueSize":1}],"flags":["memory-safe"],"id":3723,"nodeType":"InlineAssembly","src":"1799:178:18"}]},"documentation":{"id":3716,"nodeType":"StructuredDocumentation","src":"1627:74:18","text":" @dev Derive an ERC-7201 slot from a string (namespace)."},"id":3725,"implemented":true,"kind":"function","modifiers":[],"name":"erc7201Slot","nameLocation":"1715:11:18","nodeType":"FunctionDefinition","parameters":{"id":3719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3718,"mutability":"mutable","name":"namespace","nameLocation":"1741:9:18","nodeType":"VariableDeclaration","scope":3725,"src":"1727:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3717,"name":"string","nodeType":"ElementaryTypeName","src":"1727:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1726:25:18"},"returnParameters":{"id":3722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3721,"mutability":"mutable","name":"slot","nameLocation":"1783:4:18","nodeType":"VariableDeclaration","scope":3725,"src":"1775:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3720,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1775:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1774:14:18"},"scope":3842,"src":"1706:277:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3746,"nodeType":"Block","src":"2175:86:18","statements":[{"id":3745,"nodeType":"UncheckedBlock","src":"2185:70:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3739,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"2232:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2224:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3737,"name":"uint256","nodeType":"ElementaryTypeName","src":"2224:7:18","typeDescriptions":{}}},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2224:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3741,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"2240:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2224:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2216:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3735,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2216:7:18","typeDescriptions":{}}},"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2216:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3734,"id":3744,"nodeType":"Return","src":"2209:35:18"}]}]},"documentation":{"id":3726,"nodeType":"StructuredDocumentation","src":"1989:99:18","text":" @dev Add an offset to a slot to get the n-th element of a structure or an array."},"id":3747,"implemented":true,"kind":"function","modifiers":[],"name":"offset","nameLocation":"2102:6:18","nodeType":"FunctionDefinition","parameters":{"id":3731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3728,"mutability":"mutable","name":"slot","nameLocation":"2117:4:18","nodeType":"VariableDeclaration","scope":3747,"src":"2109:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3727,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2109:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3730,"mutability":"mutable","name":"pos","nameLocation":"2131:3:18","nodeType":"VariableDeclaration","scope":3747,"src":"2123:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3729,"name":"uint256","nodeType":"ElementaryTypeName","src":"2123:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2108:27:18"},"returnParameters":{"id":3734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3733,"mutability":"mutable","name":"result","nameLocation":"2167:6:18","nodeType":"VariableDeclaration","scope":3747,"src":"2159:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3732,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2159:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2158:16:18"},"scope":3842,"src":"2093:168:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3756,"nodeType":"Block","src":"2464:127:18","statements":[{"AST":{"nodeType":"YulBlock","src":"2499:86:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2520:4:18","type":"","value":"0x00"},{"name":"slot","nodeType":"YulIdentifier","src":"2526:4:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2513:6:18"},"nodeType":"YulFunctionCall","src":"2513:18:18"},"nodeType":"YulExpressionStatement","src":"2513:18:18"},{"nodeType":"YulAssignment","src":"2544:31:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2564:4:18","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"2570:4:18","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2554:9:18"},"nodeType":"YulFunctionCall","src":"2554:21:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2544:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3753,"isOffset":false,"isSlot":false,"src":"2544:6:18","valueSize":1},{"declaration":3750,"isOffset":false,"isSlot":false,"src":"2526:4:18","valueSize":1}],"flags":["memory-safe"],"id":3755,"nodeType":"InlineAssembly","src":"2474:111:18"}]},"documentation":{"id":3748,"nodeType":"StructuredDocumentation","src":"2267:118:18","text":" @dev Derive the location of the first element in an array from the slot where the length is stored."},"id":3757,"implemented":true,"kind":"function","modifiers":[],"name":"deriveArray","nameLocation":"2399:11:18","nodeType":"FunctionDefinition","parameters":{"id":3751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3750,"mutability":"mutable","name":"slot","nameLocation":"2419:4:18","nodeType":"VariableDeclaration","scope":3757,"src":"2411:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3749,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2411:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2410:14:18"},"returnParameters":{"id":3754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3753,"mutability":"mutable","name":"result","nameLocation":"2456:6:18","nodeType":"VariableDeclaration","scope":3757,"src":"2448:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3752,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2448:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2447:16:18"},"scope":3842,"src":"2390:201:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3768,"nodeType":"Block","src":"2769:179:18","statements":[{"AST":{"nodeType":"YulBlock","src":"2804:138:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2825:4:18","type":"","value":"0x00"},{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"2835:3:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2844:2:18","type":"","value":"96"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2852:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2848:3:18"},"nodeType":"YulFunctionCall","src":"2848:6:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2840:3:18"},"nodeType":"YulFunctionCall","src":"2840:15:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2831:3:18"},"nodeType":"YulFunctionCall","src":"2831:25:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2818:6:18"},"nodeType":"YulFunctionCall","src":"2818:39:18"},"nodeType":"YulExpressionStatement","src":"2818:39:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2877:4:18","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"2883:4:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2870:6:18"},"nodeType":"YulFunctionCall","src":"2870:18:18"},"nodeType":"YulExpressionStatement","src":"2870:18:18"},{"nodeType":"YulAssignment","src":"2901:31:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2921:4:18","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"2927:4:18","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2911:9:18"},"nodeType":"YulFunctionCall","src":"2911:21:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2901:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3762,"isOffset":false,"isSlot":false,"src":"2835:3:18","valueSize":1},{"declaration":3765,"isOffset":false,"isSlot":false,"src":"2901:6:18","valueSize":1},{"declaration":3760,"isOffset":false,"isSlot":false,"src":"2883:4:18","valueSize":1}],"flags":["memory-safe"],"id":3767,"nodeType":"InlineAssembly","src":"2779:163:18"}]},"documentation":{"id":3758,"nodeType":"StructuredDocumentation","src":"2597:78:18","text":" @dev Derive the location of a mapping element from the key."},"id":3769,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"2689:13:18","nodeType":"FunctionDefinition","parameters":{"id":3763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3760,"mutability":"mutable","name":"slot","nameLocation":"2711:4:18","nodeType":"VariableDeclaration","scope":3769,"src":"2703:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3759,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3762,"mutability":"mutable","name":"key","nameLocation":"2725:3:18","nodeType":"VariableDeclaration","scope":3769,"src":"2717:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3761,"name":"address","nodeType":"ElementaryTypeName","src":"2717:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2702:27:18"},"returnParameters":{"id":3766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3765,"mutability":"mutable","name":"result","nameLocation":"2761:6:18","nodeType":"VariableDeclaration","scope":3769,"src":"2753:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3764,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2753:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2752:16:18"},"scope":3842,"src":"2680:268:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3780,"nodeType":"Block","src":"3123:173:18","statements":[{"AST":{"nodeType":"YulBlock","src":"3158:132:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3179:4:18","type":"","value":"0x00"},{"arguments":[{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"3199:3:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3192:6:18"},"nodeType":"YulFunctionCall","src":"3192:11:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3185:6:18"},"nodeType":"YulFunctionCall","src":"3185:19:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3172:6:18"},"nodeType":"YulFunctionCall","src":"3172:33:18"},"nodeType":"YulExpressionStatement","src":"3172:33:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3225:4:18","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3231:4:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3218:6:18"},"nodeType":"YulFunctionCall","src":"3218:18:18"},"nodeType":"YulExpressionStatement","src":"3218:18:18"},{"nodeType":"YulAssignment","src":"3249:31:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3269:4:18","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3275:4:18","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3259:9:18"},"nodeType":"YulFunctionCall","src":"3259:21:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3249:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3774,"isOffset":false,"isSlot":false,"src":"3199:3:18","valueSize":1},{"declaration":3777,"isOffset":false,"isSlot":false,"src":"3249:6:18","valueSize":1},{"declaration":3772,"isOffset":false,"isSlot":false,"src":"3231:4:18","valueSize":1}],"flags":["memory-safe"],"id":3779,"nodeType":"InlineAssembly","src":"3133:157:18"}]},"documentation":{"id":3770,"nodeType":"StructuredDocumentation","src":"2954:78:18","text":" @dev Derive the location of a mapping element from the key."},"id":3781,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3046:13:18","nodeType":"FunctionDefinition","parameters":{"id":3775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3772,"mutability":"mutable","name":"slot","nameLocation":"3068:4:18","nodeType":"VariableDeclaration","scope":3781,"src":"3060:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3771,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3060:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3774,"mutability":"mutable","name":"key","nameLocation":"3079:3:18","nodeType":"VariableDeclaration","scope":3781,"src":"3074:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3773,"name":"bool","nodeType":"ElementaryTypeName","src":"3074:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3059:24:18"},"returnParameters":{"id":3778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3777,"mutability":"mutable","name":"result","nameLocation":"3115:6:18","nodeType":"VariableDeclaration","scope":3781,"src":"3107:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3776,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3107:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3106:16:18"},"scope":3842,"src":"3037:259:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3792,"nodeType":"Block","src":"3474:157:18","statements":[{"AST":{"nodeType":"YulBlock","src":"3509:116:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3530:4:18","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"3536:3:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3523:6:18"},"nodeType":"YulFunctionCall","src":"3523:17:18"},"nodeType":"YulExpressionStatement","src":"3523:17:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3560:4:18","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3566:4:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3553:6:18"},"nodeType":"YulFunctionCall","src":"3553:18:18"},"nodeType":"YulExpressionStatement","src":"3553:18:18"},{"nodeType":"YulAssignment","src":"3584:31:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3604:4:18","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3610:4:18","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3594:9:18"},"nodeType":"YulFunctionCall","src":"3594:21:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3584:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3786,"isOffset":false,"isSlot":false,"src":"3536:3:18","valueSize":1},{"declaration":3789,"isOffset":false,"isSlot":false,"src":"3584:6:18","valueSize":1},{"declaration":3784,"isOffset":false,"isSlot":false,"src":"3566:4:18","valueSize":1}],"flags":["memory-safe"],"id":3791,"nodeType":"InlineAssembly","src":"3484:141:18"}]},"documentation":{"id":3782,"nodeType":"StructuredDocumentation","src":"3302:78:18","text":" @dev Derive the location of a mapping element from the key."},"id":3793,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3394:13:18","nodeType":"FunctionDefinition","parameters":{"id":3787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3784,"mutability":"mutable","name":"slot","nameLocation":"3416:4:18","nodeType":"VariableDeclaration","scope":3793,"src":"3408:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3783,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3408:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3786,"mutability":"mutable","name":"key","nameLocation":"3430:3:18","nodeType":"VariableDeclaration","scope":3793,"src":"3422:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3785,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3422:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3407:27:18"},"returnParameters":{"id":3790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3789,"mutability":"mutable","name":"result","nameLocation":"3466:6:18","nodeType":"VariableDeclaration","scope":3793,"src":"3458:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3788,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3458:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3457:16:18"},"scope":3842,"src":"3385:246:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3804,"nodeType":"Block","src":"3809:157:18","statements":[{"AST":{"nodeType":"YulBlock","src":"3844:116:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3865:4:18","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"3871:3:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3858:6:18"},"nodeType":"YulFunctionCall","src":"3858:17:18"},"nodeType":"YulExpressionStatement","src":"3858:17:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3895:4:18","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3901:4:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3888:6:18"},"nodeType":"YulFunctionCall","src":"3888:18:18"},"nodeType":"YulExpressionStatement","src":"3888:18:18"},{"nodeType":"YulAssignment","src":"3919:31:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3939:4:18","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3945:4:18","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3929:9:18"},"nodeType":"YulFunctionCall","src":"3929:21:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3919:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3798,"isOffset":false,"isSlot":false,"src":"3871:3:18","valueSize":1},{"declaration":3801,"isOffset":false,"isSlot":false,"src":"3919:6:18","valueSize":1},{"declaration":3796,"isOffset":false,"isSlot":false,"src":"3901:4:18","valueSize":1}],"flags":["memory-safe"],"id":3803,"nodeType":"InlineAssembly","src":"3819:141:18"}]},"documentation":{"id":3794,"nodeType":"StructuredDocumentation","src":"3637:78:18","text":" @dev Derive the location of a mapping element from the key."},"id":3805,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3729:13:18","nodeType":"FunctionDefinition","parameters":{"id":3799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3796,"mutability":"mutable","name":"slot","nameLocation":"3751:4:18","nodeType":"VariableDeclaration","scope":3805,"src":"3743:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3795,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3743:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3798,"mutability":"mutable","name":"key","nameLocation":"3765:3:18","nodeType":"VariableDeclaration","scope":3805,"src":"3757:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3797,"name":"uint256","nodeType":"ElementaryTypeName","src":"3757:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3742:27:18"},"returnParameters":{"id":3802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3801,"mutability":"mutable","name":"result","nameLocation":"3801:6:18","nodeType":"VariableDeclaration","scope":3805,"src":"3793:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3800,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3793:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3792:16:18"},"scope":3842,"src":"3720:246:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3816,"nodeType":"Block","src":"4143:157:18","statements":[{"AST":{"nodeType":"YulBlock","src":"4178:116:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4199:4:18","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"4205:3:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4192:6:18"},"nodeType":"YulFunctionCall","src":"4192:17:18"},"nodeType":"YulExpressionStatement","src":"4192:17:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4229:4:18","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"4235:4:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4222:6:18"},"nodeType":"YulFunctionCall","src":"4222:18:18"},"nodeType":"YulExpressionStatement","src":"4222:18:18"},{"nodeType":"YulAssignment","src":"4253:31:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4273:4:18","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"4279:4:18","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4263:9:18"},"nodeType":"YulFunctionCall","src":"4263:21:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4253:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3810,"isOffset":false,"isSlot":false,"src":"4205:3:18","valueSize":1},{"declaration":3813,"isOffset":false,"isSlot":false,"src":"4253:6:18","valueSize":1},{"declaration":3808,"isOffset":false,"isSlot":false,"src":"4235:4:18","valueSize":1}],"flags":["memory-safe"],"id":3815,"nodeType":"InlineAssembly","src":"4153:141:18"}]},"documentation":{"id":3806,"nodeType":"StructuredDocumentation","src":"3972:78:18","text":" @dev Derive the location of a mapping element from the key."},"id":3817,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4064:13:18","nodeType":"FunctionDefinition","parameters":{"id":3811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3808,"mutability":"mutable","name":"slot","nameLocation":"4086:4:18","nodeType":"VariableDeclaration","scope":3817,"src":"4078:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3807,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4078:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3810,"mutability":"mutable","name":"key","nameLocation":"4099:3:18","nodeType":"VariableDeclaration","scope":3817,"src":"4092:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3809,"name":"int256","nodeType":"ElementaryTypeName","src":"4092:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4077:26:18"},"returnParameters":{"id":3814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3813,"mutability":"mutable","name":"result","nameLocation":"4135:6:18","nodeType":"VariableDeclaration","scope":3817,"src":"4127:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3812,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4127:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4126:16:18"},"scope":3842,"src":"4055:245:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3828,"nodeType":"Block","src":"4484:326:18","statements":[{"AST":{"nodeType":"YulBlock","src":"4519:285:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4533:24:18","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"4553:3:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4547:5:18"},"nodeType":"YulFunctionCall","src":"4547:10:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4537:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4570:27:18","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"4587:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"4592:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4583:3:18"},"nodeType":"YulFunctionCall","src":"4583:14:18"},"variables":[{"name":"begin","nodeType":"YulTypedName","src":"4574:5:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4610:29:18","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"4625:5:18"},{"name":"length","nodeType":"YulIdentifier","src":"4632:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4621:3:18"},"nodeType":"YulFunctionCall","src":"4621:18:18"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"4614:3:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4652:23:18","value":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4671:3:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4665:5:18"},"nodeType":"YulFunctionCall","src":"4665:10:18"},"variables":[{"name":"cache","nodeType":"YulTypedName","src":"4656:5:18","type":""}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4695:3:18"},{"name":"slot","nodeType":"YulIdentifier","src":"4700:4:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4688:6:18"},"nodeType":"YulFunctionCall","src":"4688:17:18"},"nodeType":"YulExpressionStatement","src":"4688:17:18"},{"nodeType":"YulAssignment","src":"4718:45:18","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"4738:5:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4749:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4757:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:18"},"nodeType":"YulFunctionCall","src":"4745:17:18"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4728:9:18"},"nodeType":"YulFunctionCall","src":"4728:35:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4718:6:18"}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4783:3:18"},{"name":"cache","nodeType":"YulIdentifier","src":"4788:5:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4776:6:18"},"nodeType":"YulFunctionCall","src":"4776:18:18"},"nodeType":"YulExpressionStatement","src":"4776:18:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":3822,"isOffset":false,"isSlot":false,"src":"4553:3:18","valueSize":1},{"declaration":3822,"isOffset":false,"isSlot":false,"src":"4587:3:18","valueSize":1},{"declaration":3825,"isOffset":false,"isSlot":false,"src":"4718:6:18","valueSize":1},{"declaration":3820,"isOffset":false,"isSlot":false,"src":"4700:4:18","valueSize":1}],"flags":["memory-safe"],"id":3827,"nodeType":"InlineAssembly","src":"4494:310:18"}]},"documentation":{"id":3818,"nodeType":"StructuredDocumentation","src":"4306:78:18","text":" @dev Derive the location of a mapping element from the key."},"id":3829,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4398:13:18","nodeType":"FunctionDefinition","parameters":{"id":3823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3820,"mutability":"mutable","name":"slot","nameLocation":"4420:4:18","nodeType":"VariableDeclaration","scope":3829,"src":"4412:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3819,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4412:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3822,"mutability":"mutable","name":"key","nameLocation":"4440:3:18","nodeType":"VariableDeclaration","scope":3829,"src":"4426:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3821,"name":"string","nodeType":"ElementaryTypeName","src":"4426:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4411:33:18"},"returnParameters":{"id":3826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3825,"mutability":"mutable","name":"result","nameLocation":"4476:6:18","nodeType":"VariableDeclaration","scope":3829,"src":"4468:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3824,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4468:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4467:16:18"},"scope":3842,"src":"4389:421:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3840,"nodeType":"Block","src":"4993:326:18","statements":[{"AST":{"nodeType":"YulBlock","src":"5028:285:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5042:24:18","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"5062:3:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5056:5:18"},"nodeType":"YulFunctionCall","src":"5056:10:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5046:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5079:27:18","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"5096:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"5101:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5092:3:18"},"nodeType":"YulFunctionCall","src":"5092:14:18"},"variables":[{"name":"begin","nodeType":"YulTypedName","src":"5083:5:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5119:29:18","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"5134:5:18"},{"name":"length","nodeType":"YulIdentifier","src":"5141:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5130:3:18"},"nodeType":"YulFunctionCall","src":"5130:18:18"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"5123:3:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5161:23:18","value":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5180:3:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5174:5:18"},"nodeType":"YulFunctionCall","src":"5174:10:18"},"variables":[{"name":"cache","nodeType":"YulTypedName","src":"5165:5:18","type":""}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5204:3:18"},{"name":"slot","nodeType":"YulIdentifier","src":"5209:4:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5197:6:18"},"nodeType":"YulFunctionCall","src":"5197:17:18"},"nodeType":"YulExpressionStatement","src":"5197:17:18"},{"nodeType":"YulAssignment","src":"5227:45:18","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"5247:5:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5258:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"5266:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5254:3:18"},"nodeType":"YulFunctionCall","src":"5254:17:18"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"5237:9:18"},"nodeType":"YulFunctionCall","src":"5237:35:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5227:6:18"}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5292:3:18"},{"name":"cache","nodeType":"YulIdentifier","src":"5297:5:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5285:6:18"},"nodeType":"YulFunctionCall","src":"5285:18:18"},"nodeType":"YulExpressionStatement","src":"5285:18:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":3834,"isOffset":false,"isSlot":false,"src":"5062:3:18","valueSize":1},{"declaration":3834,"isOffset":false,"isSlot":false,"src":"5096:3:18","valueSize":1},{"declaration":3837,"isOffset":false,"isSlot":false,"src":"5227:6:18","valueSize":1},{"declaration":3832,"isOffset":false,"isSlot":false,"src":"5209:4:18","valueSize":1}],"flags":["memory-safe"],"id":3839,"nodeType":"InlineAssembly","src":"5003:310:18"}]},"documentation":{"id":3830,"nodeType":"StructuredDocumentation","src":"4816:78:18","text":" @dev Derive the location of a mapping element from the key."},"id":3841,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4908:13:18","nodeType":"FunctionDefinition","parameters":{"id":3835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3832,"mutability":"mutable","name":"slot","nameLocation":"4930:4:18","nodeType":"VariableDeclaration","scope":3841,"src":"4922:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3831,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4922:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3834,"mutability":"mutable","name":"key","nameLocation":"4949:3:18","nodeType":"VariableDeclaration","scope":3841,"src":"4936:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3833,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4921:32:18"},"returnParameters":{"id":3838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3837,"mutability":"mutable","name":"result","nameLocation":"4985:6:18","nodeType":"VariableDeclaration","scope":3841,"src":"4977:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3836,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4977:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4976:16:18"},"scope":3842,"src":"4899:420:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3843,"src":"1598:3723:18","usedErrors":[],"usedEvents":[]}],"src":"199:5123:18"},"id":18},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[3966]},"id":3967,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3844,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":3845,"nodeType":"StructuredDocumentation","src":"219:1187:19","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":3966,"linearizedBaseContracts":[3966],"name":"StorageSlot","nameLocation":"1415:11:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":3848,"members":[{"constant":false,"id":3847,"mutability":"mutable","name":"value","nameLocation":"1470:5:19","nodeType":"VariableDeclaration","scope":3848,"src":"1462:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3846,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:19","nodeType":"StructDefinition","scope":3966,"src":"1433:49:19","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":3851,"members":[{"constant":false,"id":3850,"mutability":"mutable","name":"value","nameLocation":"1522:5:19","nodeType":"VariableDeclaration","scope":3851,"src":"1517:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3849,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:19","nodeType":"StructDefinition","scope":3966,"src":"1488:46:19","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":3854,"members":[{"constant":false,"id":3853,"mutability":"mutable","name":"value","nameLocation":"1577:5:19","nodeType":"VariableDeclaration","scope":3854,"src":"1569:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3852,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:19","nodeType":"StructDefinition","scope":3966,"src":"1540:49:19","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":3857,"members":[{"constant":false,"id":3856,"mutability":"mutable","name":"value","nameLocation":"1632:5:19","nodeType":"VariableDeclaration","scope":3857,"src":"1624:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3855,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:19","nodeType":"StructDefinition","scope":3966,"src":"1595:49:19","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":3860,"members":[{"constant":false,"id":3859,"mutability":"mutable","name":"value","nameLocation":"1685:5:19","nodeType":"VariableDeclaration","scope":3860,"src":"1678:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3858,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:19","nodeType":"StructDefinition","scope":3966,"src":"1650:47:19","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":3863,"members":[{"constant":false,"id":3862,"mutability":"mutable","name":"value","nameLocation":"1738:5:19","nodeType":"VariableDeclaration","scope":3863,"src":"1731:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3861,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:19","nodeType":"StructDefinition","scope":3966,"src":"1703:47:19","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":3866,"members":[{"constant":false,"id":3865,"mutability":"mutable","name":"value","nameLocation":"1789:5:19","nodeType":"VariableDeclaration","scope":3866,"src":"1783:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3864,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:19","nodeType":"StructDefinition","scope":3966,"src":"1756:45:19","visibility":"public"},{"body":{"id":3876,"nodeType":"Block","src":"1983:79:19","statements":[{"AST":{"nodeType":"YulBlock","src":"2018:38:19","statements":[{"nodeType":"YulAssignment","src":"2032:14:19","value":{"name":"slot","nodeType":"YulIdentifier","src":"2042:4:19"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2032:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3873,"isOffset":false,"isSlot":true,"src":"2032:6:19","suffix":"slot","valueSize":1},{"declaration":3869,"isOffset":false,"isSlot":false,"src":"2042:4:19","valueSize":1}],"flags":["memory-safe"],"id":3875,"nodeType":"InlineAssembly","src":"1993:63:19"}]},"documentation":{"id":3867,"nodeType":"StructuredDocumentation","src":"1807:87:19","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":3877,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:19","nodeType":"FunctionDefinition","parameters":{"id":3870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3869,"mutability":"mutable","name":"slot","nameLocation":"1931:4:19","nodeType":"VariableDeclaration","scope":3877,"src":"1923:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3868,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:19"},"returnParameters":{"id":3874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3873,"mutability":"mutable","name":"r","nameLocation":"1980:1:19","nodeType":"VariableDeclaration","scope":3877,"src":"1960:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3848_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":3872,"nodeType":"UserDefinedTypeName","pathNode":{"id":3871,"name":"AddressSlot","nameLocations":["1960:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":3848,"src":"1960:11:19"},"referencedDeclaration":3848,"src":"1960:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3848_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:19"},"scope":3966,"src":"1899:163:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3887,"nodeType":"Block","src":"2243:79:19","statements":[{"AST":{"nodeType":"YulBlock","src":"2278:38:19","statements":[{"nodeType":"YulAssignment","src":"2292:14:19","value":{"name":"slot","nodeType":"YulIdentifier","src":"2302:4:19"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2292:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3884,"isOffset":false,"isSlot":true,"src":"2292:6:19","suffix":"slot","valueSize":1},{"declaration":3880,"isOffset":false,"isSlot":false,"src":"2302:4:19","valueSize":1}],"flags":["memory-safe"],"id":3886,"nodeType":"InlineAssembly","src":"2253:63:19"}]},"documentation":{"id":3878,"nodeType":"StructuredDocumentation","src":"2068:86:19","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":3888,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:19","nodeType":"FunctionDefinition","parameters":{"id":3881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3880,"mutability":"mutable","name":"slot","nameLocation":"2191:4:19","nodeType":"VariableDeclaration","scope":3888,"src":"2183:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3879,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:19"},"returnParameters":{"id":3885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3884,"mutability":"mutable","name":"r","nameLocation":"2240:1:19","nodeType":"VariableDeclaration","scope":3888,"src":"2220:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3851_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":3883,"nodeType":"UserDefinedTypeName","pathNode":{"id":3882,"name":"BooleanSlot","nameLocations":["2220:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":3851,"src":"2220:11:19"},"referencedDeclaration":3851,"src":"2220:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3851_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:19"},"scope":3966,"src":"2159:163:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3898,"nodeType":"Block","src":"2503:79:19","statements":[{"AST":{"nodeType":"YulBlock","src":"2538:38:19","statements":[{"nodeType":"YulAssignment","src":"2552:14:19","value":{"name":"slot","nodeType":"YulIdentifier","src":"2562:4:19"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2552:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3895,"isOffset":false,"isSlot":true,"src":"2552:6:19","suffix":"slot","valueSize":1},{"declaration":3891,"isOffset":false,"isSlot":false,"src":"2562:4:19","valueSize":1}],"flags":["memory-safe"],"id":3897,"nodeType":"InlineAssembly","src":"2513:63:19"}]},"documentation":{"id":3889,"nodeType":"StructuredDocumentation","src":"2328:86:19","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":3899,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:19","nodeType":"FunctionDefinition","parameters":{"id":3892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3891,"mutability":"mutable","name":"slot","nameLocation":"2451:4:19","nodeType":"VariableDeclaration","scope":3899,"src":"2443:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3890,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:19"},"returnParameters":{"id":3896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3895,"mutability":"mutable","name":"r","nameLocation":"2500:1:19","nodeType":"VariableDeclaration","scope":3899,"src":"2480:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3854_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":3894,"nodeType":"UserDefinedTypeName","pathNode":{"id":3893,"name":"Bytes32Slot","nameLocations":["2480:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":3854,"src":"2480:11:19"},"referencedDeclaration":3854,"src":"2480:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3854_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:19"},"scope":3966,"src":"2419:163:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3909,"nodeType":"Block","src":"2763:79:19","statements":[{"AST":{"nodeType":"YulBlock","src":"2798:38:19","statements":[{"nodeType":"YulAssignment","src":"2812:14:19","value":{"name":"slot","nodeType":"YulIdentifier","src":"2822:4:19"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2812:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3906,"isOffset":false,"isSlot":true,"src":"2812:6:19","suffix":"slot","valueSize":1},{"declaration":3902,"isOffset":false,"isSlot":false,"src":"2822:4:19","valueSize":1}],"flags":["memory-safe"],"id":3908,"nodeType":"InlineAssembly","src":"2773:63:19"}]},"documentation":{"id":3900,"nodeType":"StructuredDocumentation","src":"2588:86:19","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":3910,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:19","nodeType":"FunctionDefinition","parameters":{"id":3903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3902,"mutability":"mutable","name":"slot","nameLocation":"2711:4:19","nodeType":"VariableDeclaration","scope":3910,"src":"2703:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3901,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:19"},"returnParameters":{"id":3907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3906,"mutability":"mutable","name":"r","nameLocation":"2760:1:19","nodeType":"VariableDeclaration","scope":3910,"src":"2740:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3857_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":3905,"nodeType":"UserDefinedTypeName","pathNode":{"id":3904,"name":"Uint256Slot","nameLocations":["2740:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":3857,"src":"2740:11:19"},"referencedDeclaration":3857,"src":"2740:11:19","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3857_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:19"},"scope":3966,"src":"2679:163:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3920,"nodeType":"Block","src":"3020:79:19","statements":[{"AST":{"nodeType":"YulBlock","src":"3055:38:19","statements":[{"nodeType":"YulAssignment","src":"3069:14:19","value":{"name":"slot","nodeType":"YulIdentifier","src":"3079:4:19"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3069:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3917,"isOffset":false,"isSlot":true,"src":"3069:6:19","suffix":"slot","valueSize":1},{"declaration":3913,"isOffset":false,"isSlot":false,"src":"3079:4:19","valueSize":1}],"flags":["memory-safe"],"id":3919,"nodeType":"InlineAssembly","src":"3030:63:19"}]},"documentation":{"id":3911,"nodeType":"StructuredDocumentation","src":"2848:85:19","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":3921,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:19","nodeType":"FunctionDefinition","parameters":{"id":3914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3913,"mutability":"mutable","name":"slot","nameLocation":"2969:4:19","nodeType":"VariableDeclaration","scope":3921,"src":"2961:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3912,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:19"},"returnParameters":{"id":3918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3917,"mutability":"mutable","name":"r","nameLocation":"3017:1:19","nodeType":"VariableDeclaration","scope":3921,"src":"2998:20:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$3860_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":3916,"nodeType":"UserDefinedTypeName","pathNode":{"id":3915,"name":"Int256Slot","nameLocations":["2998:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":3860,"src":"2998:10:19"},"referencedDeclaration":3860,"src":"2998:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$3860_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:19"},"scope":3966,"src":"2938:161:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3931,"nodeType":"Block","src":"3277:79:19","statements":[{"AST":{"nodeType":"YulBlock","src":"3312:38:19","statements":[{"nodeType":"YulAssignment","src":"3326:14:19","value":{"name":"slot","nodeType":"YulIdentifier","src":"3336:4:19"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3326:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3928,"isOffset":false,"isSlot":true,"src":"3326:6:19","suffix":"slot","valueSize":1},{"declaration":3924,"isOffset":false,"isSlot":false,"src":"3336:4:19","valueSize":1}],"flags":["memory-safe"],"id":3930,"nodeType":"InlineAssembly","src":"3287:63:19"}]},"documentation":{"id":3922,"nodeType":"StructuredDocumentation","src":"3105:85:19","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":3932,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:19","nodeType":"FunctionDefinition","parameters":{"id":3925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3924,"mutability":"mutable","name":"slot","nameLocation":"3226:4:19","nodeType":"VariableDeclaration","scope":3932,"src":"3218:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3923,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:19"},"returnParameters":{"id":3929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3928,"mutability":"mutable","name":"r","nameLocation":"3274:1:19","nodeType":"VariableDeclaration","scope":3932,"src":"3255:20:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3863_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3927,"nodeType":"UserDefinedTypeName","pathNode":{"id":3926,"name":"StringSlot","nameLocations":["3255:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":3863,"src":"3255:10:19"},"referencedDeclaration":3863,"src":"3255:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3863_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:19"},"scope":3966,"src":"3195:161:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3942,"nodeType":"Block","src":"3558:85:19","statements":[{"AST":{"nodeType":"YulBlock","src":"3593:44:19","statements":[{"nodeType":"YulAssignment","src":"3607:20:19","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3617:10:19"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3607:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3939,"isOffset":false,"isSlot":true,"src":"3607:6:19","suffix":"slot","valueSize":1},{"declaration":3935,"isOffset":false,"isSlot":true,"src":"3617:10:19","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3941,"nodeType":"InlineAssembly","src":"3568:69:19"}]},"documentation":{"id":3933,"nodeType":"StructuredDocumentation","src":"3362:101:19","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":3943,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:19","nodeType":"FunctionDefinition","parameters":{"id":3936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3935,"mutability":"mutable","name":"store","nameLocation":"3506:5:19","nodeType":"VariableDeclaration","scope":3943,"src":"3491:20:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3934,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:19"},"returnParameters":{"id":3940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3939,"mutability":"mutable","name":"r","nameLocation":"3555:1:19","nodeType":"VariableDeclaration","scope":3943,"src":"3536:20:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3863_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3938,"nodeType":"UserDefinedTypeName","pathNode":{"id":3937,"name":"StringSlot","nameLocations":["3536:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":3863,"src":"3536:10:19"},"referencedDeclaration":3863,"src":"3536:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3863_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:19"},"scope":3966,"src":"3468:175:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3953,"nodeType":"Block","src":"3818:79:19","statements":[{"AST":{"nodeType":"YulBlock","src":"3853:38:19","statements":[{"nodeType":"YulAssignment","src":"3867:14:19","value":{"name":"slot","nodeType":"YulIdentifier","src":"3877:4:19"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3867:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3950,"isOffset":false,"isSlot":true,"src":"3867:6:19","suffix":"slot","valueSize":1},{"declaration":3946,"isOffset":false,"isSlot":false,"src":"3877:4:19","valueSize":1}],"flags":["memory-safe"],"id":3952,"nodeType":"InlineAssembly","src":"3828:63:19"}]},"documentation":{"id":3944,"nodeType":"StructuredDocumentation","src":"3649:84:19","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":3954,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:19","nodeType":"FunctionDefinition","parameters":{"id":3947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3946,"mutability":"mutable","name":"slot","nameLocation":"3768:4:19","nodeType":"VariableDeclaration","scope":3954,"src":"3760:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3945,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:19"},"returnParameters":{"id":3951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3950,"mutability":"mutable","name":"r","nameLocation":"3815:1:19","nodeType":"VariableDeclaration","scope":3954,"src":"3797:19:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3866_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3949,"nodeType":"UserDefinedTypeName","pathNode":{"id":3948,"name":"BytesSlot","nameLocations":["3797:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":3866,"src":"3797:9:19"},"referencedDeclaration":3866,"src":"3797:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3866_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:19"},"scope":3966,"src":"3738:159:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3964,"nodeType":"Block","src":"4094:85:19","statements":[{"AST":{"nodeType":"YulBlock","src":"4129:44:19","statements":[{"nodeType":"YulAssignment","src":"4143:20:19","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4153:10:19"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4143:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3961,"isOffset":false,"isSlot":true,"src":"4143:6:19","suffix":"slot","valueSize":1},{"declaration":3957,"isOffset":false,"isSlot":true,"src":"4153:10:19","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3963,"nodeType":"InlineAssembly","src":"4104:69:19"}]},"documentation":{"id":3955,"nodeType":"StructuredDocumentation","src":"3903:99:19","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":3965,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:19","nodeType":"FunctionDefinition","parameters":{"id":3958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3957,"mutability":"mutable","name":"store","nameLocation":"4043:5:19","nodeType":"VariableDeclaration","scope":3965,"src":"4029:19:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3956,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:19"},"returnParameters":{"id":3962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3961,"mutability":"mutable","name":"r","nameLocation":"4091:1:19","nodeType":"VariableDeclaration","scope":3965,"src":"4073:19:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3866_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3960,"nodeType":"UserDefinedTypeName","pathNode":{"id":3959,"name":"BytesSlot","nameLocations":["4073:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":3866,"src":"4073:9:19"},"referencedDeclaration":3866,"src":"4073:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3866_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:19"},"scope":3966,"src":"4007:172:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3967,"src":"1407:2774:19","usedErrors":[],"usedEvents":[]}],"src":"193:3989:19"},"id":19},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5928],"SignedMath":[7837],"Strings":[4286]},"id":4287,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3968,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":3970,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4287,"sourceUnit":5929,"src":"127:37:20","symbolAliases":[{"foreign":{"id":3969,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5928,"src":"135:4:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":3972,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4287,"sourceUnit":7838,"src":"165:49:20","symbolAliases":[{"foreign":{"id":3971,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7837,"src":"173:10:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":3973,"nodeType":"StructuredDocumentation","src":"216:34:20","text":" @dev String operations."},"fullyImplemented":true,"id":4286,"linearizedBaseContracts":[4286],"name":"Strings","nameLocation":"259:7:20","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3976,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:20","nodeType":"VariableDeclaration","scope":4286,"src":"273:56:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":3974,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:20","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":3975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":3979,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:20","nodeType":"VariableDeclaration","scope":4286,"src":"335:42:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3977,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":3978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:20","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":3980,"nodeType":"StructuredDocumentation","src":"384:81:20","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":3986,"name":"StringsInsufficientHexLength","nameLocation":"476:28:20","nodeType":"ErrorDefinition","parameters":{"id":3985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3982,"mutability":"mutable","name":"value","nameLocation":"513:5:20","nodeType":"VariableDeclaration","scope":3986,"src":"505:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3981,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3984,"mutability":"mutable","name":"length","nameLocation":"528:6:20","nodeType":"VariableDeclaration","scope":3986,"src":"520:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3983,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:20"},"src":"470:66:20"},{"body":{"id":4033,"nodeType":"Block","src":"708:561:20","statements":[{"id":4032,"nodeType":"UncheckedBlock","src":"718:545:20","statements":[{"assignments":[3995],"declarations":[{"constant":false,"id":3995,"mutability":"mutable","name":"length","nameLocation":"750:6:20","nodeType":"VariableDeclaration","scope":4032,"src":"742:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3994,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4002,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"770:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3996,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5928,"src":"759:4:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5928_$","typeString":"type(library Math)"}},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:20","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5700,"src":"759:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:20"},{"assignments":[4004],"declarations":[{"constant":false,"id":4004,"mutability":"mutable","name":"buffer","nameLocation":"808:6:20","nodeType":"VariableDeclaration","scope":4032,"src":"794:20:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4003,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4009,"initialValue":{"arguments":[{"id":4007,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"828:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":4005,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:20"},{"assignments":[4011],"declarations":[{"constant":false,"id":4011,"mutability":"mutable","name":"ptr","nameLocation":"857:3:20","nodeType":"VariableDeclaration","scope":4032,"src":"849:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4010,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4012,"nodeType":"VariableDeclarationStatement","src":"849:11:20"},{"AST":{"nodeType":"YulBlock","src":"899:67:20","statements":[{"nodeType":"YulAssignment","src":"917:35:20","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"928:6:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"940:2:20","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"944:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"936:3:20"},"nodeType":"YulFunctionCall","src":"936:15:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"924:3:20"},"nodeType":"YulFunctionCall","src":"924:28:20"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"917:3:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4004,"isOffset":false,"isSlot":false,"src":"928:6:20","valueSize":1},{"declaration":3995,"isOffset":false,"isSlot":false,"src":"944:6:20","valueSize":1},{"declaration":4011,"isOffset":false,"isSlot":false,"src":"917:3:20","valueSize":1}],"flags":["memory-safe"],"id":4013,"nodeType":"InlineAssembly","src":"874:92:20"},{"body":{"id":4028,"nodeType":"Block","src":"992:234:20","statements":[{"expression":{"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1010:5:20","subExpression":{"id":4015,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"1010:3:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4017,"nodeType":"ExpressionStatement","src":"1010:5:20"},{"AST":{"nodeType":"YulBlock","src":"1058:86:20","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1088:3:20"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1102:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"1109:2:20","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1098:3:20"},"nodeType":"YulFunctionCall","src":"1098:14:20"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1114:10:20"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1093:4:20"},"nodeType":"YulFunctionCall","src":"1093:32:20"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1080:7:20"},"nodeType":"YulFunctionCall","src":"1080:46:20"},"nodeType":"YulExpressionStatement","src":"1080:46:20"}]},"evmVersion":"paris","externalReferences":[{"declaration":3976,"isOffset":false,"isSlot":false,"src":"1114:10:20","valueSize":1},{"declaration":4011,"isOffset":false,"isSlot":false,"src":"1088:3:20","valueSize":1},{"declaration":3989,"isOffset":false,"isSlot":false,"src":"1102:5:20","valueSize":1}],"flags":["memory-safe"],"id":4018,"nodeType":"InlineAssembly","src":"1033:111:20"},{"expression":{"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"1161:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":4020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1170:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1161:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4022,"nodeType":"ExpressionStatement","src":"1161:11:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"1194:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1203:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1194:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4027,"nodeType":"IfStatement","src":"1190:21:20","trueBody":{"id":4026,"nodeType":"Break","src":"1206:5:20"}}]},"condition":{"hexValue":"74727565","id":4014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"986:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":4029,"nodeType":"WhileStatement","src":"979:247:20"},{"expression":{"id":4030,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4004,"src":"1246:6:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3993,"id":4031,"nodeType":"Return","src":"1239:13:20"}]}]},"documentation":{"id":3987,"nodeType":"StructuredDocumentation","src":"542:90:20","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":4034,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:20","nodeType":"FunctionDefinition","parameters":{"id":3990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3989,"mutability":"mutable","name":"value","nameLocation":"663:5:20","nodeType":"VariableDeclaration","scope":4034,"src":"655:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3988,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:20"},"returnParameters":{"id":3993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3992,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4034,"src":"693:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3991,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:20"},"scope":4286,"src":"637:632:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4059,"nodeType":"Block","src":"1445:92:20","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"1476:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1484:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":4049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1494:2:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":4050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1476:20:20","trueExpression":{"hexValue":"2d","id":4048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1488:3:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":4054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"1522:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":4052,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7837,"src":"1507:10:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7837_$","typeString":"type(library SignedMath)"}},"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1518:3:20","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7836,"src":"1507:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":4055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1507:21:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4051,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"1498:8:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1498:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1462:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4042,"name":"string","nodeType":"ElementaryTypeName","src":"1462:6:20","typeDescriptions":{}}},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:6:20","memberName":"concat","nodeType":"MemberAccess","src":"1462:13:20","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1462:68:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4041,"id":4058,"nodeType":"Return","src":"1455:75:20"}]},"documentation":{"id":4035,"nodeType":"StructuredDocumentation","src":"1275:89:20","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":4060,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1378:14:20","nodeType":"FunctionDefinition","parameters":{"id":4038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4037,"mutability":"mutable","name":"value","nameLocation":"1400:5:20","nodeType":"VariableDeclaration","scope":4060,"src":"1393:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4036,"name":"int256","nodeType":"ElementaryTypeName","src":"1393:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1392:14:20"},"returnParameters":{"id":4041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4040,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4060,"src":"1430:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4039,"name":"string","nodeType":"ElementaryTypeName","src":"1430:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1429:15:20"},"scope":4286,"src":"1369:168:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4079,"nodeType":"Block","src":"1716:100:20","statements":[{"id":4078,"nodeType":"UncheckedBlock","src":"1726:84:20","statements":[{"expression":{"arguments":[{"id":4069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"1769:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"1788:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4070,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5928,"src":"1776:4:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5928_$","typeString":"type(library Math)"}},"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1781:6:20","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5871,"src":"1776:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1776:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1776:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4068,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4080,4163,4183],"referencedDeclaration":4163,"src":"1757:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4067,"id":4077,"nodeType":"Return","src":"1750:49:20"}]}]},"documentation":{"id":4061,"nodeType":"StructuredDocumentation","src":"1543:94:20","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":4080,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1651:11:20","nodeType":"FunctionDefinition","parameters":{"id":4064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4063,"mutability":"mutable","name":"value","nameLocation":"1671:5:20","nodeType":"VariableDeclaration","scope":4080,"src":"1663:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4062,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1662:15:20"},"returnParameters":{"id":4067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4080,"src":"1701:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4065,"name":"string","nodeType":"ElementaryTypeName","src":"1701:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1700:15:20"},"scope":4286,"src":"1642:174:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4162,"nodeType":"Block","src":"2029:435:20","statements":[{"assignments":[4091],"declarations":[{"constant":false,"id":4091,"mutability":"mutable","name":"localValue","nameLocation":"2047:10:20","nodeType":"VariableDeclaration","scope":4162,"src":"2039:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4090,"name":"uint256","nodeType":"ElementaryTypeName","src":"2039:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4093,"initialValue":{"id":4092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"2060:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2039:26:20"},{"assignments":[4095],"declarations":[{"constant":false,"id":4095,"mutability":"mutable","name":"buffer","nameLocation":"2088:6:20","nodeType":"VariableDeclaration","scope":4162,"src":"2075:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4094,"name":"bytes","nodeType":"ElementaryTypeName","src":"2075:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4104,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2107:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4099,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4085,"src":"2111:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2107:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":4101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2120:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2107:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2097:9:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4096,"name":"bytes","nodeType":"ElementaryTypeName","src":"2101:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2097:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2075:47:20"},{"expression":{"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4105,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"2132:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4107,"indexExpression":{"hexValue":"30","id":4106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2139:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2132:9:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2144:3:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2132:15:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4110,"nodeType":"ExpressionStatement","src":"2132:15:20"},{"expression":{"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4111,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"2157:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4113,"indexExpression":{"hexValue":"31","id":4112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2164:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2157:9:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":4114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2169:3:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2157:15:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4116,"nodeType":"ExpressionStatement","src":"2157:15:20"},{"body":{"id":4145,"nodeType":"Block","src":"2227:95:20","statements":[{"expression":{"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4131,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"2241:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4133,"indexExpression":{"id":4132,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"2248:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2241:9:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4134,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"2253:10:20","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":4138,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4135,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"2264:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":4136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2277:3:20","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2264:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2253:28:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2241:40:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4140,"nodeType":"ExpressionStatement","src":"2241:40:20"},{"expression":{"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4141,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"2295:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2310:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2295:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4144,"nodeType":"ExpressionStatement","src":"2295:16:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4125,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"2215:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2219:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2215:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4146,"initializationExpression":{"assignments":[4118],"declarations":[{"constant":false,"id":4118,"mutability":"mutable","name":"i","nameLocation":"2195:1:20","nodeType":"VariableDeclaration","scope":4146,"src":"2187:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4117,"name":"uint256","nodeType":"ElementaryTypeName","src":"2187:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4124,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2199:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4120,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4085,"src":"2203:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2199:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2212:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2199:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2187:26:20"},"loopExpression":{"expression":{"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2222:3:20","subExpression":{"id":4128,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"2224:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4130,"nodeType":"ExpressionStatement","src":"2222:3:20"},"nodeType":"ForStatement","src":"2182:140:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4147,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"2335:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2335:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4156,"nodeType":"IfStatement","src":"2331:96:20","trueBody":{"id":4155,"nodeType":"Block","src":"2352:75:20","statements":[{"errorCall":{"arguments":[{"id":4151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"2402:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4152,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4085,"src":"2409:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4150,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3986,"src":"2373:28:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2373:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4154,"nodeType":"RevertStatement","src":"2366:50:20"}]}},{"expression":{"arguments":[{"id":4159,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"2450:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2443:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4157,"name":"string","nodeType":"ElementaryTypeName","src":"2443:6:20","typeDescriptions":{}}},"id":4160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2443:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4089,"id":4161,"nodeType":"Return","src":"2436:21:20"}]},"documentation":{"id":4081,"nodeType":"StructuredDocumentation","src":"1822:112:20","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":4163,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1948:11:20","nodeType":"FunctionDefinition","parameters":{"id":4086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4083,"mutability":"mutable","name":"value","nameLocation":"1968:5:20","nodeType":"VariableDeclaration","scope":4163,"src":"1960:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4082,"name":"uint256","nodeType":"ElementaryTypeName","src":"1960:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4085,"mutability":"mutable","name":"length","nameLocation":"1983:6:20","nodeType":"VariableDeclaration","scope":4163,"src":"1975:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4084,"name":"uint256","nodeType":"ElementaryTypeName","src":"1975:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1959:31:20"},"returnParameters":{"id":4089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4163,"src":"2014:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4087,"name":"string","nodeType":"ElementaryTypeName","src":"2014:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2013:15:20"},"scope":4286,"src":"1939:525:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4182,"nodeType":"Block","src":"2696:75:20","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":4176,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4166,"src":"2741:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2733:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4174,"name":"uint160","nodeType":"ElementaryTypeName","src":"2733:7:20","typeDescriptions":{}}},"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2733:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2725:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4172,"name":"uint256","nodeType":"ElementaryTypeName","src":"2725:7:20","typeDescriptions":{}}},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2725:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4179,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3979,"src":"2749:14:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4171,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4080,4163,4183],"referencedDeclaration":4163,"src":"2713:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:51:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4170,"id":4181,"nodeType":"Return","src":"2706:58:20"}]},"documentation":{"id":4164,"nodeType":"StructuredDocumentation","src":"2470:148:20","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":4183,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2632:11:20","nodeType":"FunctionDefinition","parameters":{"id":4167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4166,"mutability":"mutable","name":"addr","nameLocation":"2652:4:20","nodeType":"VariableDeclaration","scope":4183,"src":"2644:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4165,"name":"address","nodeType":"ElementaryTypeName","src":"2644:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2643:14:20"},"returnParameters":{"id":4170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4183,"src":"2681:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4168,"name":"string","nodeType":"ElementaryTypeName","src":"2681:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2680:15:20"},"scope":4286,"src":"2623:148:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4247,"nodeType":"Block","src":"3028:642:20","statements":[{"assignments":[4192],"declarations":[{"constant":false,"id":4192,"mutability":"mutable","name":"buffer","nameLocation":"3051:6:20","nodeType":"VariableDeclaration","scope":4247,"src":"3038:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4191,"name":"bytes","nodeType":"ElementaryTypeName","src":"3038:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4199,"initialValue":{"arguments":[{"arguments":[{"id":4196,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"3078:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4195,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4080,4163,4183],"referencedDeclaration":4183,"src":"3066:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3066:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3060:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4193,"name":"bytes","nodeType":"ElementaryTypeName","src":"3060:5:20","typeDescriptions":{}}},"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3060:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3038:46:20"},{"assignments":[4201],"declarations":[{"constant":false,"id":4201,"mutability":"mutable","name":"hashValue","nameLocation":"3177:9:20","nodeType":"VariableDeclaration","scope":4247,"src":"3169:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4200,"name":"uint256","nodeType":"ElementaryTypeName","src":"3169:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4202,"nodeType":"VariableDeclarationStatement","src":"3169:17:20"},{"AST":{"nodeType":"YulBlock","src":"3221:78:20","statements":[{"nodeType":"YulAssignment","src":"3235:54:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3252:2:20","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3270:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"3278:4:20","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:20"},"nodeType":"YulFunctionCall","src":"3266:17:20"},{"kind":"number","nodeType":"YulLiteral","src":"3285:2:20","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3256:9:20"},"nodeType":"YulFunctionCall","src":"3256:32:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3248:3:20"},"nodeType":"YulFunctionCall","src":"3248:41:20"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3235:9:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4192,"isOffset":false,"isSlot":false,"src":"3270:6:20","valueSize":1},{"declaration":4201,"isOffset":false,"isSlot":false,"src":"3235:9:20","valueSize":1}],"flags":["memory-safe"],"id":4203,"nodeType":"InlineAssembly","src":"3196:103:20"},{"body":{"id":4240,"nodeType":"Block","src":"3342:291:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4214,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4201,"src":"3448:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":4215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3460:3:20","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3448:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":4217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3466:1:20","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3448:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":4221,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"3477:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4223,"indexExpression":{"id":4222,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"3484:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3477:9:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3471:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4219,"name":"uint8","nodeType":"ElementaryTypeName","src":"3471:5:20","typeDescriptions":{}}},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3471:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":4225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3490:2:20","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3471:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3448:44:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4235,"nodeType":"IfStatement","src":"3444:150:20","trueBody":{"id":4234,"nodeType":"Block","src":"3494:100:20","statements":[{"expression":{"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4228,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"3562:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4230,"indexExpression":{"id":4229,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"3569:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3562:9:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":4231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3575:4:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3562:17:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4233,"nodeType":"ExpressionStatement","src":"3562:17:20"}]}},{"expression":{"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4236,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4201,"src":"3607:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3621:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3607:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4239,"nodeType":"ExpressionStatement","src":"3607:15:20"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4208,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"3330:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3334:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3330:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4241,"initializationExpression":{"assignments":[4205],"declarations":[{"constant":false,"id":4205,"mutability":"mutable","name":"i","nameLocation":"3322:1:20","nodeType":"VariableDeclaration","scope":4241,"src":"3314:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4207,"initialValue":{"hexValue":"3431","id":4206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3326:2:20","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3314:14:20"},"loopExpression":{"expression":{"id":4212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3337:3:20","subExpression":{"id":4211,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"3339:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4213,"nodeType":"ExpressionStatement","src":"3337:3:20"},"nodeType":"ForStatement","src":"3309:324:20"},{"expression":{"arguments":[{"id":4244,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"3656:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3649:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4242,"name":"string","nodeType":"ElementaryTypeName","src":"3649:6:20","typeDescriptions":{}}},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3649:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4190,"id":4246,"nodeType":"Return","src":"3642:21:20"}]},"documentation":{"id":4184,"nodeType":"StructuredDocumentation","src":"2777:165:20","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":4248,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"2956:19:20","nodeType":"FunctionDefinition","parameters":{"id":4187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4186,"mutability":"mutable","name":"addr","nameLocation":"2984:4:20","nodeType":"VariableDeclaration","scope":4248,"src":"2976:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4185,"name":"address","nodeType":"ElementaryTypeName","src":"2976:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2975:14:20"},"returnParameters":{"id":4190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4248,"src":"3013:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4188,"name":"string","nodeType":"ElementaryTypeName","src":"3013:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3012:15:20"},"scope":4286,"src":"2947:723:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4284,"nodeType":"Block","src":"3825:104:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4260,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"3848:1:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3842:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4258,"name":"bytes","nodeType":"ElementaryTypeName","src":"3842:5:20","typeDescriptions":{}}},"id":4261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3842:8:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3851:6:20","memberName":"length","nodeType":"MemberAccess","src":"3842:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4265,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4253,"src":"3867:1:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3861:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4263,"name":"bytes","nodeType":"ElementaryTypeName","src":"3861:5:20","typeDescriptions":{}}},"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:8:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:6:20","memberName":"length","nodeType":"MemberAccess","src":"3861:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3842:34:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4272,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"3896:1:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3890:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4270,"name":"bytes","nodeType":"ElementaryTypeName","src":"3890:5:20","typeDescriptions":{}}},"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:8:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4269,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"3880:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3880:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":4278,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4253,"src":"3919:1:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3913:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4276,"name":"bytes","nodeType":"ElementaryTypeName","src":"3913:5:20","typeDescriptions":{}}},"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3913:8:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4275,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"3903:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3880:42:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3842:80:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4257,"id":4283,"nodeType":"Return","src":"3835:87:20"}]},"documentation":{"id":4249,"nodeType":"StructuredDocumentation","src":"3676:66:20","text":" @dev Returns true if the two strings are equal."},"id":4285,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"3756:5:20","nodeType":"FunctionDefinition","parameters":{"id":4254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4251,"mutability":"mutable","name":"a","nameLocation":"3776:1:20","nodeType":"VariableDeclaration","scope":4285,"src":"3762:15:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4250,"name":"string","nodeType":"ElementaryTypeName","src":"3762:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4253,"mutability":"mutable","name":"b","nameLocation":"3793:1:20","nodeType":"VariableDeclaration","scope":4285,"src":"3779:15:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4252,"name":"string","nodeType":"ElementaryTypeName","src":"3779:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3761:34:20"},"returnParameters":{"id":4257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4285,"src":"3819:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4255,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:20"},"scope":4286,"src":"3747:182:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4287,"src":"251:3680:20","usedErrors":[3986],"usedEvents":[]}],"src":"101:3831:20"},"id":20},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[4310],"IERC165":[4322]},"id":4311,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4288,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":4290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4311,"sourceUnit":4323,"src":"140:38:21","symbolAliases":[{"foreign":{"id":4289,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"148:7:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4292,"name":"IERC165","nameLocations":["688:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":4322,"src":"688:7:21"},"id":4293,"nodeType":"InheritanceSpecifier","src":"688:7:21"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":4291,"nodeType":"StructuredDocumentation","src":"180:479:21","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":4310,"linearizedBaseContracts":[4310,4322],"name":"ERC165","nameLocation":"678:6:21","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[4321],"body":{"id":4308,"nodeType":"Block","src":"845:64:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4301,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"862:11:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4303,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"882:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4322_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$4322_$","typeString":"type(contract IERC165)"}],"id":4302,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"877:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$4322","typeString":"type(contract IERC165)"}},"id":4305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:21","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4300,"id":4307,"nodeType":"Return","src":"855:47:21"}]},"documentation":{"id":4294,"nodeType":"StructuredDocumentation","src":"702:56:21","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":4309,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:21","nodeType":"FunctionDefinition","parameters":{"id":4297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4296,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:21","nodeType":"VariableDeclaration","scope":4309,"src":"790:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4295,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:21"},"returnParameters":{"id":4300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4309,"src":"839:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4298,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:21"},"scope":4310,"src":"763:146:21","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":4311,"src":"660:251:21","usedErrors":[],"usedEvents":[]}],"src":"114:798:21"},"id":21},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4322]},"id":4323,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4312,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":4313,"nodeType":"StructuredDocumentation","src":"141:280:22","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4322,"linearizedBaseContracts":[4322],"name":"IERC165","nameLocation":"432:7:22","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4314,"nodeType":"StructuredDocumentation","src":"446:340:22","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4321,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:22","nodeType":"FunctionDefinition","parameters":{"id":4317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4316,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:22","nodeType":"VariableDeclaration","scope":4321,"src":"818:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4315,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:22"},"returnParameters":{"id":4320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4321,"src":"861:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4318,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:22"},"scope":4322,"src":"791:76:22","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4323,"src":"422:447:22","usedErrors":[],"usedEvents":[]}],"src":"115:755:22"},"id":22},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5928],"Panic":[3526],"SafeCast":[7693]},"id":5929,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4324,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:23"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":4326,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5929,"sourceUnit":3527,"src":"129:35:23","symbolAliases":[{"foreign":{"id":4325,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"137:5:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":4328,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5929,"sourceUnit":7694,"src":"165:40:23","symbolAliases":[{"foreign":{"id":4327,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7693,"src":"173:8:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4329,"nodeType":"StructuredDocumentation","src":"207:73:23","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5928,"linearizedBaseContracts":[5928],"name":"Math","nameLocation":"289:4:23","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4334,"members":[{"id":4330,"name":"Floor","nameLocation":"324:5:23","nodeType":"EnumValue","src":"324:5:23"},{"id":4331,"name":"Ceil","nameLocation":"367:4:23","nodeType":"EnumValue","src":"367:4:23"},{"id":4332,"name":"Trunc","nameLocation":"409:5:23","nodeType":"EnumValue","src":"409:5:23"},{"id":4333,"name":"Expand","nameLocation":"439:6:23","nodeType":"EnumValue","src":"439:6:23"}],"name":"Rounding","nameLocation":"305:8:23","nodeType":"EnumDefinition","src":"300:169:23"},{"body":{"id":4365,"nodeType":"Block","src":"677:140:23","statements":[{"id":4364,"nodeType":"UncheckedBlock","src":"687:124:23","statements":[{"assignments":[4347],"declarations":[{"constant":false,"id":4347,"mutability":"mutable","name":"c","nameLocation":"719:1:23","nodeType":"VariableDeclaration","scope":4364,"src":"711:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4346,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4351,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4348,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"723:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4349,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"727:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4352,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"746:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4353,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"750:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4359,"nodeType":"IfStatement","src":"742:28:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4357,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4345,"id":4358,"nodeType":"Return","src":"753:17:23"}},{"expression":{"components":[{"hexValue":"74727565","id":4360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4361,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"798:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4362,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4345,"id":4363,"nodeType":"Return","src":"784:16:23"}]}]},"documentation":{"id":4335,"nodeType":"StructuredDocumentation","src":"475:106:23","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":4366,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:23","nodeType":"FunctionDefinition","parameters":{"id":4340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4337,"mutability":"mutable","name":"a","nameLocation":"610:1:23","nodeType":"VariableDeclaration","scope":4366,"src":"602:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4336,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4339,"mutability":"mutable","name":"b","nameLocation":"621:1:23","nodeType":"VariableDeclaration","scope":4366,"src":"613:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4338,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:23"},"returnParameters":{"id":4345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4342,"mutability":"mutable","name":"success","nameLocation":"652:7:23","nodeType":"VariableDeclaration","scope":4366,"src":"647:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4341,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4344,"mutability":"mutable","name":"result","nameLocation":"669:6:23","nodeType":"VariableDeclaration","scope":4366,"src":"661:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4343,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:23"},"scope":5928,"src":"586:231:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4393,"nodeType":"Block","src":"1028:113:23","statements":[{"id":4392,"nodeType":"UncheckedBlock","src":"1038:97:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4378,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"1066:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4379,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"1070:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4385,"nodeType":"IfStatement","src":"1062:28:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4383,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4377,"id":4384,"nodeType":"Return","src":"1073:17:23"}},{"expression":{"components":[{"hexValue":"74727565","id":4386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4387,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"1118:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4388,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"1122:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4390,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4377,"id":4391,"nodeType":"Return","src":"1104:20:23"}]}]},"documentation":{"id":4367,"nodeType":"StructuredDocumentation","src":"823:109:23","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":4394,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:23","nodeType":"FunctionDefinition","parameters":{"id":4372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4369,"mutability":"mutable","name":"a","nameLocation":"961:1:23","nodeType":"VariableDeclaration","scope":4394,"src":"953:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4368,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4371,"mutability":"mutable","name":"b","nameLocation":"972:1:23","nodeType":"VariableDeclaration","scope":4394,"src":"964:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4370,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:23"},"returnParameters":{"id":4377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4374,"mutability":"mutable","name":"success","nameLocation":"1003:7:23","nodeType":"VariableDeclaration","scope":4394,"src":"998:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4373,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4376,"mutability":"mutable","name":"result","nameLocation":"1020:6:23","nodeType":"VariableDeclaration","scope":4394,"src":"1012:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4375,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:23"},"scope":5928,"src":"937:204:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4435,"nodeType":"Block","src":"1355:417:23","statements":[{"id":4434,"nodeType":"UncheckedBlock","src":"1365:401:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4406,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"1623:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4413,"nodeType":"IfStatement","src":"1619:28:23","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":4409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":4410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4411,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4405,"id":4412,"nodeType":"Return","src":"1631:16:23"}},{"assignments":[4415],"declarations":[{"constant":false,"id":4415,"mutability":"mutable","name":"c","nameLocation":"1669:1:23","nodeType":"VariableDeclaration","scope":4434,"src":"1661:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4414,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4419,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4416,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"1673:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4417,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"1677:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4420,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"1696:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4421,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"1700:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4423,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"1705:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4429,"nodeType":"IfStatement","src":"1692:33:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4427,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4405,"id":4428,"nodeType":"Return","src":"1708:17:23"}},{"expression":{"components":[{"hexValue":"74727565","id":4430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4431,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"1753:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4432,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4405,"id":4433,"nodeType":"Return","src":"1739:16:23"}]}]},"documentation":{"id":4395,"nodeType":"StructuredDocumentation","src":"1147:112:23","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":4436,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:23","nodeType":"FunctionDefinition","parameters":{"id":4400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4397,"mutability":"mutable","name":"a","nameLocation":"1288:1:23","nodeType":"VariableDeclaration","scope":4436,"src":"1280:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4396,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4399,"mutability":"mutable","name":"b","nameLocation":"1299:1:23","nodeType":"VariableDeclaration","scope":4436,"src":"1291:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4398,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:23"},"returnParameters":{"id":4405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4402,"mutability":"mutable","name":"success","nameLocation":"1330:7:23","nodeType":"VariableDeclaration","scope":4436,"src":"1325:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4401,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4404,"mutability":"mutable","name":"result","nameLocation":"1347:6:23","nodeType":"VariableDeclaration","scope":4436,"src":"1339:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4403,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:23"},"scope":5928,"src":"1264:508:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4463,"nodeType":"Block","src":"1987:114:23","statements":[{"id":4462,"nodeType":"UncheckedBlock","src":"1997:98:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4448,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"2025:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4455,"nodeType":"IfStatement","src":"2021:29:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4453,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4447,"id":4454,"nodeType":"Return","src":"2033:17:23"}},{"expression":{"components":[{"hexValue":"74727565","id":4456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4457,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"2078:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4458,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"2082:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4460,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4447,"id":4461,"nodeType":"Return","src":"2064:20:23"}]}]},"documentation":{"id":4437,"nodeType":"StructuredDocumentation","src":"1778:113:23","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":4464,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:23","nodeType":"FunctionDefinition","parameters":{"id":4442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4439,"mutability":"mutable","name":"a","nameLocation":"1920:1:23","nodeType":"VariableDeclaration","scope":4464,"src":"1912:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4438,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4441,"mutability":"mutable","name":"b","nameLocation":"1931:1:23","nodeType":"VariableDeclaration","scope":4464,"src":"1923:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4440,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:23"},"returnParameters":{"id":4447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4444,"mutability":"mutable","name":"success","nameLocation":"1962:7:23","nodeType":"VariableDeclaration","scope":4464,"src":"1957:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4443,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4446,"mutability":"mutable","name":"result","nameLocation":"1979:6:23","nodeType":"VariableDeclaration","scope":4464,"src":"1971:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4445,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:23"},"scope":5928,"src":"1896:205:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4491,"nodeType":"Block","src":"2326:114:23","statements":[{"id":4490,"nodeType":"UncheckedBlock","src":"2336:98:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4476,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"2364:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4483,"nodeType":"IfStatement","src":"2360:29:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4481,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4475,"id":4482,"nodeType":"Return","src":"2372:17:23"}},{"expression":{"components":[{"hexValue":"74727565","id":4484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4485,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"2417:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4486,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"2421:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4488,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4475,"id":4489,"nodeType":"Return","src":"2403:20:23"}]}]},"documentation":{"id":4465,"nodeType":"StructuredDocumentation","src":"2107:123:23","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":4492,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:23","nodeType":"FunctionDefinition","parameters":{"id":4470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4467,"mutability":"mutable","name":"a","nameLocation":"2259:1:23","nodeType":"VariableDeclaration","scope":4492,"src":"2251:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4466,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4469,"mutability":"mutable","name":"b","nameLocation":"2270:1:23","nodeType":"VariableDeclaration","scope":4492,"src":"2262:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4468,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:23"},"returnParameters":{"id":4475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4472,"mutability":"mutable","name":"success","nameLocation":"2301:7:23","nodeType":"VariableDeclaration","scope":4492,"src":"2296:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4471,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4474,"mutability":"mutable","name":"result","nameLocation":"2318:6:23","nodeType":"VariableDeclaration","scope":4492,"src":"2310:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4473,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:23"},"scope":5928,"src":"2235:205:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4518,"nodeType":"Block","src":"2912:207:23","statements":[{"id":4517,"nodeType":"UncheckedBlock","src":"2922:191:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4504,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"3060:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4505,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4497,"src":"3066:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4506,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"3070:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4508,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4511,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"3091:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4509,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7693,"src":"3075:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7693_$","typeString":"type(library SafeCast)"}},"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7692,"src":"3075:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4514,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4503,"id":4516,"nodeType":"Return","src":"3053:49:23"}]}]},"documentation":{"id":4493,"nodeType":"StructuredDocumentation","src":"2446:374:23","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":4519,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:23","nodeType":"FunctionDefinition","parameters":{"id":4500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4495,"mutability":"mutable","name":"condition","nameLocation":"2847:9:23","nodeType":"VariableDeclaration","scope":4519,"src":"2842:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4494,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4497,"mutability":"mutable","name":"a","nameLocation":"2866:1:23","nodeType":"VariableDeclaration","scope":4519,"src":"2858:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4496,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4499,"mutability":"mutable","name":"b","nameLocation":"2877:1:23","nodeType":"VariableDeclaration","scope":4519,"src":"2869:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4498,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:23"},"returnParameters":{"id":4503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4519,"src":"2903:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4501,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:23"},"scope":5928,"src":"2825:294:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4537,"nodeType":"Block","src":"3256:44:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4530,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4522,"src":"3281:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4531,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"3285:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4533,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4522,"src":"3288:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4534,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"3291:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4529,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4519,"src":"3273:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4528,"id":4536,"nodeType":"Return","src":"3266:27:23"}]},"documentation":{"id":4520,"nodeType":"StructuredDocumentation","src":"3125:59:23","text":" @dev Returns the largest of two numbers."},"id":4538,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:23","nodeType":"FunctionDefinition","parameters":{"id":4525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4522,"mutability":"mutable","name":"a","nameLocation":"3210:1:23","nodeType":"VariableDeclaration","scope":4538,"src":"3202:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4521,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4524,"mutability":"mutable","name":"b","nameLocation":"3221:1:23","nodeType":"VariableDeclaration","scope":4538,"src":"3213:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4523,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:23"},"returnParameters":{"id":4528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4538,"src":"3247:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4526,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:23"},"scope":5928,"src":"3189:111:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4556,"nodeType":"Block","src":"3438:44:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4549,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4541,"src":"3463:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4550,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"3467:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4552,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4541,"src":"3470:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4553,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"3473:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4548,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4519,"src":"3455:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4547,"id":4555,"nodeType":"Return","src":"3448:27:23"}]},"documentation":{"id":4539,"nodeType":"StructuredDocumentation","src":"3306:60:23","text":" @dev Returns the smallest of two numbers."},"id":4557,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:23","nodeType":"FunctionDefinition","parameters":{"id":4544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4541,"mutability":"mutable","name":"a","nameLocation":"3392:1:23","nodeType":"VariableDeclaration","scope":4557,"src":"3384:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4540,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4543,"mutability":"mutable","name":"b","nameLocation":"3403:1:23","nodeType":"VariableDeclaration","scope":4557,"src":"3395:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4542,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:23"},"returnParameters":{"id":4547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4557,"src":"3429:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4545,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:23"},"scope":5928,"src":"3371:111:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4579,"nodeType":"Block","src":"3666:82:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4567,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"3721:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4568,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"3725:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4570,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4571,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"3731:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4572,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"3735:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4574,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4566,"id":4578,"nodeType":"Return","src":"3713:28:23"}]},"documentation":{"id":4558,"nodeType":"StructuredDocumentation","src":"3488:102:23","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4580,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:23","nodeType":"FunctionDefinition","parameters":{"id":4563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4560,"mutability":"mutable","name":"a","nameLocation":"3620:1:23","nodeType":"VariableDeclaration","scope":4580,"src":"3612:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4559,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4562,"mutability":"mutable","name":"b","nameLocation":"3631:1:23","nodeType":"VariableDeclaration","scope":4580,"src":"3623:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4561,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:23"},"returnParameters":{"id":4566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4580,"src":"3657:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4564,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:23"},"scope":5928,"src":"3595:153:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4620,"nodeType":"Block","src":"4040:633:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4590,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"4054:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4601,"nodeType":"IfStatement","src":"4050:150:23","trueBody":{"id":4600,"nodeType":"Block","src":"4062:138:23","statements":[{"expression":{"arguments":[{"expression":{"id":4596,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"4166:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3526_$","typeString":"type(library Panic)"}},"id":4597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:23","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3493,"src":"4166:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4593,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"4154:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3526_$","typeString":"type(library Panic)"}},"id":4595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:23","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3525,"src":"4154:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4599,"nodeType":"ExpressionStatement","src":"4154:35:23"}]}},{"id":4619,"nodeType":"UncheckedBlock","src":"4583:84:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4604,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"4630:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4602,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7693,"src":"4614:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7693_$","typeString":"type(library SafeCast)"}},"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7692,"src":"4614:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4608,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"4641:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4611,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4612,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"4650:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4616,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4589,"id":4618,"nodeType":"Return","src":"4607:49:23"}]}]},"documentation":{"id":4581,"nodeType":"StructuredDocumentation","src":"3754:210:23","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4621,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:23","nodeType":"FunctionDefinition","parameters":{"id":4586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4583,"mutability":"mutable","name":"a","nameLocation":"3994:1:23","nodeType":"VariableDeclaration","scope":4621,"src":"3986:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4582,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4585,"mutability":"mutable","name":"b","nameLocation":"4005:1:23","nodeType":"VariableDeclaration","scope":4621,"src":"3997:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4584,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:23"},"returnParameters":{"id":4589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4621,"src":"4031:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4587,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:23"},"scope":5928,"src":"3969:704:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4757,"nodeType":"Block","src":"5094:4128:23","statements":[{"id":4756,"nodeType":"UncheckedBlock","src":"5104:4112:23","statements":[{"assignments":[4634],"declarations":[{"constant":false,"id":4634,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:23","nodeType":"VariableDeclaration","scope":4756,"src":"5433:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4633,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4638,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4635,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"5449:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4636,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"5453:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:23"},{"assignments":[4640],"declarations":[{"constant":false,"id":4640,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:23","nodeType":"VariableDeclaration","scope":4756,"src":"5513:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4639,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4641,"nodeType":"VariableDeclarationStatement","src":"5513:13:23"},{"AST":{"nodeType":"YulBlock","src":"5593:122:23","statements":[{"nodeType":"YulVariableDeclaration","src":"5611:30:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5628:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"5631:1:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5638:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5634:3:23"},"nodeType":"YulFunctionCall","src":"5634:6:23"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5621:6:23"},"nodeType":"YulFunctionCall","src":"5621:20:23"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"5615:2:23","type":""}]},{"nodeType":"YulAssignment","src":"5658:43:23","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5675:2:23"},{"name":"prod0","nodeType":"YulIdentifier","src":"5679:5:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5671:3:23"},"nodeType":"YulFunctionCall","src":"5671:14:23"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5690:2:23"},{"name":"prod0","nodeType":"YulIdentifier","src":"5694:5:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5687:2:23"},"nodeType":"YulFunctionCall","src":"5687:13:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5667:3:23"},"nodeType":"YulFunctionCall","src":"5667:34:23"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5658:5:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4634,"isOffset":false,"isSlot":false,"src":"5679:5:23","valueSize":1},{"declaration":4634,"isOffset":false,"isSlot":false,"src":"5694:5:23","valueSize":1},{"declaration":4640,"isOffset":false,"isSlot":false,"src":"5658:5:23","valueSize":1},{"declaration":4624,"isOffset":false,"isSlot":false,"src":"5628:1:23","valueSize":1},{"declaration":4626,"isOffset":false,"isSlot":false,"src":"5631:1:23","valueSize":1}],"id":4642,"nodeType":"InlineAssembly","src":"5584:131:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4643,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"5796:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4651,"nodeType":"IfStatement","src":"5792:368:23","trueBody":{"id":4650,"nodeType":"Block","src":"5808:352:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4646,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4634,"src":"6126:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4647,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"6134:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4632,"id":4649,"nodeType":"Return","src":"6119:26:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4652,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"6270:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4653,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"6285:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4670,"nodeType":"IfStatement","src":"6266:143:23","trueBody":{"id":4669,"nodeType":"Block","src":"6292:117:23","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4659,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"6330:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4662,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"6348:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3526_$","typeString":"type(library Panic)"}},"id":4663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:23","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3493,"src":"6348:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4664,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"6372:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3526_$","typeString":"type(library Panic)"}},"id":4665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:23","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":3489,"src":"6372:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4658,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4519,"src":"6322:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4655,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"6310:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3526_$","typeString":"type(library Panic)"}},"id":4657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:23","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3525,"src":"6310:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4668,"nodeType":"ExpressionStatement","src":"6310:84:23"}]}},{"assignments":[4672],"declarations":[{"constant":false,"id":4672,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:23","nodeType":"VariableDeclaration","scope":4756,"src":"6664:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4671,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4673,"nodeType":"VariableDeclarationStatement","src":"6664:17:23"},{"AST":{"nodeType":"YulBlock","src":"6704:291:23","statements":[{"nodeType":"YulAssignment","src":"6773:38:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6793:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"6796:1:23"},{"name":"denominator","nodeType":"YulIdentifier","src":"6799:11:23"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"6786:6:23"},"nodeType":"YulFunctionCall","src":"6786:25:23"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"6773:9:23"}]},{"nodeType":"YulAssignment","src":"6893:41:23","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"6906:5:23"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"6916:9:23"},{"name":"prod0","nodeType":"YulIdentifier","src":"6927:5:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6913:2:23"},"nodeType":"YulFunctionCall","src":"6913:20:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6902:3:23"},"nodeType":"YulFunctionCall","src":"6902:32:23"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"6893:5:23"}]},{"nodeType":"YulAssignment","src":"6951:30:23","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6964:5:23"},{"name":"remainder","nodeType":"YulIdentifier","src":"6971:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6960:3:23"},"nodeType":"YulFunctionCall","src":"6960:21:23"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6951:5:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4628,"isOffset":false,"isSlot":false,"src":"6799:11:23","valueSize":1},{"declaration":4634,"isOffset":false,"isSlot":false,"src":"6927:5:23","valueSize":1},{"declaration":4634,"isOffset":false,"isSlot":false,"src":"6951:5:23","valueSize":1},{"declaration":4634,"isOffset":false,"isSlot":false,"src":"6964:5:23","valueSize":1},{"declaration":4640,"isOffset":false,"isSlot":false,"src":"6893:5:23","valueSize":1},{"declaration":4640,"isOffset":false,"isSlot":false,"src":"6906:5:23","valueSize":1},{"declaration":4672,"isOffset":false,"isSlot":false,"src":"6773:9:23","valueSize":1},{"declaration":4672,"isOffset":false,"isSlot":false,"src":"6916:9:23","valueSize":1},{"declaration":4672,"isOffset":false,"isSlot":false,"src":"6971:9:23","valueSize":1},{"declaration":4624,"isOffset":false,"isSlot":false,"src":"6793:1:23","valueSize":1},{"declaration":4626,"isOffset":false,"isSlot":false,"src":"6796:1:23","valueSize":1}],"id":4674,"nodeType":"InlineAssembly","src":"6695:300:23"},{"assignments":[4676],"declarations":[{"constant":false,"id":4676,"mutability":"mutable","name":"twos","nameLocation":"7207:4:23","nodeType":"VariableDeclaration","scope":4756,"src":"7199:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4675,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4683,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4677,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"7214:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4679,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"7233:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4681,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:23"},{"AST":{"nodeType":"YulBlock","src":"7268:366:23","statements":[{"nodeType":"YulAssignment","src":"7333:37:23","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"7352:11:23"},{"name":"twos","nodeType":"YulIdentifier","src":"7365:4:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7348:3:23"},"nodeType":"YulFunctionCall","src":"7348:22:23"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"7333:11:23"}]},{"nodeType":"YulAssignment","src":"7437:25:23","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"7450:5:23"},{"name":"twos","nodeType":"YulIdentifier","src":"7457:4:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7446:3:23"},"nodeType":"YulFunctionCall","src":"7446:16:23"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"7437:5:23"}]},{"nodeType":"YulAssignment","src":"7581:39:23","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7601:1:23","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"7604:4:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7597:3:23"},"nodeType":"YulFunctionCall","src":"7597:12:23"},{"name":"twos","nodeType":"YulIdentifier","src":"7611:4:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7593:3:23"},"nodeType":"YulFunctionCall","src":"7593:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"7618:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7589:3:23"},"nodeType":"YulFunctionCall","src":"7589:31:23"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"7581:4:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4628,"isOffset":false,"isSlot":false,"src":"7333:11:23","valueSize":1},{"declaration":4628,"isOffset":false,"isSlot":false,"src":"7352:11:23","valueSize":1},{"declaration":4634,"isOffset":false,"isSlot":false,"src":"7437:5:23","valueSize":1},{"declaration":4634,"isOffset":false,"isSlot":false,"src":"7450:5:23","valueSize":1},{"declaration":4676,"isOffset":false,"isSlot":false,"src":"7365:4:23","valueSize":1},{"declaration":4676,"isOffset":false,"isSlot":false,"src":"7457:4:23","valueSize":1},{"declaration":4676,"isOffset":false,"isSlot":false,"src":"7581:4:23","valueSize":1},{"declaration":4676,"isOffset":false,"isSlot":false,"src":"7604:4:23","valueSize":1},{"declaration":4676,"isOffset":false,"isSlot":false,"src":"7611:4:23","valueSize":1}],"id":4684,"nodeType":"InlineAssembly","src":"7259:375:23"},{"expression":{"id":4689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4685,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4634,"src":"7700:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4686,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"7709:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4687,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"7717:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4690,"nodeType":"ExpressionStatement","src":"7700:21:23"},{"assignments":[4692],"declarations":[{"constant":false,"id":4692,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:23","nodeType":"VariableDeclaration","scope":4756,"src":"8056:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4691,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4699,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4694,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"8079:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4696,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:23"},{"expression":{"id":4706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4700,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"8312:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4702,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"8327:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4703,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"8341:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4707,"nodeType":"ExpressionStatement","src":"8312:36:23"},{"expression":{"id":4714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4708,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"8382:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4710,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"8397:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4711,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"8411:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4715,"nodeType":"ExpressionStatement","src":"8382:36:23"},{"expression":{"id":4722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4716,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"8454:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4718,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"8469:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4719,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"8483:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4723,"nodeType":"ExpressionStatement","src":"8454:36:23"},{"expression":{"id":4730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4724,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"8525:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4726,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"8540:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4727,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"8554:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4731,"nodeType":"ExpressionStatement","src":"8525:36:23"},{"expression":{"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4732,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"8598:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4734,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"8613:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4735,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"8627:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4739,"nodeType":"ExpressionStatement","src":"8598:36:23"},{"expression":{"id":4746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4740,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"8672:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4742,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"8687:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4743,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"8701:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4747,"nodeType":"ExpressionStatement","src":"8672:36:23"},{"expression":{"id":4752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4748,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"9154:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4749,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4634,"src":"9163:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4750,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"9171:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4753,"nodeType":"ExpressionStatement","src":"9154:24:23"},{"expression":{"id":4754,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"9199:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4632,"id":4755,"nodeType":"Return","src":"9192:13:23"}]}]},"documentation":{"id":4622,"nodeType":"StructuredDocumentation","src":"4679:312:23","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4758,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:23","nodeType":"FunctionDefinition","parameters":{"id":4629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4624,"mutability":"mutable","name":"x","nameLocation":"5020:1:23","nodeType":"VariableDeclaration","scope":4758,"src":"5012:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4623,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4626,"mutability":"mutable","name":"y","nameLocation":"5031:1:23","nodeType":"VariableDeclaration","scope":4758,"src":"5023:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4625,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4628,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:23","nodeType":"VariableDeclaration","scope":4758,"src":"5034:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4627,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:23"},"returnParameters":{"id":4632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4631,"mutability":"mutable","name":"result","nameLocation":"5086:6:23","nodeType":"VariableDeclaration","scope":4758,"src":"5078:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4630,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:23"},"scope":5928,"src":"4996:4226:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4794,"nodeType":"Block","src":"9461:128:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4774,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4761,"src":"9485:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4775,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4763,"src":"9488:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4776,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"9491:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4773,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4758,4795],"referencedDeclaration":4758,"src":"9478:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4781,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4768,"src":"9539:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4334","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4334","typeString":"enum Math.Rounding"}],"id":4780,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5927,"src":"9522:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4334_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4784,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4761,"src":"9559:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4785,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4763,"src":"9562:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4786,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"9565:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4783,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967280,"src":"9552:6:23","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4778,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7693,"src":"9506:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7693_$","typeString":"type(library SafeCast)"}},"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7692,"src":"9506:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4772,"id":4793,"nodeType":"Return","src":"9471:111:23"}]},"documentation":{"id":4759,"nodeType":"StructuredDocumentation","src":"9228:118:23","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4795,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:23","nodeType":"FunctionDefinition","parameters":{"id":4769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4761,"mutability":"mutable","name":"x","nameLocation":"9375:1:23","nodeType":"VariableDeclaration","scope":4795,"src":"9367:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4760,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4763,"mutability":"mutable","name":"y","nameLocation":"9386:1:23","nodeType":"VariableDeclaration","scope":4795,"src":"9378:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4762,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4765,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:23","nodeType":"VariableDeclaration","scope":4795,"src":"9389:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4764,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4768,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:23","nodeType":"VariableDeclaration","scope":4795,"src":"9410:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4334","typeString":"enum Math.Rounding"},"typeName":{"id":4767,"nodeType":"UserDefinedTypeName","pathNode":{"id":4766,"name":"Rounding","nameLocations":["9410:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":4334,"src":"9410:8:23"},"referencedDeclaration":4334,"src":"9410:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4334","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:23"},"returnParameters":{"id":4772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4795,"src":"9452:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4770,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:23"},"scope":5928,"src":"9351:238:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4891,"nodeType":"Block","src":"10223:1849:23","statements":[{"id":4890,"nodeType":"UncheckedBlock","src":"10233:1833:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4805,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"10261:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4810,"nodeType":"IfStatement","src":"10257:20:23","trueBody":{"expression":{"hexValue":"30","id":4808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4804,"id":4809,"nodeType":"Return","src":"10269:8:23"}},{"assignments":[4812],"declarations":[{"constant":false,"id":4812,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:23","nodeType":"VariableDeclaration","scope":4890,"src":"10748:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4811,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4816,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4813,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4798,"src":"10768:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4814,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"10772:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:23"},{"assignments":[4818],"declarations":[{"constant":false,"id":4818,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:23","nodeType":"VariableDeclaration","scope":4890,"src":"10787:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4817,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4820,"initialValue":{"id":4819,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"10801:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:23"},{"assignments":[4822],"declarations":[{"constant":false,"id":4822,"mutability":"mutable","name":"x","nameLocation":"10945:1:23","nodeType":"VariableDeclaration","scope":4890,"src":"10938:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4821,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4824,"initialValue":{"hexValue":"30","id":4823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:23"},{"assignments":[4826],"declarations":[{"constant":false,"id":4826,"mutability":"mutable","name":"y","nameLocation":"10971:1:23","nodeType":"VariableDeclaration","scope":4890,"src":"10964:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4825,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4828,"initialValue":{"hexValue":"31","id":4827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:23"},{"body":{"id":4865,"nodeType":"Block","src":"11014:882:23","statements":[{"assignments":[4833],"declarations":[{"constant":false,"id":4833,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:23","nodeType":"VariableDeclaration","scope":4865,"src":"11032:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4832,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4837,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4834,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"11051:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4835,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"11057:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:23"},{"expression":{"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4838,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"11086:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4839,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"11091:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4840,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4841,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"11191:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4842,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"11436:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4843,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"11442:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4844,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"11454:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4847,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:23","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4849,"nodeType":"ExpressionStatement","src":"11085:395:23"},{"expression":{"id":4863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4850,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"11500:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4851,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4826,"src":"11503:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4852,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4853,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4826,"src":"11585:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4854,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"11839:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4855,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4826,"src":"11843:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4858,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"11854:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4856,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:23","typeDescriptions":{}}},"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4862,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:23","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4864,"nodeType":"ExpressionStatement","src":"11499:382:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4829,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"10998:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4866,"nodeType":"WhileStatement","src":"10991:905:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4867,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"11914:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4872,"nodeType":"IfStatement","src":"11910:22:23","trueBody":{"expression":{"hexValue":"30","id":4870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4804,"id":4871,"nodeType":"Return","src":"11924:8:23"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4874,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"11983:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4877,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"11990:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:23","subExpression":{"id":4880,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"12003:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4878,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:23","typeDescriptions":{}}},"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4886,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"12015:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4884,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:23","typeDescriptions":{}}},"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4873,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4519,"src":"11975:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4804,"id":4889,"nodeType":"Return","src":"11968:50:23"}]}]},"documentation":{"id":4796,"nodeType":"StructuredDocumentation","src":"9595:553:23","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4892,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:23","nodeType":"FunctionDefinition","parameters":{"id":4801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4798,"mutability":"mutable","name":"a","nameLocation":"10177:1:23","nodeType":"VariableDeclaration","scope":4892,"src":"10169:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4797,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4800,"mutability":"mutable","name":"n","nameLocation":"10188:1:23","nodeType":"VariableDeclaration","scope":4892,"src":"10180:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4799,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:23"},"returnParameters":{"id":4804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4892,"src":"10214:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4802,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:23"},"scope":5928,"src":"10153:1919:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4912,"nodeType":"Block","src":"12672:82:23","statements":[{"id":4911,"nodeType":"UncheckedBlock","src":"12682:66:23","statements":[{"expression":{"arguments":[{"id":4904,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4895,"src":"12725:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4905,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4897,"src":"12728:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4908,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4897,"src":"12735:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4902,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5928,"src":"12713:4:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5928_$","typeString":"type(library Math)"}},"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:23","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4949,"src":"12713:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4901,"id":4910,"nodeType":"Return","src":"12706:31:23"}]}]},"documentation":{"id":4893,"nodeType":"StructuredDocumentation","src":"12078:514:23","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4913,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:23","nodeType":"FunctionDefinition","parameters":{"id":4898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4895,"mutability":"mutable","name":"a","nameLocation":"12626:1:23","nodeType":"VariableDeclaration","scope":4913,"src":"12618:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4894,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4897,"mutability":"mutable","name":"p","nameLocation":"12637:1:23","nodeType":"VariableDeclaration","scope":4913,"src":"12629:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4896,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:23"},"returnParameters":{"id":4901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4913,"src":"12663:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4899,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:23"},"scope":5928,"src":"12597:157:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4948,"nodeType":"Block","src":"13524:174:23","statements":[{"assignments":[4926,4928],"declarations":[{"constant":false,"id":4926,"mutability":"mutable","name":"success","nameLocation":"13540:7:23","nodeType":"VariableDeclaration","scope":4948,"src":"13535:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4925,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4928,"mutability":"mutable","name":"result","nameLocation":"13557:6:23","nodeType":"VariableDeclaration","scope":4948,"src":"13549:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4927,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4934,"initialValue":{"arguments":[{"id":4930,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"13577:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4931,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"13580:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4932,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"13583:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4929,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4973,5055],"referencedDeclaration":4973,"src":"13567:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:23"},{"condition":{"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:23","subExpression":{"id":4935,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4926,"src":"13600:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4945,"nodeType":"IfStatement","src":"13595:74:23","trueBody":{"id":4944,"nodeType":"Block","src":"13609:60:23","statements":[{"expression":{"arguments":[{"expression":{"id":4940,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"13635:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3526_$","typeString":"type(library Panic)"}},"id":4941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:23","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3493,"src":"13635:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4937,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"13623:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3526_$","typeString":"type(library Panic)"}},"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:23","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3525,"src":"13623:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4943,"nodeType":"ExpressionStatement","src":"13623:35:23"}]}},{"expression":{"id":4946,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4928,"src":"13685:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4924,"id":4947,"nodeType":"Return","src":"13678:13:23"}]},"documentation":{"id":4914,"nodeType":"StructuredDocumentation","src":"12760:678:23","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4949,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:23","nodeType":"FunctionDefinition","parameters":{"id":4921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4916,"mutability":"mutable","name":"b","nameLocation":"13467:1:23","nodeType":"VariableDeclaration","scope":4949,"src":"13459:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4915,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4918,"mutability":"mutable","name":"e","nameLocation":"13478:1:23","nodeType":"VariableDeclaration","scope":4949,"src":"13470:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4917,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4920,"mutability":"mutable","name":"m","nameLocation":"13489:1:23","nodeType":"VariableDeclaration","scope":4949,"src":"13481:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4919,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:23"},"returnParameters":{"id":4924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4949,"src":"13515:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4922,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:23"},"scope":5928,"src":"13443:255:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4972,"nodeType":"Block","src":"14552:1493:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4963,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"14566:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4970,"nodeType":"IfStatement","src":"14562:29:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4968,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4962,"id":4969,"nodeType":"Return","src":"14574:17:23"}},{"AST":{"nodeType":"YulBlock","src":"14626:1413:23","statements":[{"nodeType":"YulVariableDeclaration","src":"14640:22:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14657:4:23","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14651:5:23"},"nodeType":"YulFunctionCall","src":"14651:11:23"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"14644:3:23","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15570:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"15575:4:23","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15563:6:23"},"nodeType":"YulFunctionCall","src":"15563:17:23"},"nodeType":"YulExpressionStatement","src":"15563:17:23"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15604:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"15609:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15600:3:23"},"nodeType":"YulFunctionCall","src":"15600:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"15616:4:23","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15593:6:23"},"nodeType":"YulFunctionCall","src":"15593:28:23"},"nodeType":"YulExpressionStatement","src":"15593:28:23"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15645:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"15650:4:23","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15641:3:23"},"nodeType":"YulFunctionCall","src":"15641:14:23"},{"kind":"number","nodeType":"YulLiteral","src":"15657:4:23","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15634:6:23"},"nodeType":"YulFunctionCall","src":"15634:28:23"},"nodeType":"YulExpressionStatement","src":"15634:28:23"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15686:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"15691:4:23","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15682:3:23"},"nodeType":"YulFunctionCall","src":"15682:14:23"},{"name":"b","nodeType":"YulIdentifier","src":"15698:1:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15675:6:23"},"nodeType":"YulFunctionCall","src":"15675:25:23"},"nodeType":"YulExpressionStatement","src":"15675:25:23"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15724:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"15729:4:23","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15720:3:23"},"nodeType":"YulFunctionCall","src":"15720:14:23"},{"name":"e","nodeType":"YulIdentifier","src":"15736:1:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15713:6:23"},"nodeType":"YulFunctionCall","src":"15713:25:23"},"nodeType":"YulExpressionStatement","src":"15713:25:23"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15762:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"15767:4:23","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15758:3:23"},"nodeType":"YulFunctionCall","src":"15758:14:23"},{"name":"m","nodeType":"YulIdentifier","src":"15774:1:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15751:6:23"},"nodeType":"YulFunctionCall","src":"15751:25:23"},"nodeType":"YulExpressionStatement","src":"15751:25:23"},{"nodeType":"YulAssignment","src":"15938:57:23","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"15960:3:23"},"nodeType":"YulFunctionCall","src":"15960:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"15967:4:23","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"15973:3:23"},{"kind":"number","nodeType":"YulLiteral","src":"15978:4:23","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"15984:4:23","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"15990:4:23","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"15949:10:23"},"nodeType":"YulFunctionCall","src":"15949:46:23"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"15938:7:23"}]},{"nodeType":"YulAssignment","src":"16008:21:23","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16024:4:23","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16018:5:23"},"nodeType":"YulFunctionCall","src":"16018:11:23"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16008:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4952,"isOffset":false,"isSlot":false,"src":"15698:1:23","valueSize":1},{"declaration":4954,"isOffset":false,"isSlot":false,"src":"15736:1:23","valueSize":1},{"declaration":4956,"isOffset":false,"isSlot":false,"src":"15774:1:23","valueSize":1},{"declaration":4961,"isOffset":false,"isSlot":false,"src":"16008:6:23","valueSize":1},{"declaration":4959,"isOffset":false,"isSlot":false,"src":"15938:7:23","valueSize":1}],"flags":["memory-safe"],"id":4971,"nodeType":"InlineAssembly","src":"14601:1438:23"}]},"documentation":{"id":4950,"nodeType":"StructuredDocumentation","src":"13704:738:23","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4973,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:23","nodeType":"FunctionDefinition","parameters":{"id":4957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4952,"mutability":"mutable","name":"b","nameLocation":"14474:1:23","nodeType":"VariableDeclaration","scope":4973,"src":"14466:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4951,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4954,"mutability":"mutable","name":"e","nameLocation":"14485:1:23","nodeType":"VariableDeclaration","scope":4973,"src":"14477:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4953,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4956,"mutability":"mutable","name":"m","nameLocation":"14496:1:23","nodeType":"VariableDeclaration","scope":4973,"src":"14488:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4955,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:23"},"returnParameters":{"id":4962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4959,"mutability":"mutable","name":"success","nameLocation":"14527:7:23","nodeType":"VariableDeclaration","scope":4973,"src":"14522:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4958,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4961,"mutability":"mutable","name":"result","nameLocation":"14544:6:23","nodeType":"VariableDeclaration","scope":4973,"src":"14536:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4960,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:23"},"scope":5928,"src":"14447:1598:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5008,"nodeType":"Block","src":"16242:179:23","statements":[{"assignments":[4986,4988],"declarations":[{"constant":false,"id":4986,"mutability":"mutable","name":"success","nameLocation":"16258:7:23","nodeType":"VariableDeclaration","scope":5008,"src":"16253:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4985,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4988,"mutability":"mutable","name":"result","nameLocation":"16280:6:23","nodeType":"VariableDeclaration","scope":5008,"src":"16267:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4987,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4994,"initialValue":{"arguments":[{"id":4990,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4976,"src":"16300:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4991,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4978,"src":"16303:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4992,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"16306:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4989,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4973,5055],"referencedDeclaration":5055,"src":"16290:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:23"},{"condition":{"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:23","subExpression":{"id":4995,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"16323:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5005,"nodeType":"IfStatement","src":"16318:74:23","trueBody":{"id":5004,"nodeType":"Block","src":"16332:60:23","statements":[{"expression":{"arguments":[{"expression":{"id":5000,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"16358:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3526_$","typeString":"type(library Panic)"}},"id":5001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:23","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3493,"src":"16358:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4997,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"16346:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3526_$","typeString":"type(library Panic)"}},"id":4999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:23","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3525,"src":"16346:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5003,"nodeType":"ExpressionStatement","src":"16346:35:23"}]}},{"expression":{"id":5006,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"16408:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4984,"id":5007,"nodeType":"Return","src":"16401:13:23"}]},"documentation":{"id":4974,"nodeType":"StructuredDocumentation","src":"16051:85:23","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":5009,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:23","nodeType":"FunctionDefinition","parameters":{"id":4981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4976,"mutability":"mutable","name":"b","nameLocation":"16170:1:23","nodeType":"VariableDeclaration","scope":5009,"src":"16157:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4975,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4978,"mutability":"mutable","name":"e","nameLocation":"16186:1:23","nodeType":"VariableDeclaration","scope":5009,"src":"16173:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4977,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4980,"mutability":"mutable","name":"m","nameLocation":"16202:1:23","nodeType":"VariableDeclaration","scope":5009,"src":"16189:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4979,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:23"},"returnParameters":{"id":4984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4983,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5009,"src":"16228:12:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4982,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:23"},"scope":5928,"src":"16141:280:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5054,"nodeType":"Block","src":"16675:771:23","statements":[{"condition":{"arguments":[{"id":5024,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"16700:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5023,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"16689:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":5025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5033,"nodeType":"IfStatement","src":"16685:47:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:23","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5027,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":5031,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":5022,"id":5032,"nodeType":"Return","src":"16704:28:23"}},{"assignments":[5035],"declarations":[{"constant":false,"id":5035,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:23","nodeType":"VariableDeclaration","scope":5054,"src":"16743:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5034,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5038,"initialValue":{"expression":{"id":5036,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"16758:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:23","memberName":"length","nodeType":"MemberAccess","src":"16758:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:23"},{"expression":{"id":5051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5039,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5021,"src":"16848:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5042,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5012,"src":"16874:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:23","memberName":"length","nodeType":"MemberAccess","src":"16874:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5044,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"16884:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:23","memberName":"length","nodeType":"MemberAccess","src":"16884:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5046,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5035,"src":"16894:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5047,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5012,"src":"16900:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5048,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"16903:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5049,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"16906:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5040,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"16857:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:23","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:23","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5052,"nodeType":"ExpressionStatement","src":"16848:60:23"},{"AST":{"nodeType":"YulBlock","src":"16944:496:23","statements":[{"nodeType":"YulVariableDeclaration","src":"16958:32:23","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"16977:6:23"},{"kind":"number","nodeType":"YulLiteral","src":"16985:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16973:3:23"},"nodeType":"YulFunctionCall","src":"16973:17:23"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"16962:7:23","type":""}]},{"nodeType":"YulAssignment","src":"17080:73:23","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"17102:3:23"},"nodeType":"YulFunctionCall","src":"17102:5:23"},{"kind":"number","nodeType":"YulLiteral","src":"17109:4:23","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17115:7:23"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17130:6:23"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17124:5:23"},"nodeType":"YulFunctionCall","src":"17124:13:23"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17139:7:23"},{"name":"mLen","nodeType":"YulIdentifier","src":"17148:4:23"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"17091:10:23"},"nodeType":"YulFunctionCall","src":"17091:62:23"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"17080:7:23"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17309:6:23"},{"name":"mLen","nodeType":"YulIdentifier","src":"17317:4:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17302:6:23"},"nodeType":"YulFunctionCall","src":"17302:20:23"},"nodeType":"YulExpressionStatement","src":"17302:20:23"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17405:4:23","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"17415:7:23"},{"name":"mLen","nodeType":"YulIdentifier","src":"17424:4:23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17411:3:23"},"nodeType":"YulFunctionCall","src":"17411:18:23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17398:6:23"},"nodeType":"YulFunctionCall","src":"17398:32:23"},"nodeType":"YulExpressionStatement","src":"17398:32:23"}]},"evmVersion":"paris","externalReferences":[{"declaration":5035,"isOffset":false,"isSlot":false,"src":"17148:4:23","valueSize":1},{"declaration":5035,"isOffset":false,"isSlot":false,"src":"17317:4:23","valueSize":1},{"declaration":5035,"isOffset":false,"isSlot":false,"src":"17424:4:23","valueSize":1},{"declaration":5021,"isOffset":false,"isSlot":false,"src":"16977:6:23","valueSize":1},{"declaration":5021,"isOffset":false,"isSlot":false,"src":"17130:6:23","valueSize":1},{"declaration":5021,"isOffset":false,"isSlot":false,"src":"17309:6:23","valueSize":1},{"declaration":5019,"isOffset":false,"isSlot":false,"src":"17080:7:23","valueSize":1}],"flags":["memory-safe"],"id":5053,"nodeType":"InlineAssembly","src":"16919:521:23"}]},"documentation":{"id":5010,"nodeType":"StructuredDocumentation","src":"16427:88:23","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":5055,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:23","nodeType":"FunctionDefinition","parameters":{"id":5017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5012,"mutability":"mutable","name":"b","nameLocation":"16561:1:23","nodeType":"VariableDeclaration","scope":5055,"src":"16548:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5011,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5014,"mutability":"mutable","name":"e","nameLocation":"16585:1:23","nodeType":"VariableDeclaration","scope":5055,"src":"16572:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5013,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5016,"mutability":"mutable","name":"m","nameLocation":"16609:1:23","nodeType":"VariableDeclaration","scope":5055,"src":"16596:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5015,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:23"},"returnParameters":{"id":5022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5019,"mutability":"mutable","name":"success","nameLocation":"16645:7:23","nodeType":"VariableDeclaration","scope":5055,"src":"16640:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5018,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5021,"mutability":"mutable","name":"result","nameLocation":"16667:6:23","nodeType":"VariableDeclaration","scope":5055,"src":"16654:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5020,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:23"},"scope":5928,"src":"16520:926:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5087,"nodeType":"Block","src":"17601:176:23","statements":[{"body":{"id":5083,"nodeType":"Block","src":"17658:92:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5074,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5058,"src":"17676:9:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5076,"indexExpression":{"id":5075,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"17686:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5082,"nodeType":"IfStatement","src":"17672:68:23","trueBody":{"id":5081,"nodeType":"Block","src":"17695:45:23","statements":[{"expression":{"hexValue":"66616c7365","id":5079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5062,"id":5080,"nodeType":"Return","src":"17713:12:23"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5067,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"17631:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5068,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5058,"src":"17635:9:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:23","memberName":"length","nodeType":"MemberAccess","src":"17635:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5084,"initializationExpression":{"assignments":[5064],"declarations":[{"constant":false,"id":5064,"mutability":"mutable","name":"i","nameLocation":"17624:1:23","nodeType":"VariableDeclaration","scope":5084,"src":"17616:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5063,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5066,"initialValue":{"hexValue":"30","id":5065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:23"},"loopExpression":{"expression":{"id":5072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:23","subExpression":{"id":5071,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"17655:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5073,"nodeType":"ExpressionStatement","src":"17653:3:23"},"nodeType":"ForStatement","src":"17611:139:23"},{"expression":{"hexValue":"74727565","id":5085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5062,"id":5086,"nodeType":"Return","src":"17759:11:23"}]},"documentation":{"id":5056,"nodeType":"StructuredDocumentation","src":"17452:72:23","text":" @dev Returns whether the provided byte array is zero."},"id":5088,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:23","nodeType":"FunctionDefinition","parameters":{"id":5059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5058,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:23","nodeType":"VariableDeclaration","scope":5088,"src":"17549:22:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5057,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:23"},"returnParameters":{"id":5062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5088,"src":"17595:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5060,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:23"},"scope":5928,"src":"17529:248:23","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5306,"nodeType":"Block","src":"18137:5124:23","statements":[{"id":5305,"nodeType":"UncheckedBlock","src":"18147:5108:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5096,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5091,"src":"18241:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":5097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5102,"nodeType":"IfStatement","src":"18237:53:23","trueBody":{"id":5101,"nodeType":"Block","src":"18249:41:23","statements":[{"expression":{"id":5099,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5091,"src":"18274:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5095,"id":5100,"nodeType":"Return","src":"18267:8:23"}]}},{"assignments":[5104],"declarations":[{"constant":false,"id":5104,"mutability":"mutable","name":"aa","nameLocation":"19225:2:23","nodeType":"VariableDeclaration","scope":5305,"src":"19217:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5103,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5106,"initialValue":{"id":5105,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5091,"src":"19230:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:23"},{"assignments":[5108],"declarations":[{"constant":false,"id":5108,"mutability":"mutable","name":"xn","nameLocation":"19253:2:23","nodeType":"VariableDeclaration","scope":5305,"src":"19245:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5107,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5110,"initialValue":{"hexValue":"31","id":5109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5111,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"19278:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:23","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5115,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:23","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5126,"nodeType":"IfStatement","src":"19274:92:23","trueBody":{"id":5125,"nodeType":"Block","src":"19296:70:23","statements":[{"expression":{"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5117,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"19314:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5120,"nodeType":"ExpressionStatement","src":"19314:10:23"},{"expression":{"id":5123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5121,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"19342:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":5122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5124,"nodeType":"ExpressionStatement","src":"19342:9:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5127,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"19383:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:23","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5131,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:23","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5142,"nodeType":"IfStatement","src":"19379:90:23","trueBody":{"id":5141,"nodeType":"Block","src":"19400:69:23","statements":[{"expression":{"id":5135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5133,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"19418:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5136,"nodeType":"ExpressionStatement","src":"19418:9:23"},{"expression":{"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5137,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"19445:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":5138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5140,"nodeType":"ExpressionStatement","src":"19445:9:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5143,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"19486:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:23","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5147,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:23","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5158,"nodeType":"IfStatement","src":"19482:90:23","trueBody":{"id":5157,"nodeType":"Block","src":"19503:69:23","statements":[{"expression":{"id":5151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5149,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"19521:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5152,"nodeType":"ExpressionStatement","src":"19521:9:23"},{"expression":{"id":5155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5153,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"19548:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":5154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5156,"nodeType":"ExpressionStatement","src":"19548:9:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5159,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"19589:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:23","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5163,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:23","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5174,"nodeType":"IfStatement","src":"19585:89:23","trueBody":{"id":5173,"nodeType":"Block","src":"19606:68:23","statements":[{"expression":{"id":5167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5165,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"19624:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5168,"nodeType":"ExpressionStatement","src":"19624:9:23"},{"expression":{"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5169,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"19651:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":5170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5172,"nodeType":"ExpressionStatement","src":"19651:8:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5175,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"19691:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:23","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5179,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:23","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5190,"nodeType":"IfStatement","src":"19687:87:23","trueBody":{"id":5189,"nodeType":"Block","src":"19707:67:23","statements":[{"expression":{"id":5183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5181,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"19725:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5184,"nodeType":"ExpressionStatement","src":"19725:8:23"},{"expression":{"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5185,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"19751:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":5186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5188,"nodeType":"ExpressionStatement","src":"19751:8:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5191,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"19791:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5195,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5206,"nodeType":"IfStatement","src":"19787:87:23","trueBody":{"id":5205,"nodeType":"Block","src":"19807:67:23","statements":[{"expression":{"id":5199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5197,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"19825:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5200,"nodeType":"ExpressionStatement","src":"19825:8:23"},{"expression":{"id":5203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5201,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"19851:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":5202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5204,"nodeType":"ExpressionStatement","src":"19851:8:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5207,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"19891:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5211,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5218,"nodeType":"IfStatement","src":"19887:61:23","trueBody":{"id":5217,"nodeType":"Block","src":"19907:41:23","statements":[{"expression":{"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5213,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"19925:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":5214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5216,"nodeType":"ExpressionStatement","src":"19925:8:23"}]}},{"expression":{"id":5226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5219,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"20368:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5221,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"20378:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5223,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5227,"nodeType":"ExpressionStatement","src":"20368:18:23"},{"expression":{"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5228,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"22273:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5229,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"22279:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5230,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5091,"src":"22284:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5231,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"22288:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5234,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5238,"nodeType":"ExpressionStatement","src":"22273:23:23"},{"expression":{"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5239,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"22382:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5240,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"22388:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5241,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5091,"src":"22393:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5242,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"22397:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5245,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5249,"nodeType":"ExpressionStatement","src":"22382:23:23"},{"expression":{"id":5259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5250,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"22493:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5251,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"22499:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5252,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5091,"src":"22504:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5253,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"22508:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5256,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5260,"nodeType":"ExpressionStatement","src":"22493:23:23"},{"expression":{"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5261,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"22602:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5262,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"22608:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5263,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5091,"src":"22613:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5264,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"22617:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5267,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5271,"nodeType":"ExpressionStatement","src":"22602:23:23"},{"expression":{"id":5281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5272,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"22712:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5273,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"22718:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5274,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5091,"src":"22723:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5275,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"22727:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5278,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5282,"nodeType":"ExpressionStatement","src":"22712:23:23"},{"expression":{"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5283,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"22822:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5284,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"22828:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5285,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5091,"src":"22833:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5286,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"22837:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5289,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5293,"nodeType":"ExpressionStatement","src":"22822:23:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5294,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"23211:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5297,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"23232:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5298,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5091,"src":"23237:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5299,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"23241:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5295,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7693,"src":"23216:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7693_$","typeString":"type(library SafeCast)"}},"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7692,"src":"23216:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5095,"id":5304,"nodeType":"Return","src":"23204:40:23"}]}]},"documentation":{"id":5089,"nodeType":"StructuredDocumentation","src":"17783:292:23","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":5307,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:23","nodeType":"FunctionDefinition","parameters":{"id":5092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5091,"mutability":"mutable","name":"a","nameLocation":"18102:1:23","nodeType":"VariableDeclaration","scope":5307,"src":"18094:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5090,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:23"},"returnParameters":{"id":5095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5094,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5307,"src":"18128:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5093,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:23"},"scope":5928,"src":"18080:5181:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5340,"nodeType":"Block","src":"23434:171:23","statements":[{"id":5339,"nodeType":"UncheckedBlock","src":"23444:155:23","statements":[{"assignments":[5319],"declarations":[{"constant":false,"id":5319,"mutability":"mutable","name":"result","nameLocation":"23476:6:23","nodeType":"VariableDeclaration","scope":5339,"src":"23468:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5318,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5323,"initialValue":{"arguments":[{"id":5321,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"23490:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5320,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5307,5341],"referencedDeclaration":5307,"src":"23485:4:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5324,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5319,"src":"23513:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5328,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5313,"src":"23555:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4334","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4334","typeString":"enum Math.Rounding"}],"id":5327,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5927,"src":"23538:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4334_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5330,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5319,"src":"23568:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5331,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5319,"src":"23577:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5333,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"23586:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5325,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7693,"src":"23522:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7693_$","typeString":"type(library SafeCast)"}},"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7692,"src":"23522:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5317,"id":5338,"nodeType":"Return","src":"23506:82:23"}]}]},"documentation":{"id":5308,"nodeType":"StructuredDocumentation","src":"23267:86:23","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":5341,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:23","nodeType":"FunctionDefinition","parameters":{"id":5314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5310,"mutability":"mutable","name":"a","nameLocation":"23380:1:23","nodeType":"VariableDeclaration","scope":5341,"src":"23372:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5309,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5313,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:23","nodeType":"VariableDeclaration","scope":5341,"src":"23383:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4334","typeString":"enum Math.Rounding"},"typeName":{"id":5312,"nodeType":"UserDefinedTypeName","pathNode":{"id":5311,"name":"Rounding","nameLocations":["23383:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":4334,"src":"23383:8:23"},"referencedDeclaration":4334,"src":"23383:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4334","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:23"},"returnParameters":{"id":5317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5341,"src":"23425:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5315,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:23"},"scope":5928,"src":"23358:247:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5536,"nodeType":"Block","src":"23796:981:23","statements":[{"assignments":[5350],"declarations":[{"constant":false,"id":5350,"mutability":"mutable","name":"result","nameLocation":"23814:6:23","nodeType":"VariableDeclaration","scope":5536,"src":"23806:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5349,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5352,"initialValue":{"hexValue":"30","id":5351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:23"},{"assignments":[5354],"declarations":[{"constant":false,"id":5354,"mutability":"mutable","name":"exp","nameLocation":"23842:3:23","nodeType":"VariableDeclaration","scope":5536,"src":"23834:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5353,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5355,"nodeType":"VariableDeclarationStatement","src":"23834:11:23"},{"id":5533,"nodeType":"UncheckedBlock","src":"23855:893:23","statements":[{"expression":{"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5356,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"23879:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":5357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5344,"src":"23907:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":5366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:23","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5364,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:23","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:23","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5358,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7693,"src":"23891:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7693_$","typeString":"type(library SafeCast)"}},"id":5359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7692,"src":"23891:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5371,"nodeType":"ExpressionStatement","src":"23879:51:23"},{"expression":{"id":5374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5344,"src":"23944:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5373,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"23954:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5375,"nodeType":"ExpressionStatement","src":"23944:13:23"},{"expression":{"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5376,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5350,"src":"23971:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5377,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"23981:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5379,"nodeType":"ExpressionStatement","src":"23971:13:23"},{"expression":{"id":5394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5380,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"23999:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":5381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5344,"src":"24026:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":5390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:23","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5388,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:23","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:23","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5382,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7693,"src":"24010:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7693_$","typeString":"type(library SafeCast)"}},"id":5383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7692,"src":"24010:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5395,"nodeType":"ExpressionStatement","src":"23999:49:23"},{"expression":{"id":5398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5344,"src":"24062:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5397,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"24072:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5399,"nodeType":"ExpressionStatement","src":"24062:13:23"},{"expression":{"id":5402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5400,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5350,"src":"24089:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5401,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"24099:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5403,"nodeType":"ExpressionStatement","src":"24089:13:23"},{"expression":{"id":5418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5404,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"24117:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":5405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5344,"src":"24144:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":5414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:23","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5412,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:23","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:23","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5406,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7693,"src":"24128:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7693_$","typeString":"type(library SafeCast)"}},"id":5407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7692,"src":"24128:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5419,"nodeType":"ExpressionStatement","src":"24117:49:23"},{"expression":{"id":5422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5344,"src":"24180:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5421,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"24190:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5423,"nodeType":"ExpressionStatement","src":"24180:13:23"},{"expression":{"id":5426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5424,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5350,"src":"24207:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5425,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"24217:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5427,"nodeType":"ExpressionStatement","src":"24207:13:23"},{"expression":{"id":5442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5428,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"24235:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":5429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5344,"src":"24262:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":5438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:23","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5436,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:23","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:23","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5430,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7693,"src":"24246:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7693_$","typeString":"type(library SafeCast)"}},"id":5431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7692,"src":"24246:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5443,"nodeType":"ExpressionStatement","src":"24235:49:23"},{"expression":{"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5344,"src":"24298:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5445,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"24308:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5447,"nodeType":"ExpressionStatement","src":"24298:13:23"},{"expression":{"id":5450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5448,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5350,"src":"24325:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5449,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"24335:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5451,"nodeType":"ExpressionStatement","src":"24325:13:23"},{"expression":{"id":5466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5452,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"24353:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":5453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5344,"src":"24379:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":5462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:23","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5460,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:23","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:23","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5454,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7693,"src":"24363:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7693_$","typeString":"type(library SafeCast)"}},"id":5455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7692,"src":"24363:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5467,"nodeType":"ExpressionStatement","src":"24353:47:23"},{"expression":{"id":5470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5344,"src":"24414:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5469,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"24424:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5471,"nodeType":"ExpressionStatement","src":"24414:13:23"},{"expression":{"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5472,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5350,"src":"24441:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5473,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"24451:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5475,"nodeType":"ExpressionStatement","src":"24441:13:23"},{"expression":{"id":5490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5476,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"24469:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":5477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5344,"src":"24495:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":5486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5484,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:23","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5478,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7693,"src":"24479:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7693_$","typeString":"type(library SafeCast)"}},"id":5479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7692,"src":"24479:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5491,"nodeType":"ExpressionStatement","src":"24469:47:23"},{"expression":{"id":5494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5344,"src":"24530:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5493,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"24540:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5495,"nodeType":"ExpressionStatement","src":"24530:13:23"},{"expression":{"id":5498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5496,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5350,"src":"24557:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5497,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"24567:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5499,"nodeType":"ExpressionStatement","src":"24557:13:23"},{"expression":{"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5500,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"24585:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5344,"src":"24611:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":5510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5508,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5502,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7693,"src":"24595:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7693_$","typeString":"type(library SafeCast)"}},"id":5503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7692,"src":"24595:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5515,"nodeType":"ExpressionStatement","src":"24585:47:23"},{"expression":{"id":5518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5344,"src":"24646:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":5517,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"24656:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5519,"nodeType":"ExpressionStatement","src":"24646:13:23"},{"expression":{"id":5522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5520,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5350,"src":"24673:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5521,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"24683:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5523,"nodeType":"ExpressionStatement","src":"24673:13:23"},{"expression":{"id":5531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5524,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5350,"src":"24701:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5344,"src":"24727:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":5528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5525,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7693,"src":"24711:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7693_$","typeString":"type(library SafeCast)"}},"id":5526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7692,"src":"24711:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5532,"nodeType":"ExpressionStatement","src":"24701:36:23"}]},{"expression":{"id":5534,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5350,"src":"24764:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5348,"id":5535,"nodeType":"Return","src":"24757:13:23"}]},"documentation":{"id":5342,"nodeType":"StructuredDocumentation","src":"23611:119:23","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5537,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:23","nodeType":"FunctionDefinition","parameters":{"id":5345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5344,"mutability":"mutable","name":"value","nameLocation":"23757:5:23","nodeType":"VariableDeclaration","scope":5537,"src":"23749:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5343,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:23"},"returnParameters":{"id":5348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5537,"src":"23787:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5346,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:23"},"scope":5928,"src":"23735:1042:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5570,"nodeType":"Block","src":"25010:175:23","statements":[{"id":5569,"nodeType":"UncheckedBlock","src":"25020:159:23","statements":[{"assignments":[5549],"declarations":[{"constant":false,"id":5549,"mutability":"mutable","name":"result","nameLocation":"25052:6:23","nodeType":"VariableDeclaration","scope":5569,"src":"25044:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5548,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5553,"initialValue":{"arguments":[{"id":5551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5540,"src":"25066:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5550,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5537,5571],"referencedDeclaration":5537,"src":"25061:4:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5554,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"25093:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5558,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"25135:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4334","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4334","typeString":"enum Math.Rounding"}],"id":5557,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5927,"src":"25118:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4334_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5561,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"25153:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5540,"src":"25162:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5555,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7693,"src":"25102:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7693_$","typeString":"type(library SafeCast)"}},"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7692,"src":"25102:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5547,"id":5568,"nodeType":"Return","src":"25086:82:23"}]}]},"documentation":{"id":5538,"nodeType":"StructuredDocumentation","src":"24783:142:23","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5571,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:23","nodeType":"FunctionDefinition","parameters":{"id":5544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5540,"mutability":"mutable","name":"value","nameLocation":"24952:5:23","nodeType":"VariableDeclaration","scope":5571,"src":"24944:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5539,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5543,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:23","nodeType":"VariableDeclaration","scope":5571,"src":"24959:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4334","typeString":"enum Math.Rounding"},"typeName":{"id":5542,"nodeType":"UserDefinedTypeName","pathNode":{"id":5541,"name":"Rounding","nameLocations":["24959:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":4334,"src":"24959:8:23"},"referencedDeclaration":4334,"src":"24959:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4334","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:23"},"returnParameters":{"id":5547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5571,"src":"25001:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5545,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:23"},"scope":5928,"src":"24930:255:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5699,"nodeType":"Block","src":"25378:854:23","statements":[{"assignments":[5580],"declarations":[{"constant":false,"id":5580,"mutability":"mutable","name":"result","nameLocation":"25396:6:23","nodeType":"VariableDeclaration","scope":5699,"src":"25388:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5579,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5582,"initialValue":{"hexValue":"30","id":5581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:23"},{"id":5696,"nodeType":"UncheckedBlock","src":"25416:787:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5574,"src":"25444:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5599,"nodeType":"IfStatement","src":"25440:103:23","trueBody":{"id":5598,"nodeType":"Block","src":"25463:80:23","statements":[{"expression":{"id":5592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5574,"src":"25481:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5593,"nodeType":"ExpressionStatement","src":"25481:17:23"},{"expression":{"id":5596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5594,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"25516:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5597,"nodeType":"ExpressionStatement","src":"25516:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5574,"src":"25560:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5616,"nodeType":"IfStatement","src":"25556:103:23","trueBody":{"id":5615,"nodeType":"Block","src":"25579:80:23","statements":[{"expression":{"id":5609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5605,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5574,"src":"25597:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5610,"nodeType":"ExpressionStatement","src":"25597:17:23"},{"expression":{"id":5613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5611,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"25632:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5614,"nodeType":"ExpressionStatement","src":"25632:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5574,"src":"25676:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5633,"nodeType":"IfStatement","src":"25672:103:23","trueBody":{"id":5632,"nodeType":"Block","src":"25695:80:23","statements":[{"expression":{"id":5626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5574,"src":"25713:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5627,"nodeType":"ExpressionStatement","src":"25713:17:23"},{"expression":{"id":5630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5628,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"25748:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5631,"nodeType":"ExpressionStatement","src":"25748:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5574,"src":"25792:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5650,"nodeType":"IfStatement","src":"25788:100:23","trueBody":{"id":5649,"nodeType":"Block","src":"25810:78:23","statements":[{"expression":{"id":5643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5574,"src":"25828:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5644,"nodeType":"ExpressionStatement","src":"25828:16:23"},{"expression":{"id":5647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5645,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"25862:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5648,"nodeType":"ExpressionStatement","src":"25862:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5574,"src":"25905:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:23","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5667,"nodeType":"IfStatement","src":"25901:100:23","trueBody":{"id":5666,"nodeType":"Block","src":"25923:78:23","statements":[{"expression":{"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5574,"src":"25941:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:23","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5661,"nodeType":"ExpressionStatement","src":"25941:16:23"},{"expression":{"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5662,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"25975:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5665,"nodeType":"ExpressionStatement","src":"25975:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5574,"src":"26018:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:23","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5684,"nodeType":"IfStatement","src":"26014:100:23","trueBody":{"id":5683,"nodeType":"Block","src":"26036:78:23","statements":[{"expression":{"id":5677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5574,"src":"26054:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:23","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5678,"nodeType":"ExpressionStatement","src":"26054:16:23"},{"expression":{"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5679,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"26088:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5682,"nodeType":"ExpressionStatement","src":"26088:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5574,"src":"26131:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5695,"nodeType":"IfStatement","src":"26127:66:23","trueBody":{"id":5694,"nodeType":"Block","src":"26149:44:23","statements":[{"expression":{"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5690,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"26167:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5693,"nodeType":"ExpressionStatement","src":"26167:11:23"}]}}]},{"expression":{"id":5697,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"26219:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5578,"id":5698,"nodeType":"Return","src":"26212:13:23"}]},"documentation":{"id":5572,"nodeType":"StructuredDocumentation","src":"25191:120:23","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5700,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:23","nodeType":"FunctionDefinition","parameters":{"id":5575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5574,"mutability":"mutable","name":"value","nameLocation":"25339:5:23","nodeType":"VariableDeclaration","scope":5700,"src":"25331:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5573,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:23"},"returnParameters":{"id":5578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5700,"src":"25369:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5576,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:23"},"scope":5928,"src":"25316:916:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5733,"nodeType":"Block","src":"26467:177:23","statements":[{"id":5732,"nodeType":"UncheckedBlock","src":"26477:161:23","statements":[{"assignments":[5712],"declarations":[{"constant":false,"id":5712,"mutability":"mutable","name":"result","nameLocation":"26509:6:23","nodeType":"VariableDeclaration","scope":5732,"src":"26501:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5711,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5716,"initialValue":{"arguments":[{"id":5714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5703,"src":"26524:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5713,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5700,5734],"referencedDeclaration":5700,"src":"26518:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5717,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"26551:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5721,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5706,"src":"26593:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4334","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4334","typeString":"enum Math.Rounding"}],"id":5720,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5927,"src":"26576:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4334_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5724,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"26612:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5703,"src":"26621:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5718,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7693,"src":"26560:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7693_$","typeString":"type(library SafeCast)"}},"id":5719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7692,"src":"26560:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5710,"id":5731,"nodeType":"Return","src":"26544:83:23"}]}]},"documentation":{"id":5701,"nodeType":"StructuredDocumentation","src":"26238:143:23","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5734,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:23","nodeType":"FunctionDefinition","parameters":{"id":5707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5703,"mutability":"mutable","name":"value","nameLocation":"26409:5:23","nodeType":"VariableDeclaration","scope":5734,"src":"26401:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5702,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5706,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:23","nodeType":"VariableDeclaration","scope":5734,"src":"26416:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4334","typeString":"enum Math.Rounding"},"typeName":{"id":5705,"nodeType":"UserDefinedTypeName","pathNode":{"id":5704,"name":"Rounding","nameLocations":["26416:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":4334,"src":"26416:8:23"},"referencedDeclaration":4334,"src":"26416:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4334","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:23"},"returnParameters":{"id":5710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5734,"src":"26458:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5708,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:23"},"scope":5928,"src":"26386:258:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5870,"nodeType":"Block","src":"26964:674:23","statements":[{"assignments":[5743],"declarations":[{"constant":false,"id":5743,"mutability":"mutable","name":"result","nameLocation":"26982:6:23","nodeType":"VariableDeclaration","scope":5870,"src":"26974:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5742,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5745,"initialValue":{"hexValue":"30","id":5744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:23"},{"assignments":[5747],"declarations":[{"constant":false,"id":5747,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:23","nodeType":"VariableDeclaration","scope":5870,"src":"27002:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5746,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5748,"nodeType":"VariableDeclarationStatement","src":"27002:12:23"},{"id":5867,"nodeType":"UncheckedBlock","src":"27024:585:23","statements":[{"expression":{"id":5761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5749,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"27048:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5737,"src":"27071:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":5758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:23","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5756,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:23","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:23","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5750,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7693,"src":"27055:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7693_$","typeString":"type(library SafeCast)"}},"id":5751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7692,"src":"27055:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5762,"nodeType":"ExpressionStatement","src":"27048:46:23"},{"expression":{"id":5767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5737,"src":"27108:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5764,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"27118:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":5765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5768,"nodeType":"ExpressionStatement","src":"27108:20:23"},{"expression":{"id":5773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5769,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"27142:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5770,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"27152:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":5771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5774,"nodeType":"ExpressionStatement","src":"27142:19:23"},{"expression":{"id":5787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5775,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"27176:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5737,"src":"27199:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":5784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:23","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5782,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:23","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:23","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5776,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7693,"src":"27183:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7693_$","typeString":"type(library SafeCast)"}},"id":5777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7692,"src":"27183:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5788,"nodeType":"ExpressionStatement","src":"27176:45:23"},{"expression":{"id":5793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5737,"src":"27235:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5790,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"27245:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":5791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5794,"nodeType":"ExpressionStatement","src":"27235:19:23"},{"expression":{"id":5799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5795,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"27268:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5796,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"27278:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":5797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5800,"nodeType":"ExpressionStatement","src":"27268:18:23"},{"expression":{"id":5813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5801,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"27301:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5737,"src":"27324:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":5810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:23","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5808,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:23","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:23","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5802,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7693,"src":"27308:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7693_$","typeString":"type(library SafeCast)"}},"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7692,"src":"27308:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5814,"nodeType":"ExpressionStatement","src":"27301:45:23"},{"expression":{"id":5819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5737,"src":"27360:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5816,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"27370:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":5817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5820,"nodeType":"ExpressionStatement","src":"27360:19:23"},{"expression":{"id":5825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5821,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"27393:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5822,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"27403:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":5823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5826,"nodeType":"ExpressionStatement","src":"27393:18:23"},{"expression":{"id":5839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5827,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"27426:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5737,"src":"27449:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":5836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:23","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5834,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:23","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:23","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5828,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7693,"src":"27433:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7693_$","typeString":"type(library SafeCast)"}},"id":5829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7692,"src":"27433:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5840,"nodeType":"ExpressionStatement","src":"27426:45:23"},{"expression":{"id":5845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5737,"src":"27485:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5842,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"27495:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":5843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5846,"nodeType":"ExpressionStatement","src":"27485:19:23"},{"expression":{"id":5851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5847,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"27518:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5848,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"27528:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5852,"nodeType":"ExpressionStatement","src":"27518:18:23"},{"expression":{"id":5865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5853,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"27551:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5737,"src":"27577:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":5862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:23","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5860,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:23","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:23","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5854,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7693,"src":"27561:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7693_$","typeString":"type(library SafeCast)"}},"id":5855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7692,"src":"27561:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5866,"nodeType":"ExpressionStatement","src":"27551:47:23"}]},{"expression":{"id":5868,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"27625:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5741,"id":5869,"nodeType":"Return","src":"27618:13:23"}]},"documentation":{"id":5735,"nodeType":"StructuredDocumentation","src":"26650:246:23","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5871,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:23","nodeType":"FunctionDefinition","parameters":{"id":5738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5737,"mutability":"mutable","name":"value","nameLocation":"26925:5:23","nodeType":"VariableDeclaration","scope":5871,"src":"26917:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5736,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:23"},"returnParameters":{"id":5741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5871,"src":"26955:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5739,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:23"},"scope":5928,"src":"26901:737:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5907,"nodeType":"Block","src":"27875:184:23","statements":[{"id":5906,"nodeType":"UncheckedBlock","src":"27885:168:23","statements":[{"assignments":[5883],"declarations":[{"constant":false,"id":5883,"mutability":"mutable","name":"result","nameLocation":"27917:6:23","nodeType":"VariableDeclaration","scope":5906,"src":"27909:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5882,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5887,"initialValue":{"arguments":[{"id":5885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"27933:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5884,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5871,5908],"referencedDeclaration":5871,"src":"27926:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5888,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5883,"src":"27960:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5892,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5877,"src":"28002:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4334","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4334","typeString":"enum Math.Rounding"}],"id":5891,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5927,"src":"27985:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4334_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5895,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5883,"src":"28021:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5898,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"28036:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5889,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7693,"src":"27969:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7693_$","typeString":"type(library SafeCast)"}},"id":5890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7692,"src":"27969:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5881,"id":5905,"nodeType":"Return","src":"27953:89:23"}]}]},"documentation":{"id":5872,"nodeType":"StructuredDocumentation","src":"27644:144:23","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5908,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:23","nodeType":"FunctionDefinition","parameters":{"id":5878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5874,"mutability":"mutable","name":"value","nameLocation":"27817:5:23","nodeType":"VariableDeclaration","scope":5908,"src":"27809:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5873,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5877,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:23","nodeType":"VariableDeclaration","scope":5908,"src":"27824:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4334","typeString":"enum Math.Rounding"},"typeName":{"id":5876,"nodeType":"UserDefinedTypeName","pathNode":{"id":5875,"name":"Rounding","nameLocations":["27824:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":4334,"src":"27824:8:23"},"referencedDeclaration":4334,"src":"27824:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4334","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:23"},"returnParameters":{"id":5881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5908,"src":"27866:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5879,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:23"},"scope":5928,"src":"27793:266:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5926,"nodeType":"Block","src":"28257:48:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5919,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"28280:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4334","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4334","typeString":"enum Math.Rounding"}],"id":5918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5917,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:23","typeDescriptions":{}}},"id":5920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5916,"id":5925,"nodeType":"Return","src":"28267:31:23"}]},"documentation":{"id":5909,"nodeType":"StructuredDocumentation","src":"28065:113:23","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5927,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:23","nodeType":"FunctionDefinition","parameters":{"id":5913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5912,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:23","nodeType":"VariableDeclaration","scope":5927,"src":"28209:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4334","typeString":"enum Math.Rounding"},"typeName":{"id":5911,"nodeType":"UserDefinedTypeName","pathNode":{"id":5910,"name":"Rounding","nameLocations":["28209:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":4334,"src":"28209:8:23"},"referencedDeclaration":4334,"src":"28209:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4334","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:23"},"returnParameters":{"id":5916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5927,"src":"28251:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5914,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:23"},"scope":5928,"src":"28183:122:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5929,"src":"281:28026:23","usedErrors":[],"usedEvents":[]}],"src":"103:28205:23"},"id":23},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7693]},"id":7694,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5930,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:24"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5931,"nodeType":"StructuredDocumentation","src":"218:550:24","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":7693,"linearizedBaseContracts":[7693],"name":"SafeCast","nameLocation":"777:8:24","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5932,"nodeType":"StructuredDocumentation","src":"792:68:24","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5938,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:24","nodeType":"ErrorDefinition","parameters":{"id":5937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5934,"mutability":"mutable","name":"bits","nameLocation":"908:4:24","nodeType":"VariableDeclaration","scope":5938,"src":"902:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5933,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5936,"mutability":"mutable","name":"value","nameLocation":"922:5:24","nodeType":"VariableDeclaration","scope":5938,"src":"914:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5935,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:24"},"src":"865:64:24"},{"documentation":{"id":5939,"nodeType":"StructuredDocumentation","src":"935:75:24","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5943,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:24","nodeType":"ErrorDefinition","parameters":{"id":5942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5941,"mutability":"mutable","name":"value","nameLocation":"1056:5:24","nodeType":"VariableDeclaration","scope":5943,"src":"1049:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5940,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:24"},"src":"1015:48:24"},{"documentation":{"id":5944,"nodeType":"StructuredDocumentation","src":"1069:67:24","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5950,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:24","nodeType":"ErrorDefinition","parameters":{"id":5949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5946,"mutability":"mutable","name":"bits","nameLocation":"1183:4:24","nodeType":"VariableDeclaration","scope":5950,"src":"1177:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5945,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5948,"mutability":"mutable","name":"value","nameLocation":"1196:5:24","nodeType":"VariableDeclaration","scope":5950,"src":"1189:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5947,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:24"},"src":"1141:62:24"},{"documentation":{"id":5951,"nodeType":"StructuredDocumentation","src":"1209:75:24","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5955,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:24","nodeType":"ErrorDefinition","parameters":{"id":5954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5953,"mutability":"mutable","name":"value","nameLocation":"1331:5:24","nodeType":"VariableDeclaration","scope":5955,"src":"1323:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5952,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:24"},"src":"1289:49:24"},{"body":{"id":5982,"nodeType":"Block","src":"1695:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"1709:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5965,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5964,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"1717:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:24","memberName":"max","nodeType":"MemberAccess","src":"1717:17:24","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5976,"nodeType":"IfStatement","src":"1705:105:24","trueBody":{"id":5975,"nodeType":"Block","src":"1736:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:24","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"1793:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5970,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"1757:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5974,"nodeType":"RevertStatement","src":"1750:49:24"}]}},{"expression":{"arguments":[{"id":5979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"1834:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5977,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:24","typeDescriptions":{}}},"id":5980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5962,"id":5981,"nodeType":"Return","src":"1819:21:24"}]},"documentation":{"id":5956,"nodeType":"StructuredDocumentation","src":"1344:280:24","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5983,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:24","nodeType":"FunctionDefinition","parameters":{"id":5959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5958,"mutability":"mutable","name":"value","nameLocation":"1656:5:24","nodeType":"VariableDeclaration","scope":5983,"src":"1648:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5957,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:24"},"returnParameters":{"id":5962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5983,"src":"1686:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5960,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:24","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:24"},"scope":7693,"src":"1629:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6010,"nodeType":"Block","src":"2204:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"2218:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5993,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5992,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"2226:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:24","memberName":"max","nodeType":"MemberAccess","src":"2226:17:24","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6004,"nodeType":"IfStatement","src":"2214:105:24","trueBody":{"id":6003,"nodeType":"Block","src":"2245:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:24","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"2302:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5998,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"2266:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6002,"nodeType":"RevertStatement","src":"2259:49:24"}]}},{"expression":{"arguments":[{"id":6007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"2343:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":6005,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:24","typeDescriptions":{}}},"id":6008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5990,"id":6009,"nodeType":"Return","src":"2328:21:24"}]},"documentation":{"id":5984,"nodeType":"StructuredDocumentation","src":"1853:280:24","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6011,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:24","nodeType":"FunctionDefinition","parameters":{"id":5987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5986,"mutability":"mutable","name":"value","nameLocation":"2165:5:24","nodeType":"VariableDeclaration","scope":6011,"src":"2157:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5985,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:24"},"returnParameters":{"id":5990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6011,"src":"2195:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5988,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:24","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:24"},"scope":7693,"src":"2138:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6038,"nodeType":"Block","src":"2713:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6014,"src":"2727:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6021,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":6020,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"2735:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":6024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:24","memberName":"max","nodeType":"MemberAccess","src":"2735:17:24","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6032,"nodeType":"IfStatement","src":"2723:105:24","trueBody":{"id":6031,"nodeType":"Block","src":"2754:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:24","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6014,"src":"2811:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6026,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"2775:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6030,"nodeType":"RevertStatement","src":"2768:49:24"}]}},{"expression":{"arguments":[{"id":6035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6014,"src":"2852:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6033,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:24","typeDescriptions":{}}},"id":6036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":6018,"id":6037,"nodeType":"Return","src":"2837:21:24"}]},"documentation":{"id":6012,"nodeType":"StructuredDocumentation","src":"2362:280:24","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6039,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:24","nodeType":"FunctionDefinition","parameters":{"id":6015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6014,"mutability":"mutable","name":"value","nameLocation":"2674:5:24","nodeType":"VariableDeclaration","scope":6039,"src":"2666:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6013,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:24"},"returnParameters":{"id":6018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6039,"src":"2704:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":6016,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:24","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:24"},"scope":7693,"src":"2647:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6066,"nodeType":"Block","src":"3222:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6042,"src":"3236:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6049,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":6048,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"3244:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":6052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:24","memberName":"max","nodeType":"MemberAccess","src":"3244:17:24","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6060,"nodeType":"IfStatement","src":"3232:105:24","trueBody":{"id":6059,"nodeType":"Block","src":"3263:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:24","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6042,"src":"3320:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6054,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"3284:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6058,"nodeType":"RevertStatement","src":"3277:49:24"}]}},{"expression":{"arguments":[{"id":6063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6042,"src":"3361:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6061,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:24","typeDescriptions":{}}},"id":6064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6046,"id":6065,"nodeType":"Return","src":"3346:21:24"}]},"documentation":{"id":6040,"nodeType":"StructuredDocumentation","src":"2871:280:24","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6067,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:24","nodeType":"FunctionDefinition","parameters":{"id":6043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6042,"mutability":"mutable","name":"value","nameLocation":"3183:5:24","nodeType":"VariableDeclaration","scope":6067,"src":"3175:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6041,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:24"},"returnParameters":{"id":6046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6045,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6067,"src":"3213:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6044,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:24","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:24"},"scope":7693,"src":"3156:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6094,"nodeType":"Block","src":"3731:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"3745:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6077,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":6076,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"3753:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":6080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:24","memberName":"max","nodeType":"MemberAccess","src":"3753:17:24","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6088,"nodeType":"IfStatement","src":"3741:105:24","trueBody":{"id":6087,"nodeType":"Block","src":"3772:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:24","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"3829:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6082,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"3793:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6086,"nodeType":"RevertStatement","src":"3786:49:24"}]}},{"expression":{"arguments":[{"id":6091,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"3870:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6089,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:24","typeDescriptions":{}}},"id":6092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":6074,"id":6093,"nodeType":"Return","src":"3855:21:24"}]},"documentation":{"id":6068,"nodeType":"StructuredDocumentation","src":"3380:280:24","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6095,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:24","nodeType":"FunctionDefinition","parameters":{"id":6071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6070,"mutability":"mutable","name":"value","nameLocation":"3692:5:24","nodeType":"VariableDeclaration","scope":6095,"src":"3684:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6069,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:24"},"returnParameters":{"id":6074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6095,"src":"3722:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":6072,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:24","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:24"},"scope":7693,"src":"3665:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6122,"nodeType":"Block","src":"4240:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"4254:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6105,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":6104,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"4262:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":6108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:24","memberName":"max","nodeType":"MemberAccess","src":"4262:17:24","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6116,"nodeType":"IfStatement","src":"4250:105:24","trueBody":{"id":6115,"nodeType":"Block","src":"4281:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:24","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"4338:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6110,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"4302:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6114,"nodeType":"RevertStatement","src":"4295:49:24"}]}},{"expression":{"arguments":[{"id":6119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"4379:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6117,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:24","typeDescriptions":{}}},"id":6120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":6102,"id":6121,"nodeType":"Return","src":"4364:21:24"}]},"documentation":{"id":6096,"nodeType":"StructuredDocumentation","src":"3889:280:24","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6123,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:24","nodeType":"FunctionDefinition","parameters":{"id":6099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6098,"mutability":"mutable","name":"value","nameLocation":"4201:5:24","nodeType":"VariableDeclaration","scope":6123,"src":"4193:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6097,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:24"},"returnParameters":{"id":6102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6123,"src":"4231:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6100,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:24","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:24"},"scope":7693,"src":"4174:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6150,"nodeType":"Block","src":"4749:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6126,"src":"4763:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6133,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":6132,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"4771:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":6136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:24","memberName":"max","nodeType":"MemberAccess","src":"4771:17:24","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6144,"nodeType":"IfStatement","src":"4759:105:24","trueBody":{"id":6143,"nodeType":"Block","src":"4790:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:24","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6126,"src":"4847:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6138,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"4811:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6142,"nodeType":"RevertStatement","src":"4804:49:24"}]}},{"expression":{"arguments":[{"id":6147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6126,"src":"4888:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6145,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:24","typeDescriptions":{}}},"id":6148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":6130,"id":6149,"nodeType":"Return","src":"4873:21:24"}]},"documentation":{"id":6124,"nodeType":"StructuredDocumentation","src":"4398:280:24","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6151,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:24","nodeType":"FunctionDefinition","parameters":{"id":6127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6126,"mutability":"mutable","name":"value","nameLocation":"4710:5:24","nodeType":"VariableDeclaration","scope":6151,"src":"4702:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6125,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:24"},"returnParameters":{"id":6130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6151,"src":"4740:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":6128,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:24","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:24"},"scope":7693,"src":"4683:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6178,"nodeType":"Block","src":"5258:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6154,"src":"5272:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6161,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":6160,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"5280:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":6164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:24","memberName":"max","nodeType":"MemberAccess","src":"5280:17:24","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6172,"nodeType":"IfStatement","src":"5268:105:24","trueBody":{"id":6171,"nodeType":"Block","src":"5299:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:24","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6154,"src":"5356:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6166,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"5320:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6170,"nodeType":"RevertStatement","src":"5313:49:24"}]}},{"expression":{"arguments":[{"id":6175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6154,"src":"5397:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6173,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:24","typeDescriptions":{}}},"id":6176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":6158,"id":6177,"nodeType":"Return","src":"5382:21:24"}]},"documentation":{"id":6152,"nodeType":"StructuredDocumentation","src":"4907:280:24","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6179,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:24","nodeType":"FunctionDefinition","parameters":{"id":6155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6154,"mutability":"mutable","name":"value","nameLocation":"5219:5:24","nodeType":"VariableDeclaration","scope":6179,"src":"5211:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6153,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:24"},"returnParameters":{"id":6158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6179,"src":"5249:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":6156,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:24","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:24"},"scope":7693,"src":"5192:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6206,"nodeType":"Block","src":"5767:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6182,"src":"5781:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6189,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":6188,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"5789:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":6192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:24","memberName":"max","nodeType":"MemberAccess","src":"5789:17:24","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6200,"nodeType":"IfStatement","src":"5777:105:24","trueBody":{"id":6199,"nodeType":"Block","src":"5808:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:24","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6182,"src":"5865:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6194,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"5829:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6198,"nodeType":"RevertStatement","src":"5822:49:24"}]}},{"expression":{"arguments":[{"id":6203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6182,"src":"5906:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6201,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:24","typeDescriptions":{}}},"id":6204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":6186,"id":6205,"nodeType":"Return","src":"5891:21:24"}]},"documentation":{"id":6180,"nodeType":"StructuredDocumentation","src":"5416:280:24","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6207,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:24","nodeType":"FunctionDefinition","parameters":{"id":6183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6182,"mutability":"mutable","name":"value","nameLocation":"5728:5:24","nodeType":"VariableDeclaration","scope":6207,"src":"5720:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6181,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:24"},"returnParameters":{"id":6186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6185,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6207,"src":"5758:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":6184,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:24","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:24"},"scope":7693,"src":"5701:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6234,"nodeType":"Block","src":"6276:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6210,"src":"6290:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6217,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":6216,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"6298:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":6220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:24","memberName":"max","nodeType":"MemberAccess","src":"6298:17:24","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6228,"nodeType":"IfStatement","src":"6286:105:24","trueBody":{"id":6227,"nodeType":"Block","src":"6317:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:24","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6210,"src":"6374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6222,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"6338:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6226,"nodeType":"RevertStatement","src":"6331:49:24"}]}},{"expression":{"arguments":[{"id":6231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6210,"src":"6415:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6229,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:24","typeDescriptions":{}}},"id":6232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":6214,"id":6233,"nodeType":"Return","src":"6400:21:24"}]},"documentation":{"id":6208,"nodeType":"StructuredDocumentation","src":"5925:280:24","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6235,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:24","nodeType":"FunctionDefinition","parameters":{"id":6211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6210,"mutability":"mutable","name":"value","nameLocation":"6237:5:24","nodeType":"VariableDeclaration","scope":6235,"src":"6229:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6209,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:24"},"returnParameters":{"id":6214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6235,"src":"6267:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":6212,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:24","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:24"},"scope":7693,"src":"6210:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6262,"nodeType":"Block","src":"6785:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6238,"src":"6799:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6245,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":6244,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"6807:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":6248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:24","memberName":"max","nodeType":"MemberAccess","src":"6807:17:24","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6256,"nodeType":"IfStatement","src":"6795:105:24","trueBody":{"id":6255,"nodeType":"Block","src":"6826:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:24","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6238,"src":"6883:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6250,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"6847:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6254,"nodeType":"RevertStatement","src":"6840:49:24"}]}},{"expression":{"arguments":[{"id":6259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6238,"src":"6924:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6257,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:24","typeDescriptions":{}}},"id":6260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":6242,"id":6261,"nodeType":"Return","src":"6909:21:24"}]},"documentation":{"id":6236,"nodeType":"StructuredDocumentation","src":"6434:280:24","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6263,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:24","nodeType":"FunctionDefinition","parameters":{"id":6239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6238,"mutability":"mutable","name":"value","nameLocation":"6746:5:24","nodeType":"VariableDeclaration","scope":6263,"src":"6738:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6237,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:24"},"returnParameters":{"id":6242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6241,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6263,"src":"6776:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":6240,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:24","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:24"},"scope":7693,"src":"6719:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6290,"nodeType":"Block","src":"7294:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6266,"src":"7308:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6273,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":6272,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"7316:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":6276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:24","memberName":"max","nodeType":"MemberAccess","src":"7316:17:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6284,"nodeType":"IfStatement","src":"7304:105:24","trueBody":{"id":6283,"nodeType":"Block","src":"7335:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:24","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6266,"src":"7392:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6278,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"7356:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6282,"nodeType":"RevertStatement","src":"7349:49:24"}]}},{"expression":{"arguments":[{"id":6287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6266,"src":"7433:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6285,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:24","typeDescriptions":{}}},"id":6288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":6270,"id":6289,"nodeType":"Return","src":"7418:21:24"}]},"documentation":{"id":6264,"nodeType":"StructuredDocumentation","src":"6943:280:24","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6291,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:24","nodeType":"FunctionDefinition","parameters":{"id":6267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6266,"mutability":"mutable","name":"value","nameLocation":"7255:5:24","nodeType":"VariableDeclaration","scope":6291,"src":"7247:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6265,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:24"},"returnParameters":{"id":6270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6291,"src":"7285:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6268,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:24"},"scope":7693,"src":"7228:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6318,"nodeType":"Block","src":"7803:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6294,"src":"7817:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6301,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":6300,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"7825:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":6304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:24","memberName":"max","nodeType":"MemberAccess","src":"7825:17:24","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6312,"nodeType":"IfStatement","src":"7813:105:24","trueBody":{"id":6311,"nodeType":"Block","src":"7844:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:24","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6294,"src":"7901:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6306,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"7865:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6310,"nodeType":"RevertStatement","src":"7858:49:24"}]}},{"expression":{"arguments":[{"id":6315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6294,"src":"7942:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6313,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:24","typeDescriptions":{}}},"id":6316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":6298,"id":6317,"nodeType":"Return","src":"7927:21:24"}]},"documentation":{"id":6292,"nodeType":"StructuredDocumentation","src":"7452:280:24","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6319,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:24","nodeType":"FunctionDefinition","parameters":{"id":6295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6294,"mutability":"mutable","name":"value","nameLocation":"7764:5:24","nodeType":"VariableDeclaration","scope":6319,"src":"7756:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6293,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:24"},"returnParameters":{"id":6298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6319,"src":"7794:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":6296,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:24","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:24"},"scope":7693,"src":"7737:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6346,"nodeType":"Block","src":"8312:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6322,"src":"8326:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6329,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6328,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"8334:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:24","memberName":"max","nodeType":"MemberAccess","src":"8334:17:24","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6340,"nodeType":"IfStatement","src":"8322:105:24","trueBody":{"id":6339,"nodeType":"Block","src":"8353:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:24","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6322,"src":"8410:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6334,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"8374:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6338,"nodeType":"RevertStatement","src":"8367:49:24"}]}},{"expression":{"arguments":[{"id":6343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6322,"src":"8451:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6341,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:24","typeDescriptions":{}}},"id":6344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6326,"id":6345,"nodeType":"Return","src":"8436:21:24"}]},"documentation":{"id":6320,"nodeType":"StructuredDocumentation","src":"7961:280:24","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6347,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:24","nodeType":"FunctionDefinition","parameters":{"id":6323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6322,"mutability":"mutable","name":"value","nameLocation":"8273:5:24","nodeType":"VariableDeclaration","scope":6347,"src":"8265:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6321,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:24"},"returnParameters":{"id":6326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6347,"src":"8303:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6324,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:24","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:24"},"scope":7693,"src":"8246:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6374,"nodeType":"Block","src":"8821:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6350,"src":"8835:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6357,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6356,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"8843:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:24","memberName":"max","nodeType":"MemberAccess","src":"8843:17:24","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6368,"nodeType":"IfStatement","src":"8831:105:24","trueBody":{"id":6367,"nodeType":"Block","src":"8862:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:24","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6350,"src":"8919:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6362,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"8883:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6366,"nodeType":"RevertStatement","src":"8876:49:24"}]}},{"expression":{"arguments":[{"id":6371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6350,"src":"8960:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6369,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:24","typeDescriptions":{}}},"id":6372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6354,"id":6373,"nodeType":"Return","src":"8945:21:24"}]},"documentation":{"id":6348,"nodeType":"StructuredDocumentation","src":"8470:280:24","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6375,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:24","nodeType":"FunctionDefinition","parameters":{"id":6351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6350,"mutability":"mutable","name":"value","nameLocation":"8782:5:24","nodeType":"VariableDeclaration","scope":6375,"src":"8774:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6349,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:24"},"returnParameters":{"id":6354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6375,"src":"8812:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6352,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:24","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:24"},"scope":7693,"src":"8755:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6402,"nodeType":"Block","src":"9330:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6378,"src":"9344:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6385,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6384,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"9352:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:24","memberName":"max","nodeType":"MemberAccess","src":"9352:17:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6396,"nodeType":"IfStatement","src":"9340:105:24","trueBody":{"id":6395,"nodeType":"Block","src":"9371:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6378,"src":"9428:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6390,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"9392:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6394,"nodeType":"RevertStatement","src":"9385:49:24"}]}},{"expression":{"arguments":[{"id":6399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6378,"src":"9469:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6397,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:24","typeDescriptions":{}}},"id":6400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6382,"id":6401,"nodeType":"Return","src":"9454:21:24"}]},"documentation":{"id":6376,"nodeType":"StructuredDocumentation","src":"8979:280:24","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6403,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:24","nodeType":"FunctionDefinition","parameters":{"id":6379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6378,"mutability":"mutable","name":"value","nameLocation":"9291:5:24","nodeType":"VariableDeclaration","scope":6403,"src":"9283:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6377,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:24"},"returnParameters":{"id":6382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6403,"src":"9321:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6380,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:24"},"scope":7693,"src":"9264:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6430,"nodeType":"Block","src":"9839:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"9853:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6413,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6412,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"9861:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:24","memberName":"max","nodeType":"MemberAccess","src":"9861:17:24","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6424,"nodeType":"IfStatement","src":"9849:105:24","trueBody":{"id":6423,"nodeType":"Block","src":"9880:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:24","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"9937:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6418,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"9901:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6422,"nodeType":"RevertStatement","src":"9894:49:24"}]}},{"expression":{"arguments":[{"id":6427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"9978:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6425,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:24","typeDescriptions":{}}},"id":6428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6410,"id":6429,"nodeType":"Return","src":"9963:21:24"}]},"documentation":{"id":6404,"nodeType":"StructuredDocumentation","src":"9488:280:24","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6431,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:24","nodeType":"FunctionDefinition","parameters":{"id":6407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6406,"mutability":"mutable","name":"value","nameLocation":"9800:5:24","nodeType":"VariableDeclaration","scope":6431,"src":"9792:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6405,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:24"},"returnParameters":{"id":6410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6409,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6431,"src":"9830:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6408,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:24","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:24"},"scope":7693,"src":"9773:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6458,"nodeType":"Block","src":"10348:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6434,"src":"10362:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6441,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":6440,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"10370:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":6444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:24","memberName":"max","nodeType":"MemberAccess","src":"10370:17:24","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6452,"nodeType":"IfStatement","src":"10358:105:24","trueBody":{"id":6451,"nodeType":"Block","src":"10389:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:24","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6434,"src":"10446:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6446,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"10410:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6450,"nodeType":"RevertStatement","src":"10403:49:24"}]}},{"expression":{"arguments":[{"id":6455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6434,"src":"10487:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6453,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:24","typeDescriptions":{}}},"id":6456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":6438,"id":6457,"nodeType":"Return","src":"10472:21:24"}]},"documentation":{"id":6432,"nodeType":"StructuredDocumentation","src":"9997:280:24","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6459,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:24","nodeType":"FunctionDefinition","parameters":{"id":6435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6434,"mutability":"mutable","name":"value","nameLocation":"10309:5:24","nodeType":"VariableDeclaration","scope":6459,"src":"10301:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6433,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:24"},"returnParameters":{"id":6438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6459,"src":"10339:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6436,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:24","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:24"},"scope":7693,"src":"10282:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6486,"nodeType":"Block","src":"10857:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6467,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6462,"src":"10871:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6469,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6468,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"10879:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:24","memberName":"max","nodeType":"MemberAccess","src":"10879:17:24","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6480,"nodeType":"IfStatement","src":"10867:105:24","trueBody":{"id":6479,"nodeType":"Block","src":"10898:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:24","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6462,"src":"10955:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6474,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"10919:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6478,"nodeType":"RevertStatement","src":"10912:49:24"}]}},{"expression":{"arguments":[{"id":6483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6462,"src":"10996:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6481,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:24","typeDescriptions":{}}},"id":6484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6466,"id":6485,"nodeType":"Return","src":"10981:21:24"}]},"documentation":{"id":6460,"nodeType":"StructuredDocumentation","src":"10506:280:24","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6487,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:24","nodeType":"FunctionDefinition","parameters":{"id":6463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6462,"mutability":"mutable","name":"value","nameLocation":"10818:5:24","nodeType":"VariableDeclaration","scope":6487,"src":"10810:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6461,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:24"},"returnParameters":{"id":6466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6465,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6487,"src":"10848:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6464,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:24","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:24"},"scope":7693,"src":"10791:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6514,"nodeType":"Block","src":"11360:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"11374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6497,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6496,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"11382:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:24","memberName":"max","nodeType":"MemberAccess","src":"11382:16:24","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6508,"nodeType":"IfStatement","src":"11370:103:24","trueBody":{"id":6507,"nodeType":"Block","src":"11400:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"11456:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6502,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"11421:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6506,"nodeType":"RevertStatement","src":"11414:48:24"}]}},{"expression":{"arguments":[{"id":6511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"11496:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6509,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:24","typeDescriptions":{}}},"id":6512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6494,"id":6513,"nodeType":"Return","src":"11482:20:24"}]},"documentation":{"id":6488,"nodeType":"StructuredDocumentation","src":"11015:276:24","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6515,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:24","nodeType":"FunctionDefinition","parameters":{"id":6491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6490,"mutability":"mutable","name":"value","nameLocation":"11322:5:24","nodeType":"VariableDeclaration","scope":6515,"src":"11314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6489,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:24"},"returnParameters":{"id":6494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6515,"src":"11352:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6492,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:24","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:24"},"scope":7693,"src":"11296:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6542,"nodeType":"Block","src":"11860:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6518,"src":"11874:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6525,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6524,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"11882:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:24","memberName":"max","nodeType":"MemberAccess","src":"11882:16:24","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6536,"nodeType":"IfStatement","src":"11870:103:24","trueBody":{"id":6535,"nodeType":"Block","src":"11900:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:24","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6518,"src":"11956:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6530,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"11921:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6534,"nodeType":"RevertStatement","src":"11914:48:24"}]}},{"expression":{"arguments":[{"id":6539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6518,"src":"11996:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6537,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:24","typeDescriptions":{}}},"id":6540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6522,"id":6541,"nodeType":"Return","src":"11982:20:24"}]},"documentation":{"id":6516,"nodeType":"StructuredDocumentation","src":"11515:276:24","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6543,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:24","nodeType":"FunctionDefinition","parameters":{"id":6519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6518,"mutability":"mutable","name":"value","nameLocation":"11822:5:24","nodeType":"VariableDeclaration","scope":6543,"src":"11814:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6517,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:24"},"returnParameters":{"id":6522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6521,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6543,"src":"11852:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6520,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:24","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:24"},"scope":7693,"src":"11796:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6570,"nodeType":"Block","src":"12360:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"12374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6553,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6552,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"12382:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:24","memberName":"max","nodeType":"MemberAccess","src":"12382:16:24","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6564,"nodeType":"IfStatement","src":"12370:103:24","trueBody":{"id":6563,"nodeType":"Block","src":"12400:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"12456:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6558,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"12421:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6562,"nodeType":"RevertStatement","src":"12414:48:24"}]}},{"expression":{"arguments":[{"id":6567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"12496:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6565,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:24","typeDescriptions":{}}},"id":6568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6550,"id":6569,"nodeType":"Return","src":"12482:20:24"}]},"documentation":{"id":6544,"nodeType":"StructuredDocumentation","src":"12015:276:24","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6571,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:24","nodeType":"FunctionDefinition","parameters":{"id":6547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6546,"mutability":"mutable","name":"value","nameLocation":"12322:5:24","nodeType":"VariableDeclaration","scope":6571,"src":"12314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6545,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:24"},"returnParameters":{"id":6550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6571,"src":"12352:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6548,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:24","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:24"},"scope":7693,"src":"12296:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6598,"nodeType":"Block","src":"12860:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"12874:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6581,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6580,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"12882:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:24","memberName":"max","nodeType":"MemberAccess","src":"12882:16:24","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6592,"nodeType":"IfStatement","src":"12870:103:24","trueBody":{"id":6591,"nodeType":"Block","src":"12900:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:24","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"12956:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6586,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"12921:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6590,"nodeType":"RevertStatement","src":"12914:48:24"}]}},{"expression":{"arguments":[{"id":6595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"12996:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6593,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:24","typeDescriptions":{}}},"id":6596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6578,"id":6597,"nodeType":"Return","src":"12982:20:24"}]},"documentation":{"id":6572,"nodeType":"StructuredDocumentation","src":"12515:276:24","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6599,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:24","nodeType":"FunctionDefinition","parameters":{"id":6575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6574,"mutability":"mutable","name":"value","nameLocation":"12822:5:24","nodeType":"VariableDeclaration","scope":6599,"src":"12814:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6573,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:24"},"returnParameters":{"id":6578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6599,"src":"12852:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6576,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:24","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:24"},"scope":7693,"src":"12796:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6626,"nodeType":"Block","src":"13360:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6602,"src":"13374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6609,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6608,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"13382:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:24","memberName":"max","nodeType":"MemberAccess","src":"13382:16:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6620,"nodeType":"IfStatement","src":"13370:103:24","trueBody":{"id":6619,"nodeType":"Block","src":"13400:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6602,"src":"13456:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6614,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"13421:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6618,"nodeType":"RevertStatement","src":"13414:48:24"}]}},{"expression":{"arguments":[{"id":6623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6602,"src":"13496:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6621,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:24","typeDescriptions":{}}},"id":6624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6606,"id":6625,"nodeType":"Return","src":"13482:20:24"}]},"documentation":{"id":6600,"nodeType":"StructuredDocumentation","src":"13015:276:24","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6627,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:24","nodeType":"FunctionDefinition","parameters":{"id":6603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6602,"mutability":"mutable","name":"value","nameLocation":"13322:5:24","nodeType":"VariableDeclaration","scope":6627,"src":"13314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6601,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:24"},"returnParameters":{"id":6606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6627,"src":"13352:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6604,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:24"},"scope":7693,"src":"13296:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6654,"nodeType":"Block","src":"13860:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6630,"src":"13874:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6637,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":6636,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"13882:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":6640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:24","memberName":"max","nodeType":"MemberAccess","src":"13882:16:24","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6648,"nodeType":"IfStatement","src":"13870:103:24","trueBody":{"id":6647,"nodeType":"Block","src":"13900:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:24","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6630,"src":"13956:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6642,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"13921:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6646,"nodeType":"RevertStatement","src":"13914:48:24"}]}},{"expression":{"arguments":[{"id":6651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6630,"src":"13996:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6649,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:24","typeDescriptions":{}}},"id":6652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":6634,"id":6653,"nodeType":"Return","src":"13982:20:24"}]},"documentation":{"id":6628,"nodeType":"StructuredDocumentation","src":"13515:276:24","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6655,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:24","nodeType":"FunctionDefinition","parameters":{"id":6631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6630,"mutability":"mutable","name":"value","nameLocation":"13822:5:24","nodeType":"VariableDeclaration","scope":6655,"src":"13814:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6629,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:24"},"returnParameters":{"id":6634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6655,"src":"13852:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":6632,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:24","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:24"},"scope":7693,"src":"13796:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6682,"nodeType":"Block","src":"14360:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6658,"src":"14374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6665,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6664,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"14382:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:24","memberName":"max","nodeType":"MemberAccess","src":"14382:16:24","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6676,"nodeType":"IfStatement","src":"14370:103:24","trueBody":{"id":6675,"nodeType":"Block","src":"14400:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6658,"src":"14456:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6670,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"14421:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6674,"nodeType":"RevertStatement","src":"14414:48:24"}]}},{"expression":{"arguments":[{"id":6679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6658,"src":"14496:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6677,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:24","typeDescriptions":{}}},"id":6680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6662,"id":6681,"nodeType":"Return","src":"14482:20:24"}]},"documentation":{"id":6656,"nodeType":"StructuredDocumentation","src":"14015:276:24","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6683,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:24","nodeType":"FunctionDefinition","parameters":{"id":6659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6658,"mutability":"mutable","name":"value","nameLocation":"14322:5:24","nodeType":"VariableDeclaration","scope":6683,"src":"14314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6657,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:24"},"returnParameters":{"id":6662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6683,"src":"14352:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6660,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:24","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:24"},"scope":7693,"src":"14296:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6710,"nodeType":"Block","src":"14860:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"14874:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6693,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6692,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"14882:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:24","memberName":"max","nodeType":"MemberAccess","src":"14882:16:24","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6704,"nodeType":"IfStatement","src":"14870:103:24","trueBody":{"id":6703,"nodeType":"Block","src":"14900:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:24","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"14956:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6698,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"14921:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6702,"nodeType":"RevertStatement","src":"14914:48:24"}]}},{"expression":{"arguments":[{"id":6707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"14996:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6705,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:24","typeDescriptions":{}}},"id":6708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6690,"id":6709,"nodeType":"Return","src":"14982:20:24"}]},"documentation":{"id":6684,"nodeType":"StructuredDocumentation","src":"14515:276:24","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6711,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:24","nodeType":"FunctionDefinition","parameters":{"id":6687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6686,"mutability":"mutable","name":"value","nameLocation":"14822:5:24","nodeType":"VariableDeclaration","scope":6711,"src":"14814:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6685,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:24"},"returnParameters":{"id":6690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6711,"src":"14852:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6688,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:24","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:24"},"scope":7693,"src":"14796:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6738,"nodeType":"Block","src":"15360:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"15374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6721,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6720,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"15382:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:24","memberName":"max","nodeType":"MemberAccess","src":"15382:16:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6732,"nodeType":"IfStatement","src":"15370:103:24","trueBody":{"id":6731,"nodeType":"Block","src":"15400:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"15456:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6726,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"15421:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6730,"nodeType":"RevertStatement","src":"15414:48:24"}]}},{"expression":{"arguments":[{"id":6735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6714,"src":"15496:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6733,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:24","typeDescriptions":{}}},"id":6736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6718,"id":6737,"nodeType":"Return","src":"15482:20:24"}]},"documentation":{"id":6712,"nodeType":"StructuredDocumentation","src":"15015:276:24","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6739,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:24","nodeType":"FunctionDefinition","parameters":{"id":6715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6714,"mutability":"mutable","name":"value","nameLocation":"15322:5:24","nodeType":"VariableDeclaration","scope":6739,"src":"15314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6713,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:24"},"returnParameters":{"id":6718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6739,"src":"15352:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6716,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:24"},"scope":7693,"src":"15296:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6766,"nodeType":"Block","src":"15860:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"15874:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6749,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6748,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"15882:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:24","memberName":"max","nodeType":"MemberAccess","src":"15882:16:24","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6760,"nodeType":"IfStatement","src":"15870:103:24","trueBody":{"id":6759,"nodeType":"Block","src":"15900:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:24","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"15956:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6754,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"15921:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6758,"nodeType":"RevertStatement","src":"15914:48:24"}]}},{"expression":{"arguments":[{"id":6763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"15996:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6761,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:24","typeDescriptions":{}}},"id":6764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6746,"id":6765,"nodeType":"Return","src":"15982:20:24"}]},"documentation":{"id":6740,"nodeType":"StructuredDocumentation","src":"15515:276:24","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6767,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:24","nodeType":"FunctionDefinition","parameters":{"id":6743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6742,"mutability":"mutable","name":"value","nameLocation":"15822:5:24","nodeType":"VariableDeclaration","scope":6767,"src":"15814:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6741,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:24"},"returnParameters":{"id":6746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6767,"src":"15852:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6744,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:24","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:24"},"scope":7693,"src":"15796:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6794,"nodeType":"Block","src":"16360:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6770,"src":"16374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6777,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6776,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"16382:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:24","memberName":"max","nodeType":"MemberAccess","src":"16382:16:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6788,"nodeType":"IfStatement","src":"16370:103:24","trueBody":{"id":6787,"nodeType":"Block","src":"16400:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6770,"src":"16456:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6782,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"16421:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6786,"nodeType":"RevertStatement","src":"16414:48:24"}]}},{"expression":{"arguments":[{"id":6791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6770,"src":"16496:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6789,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:24","typeDescriptions":{}}},"id":6792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6774,"id":6793,"nodeType":"Return","src":"16482:20:24"}]},"documentation":{"id":6768,"nodeType":"StructuredDocumentation","src":"16015:276:24","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6795,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:24","nodeType":"FunctionDefinition","parameters":{"id":6771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6770,"mutability":"mutable","name":"value","nameLocation":"16322:5:24","nodeType":"VariableDeclaration","scope":6795,"src":"16314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6769,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:24"},"returnParameters":{"id":6774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6795,"src":"16352:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6772,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:24"},"scope":7693,"src":"16296:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6822,"nodeType":"Block","src":"16854:146:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6798,"src":"16868:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6805,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6804,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"16876:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:24","memberName":"max","nodeType":"MemberAccess","src":"16876:15:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6816,"nodeType":"IfStatement","src":"16864:101:24","trueBody":{"id":6815,"nodeType":"Block","src":"16893:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6798,"src":"16948:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6810,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"16914:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6814,"nodeType":"RevertStatement","src":"16907:47:24"}]}},{"expression":{"arguments":[{"id":6819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6798,"src":"16987:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6817,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:24","typeDescriptions":{}}},"id":6820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6802,"id":6821,"nodeType":"Return","src":"16974:19:24"}]},"documentation":{"id":6796,"nodeType":"StructuredDocumentation","src":"16515:272:24","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6823,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:24","nodeType":"FunctionDefinition","parameters":{"id":6799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6798,"mutability":"mutable","name":"value","nameLocation":"16817:5:24","nodeType":"VariableDeclaration","scope":6823,"src":"16809:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6797,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:24"},"returnParameters":{"id":6802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6801,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6823,"src":"16847:5:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6800,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:24"},"scope":7693,"src":"16792:208:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6845,"nodeType":"Block","src":"17236:128:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6826,"src":"17250:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6839,"nodeType":"IfStatement","src":"17246:81:24","trueBody":{"id":6838,"nodeType":"Block","src":"17261:66:24","statements":[{"errorCall":{"arguments":[{"id":6835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6826,"src":"17310:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6834,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5943,"src":"17282:27:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":6836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6837,"nodeType":"RevertStatement","src":"17275:41:24"}]}},{"expression":{"arguments":[{"id":6842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6826,"src":"17351:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6840,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:24","typeDescriptions":{}}},"id":6843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6830,"id":6844,"nodeType":"Return","src":"17336:21:24"}]},"documentation":{"id":6824,"nodeType":"StructuredDocumentation","src":"17006:160:24","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6846,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:24","nodeType":"FunctionDefinition","parameters":{"id":6827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6826,"mutability":"mutable","name":"value","nameLocation":"17197:5:24","nodeType":"VariableDeclaration","scope":6846,"src":"17190:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6825,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:24"},"returnParameters":{"id":6830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6846,"src":"17227:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6828,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:24"},"scope":7693,"src":"17171:193:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6871,"nodeType":"Block","src":"17761:150:24","statements":[{"expression":{"id":6859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6854,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6852,"src":"17771:10:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6857,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"17791:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6855,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:24","typeDescriptions":{}}},"id":6858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6860,"nodeType":"ExpressionStatement","src":"17771:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6861,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6852,"src":"17811:10:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"17825:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6870,"nodeType":"IfStatement","src":"17807:98:24","trueBody":{"id":6869,"nodeType":"Block","src":"17832:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:24","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"17888:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6864,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"17853:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6868,"nodeType":"RevertStatement","src":"17846:48:24"}]}}]},"documentation":{"id":6847,"nodeType":"StructuredDocumentation","src":"17370:312:24","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6872,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:24","nodeType":"FunctionDefinition","parameters":{"id":6850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6849,"mutability":"mutable","name":"value","nameLocation":"17712:5:24","nodeType":"VariableDeclaration","scope":6872,"src":"17705:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6848,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:24"},"returnParameters":{"id":6853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6852,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:24","nodeType":"VariableDeclaration","scope":6872,"src":"17742:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6851,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:24"},"scope":7693,"src":"17687:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6897,"nodeType":"Block","src":"18308:150:24","statements":[{"expression":{"id":6885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6880,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"18318:10:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6875,"src":"18338:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6881,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:24","typeDescriptions":{}}},"id":6884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6886,"nodeType":"ExpressionStatement","src":"18318:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6887,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"18358:10:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6875,"src":"18372:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6896,"nodeType":"IfStatement","src":"18354:98:24","trueBody":{"id":6895,"nodeType":"Block","src":"18379:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:24","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6875,"src":"18435:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6890,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"18400:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6894,"nodeType":"RevertStatement","src":"18393:48:24"}]}}]},"documentation":{"id":6873,"nodeType":"StructuredDocumentation","src":"17917:312:24","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6898,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:24","nodeType":"FunctionDefinition","parameters":{"id":6876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6875,"mutability":"mutable","name":"value","nameLocation":"18259:5:24","nodeType":"VariableDeclaration","scope":6898,"src":"18252:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6874,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:24"},"returnParameters":{"id":6879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6878,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:24","nodeType":"VariableDeclaration","scope":6898,"src":"18289:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6877,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:24"},"scope":7693,"src":"18234:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6923,"nodeType":"Block","src":"18855:150:24","statements":[{"expression":{"id":6911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6906,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"18865:10:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"18885:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6907,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:24","typeDescriptions":{}}},"id":6910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6912,"nodeType":"ExpressionStatement","src":"18865:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6913,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"18905:10:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"18919:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6922,"nodeType":"IfStatement","src":"18901:98:24","trueBody":{"id":6921,"nodeType":"Block","src":"18926:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:24","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"18982:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6916,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"18947:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6920,"nodeType":"RevertStatement","src":"18940:48:24"}]}}]},"documentation":{"id":6899,"nodeType":"StructuredDocumentation","src":"18464:312:24","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6924,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:24","nodeType":"FunctionDefinition","parameters":{"id":6902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6901,"mutability":"mutable","name":"value","nameLocation":"18806:5:24","nodeType":"VariableDeclaration","scope":6924,"src":"18799:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6900,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:24"},"returnParameters":{"id":6905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6904,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:24","nodeType":"VariableDeclaration","scope":6924,"src":"18836:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6903,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:24"},"scope":7693,"src":"18781:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6949,"nodeType":"Block","src":"19402:150:24","statements":[{"expression":{"id":6937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6932,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"19412:10:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6927,"src":"19432:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6933,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:24","typeDescriptions":{}}},"id":6936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6938,"nodeType":"ExpressionStatement","src":"19412:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6939,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"19452:10:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6927,"src":"19466:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6948,"nodeType":"IfStatement","src":"19448:98:24","trueBody":{"id":6947,"nodeType":"Block","src":"19473:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:24","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6927,"src":"19529:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6942,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"19494:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6946,"nodeType":"RevertStatement","src":"19487:48:24"}]}}]},"documentation":{"id":6925,"nodeType":"StructuredDocumentation","src":"19011:312:24","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6950,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:24","nodeType":"FunctionDefinition","parameters":{"id":6928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6927,"mutability":"mutable","name":"value","nameLocation":"19353:5:24","nodeType":"VariableDeclaration","scope":6950,"src":"19346:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6926,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:24"},"returnParameters":{"id":6931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6930,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:24","nodeType":"VariableDeclaration","scope":6950,"src":"19383:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6929,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:24"},"scope":7693,"src":"19328:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6975,"nodeType":"Block","src":"19949:150:24","statements":[{"expression":{"id":6963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6958,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6956,"src":"19959:10:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6953,"src":"19979:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6959,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:24","typeDescriptions":{}}},"id":6962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6964,"nodeType":"ExpressionStatement","src":"19959:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6965,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6956,"src":"19999:10:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6953,"src":"20013:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6974,"nodeType":"IfStatement","src":"19995:98:24","trueBody":{"id":6973,"nodeType":"Block","src":"20020:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:24","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6953,"src":"20076:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6968,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"20041:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6972,"nodeType":"RevertStatement","src":"20034:48:24"}]}}]},"documentation":{"id":6951,"nodeType":"StructuredDocumentation","src":"19558:312:24","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6976,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:24","nodeType":"FunctionDefinition","parameters":{"id":6954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6953,"mutability":"mutable","name":"value","nameLocation":"19900:5:24","nodeType":"VariableDeclaration","scope":6976,"src":"19893:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6952,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:24"},"returnParameters":{"id":6957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6956,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:24","nodeType":"VariableDeclaration","scope":6976,"src":"19930:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6955,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:24"},"scope":7693,"src":"19875:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7001,"nodeType":"Block","src":"20496:150:24","statements":[{"expression":{"id":6989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6984,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6982,"src":"20506:10:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"20526:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6985,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:24","typeDescriptions":{}}},"id":6988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6990,"nodeType":"ExpressionStatement","src":"20506:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6991,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6982,"src":"20546:10:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"20560:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7000,"nodeType":"IfStatement","src":"20542:98:24","trueBody":{"id":6999,"nodeType":"Block","src":"20567:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:24","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"20623:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6994,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"20588:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6998,"nodeType":"RevertStatement","src":"20581:48:24"}]}}]},"documentation":{"id":6977,"nodeType":"StructuredDocumentation","src":"20105:312:24","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":7002,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:24","nodeType":"FunctionDefinition","parameters":{"id":6980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6979,"mutability":"mutable","name":"value","nameLocation":"20447:5:24","nodeType":"VariableDeclaration","scope":7002,"src":"20440:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6978,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:24"},"returnParameters":{"id":6983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6982,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:24","nodeType":"VariableDeclaration","scope":7002,"src":"20477:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6981,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:24"},"scope":7693,"src":"20422:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7027,"nodeType":"Block","src":"21043:150:24","statements":[{"expression":{"id":7015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7010,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"21053:10:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7005,"src":"21073:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":7011,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:24","typeDescriptions":{}}},"id":7014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":7016,"nodeType":"ExpressionStatement","src":"21053:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7017,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"21093:10:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7005,"src":"21107:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7026,"nodeType":"IfStatement","src":"21089:98:24","trueBody":{"id":7025,"nodeType":"Block","src":"21114:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":7021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:24","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":7022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7005,"src":"21170:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7020,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"21135:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7024,"nodeType":"RevertStatement","src":"21128:48:24"}]}}]},"documentation":{"id":7003,"nodeType":"StructuredDocumentation","src":"20652:312:24","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":7028,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:24","nodeType":"FunctionDefinition","parameters":{"id":7006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7005,"mutability":"mutable","name":"value","nameLocation":"20994:5:24","nodeType":"VariableDeclaration","scope":7028,"src":"20987:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7004,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:24"},"returnParameters":{"id":7009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7008,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:24","nodeType":"VariableDeclaration","scope":7028,"src":"21024:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":7007,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:24"},"scope":7693,"src":"20969:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7053,"nodeType":"Block","src":"21590:150:24","statements":[{"expression":{"id":7041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7036,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"21600:10:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7031,"src":"21620:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":7037,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:24","typeDescriptions":{}}},"id":7040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":7042,"nodeType":"ExpressionStatement","src":"21600:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7043,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"21640:10:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7031,"src":"21654:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7052,"nodeType":"IfStatement","src":"21636:98:24","trueBody":{"id":7051,"nodeType":"Block","src":"21661:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":7047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:24","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":7048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7031,"src":"21717:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7046,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"21682:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7050,"nodeType":"RevertStatement","src":"21675:48:24"}]}}]},"documentation":{"id":7029,"nodeType":"StructuredDocumentation","src":"21199:312:24","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":7054,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:24","nodeType":"FunctionDefinition","parameters":{"id":7032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7031,"mutability":"mutable","name":"value","nameLocation":"21541:5:24","nodeType":"VariableDeclaration","scope":7054,"src":"21534:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7030,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:24"},"returnParameters":{"id":7035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7034,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:24","nodeType":"VariableDeclaration","scope":7054,"src":"21571:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":7033,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:24"},"scope":7693,"src":"21516:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7079,"nodeType":"Block","src":"22137:150:24","statements":[{"expression":{"id":7067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7062,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"22147:10:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7057,"src":"22167:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":7063,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:24","typeDescriptions":{}}},"id":7066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":7068,"nodeType":"ExpressionStatement","src":"22147:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7069,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"22187:10:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7057,"src":"22201:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7078,"nodeType":"IfStatement","src":"22183:98:24","trueBody":{"id":7077,"nodeType":"Block","src":"22208:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":7073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:24","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":7074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7057,"src":"22264:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7072,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"22229:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7076,"nodeType":"RevertStatement","src":"22222:48:24"}]}}]},"documentation":{"id":7055,"nodeType":"StructuredDocumentation","src":"21746:312:24","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":7080,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:24","nodeType":"FunctionDefinition","parameters":{"id":7058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7057,"mutability":"mutable","name":"value","nameLocation":"22088:5:24","nodeType":"VariableDeclaration","scope":7080,"src":"22081:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7056,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:24"},"returnParameters":{"id":7061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7060,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:24","nodeType":"VariableDeclaration","scope":7080,"src":"22118:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":7059,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:24"},"scope":7693,"src":"22063:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7105,"nodeType":"Block","src":"22684:150:24","statements":[{"expression":{"id":7093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7088,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"22694:10:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7091,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7083,"src":"22714:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":7089,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:24","typeDescriptions":{}}},"id":7092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":7094,"nodeType":"ExpressionStatement","src":"22694:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7095,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"22734:10:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7083,"src":"22748:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7104,"nodeType":"IfStatement","src":"22730:98:24","trueBody":{"id":7103,"nodeType":"Block","src":"22755:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":7099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:24","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":7100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7083,"src":"22811:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7098,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"22776:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7102,"nodeType":"RevertStatement","src":"22769:48:24"}]}}]},"documentation":{"id":7081,"nodeType":"StructuredDocumentation","src":"22293:312:24","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7106,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:24","nodeType":"FunctionDefinition","parameters":{"id":7084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7083,"mutability":"mutable","name":"value","nameLocation":"22635:5:24","nodeType":"VariableDeclaration","scope":7106,"src":"22628:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7082,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:24"},"returnParameters":{"id":7087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7086,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:24","nodeType":"VariableDeclaration","scope":7106,"src":"22665:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":7085,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:24"},"scope":7693,"src":"22610:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7131,"nodeType":"Block","src":"23231:150:24","statements":[{"expression":{"id":7119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7114,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7112,"src":"23241:10:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7109,"src":"23261:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":7115,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:24","typeDescriptions":{}}},"id":7118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":7120,"nodeType":"ExpressionStatement","src":"23241:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7121,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7112,"src":"23281:10:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7109,"src":"23295:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7130,"nodeType":"IfStatement","src":"23277:98:24","trueBody":{"id":7129,"nodeType":"Block","src":"23302:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:24","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7109,"src":"23358:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7124,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"23323:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7128,"nodeType":"RevertStatement","src":"23316:48:24"}]}}]},"documentation":{"id":7107,"nodeType":"StructuredDocumentation","src":"22840:312:24","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7132,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:24","nodeType":"FunctionDefinition","parameters":{"id":7110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7109,"mutability":"mutable","name":"value","nameLocation":"23182:5:24","nodeType":"VariableDeclaration","scope":7132,"src":"23175:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7108,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:24"},"returnParameters":{"id":7113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7112,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:24","nodeType":"VariableDeclaration","scope":7132,"src":"23212:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":7111,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:24"},"scope":7693,"src":"23157:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7157,"nodeType":"Block","src":"23778:150:24","statements":[{"expression":{"id":7145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7140,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7138,"src":"23788:10:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7135,"src":"23808:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":7141,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:24","typeDescriptions":{}}},"id":7144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":7146,"nodeType":"ExpressionStatement","src":"23788:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7147,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7138,"src":"23828:10:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7135,"src":"23842:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7156,"nodeType":"IfStatement","src":"23824:98:24","trueBody":{"id":7155,"nodeType":"Block","src":"23849:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:24","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7135,"src":"23905:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7150,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"23870:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7154,"nodeType":"RevertStatement","src":"23863:48:24"}]}}]},"documentation":{"id":7133,"nodeType":"StructuredDocumentation","src":"23387:312:24","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7158,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:24","nodeType":"FunctionDefinition","parameters":{"id":7136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7135,"mutability":"mutable","name":"value","nameLocation":"23729:5:24","nodeType":"VariableDeclaration","scope":7158,"src":"23722:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7134,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:24"},"returnParameters":{"id":7139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7138,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:24","nodeType":"VariableDeclaration","scope":7158,"src":"23759:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":7137,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:24"},"scope":7693,"src":"23704:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7183,"nodeType":"Block","src":"24325:150:24","statements":[{"expression":{"id":7171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7166,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"24335:10:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7161,"src":"24355:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":7167,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:24","typeDescriptions":{}}},"id":7170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":7172,"nodeType":"ExpressionStatement","src":"24335:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7173,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"24375:10:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7161,"src":"24389:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7182,"nodeType":"IfStatement","src":"24371:98:24","trueBody":{"id":7181,"nodeType":"Block","src":"24396:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:24","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7161,"src":"24452:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7176,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"24417:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7180,"nodeType":"RevertStatement","src":"24410:48:24"}]}}]},"documentation":{"id":7159,"nodeType":"StructuredDocumentation","src":"23934:312:24","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7184,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:24","nodeType":"FunctionDefinition","parameters":{"id":7162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7161,"mutability":"mutable","name":"value","nameLocation":"24276:5:24","nodeType":"VariableDeclaration","scope":7184,"src":"24269:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7160,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:24"},"returnParameters":{"id":7165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7164,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:24","nodeType":"VariableDeclaration","scope":7184,"src":"24306:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":7163,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:24"},"scope":7693,"src":"24251:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7209,"nodeType":"Block","src":"24872:150:24","statements":[{"expression":{"id":7197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7192,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7190,"src":"24882:10:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7187,"src":"24902:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":7193,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:24","typeDescriptions":{}}},"id":7196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":7198,"nodeType":"ExpressionStatement","src":"24882:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7199,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7190,"src":"24922:10:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7187,"src":"24936:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7208,"nodeType":"IfStatement","src":"24918:98:24","trueBody":{"id":7207,"nodeType":"Block","src":"24943:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:24","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7187,"src":"24999:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7202,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"24964:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7206,"nodeType":"RevertStatement","src":"24957:48:24"}]}}]},"documentation":{"id":7185,"nodeType":"StructuredDocumentation","src":"24481:312:24","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7210,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:24","nodeType":"FunctionDefinition","parameters":{"id":7188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7187,"mutability":"mutable","name":"value","nameLocation":"24823:5:24","nodeType":"VariableDeclaration","scope":7210,"src":"24816:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7186,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:24"},"returnParameters":{"id":7191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7190,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:24","nodeType":"VariableDeclaration","scope":7210,"src":"24853:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":7189,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:24"},"scope":7693,"src":"24798:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7235,"nodeType":"Block","src":"25419:150:24","statements":[{"expression":{"id":7223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7218,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7216,"src":"25429:10:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7213,"src":"25449:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":7219,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:24","typeDescriptions":{}}},"id":7222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":7224,"nodeType":"ExpressionStatement","src":"25429:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7225,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7216,"src":"25469:10:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7213,"src":"25483:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7234,"nodeType":"IfStatement","src":"25465:98:24","trueBody":{"id":7233,"nodeType":"Block","src":"25490:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:24","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7213,"src":"25546:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7228,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"25511:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7232,"nodeType":"RevertStatement","src":"25504:48:24"}]}}]},"documentation":{"id":7211,"nodeType":"StructuredDocumentation","src":"25028:312:24","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7236,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:24","nodeType":"FunctionDefinition","parameters":{"id":7214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7213,"mutability":"mutable","name":"value","nameLocation":"25370:5:24","nodeType":"VariableDeclaration","scope":7236,"src":"25363:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7212,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:24"},"returnParameters":{"id":7217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7216,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:24","nodeType":"VariableDeclaration","scope":7236,"src":"25400:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":7215,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:24"},"scope":7693,"src":"25345:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7261,"nodeType":"Block","src":"25966:150:24","statements":[{"expression":{"id":7249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7244,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7242,"src":"25976:10:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7239,"src":"25996:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":7245,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:24","typeDescriptions":{}}},"id":7248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7250,"nodeType":"ExpressionStatement","src":"25976:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7251,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7242,"src":"26016:10:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7239,"src":"26030:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7260,"nodeType":"IfStatement","src":"26012:98:24","trueBody":{"id":7259,"nodeType":"Block","src":"26037:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7239,"src":"26093:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7254,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"26058:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7258,"nodeType":"RevertStatement","src":"26051:48:24"}]}}]},"documentation":{"id":7237,"nodeType":"StructuredDocumentation","src":"25575:312:24","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7262,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:24","nodeType":"FunctionDefinition","parameters":{"id":7240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7239,"mutability":"mutable","name":"value","nameLocation":"25917:5:24","nodeType":"VariableDeclaration","scope":7262,"src":"25910:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7238,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:24"},"returnParameters":{"id":7243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7242,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:24","nodeType":"VariableDeclaration","scope":7262,"src":"25947:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7241,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:24"},"scope":7693,"src":"25892:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7287,"nodeType":"Block","src":"26513:150:24","statements":[{"expression":{"id":7275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7270,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"26523:10:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7265,"src":"26543:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":7271,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:24","typeDescriptions":{}}},"id":7274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":7276,"nodeType":"ExpressionStatement","src":"26523:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7277,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"26563:10:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7265,"src":"26577:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7286,"nodeType":"IfStatement","src":"26559:98:24","trueBody":{"id":7285,"nodeType":"Block","src":"26584:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:24","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7265,"src":"26640:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7280,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"26605:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7284,"nodeType":"RevertStatement","src":"26598:48:24"}]}}]},"documentation":{"id":7263,"nodeType":"StructuredDocumentation","src":"26122:312:24","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7288,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:24","nodeType":"FunctionDefinition","parameters":{"id":7266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7265,"mutability":"mutable","name":"value","nameLocation":"26464:5:24","nodeType":"VariableDeclaration","scope":7288,"src":"26457:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7264,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:24"},"returnParameters":{"id":7269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7268,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:24","nodeType":"VariableDeclaration","scope":7288,"src":"26494:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":7267,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:24"},"scope":7693,"src":"26439:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7313,"nodeType":"Block","src":"27060:150:24","statements":[{"expression":{"id":7301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7296,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7294,"src":"27070:10:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7291,"src":"27090:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":7297,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:24","typeDescriptions":{}}},"id":7300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":7302,"nodeType":"ExpressionStatement","src":"27070:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7303,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7294,"src":"27110:10:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7304,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7291,"src":"27124:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7312,"nodeType":"IfStatement","src":"27106:98:24","trueBody":{"id":7311,"nodeType":"Block","src":"27131:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:24","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7291,"src":"27187:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7306,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"27152:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7310,"nodeType":"RevertStatement","src":"27145:48:24"}]}}]},"documentation":{"id":7289,"nodeType":"StructuredDocumentation","src":"26669:312:24","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7314,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:24","nodeType":"FunctionDefinition","parameters":{"id":7292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7291,"mutability":"mutable","name":"value","nameLocation":"27011:5:24","nodeType":"VariableDeclaration","scope":7314,"src":"27004:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7290,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:24"},"returnParameters":{"id":7295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7294,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:24","nodeType":"VariableDeclaration","scope":7314,"src":"27041:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":7293,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:24"},"scope":7693,"src":"26986:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7339,"nodeType":"Block","src":"27607:150:24","statements":[{"expression":{"id":7327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7322,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7320,"src":"27617:10:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"27637:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7323,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:24","typeDescriptions":{}}},"id":7326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7328,"nodeType":"ExpressionStatement","src":"27617:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7329,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7320,"src":"27657:10:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"27671:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7338,"nodeType":"IfStatement","src":"27653:98:24","trueBody":{"id":7337,"nodeType":"Block","src":"27678:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:24","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"27734:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7332,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"27699:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7336,"nodeType":"RevertStatement","src":"27692:48:24"}]}}]},"documentation":{"id":7315,"nodeType":"StructuredDocumentation","src":"27216:312:24","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7340,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:24","nodeType":"FunctionDefinition","parameters":{"id":7318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7317,"mutability":"mutable","name":"value","nameLocation":"27558:5:24","nodeType":"VariableDeclaration","scope":7340,"src":"27551:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7316,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:24"},"returnParameters":{"id":7321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7320,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:24","nodeType":"VariableDeclaration","scope":7340,"src":"27588:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":7319,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:24"},"scope":7693,"src":"27533:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7365,"nodeType":"Block","src":"28147:148:24","statements":[{"expression":{"id":7353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7348,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"28157:10:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7343,"src":"28176:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7349,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:24","typeDescriptions":{}}},"id":7352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7354,"nodeType":"ExpressionStatement","src":"28157:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7355,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"28196:10:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7343,"src":"28210:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7364,"nodeType":"IfStatement","src":"28192:97:24","trueBody":{"id":7363,"nodeType":"Block","src":"28217:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:24","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7343,"src":"28272:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7358,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"28238:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7362,"nodeType":"RevertStatement","src":"28231:47:24"}]}}]},"documentation":{"id":7341,"nodeType":"StructuredDocumentation","src":"27763:307:24","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7366,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:24","nodeType":"FunctionDefinition","parameters":{"id":7344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7343,"mutability":"mutable","name":"value","nameLocation":"28099:5:24","nodeType":"VariableDeclaration","scope":7366,"src":"28092:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7342,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:24"},"returnParameters":{"id":7347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7346,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:24","nodeType":"VariableDeclaration","scope":7366,"src":"28129:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7345,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:24"},"scope":7693,"src":"28075:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7391,"nodeType":"Block","src":"28685:148:24","statements":[{"expression":{"id":7379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7374,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7372,"src":"28695:10:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7369,"src":"28714:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7375,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:24","typeDescriptions":{}}},"id":7378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7380,"nodeType":"ExpressionStatement","src":"28695:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7381,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7372,"src":"28734:10:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7369,"src":"28748:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7390,"nodeType":"IfStatement","src":"28730:97:24","trueBody":{"id":7389,"nodeType":"Block","src":"28755:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:24","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7369,"src":"28810:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7384,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"28776:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7388,"nodeType":"RevertStatement","src":"28769:47:24"}]}}]},"documentation":{"id":7367,"nodeType":"StructuredDocumentation","src":"28301:307:24","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7392,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:24","nodeType":"FunctionDefinition","parameters":{"id":7370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7369,"mutability":"mutable","name":"value","nameLocation":"28637:5:24","nodeType":"VariableDeclaration","scope":7392,"src":"28630:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7368,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:24"},"returnParameters":{"id":7373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7372,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:24","nodeType":"VariableDeclaration","scope":7392,"src":"28667:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7371,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:24"},"scope":7693,"src":"28613:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7417,"nodeType":"Block","src":"29223:148:24","statements":[{"expression":{"id":7405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7400,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7398,"src":"29233:10:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7395,"src":"29252:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7401,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:24","typeDescriptions":{}}},"id":7404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7406,"nodeType":"ExpressionStatement","src":"29233:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7407,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7398,"src":"29272:10:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7395,"src":"29286:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7416,"nodeType":"IfStatement","src":"29268:97:24","trueBody":{"id":7415,"nodeType":"Block","src":"29293:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:24","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7395,"src":"29348:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7410,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"29314:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7414,"nodeType":"RevertStatement","src":"29307:47:24"}]}}]},"documentation":{"id":7393,"nodeType":"StructuredDocumentation","src":"28839:307:24","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7418,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:24","nodeType":"FunctionDefinition","parameters":{"id":7396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7395,"mutability":"mutable","name":"value","nameLocation":"29175:5:24","nodeType":"VariableDeclaration","scope":7418,"src":"29168:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7394,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:24"},"returnParameters":{"id":7399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7398,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:24","nodeType":"VariableDeclaration","scope":7418,"src":"29205:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7397,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:24"},"scope":7693,"src":"29151:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7443,"nodeType":"Block","src":"29761:148:24","statements":[{"expression":{"id":7431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7426,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"29771:10:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7421,"src":"29790:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7427,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:24","typeDescriptions":{}}},"id":7430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7432,"nodeType":"ExpressionStatement","src":"29771:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7433,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7424,"src":"29810:10:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7421,"src":"29824:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7442,"nodeType":"IfStatement","src":"29806:97:24","trueBody":{"id":7441,"nodeType":"Block","src":"29831:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:24","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7421,"src":"29886:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7436,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"29852:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7440,"nodeType":"RevertStatement","src":"29845:47:24"}]}}]},"documentation":{"id":7419,"nodeType":"StructuredDocumentation","src":"29377:307:24","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7444,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:24","nodeType":"FunctionDefinition","parameters":{"id":7422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7421,"mutability":"mutable","name":"value","nameLocation":"29713:5:24","nodeType":"VariableDeclaration","scope":7444,"src":"29706:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7420,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:24"},"returnParameters":{"id":7425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7424,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:24","nodeType":"VariableDeclaration","scope":7444,"src":"29743:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7423,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:24"},"scope":7693,"src":"29689:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7469,"nodeType":"Block","src":"30299:148:24","statements":[{"expression":{"id":7457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7452,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"30309:10:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7447,"src":"30328:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":7453,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:24","typeDescriptions":{}}},"id":7456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7458,"nodeType":"ExpressionStatement","src":"30309:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7459,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"30348:10:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7447,"src":"30362:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7468,"nodeType":"IfStatement","src":"30344:97:24","trueBody":{"id":7467,"nodeType":"Block","src":"30369:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7447,"src":"30424:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7462,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"30390:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7466,"nodeType":"RevertStatement","src":"30383:47:24"}]}}]},"documentation":{"id":7445,"nodeType":"StructuredDocumentation","src":"29915:307:24","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7470,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:24","nodeType":"FunctionDefinition","parameters":{"id":7448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7447,"mutability":"mutable","name":"value","nameLocation":"30251:5:24","nodeType":"VariableDeclaration","scope":7470,"src":"30244:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7446,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:24"},"returnParameters":{"id":7451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7450,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:24","nodeType":"VariableDeclaration","scope":7470,"src":"30281:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7449,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:24"},"scope":7693,"src":"30227:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7495,"nodeType":"Block","src":"30837:148:24","statements":[{"expression":{"id":7483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7478,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7476,"src":"30847:10:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7473,"src":"30866:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7479,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:24","typeDescriptions":{}}},"id":7482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7484,"nodeType":"ExpressionStatement","src":"30847:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7485,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7476,"src":"30886:10:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7486,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7473,"src":"30900:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7494,"nodeType":"IfStatement","src":"30882:97:24","trueBody":{"id":7493,"nodeType":"Block","src":"30907:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:24","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7473,"src":"30962:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7488,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"30928:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7492,"nodeType":"RevertStatement","src":"30921:47:24"}]}}]},"documentation":{"id":7471,"nodeType":"StructuredDocumentation","src":"30453:307:24","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7496,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:24","nodeType":"FunctionDefinition","parameters":{"id":7474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7473,"mutability":"mutable","name":"value","nameLocation":"30789:5:24","nodeType":"VariableDeclaration","scope":7496,"src":"30782:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7472,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:24"},"returnParameters":{"id":7477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7476,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:24","nodeType":"VariableDeclaration","scope":7496,"src":"30819:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7475,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:24"},"scope":7693,"src":"30765:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7521,"nodeType":"Block","src":"31375:148:24","statements":[{"expression":{"id":7509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7504,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7502,"src":"31385:10:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7499,"src":"31404:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7505,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:24","typeDescriptions":{}}},"id":7508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7510,"nodeType":"ExpressionStatement","src":"31385:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7511,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7502,"src":"31424:10:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7499,"src":"31438:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7520,"nodeType":"IfStatement","src":"31420:97:24","trueBody":{"id":7519,"nodeType":"Block","src":"31445:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:24","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7499,"src":"31500:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7514,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"31466:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7518,"nodeType":"RevertStatement","src":"31459:47:24"}]}}]},"documentation":{"id":7497,"nodeType":"StructuredDocumentation","src":"30991:307:24","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7522,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:24","nodeType":"FunctionDefinition","parameters":{"id":7500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7499,"mutability":"mutable","name":"value","nameLocation":"31327:5:24","nodeType":"VariableDeclaration","scope":7522,"src":"31320:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7498,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:24"},"returnParameters":{"id":7503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7502,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:24","nodeType":"VariableDeclaration","scope":7522,"src":"31357:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7501,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:24"},"scope":7693,"src":"31303:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7547,"nodeType":"Block","src":"31913:148:24","statements":[{"expression":{"id":7535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7530,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7528,"src":"31923:10:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7525,"src":"31942:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7531,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:24","typeDescriptions":{}}},"id":7534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7536,"nodeType":"ExpressionStatement","src":"31923:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7537,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7528,"src":"31962:10:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7538,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7525,"src":"31976:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7546,"nodeType":"IfStatement","src":"31958:97:24","trueBody":{"id":7545,"nodeType":"Block","src":"31983:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:24","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7525,"src":"32038:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7540,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"32004:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7544,"nodeType":"RevertStatement","src":"31997:47:24"}]}}]},"documentation":{"id":7523,"nodeType":"StructuredDocumentation","src":"31529:307:24","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7548,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:24","nodeType":"FunctionDefinition","parameters":{"id":7526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7525,"mutability":"mutable","name":"value","nameLocation":"31865:5:24","nodeType":"VariableDeclaration","scope":7548,"src":"31858:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7524,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:24"},"returnParameters":{"id":7529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7528,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:24","nodeType":"VariableDeclaration","scope":7548,"src":"31895:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7527,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:24"},"scope":7693,"src":"31841:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7573,"nodeType":"Block","src":"32451:148:24","statements":[{"expression":{"id":7561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7556,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7554,"src":"32461:10:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7551,"src":"32480:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7557,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:24","typeDescriptions":{}}},"id":7560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7562,"nodeType":"ExpressionStatement","src":"32461:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7563,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7554,"src":"32500:10:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7564,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7551,"src":"32514:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7572,"nodeType":"IfStatement","src":"32496:97:24","trueBody":{"id":7571,"nodeType":"Block","src":"32521:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7551,"src":"32576:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7566,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"32542:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7570,"nodeType":"RevertStatement","src":"32535:47:24"}]}}]},"documentation":{"id":7549,"nodeType":"StructuredDocumentation","src":"32067:307:24","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7574,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:24","nodeType":"FunctionDefinition","parameters":{"id":7552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7551,"mutability":"mutable","name":"value","nameLocation":"32403:5:24","nodeType":"VariableDeclaration","scope":7574,"src":"32396:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7550,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:24"},"returnParameters":{"id":7555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7554,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:24","nodeType":"VariableDeclaration","scope":7574,"src":"32433:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7553,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:24"},"scope":7693,"src":"32379:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7599,"nodeType":"Block","src":"32989:148:24","statements":[{"expression":{"id":7587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7582,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7580,"src":"32999:10:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7577,"src":"33018:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7583,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:24","typeDescriptions":{}}},"id":7586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7588,"nodeType":"ExpressionStatement","src":"32999:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7589,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7580,"src":"33038:10:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7577,"src":"33052:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7598,"nodeType":"IfStatement","src":"33034:97:24","trueBody":{"id":7597,"nodeType":"Block","src":"33059:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:24","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7577,"src":"33114:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7592,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"33080:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7596,"nodeType":"RevertStatement","src":"33073:47:24"}]}}]},"documentation":{"id":7575,"nodeType":"StructuredDocumentation","src":"32605:307:24","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7600,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:24","nodeType":"FunctionDefinition","parameters":{"id":7578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7577,"mutability":"mutable","name":"value","nameLocation":"32941:5:24","nodeType":"VariableDeclaration","scope":7600,"src":"32934:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7576,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:24"},"returnParameters":{"id":7581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7580,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:24","nodeType":"VariableDeclaration","scope":7600,"src":"32971:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7579,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:24"},"scope":7693,"src":"32917:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7625,"nodeType":"Block","src":"33527:148:24","statements":[{"expression":{"id":7613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7608,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7606,"src":"33537:10:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7603,"src":"33556:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":7609,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:24","typeDescriptions":{}}},"id":7612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":7614,"nodeType":"ExpressionStatement","src":"33537:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7615,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7606,"src":"33576:10:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7603,"src":"33590:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7624,"nodeType":"IfStatement","src":"33572:97:24","trueBody":{"id":7623,"nodeType":"Block","src":"33597:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7603,"src":"33652:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7618,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"33618:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7622,"nodeType":"RevertStatement","src":"33611:47:24"}]}}]},"documentation":{"id":7601,"nodeType":"StructuredDocumentation","src":"33143:307:24","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7626,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:24","nodeType":"FunctionDefinition","parameters":{"id":7604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7603,"mutability":"mutable","name":"value","nameLocation":"33479:5:24","nodeType":"VariableDeclaration","scope":7626,"src":"33472:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7602,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:24"},"returnParameters":{"id":7607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7606,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:24","nodeType":"VariableDeclaration","scope":7626,"src":"33509:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":7605,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:24"},"scope":7693,"src":"33455:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7651,"nodeType":"Block","src":"34058:146:24","statements":[{"expression":{"id":7639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7634,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7632,"src":"34068:10:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"34086:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":7635,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:24","typeDescriptions":{}}},"id":7638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7640,"nodeType":"ExpressionStatement","src":"34068:24:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7641,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7632,"src":"34106:10:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"34120:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7650,"nodeType":"IfStatement","src":"34102:96:24","trueBody":{"id":7649,"nodeType":"Block","src":"34127:71:24","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7629,"src":"34181:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7644,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"34148:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7648,"nodeType":"RevertStatement","src":"34141:46:24"}]}}]},"documentation":{"id":7627,"nodeType":"StructuredDocumentation","src":"33681:302:24","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7652,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:24","nodeType":"FunctionDefinition","parameters":{"id":7630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7629,"mutability":"mutable","name":"value","nameLocation":"34011:5:24","nodeType":"VariableDeclaration","scope":7652,"src":"34004:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7628,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:24"},"returnParameters":{"id":7633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7632,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:24","nodeType":"VariableDeclaration","scope":7652,"src":"34041:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7631,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:24"},"scope":7693,"src":"33988:216:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7681,"nodeType":"Block","src":"34444:250:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7655,"src":"34557:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7664,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7663,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"34573:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:24","memberName":"max","nodeType":"MemberAccess","src":"34573:16:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7661,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:24","typeDescriptions":{}}},"id":7668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7675,"nodeType":"IfStatement","src":"34553:105:24","trueBody":{"id":7674,"nodeType":"Block","src":"34592:66:24","statements":[{"errorCall":{"arguments":[{"id":7671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7655,"src":"34641:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7670,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5955,"src":"34613:27:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7673,"nodeType":"RevertStatement","src":"34606:41:24"}]}},{"expression":{"arguments":[{"id":7678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7655,"src":"34681:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7676,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:24","typeDescriptions":{}}},"id":7679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7659,"id":7680,"nodeType":"Return","src":"34667:20:24"}]},"documentation":{"id":7653,"nodeType":"StructuredDocumentation","src":"34210:165:24","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":7682,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:24","nodeType":"FunctionDefinition","parameters":{"id":7656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7655,"mutability":"mutable","name":"value","nameLocation":"34406:5:24","nodeType":"VariableDeclaration","scope":7682,"src":"34398:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7654,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:24"},"returnParameters":{"id":7659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7682,"src":"34436:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7657,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:24"},"scope":7693,"src":"34380:314:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7691,"nodeType":"Block","src":"34853:87:24","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:24","statements":[{"nodeType":"YulAssignment","src":"34902:22:24","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:24"},"nodeType":"YulFunctionCall","src":"34914:9:24"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:24"},"nodeType":"YulFunctionCall","src":"34907:17:24"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7685,"isOffset":false,"isSlot":false,"src":"34921:1:24","valueSize":1},{"declaration":7688,"isOffset":false,"isSlot":false,"src":"34902:1:24","valueSize":1}],"flags":["memory-safe"],"id":7690,"nodeType":"InlineAssembly","src":"34863:71:24"}]},"documentation":{"id":7683,"nodeType":"StructuredDocumentation","src":"34700:90:24","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":7692,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:24","nodeType":"FunctionDefinition","parameters":{"id":7686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7685,"mutability":"mutable","name":"b","nameLocation":"34816:1:24","nodeType":"VariableDeclaration","scope":7692,"src":"34811:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7684,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:24"},"returnParameters":{"id":7689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7688,"mutability":"mutable","name":"u","nameLocation":"34850:1:24","nodeType":"VariableDeclaration","scope":7692,"src":"34842:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7687,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:24"},"scope":7693,"src":"34795:145:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7694,"src":"769:34173:24","usedErrors":[5938,5943,5950,5955],"usedEvents":[]}],"src":"192:34751:24"},"id":24},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[7693],"SignedMath":[7837]},"id":7838,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7695,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:25"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":7697,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7838,"sourceUnit":7694,"src":"135:40:25","symbolAliases":[{"foreign":{"id":7696,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7693,"src":"143:8:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":7698,"nodeType":"StructuredDocumentation","src":"177:80:25","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7837,"linearizedBaseContracts":[7837],"name":"SignedMath","nameLocation":"266:10:25","nodeType":"ContractDefinition","nodes":[{"body":{"id":7727,"nodeType":"Block","src":"746:215:25","statements":[{"id":7726,"nodeType":"UncheckedBlock","src":"756:199:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7710,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7705,"src":"894:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7711,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7703,"src":"900:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7712,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7705,"src":"904:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7714,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":7719,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7701,"src":"932:9:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7717,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7693,"src":"916:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7693_$","typeString":"type(library SafeCast)"}},"id":7718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7692,"src":"916:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7715,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:25","typeDescriptions":{}}},"id":7721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7723,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7709,"id":7725,"nodeType":"Return","src":"887:57:25"}]}]},"documentation":{"id":7699,"nodeType":"StructuredDocumentation","src":"283:374:25","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":7728,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:25","nodeType":"FunctionDefinition","parameters":{"id":7706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7701,"mutability":"mutable","name":"condition","nameLocation":"684:9:25","nodeType":"VariableDeclaration","scope":7728,"src":"679:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7700,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7703,"mutability":"mutable","name":"a","nameLocation":"702:1:25","nodeType":"VariableDeclaration","scope":7728,"src":"695:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7702,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7705,"mutability":"mutable","name":"b","nameLocation":"712:1:25","nodeType":"VariableDeclaration","scope":7728,"src":"705:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7704,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:25"},"returnParameters":{"id":7709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7728,"src":"738:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7707,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:25"},"scope":7837,"src":"662:299:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7746,"nodeType":"Block","src":"1102:44:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7739,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7731,"src":"1127:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7740,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7733,"src":"1131:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7742,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7731,"src":"1134:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7743,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7733,"src":"1137:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7738,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7728,"src":"1119:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7737,"id":7745,"nodeType":"Return","src":"1112:27:25"}]},"documentation":{"id":7729,"nodeType":"StructuredDocumentation","src":"967:66:25","text":" @dev Returns the largest of two signed numbers."},"id":7747,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:25","nodeType":"FunctionDefinition","parameters":{"id":7734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7731,"mutability":"mutable","name":"a","nameLocation":"1058:1:25","nodeType":"VariableDeclaration","scope":7747,"src":"1051:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7730,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7733,"mutability":"mutable","name":"b","nameLocation":"1068:1:25","nodeType":"VariableDeclaration","scope":7747,"src":"1061:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7732,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:25"},"returnParameters":{"id":7737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7747,"src":"1094:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7735,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:25"},"scope":7837,"src":"1038:108:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7765,"nodeType":"Block","src":"1288:44:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7758,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7750,"src":"1313:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7759,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7752,"src":"1317:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7761,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7750,"src":"1320:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7762,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7752,"src":"1323:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7757,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7728,"src":"1305:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7756,"id":7764,"nodeType":"Return","src":"1298:27:25"}]},"documentation":{"id":7748,"nodeType":"StructuredDocumentation","src":"1152:67:25","text":" @dev Returns the smallest of two signed numbers."},"id":7766,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:25","nodeType":"FunctionDefinition","parameters":{"id":7753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7750,"mutability":"mutable","name":"a","nameLocation":"1244:1:25","nodeType":"VariableDeclaration","scope":7766,"src":"1237:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7749,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7752,"mutability":"mutable","name":"b","nameLocation":"1254:1:25","nodeType":"VariableDeclaration","scope":7766,"src":"1247:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7751,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:25"},"returnParameters":{"id":7756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7755,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7766,"src":"1280:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7754,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:25"},"scope":7837,"src":"1224:108:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7809,"nodeType":"Block","src":"1537:162:25","statements":[{"assignments":[7777],"declarations":[{"constant":false,"id":7777,"mutability":"mutable","name":"x","nameLocation":"1606:1:25","nodeType":"VariableDeclaration","scope":7809,"src":"1599:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7776,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7790,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7778,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7769,"src":"1611:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7779,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7771,"src":"1615:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7781,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7782,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7769,"src":"1622:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7783,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7771,"src":"1626:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7785,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7788,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:25"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7791,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7777,"src":"1651:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7796,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7777,"src":"1671:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7794,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:25","typeDescriptions":{}}},"id":7797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:25","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7792,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:25","typeDescriptions":{}}},"id":7800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7801,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7769,"src":"1685:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7802,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7771,"src":"1689:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7804,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7806,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7775,"id":7808,"nodeType":"Return","src":"1644:48:25"}]},"documentation":{"id":7767,"nodeType":"StructuredDocumentation","src":"1338:126:25","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7810,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:25","nodeType":"FunctionDefinition","parameters":{"id":7772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7769,"mutability":"mutable","name":"a","nameLocation":"1493:1:25","nodeType":"VariableDeclaration","scope":7810,"src":"1486:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7768,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7771,"mutability":"mutable","name":"b","nameLocation":"1503:1:25","nodeType":"VariableDeclaration","scope":7810,"src":"1496:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7770,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:25"},"returnParameters":{"id":7775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7810,"src":"1529:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7773,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:25"},"scope":7837,"src":"1469:230:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7835,"nodeType":"Block","src":"1843:767:25","statements":[{"id":7834,"nodeType":"UncheckedBlock","src":"1853:751:25","statements":[{"assignments":[7819],"declarations":[{"constant":false,"id":7819,"mutability":"mutable","name":"mask","nameLocation":"2424:4:25","nodeType":"VariableDeclaration","scope":7834,"src":"2417:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7818,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7823,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7820,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7813,"src":"2431:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:25","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7826,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7813,"src":"2576:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7827,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7819,"src":"2580:4:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7829,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7830,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7819,"src":"2588:4:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7824,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:25","typeDescriptions":{}}},"id":7832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7817,"id":7833,"nodeType":"Return","src":"2560:33:25"}]}]},"documentation":{"id":7811,"nodeType":"StructuredDocumentation","src":"1705:78:25","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7836,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:25","nodeType":"FunctionDefinition","parameters":{"id":7814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7813,"mutability":"mutable","name":"n","nameLocation":"1808:1:25","nodeType":"VariableDeclaration","scope":7836,"src":"1801:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7812,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:25"},"returnParameters":{"id":7817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7836,"src":"1834:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7815,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:25"},"scope":7837,"src":"1788:822:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7838,"src":"258:2354:25","usedErrors":[],"usedEvents":[]}],"src":"109:2504:25"},"id":25},"src/core/LMSRPredictionMarket.sol":{"ast":{"absolutePath":"src/core/LMSRPredictionMarket.sol","exportedSymbols":{"ABDKMath64x64":[12797],"AccessControl":[295],"Arrays":[3412],"Context":[3474],"ERC1155":[1580],"ERC1155Utils":[1915],"ERC165":[4310],"IAccessControl":[378],"IERC1155":[1703],"IERC1155Errors":[663],"IERC1155MetadataURI":[1761],"IERC165":[4322],"IERC20":[2508],"IERC20Metadata":[2534],"LMSRPredictionMarket":[9461],"Math":[5928],"Ownable":[526],"Pausable":[3643],"PredictionMarketPositions":[9897],"ReentrancyGuard":[3712],"SignedMath":[7837],"Strings":[4286]},"id":9462,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7839,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:26"},{"absolutePath":"src/utils/ABDKMath64x64.sol","file":"../utils/ABDKMath64x64.sol","id":7840,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9462,"sourceUnit":12798,"src":"204:36:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":7841,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9462,"sourceUnit":3713,"src":"241:59:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7842,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9462,"sourceUnit":527,"src":"301:52:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":7843,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9462,"sourceUnit":2509,"src":"354:56:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"src/core/PredictionMarketPositions.sol","file":"./PredictionMarketPositions.sol","id":7844,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9462,"sourceUnit":9898,"src":"411:41:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"@openzeppelin/contracts/utils/Pausable.sol","id":7845,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9462,"sourceUnit":3644,"src":"453:52:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":7846,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9462,"sourceUnit":2535,"src":"506:75:26","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7847,"name":"Ownable","nameLocations":["616:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"616:7:26"},"id":7848,"nodeType":"InheritanceSpecifier","src":"616:7:26"},{"baseName":{"id":7849,"name":"ReentrancyGuard","nameLocations":["625:15:26"],"nodeType":"IdentifierPath","referencedDeclaration":3712,"src":"625:15:26"},"id":7850,"nodeType":"InheritanceSpecifier","src":"625:15:26"},{"baseName":{"id":7851,"name":"Pausable","nameLocations":["642:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":3643,"src":"642:8:26"},"id":7852,"nodeType":"InheritanceSpecifier","src":"642:8:26"}],"canonicalName":"LMSRPredictionMarket","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9461,"linearizedBaseContracts":[9461,3643,3712,526,3474],"name":"LMSRPredictionMarket","nameLocation":"592:20:26","nodeType":"ContractDefinition","nodes":[{"global":false,"id":7855,"libraryName":{"id":7853,"name":"ABDKMath64x64","nameLocations":["663:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":12797,"src":"663:13:26"},"nodeType":"UsingForDirective","src":"657:31:26","typeName":{"id":7854,"name":"int128","nodeType":"ElementaryTypeName","src":"681:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}},{"canonicalName":"LMSRPredictionMarket.Outcome","id":7860,"members":[{"constant":false,"id":7857,"mutability":"mutable","name":"name","nameLocation":"826:4:26","nodeType":"VariableDeclaration","scope":7860,"src":"819:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7856,"name":"string","nodeType":"ElementaryTypeName","src":"819:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7859,"mutability":"mutable","name":"totalShares","nameLocation":"848:11:26","nodeType":"VariableDeclaration","scope":7860,"src":"840:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7858,"name":"uint256","nodeType":"ElementaryTypeName","src":"840:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Outcome","nameLocation":"801:7:26","nodeType":"StructDefinition","scope":9461,"src":"794:88:26","visibility":"public"},{"constant":false,"functionSelector":"eed2a147","id":7864,"mutability":"mutable","name":"outcomes","nameLocation":"905:8:26","nodeType":"VariableDeclaration","scope":9461,"src":"888:25:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Outcome_$7860_storage_$dyn_storage","typeString":"struct LMSRPredictionMarket.Outcome[]"},"typeName":{"baseType":{"id":7862,"nodeType":"UserDefinedTypeName","pathNode":{"id":7861,"name":"Outcome","nameLocations":["888:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":7860,"src":"888:7:26"},"referencedDeclaration":7860,"src":"888:7:26","typeDescriptions":{"typeIdentifier":"t_struct$_Outcome_$7860_storage_ptr","typeString":"struct LMSRPredictionMarket.Outcome"}},"id":7863,"nodeType":"ArrayTypeName","src":"888:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Outcome_$7860_storage_$dyn_storage_ptr","typeString":"struct LMSRPredictionMarket.Outcome[]"}},"visibility":"public"},{"constant":false,"functionSelector":"69c41a74","id":7866,"mutability":"mutable","name":"marketEndTime","nameLocation":"934:13:26","nodeType":"VariableDeclaration","scope":9461,"src":"919:28:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7865,"name":"uint256","nodeType":"ElementaryTypeName","src":"919:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"48a5dec6","id":7868,"mutability":"mutable","name":"marketClosed","nameLocation":"965:12:26","nodeType":"VariableDeclaration","scope":9461,"src":"953:24:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7867,"name":"bool","nodeType":"ElementaryTypeName","src":"953:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"6e77609e","id":7870,"mutability":"mutable","name":"marketSettled","nameLocation":"995:13:26","nodeType":"VariableDeclaration","scope":9461,"src":"983:25:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7869,"name":"bool","nodeType":"ElementaryTypeName","src":"983:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"9b34ae03","id":7872,"mutability":"mutable","name":"winningOutcome","nameLocation":"1029:14:26","nodeType":"VariableDeclaration","scope":9461,"src":"1014:29:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7871,"name":"uint256","nodeType":"ElementaryTypeName","src":"1014:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"4a79d50c","id":7874,"mutability":"mutable","name":"title","nameLocation":"1063:5:26","nodeType":"VariableDeclaration","scope":9461,"src":"1049:19:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":7873,"name":"string","nodeType":"ElementaryTypeName","src":"1049:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"7dc0d1d0","id":7876,"mutability":"mutable","name":"oracle","nameLocation":"1089:6:26","nodeType":"VariableDeclaration","scope":9461,"src":"1074:21:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7875,"name":"address","nodeType":"ElementaryTypeName","src":"1074:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"90514320","id":7879,"mutability":"mutable","name":"marketMakerFunds","nameLocation":"1117:16:26","nodeType":"VariableDeclaration","scope":9461,"src":"1102:35:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7877,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":7878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1136:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":false,"functionSelector":"d55e725b","id":7882,"mutability":"mutable","name":"initialFunds","nameLocation":"1158:12:26","nodeType":"VariableDeclaration","scope":9461,"src":"1143:31:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7880,"name":"uint256","nodeType":"ElementaryTypeName","src":"1143:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":7881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1173:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":false,"functionSelector":"9003adfe","id":7885,"mutability":"mutable","name":"collectedFees","nameLocation":"1195:13:26","nodeType":"VariableDeclaration","scope":9461,"src":"1180:32:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7883,"name":"uint256","nodeType":"ElementaryTypeName","src":"1180:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":7884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1211:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":false,"functionSelector":"ba5b7982","id":7888,"mutability":"mutable","name":"positions","nameLocation":"1251:9:26","nodeType":"VariableDeclaration","scope":9461,"src":"1218:42:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_PredictionMarketPositions_$9897","typeString":"contract PredictionMarketPositions"},"typeName":{"id":7887,"nodeType":"UserDefinedTypeName","pathNode":{"id":7886,"name":"PredictionMarketPositions","nameLocations":["1218:25:26"],"nodeType":"IdentifierPath","referencedDeclaration":9897,"src":"1218:25:26"},"referencedDeclaration":9897,"src":"1218:25:26","typeDescriptions":{"typeIdentifier":"t_contract$_PredictionMarketPositions_$9897","typeString":"contract PredictionMarketPositions"}},"visibility":"public"},{"constant":false,"functionSelector":"4df7e3d0","id":7890,"mutability":"immutable","name":"b","nameLocation":"1396:1:26","nodeType":"VariableDeclaration","scope":9461,"src":"1371:26:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7889,"name":"uint256","nodeType":"ElementaryTypeName","src":"1371:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"fc0c546a","id":7893,"mutability":"immutable","name":"token","nameLocation":"1455:5:26","nodeType":"VariableDeclaration","scope":9461,"src":"1431:29:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2508","typeString":"contract IERC20"},"typeName":{"id":7892,"nodeType":"UserDefinedTypeName","pathNode":{"id":7891,"name":"IERC20","nameLocations":["1431:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":2508,"src":"1431:6:26"},"referencedDeclaration":2508,"src":"1431:6:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2508","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"6ed71ede","id":7895,"mutability":"immutable","name":"marketId","nameLocation":"1491:8:26","nodeType":"VariableDeclaration","scope":9461,"src":"1466:33:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7894,"name":"uint256","nodeType":"ElementaryTypeName","src":"1466:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"7fd6f15c","id":7897,"mutability":"immutable","name":"feePercent","nameLocation":"1530:10:26","nodeType":"VariableDeclaration","scope":9461,"src":"1505:35:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7896,"name":"uint256","nodeType":"ElementaryTypeName","src":"1505:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"46904840","id":7899,"mutability":"immutable","name":"feeRecipient","nameLocation":"1571:12:26","nodeType":"VariableDeclaration","scope":9461,"src":"1546:37:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7898,"name":"address","nodeType":"ElementaryTypeName","src":"1546:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"3b97e856","id":7901,"mutability":"immutable","name":"tokenDecimals","nameLocation":"1612:13:26","nodeType":"VariableDeclaration","scope":9461,"src":"1589:36:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7900,"name":"uint8","nodeType":"ElementaryTypeName","src":"1589:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"public"},{"constant":false,"functionSelector":"e8467af6","id":7903,"mutability":"immutable","name":"payoutPerShare","nameLocation":"1656:14:26","nodeType":"VariableDeclaration","scope":9461,"src":"1631:39:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7902,"name":"uint256","nodeType":"ElementaryTypeName","src":"1631:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"8f512bf4","id":7905,"mutability":"mutable","name":"unitScalingFactor","nameLocation":"1692:17:26","nodeType":"VariableDeclaration","scope":9461,"src":"1676:33:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7904,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"ca3bd569","id":7907,"mutability":"immutable","name":"i_numOutcomes","nameLocation":"1740:13:26","nodeType":"VariableDeclaration","scope":9461,"src":"1715:38:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7906,"name":"uint256","nodeType":"ElementaryTypeName","src":"1715:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"functionSelector":"474e19f2","id":7910,"mutability":"constant","name":"SHARES_DECIMALS","nameLocation":"1878:15:26","nodeType":"VariableDeclaration","scope":9461,"src":"1854:43:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7908,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":7909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1896:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":true,"functionSelector":"9e6c2959","id":7913,"mutability":"constant","name":"PERCENT_DENOMINATOR","nameLocation":"1958:19:26","nodeType":"VariableDeclaration","scope":9461,"src":"1934:49:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7911,"name":"uint256","nodeType":"ElementaryTypeName","src":"1934:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":7912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1980:3:26","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"public"},{"constant":true,"functionSelector":"a2d07d24","id":7916,"mutability":"constant","name":"FEE_REINVEST_PERCENT","nameLocation":"2056:20:26","nodeType":"VariableDeclaration","scope":9461,"src":"2032:49:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7914,"name":"uint256","nodeType":"ElementaryTypeName","src":"2032:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3530","id":7915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2079:2:26","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"visibility":"public"},{"constant":true,"functionSelector":"ed0c986f","id":7919,"mutability":"constant","name":"MAX_SHARE_TRADE","nameLocation":"2166:15:26","nodeType":"VariableDeclaration","scope":9461,"src":"2142:47:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7917,"name":"uint256","nodeType":"ElementaryTypeName","src":"2142:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130303030","id":7918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2184:5:26","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"visibility":"public"},{"constant":true,"functionSelector":"92b2849b","id":7922,"mutability":"constant","name":"MAX_OUTCOME","nameLocation":"2266:11:26","nodeType":"VariableDeclaration","scope":9461,"src":"2242:39:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7920,"name":"uint256","nodeType":"ElementaryTypeName","src":"2242:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"35","id":7921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2280:1:26","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"visibility":"public"},{"constant":true,"functionSelector":"c3883f17","id":7925,"mutability":"constant","name":"MIN_LIQUIDITY_PARAM","nameLocation":"2349:19:26","nodeType":"VariableDeclaration","scope":9461,"src":"2325:49:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7923,"name":"uint256","nodeType":"ElementaryTypeName","src":"2325:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":7924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2371:3:26","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"public"},{"constant":true,"functionSelector":"8fbb4a82","id":7928,"mutability":"constant","name":"MAX_LIQUIDITY_PARAM","nameLocation":"2435:19:26","nodeType":"VariableDeclaration","scope":9461,"src":"2411:51:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7926,"name":"uint256","nodeType":"ElementaryTypeName","src":"2411:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130303030","id":7927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2457:5:26","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"visibility":"public"},{"anonymous":false,"eventSelector":"0ea2cc1a2a0fcfecef8b5ff9be41f8c0ca3770265a060b00de53118f88c91dfa","id":7938,"name":"SharesPurchased","nameLocation":"2597:15:26","nodeType":"EventDefinition","parameters":{"id":7937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7930,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2638:4:26","nodeType":"VariableDeclaration","scope":7938,"src":"2622:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7929,"name":"address","nodeType":"ElementaryTypeName","src":"2622:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7932,"indexed":false,"mutability":"mutable","name":"outcomeIndex","nameLocation":"2660:12:26","nodeType":"VariableDeclaration","scope":7938,"src":"2652:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7931,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7934,"indexed":false,"mutability":"mutable","name":"numShares","nameLocation":"2690:9:26","nodeType":"VariableDeclaration","scope":7938,"src":"2682:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7933,"name":"uint256","nodeType":"ElementaryTypeName","src":"2682:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7936,"indexed":false,"mutability":"mutable","name":"cost","nameLocation":"2717:4:26","nodeType":"VariableDeclaration","scope":7938,"src":"2709:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7935,"name":"uint256","nodeType":"ElementaryTypeName","src":"2709:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2612:115:26"},"src":"2591:137:26"},{"anonymous":false,"eventSelector":"019eed797248695407e185a0977fa0dba8bbaaba6c2f6f4a8bdf6fb32e62ba23","id":7948,"name":"SharesSold","nameLocation":"2739:10:26","nodeType":"EventDefinition","parameters":{"id":7947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7940,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2775:4:26","nodeType":"VariableDeclaration","scope":7948,"src":"2759:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7939,"name":"address","nodeType":"ElementaryTypeName","src":"2759:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7942,"indexed":false,"mutability":"mutable","name":"outcomeIndex","nameLocation":"2797:12:26","nodeType":"VariableDeclaration","scope":7948,"src":"2789:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7941,"name":"uint256","nodeType":"ElementaryTypeName","src":"2789:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7944,"indexed":false,"mutability":"mutable","name":"numShares","nameLocation":"2827:9:26","nodeType":"VariableDeclaration","scope":7948,"src":"2819:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7943,"name":"uint256","nodeType":"ElementaryTypeName","src":"2819:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7946,"indexed":false,"mutability":"mutable","name":"payment","nameLocation":"2854:7:26","nodeType":"VariableDeclaration","scope":7948,"src":"2846:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7945,"name":"uint256","nodeType":"ElementaryTypeName","src":"2846:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2749:118:26"},"src":"2733:135:26"},{"anonymous":false,"eventSelector":"0b5f6bf058282d5cc003efc735b9ee453bbd7f9bef4c6db6300d095f3eefac28","id":7950,"name":"MarketClosed","nameLocation":"2879:12:26","nodeType":"EventDefinition","parameters":{"id":7949,"nodeType":"ParameterList","parameters":[],"src":"2891:2:26"},"src":"2873:21:26"},{"anonymous":false,"eventSelector":"bdb6af8caa3a0b8c130fd2ab4c4930e3fd8987c9730340729078e256bbc4b543","id":7954,"name":"OutcomeSet","nameLocation":"2905:10:26","nodeType":"EventDefinition","parameters":{"id":7953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7952,"indexed":true,"mutability":"mutable","name":"winningOutcome","nameLocation":"2932:14:26","nodeType":"VariableDeclaration","scope":7954,"src":"2916:30:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7951,"name":"uint256","nodeType":"ElementaryTypeName","src":"2916:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2915:32:26"},"src":"2899:49:26"},{"anonymous":false,"eventSelector":"ec68461f5d4cc45c89e914cb8826a966c73dd35e5f97815ece0a01ffa4a025a6","id":7960,"name":"PayoutClaimed","nameLocation":"2959:13:26","nodeType":"EventDefinition","parameters":{"id":7959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7956,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2989:4:26","nodeType":"VariableDeclaration","scope":7960,"src":"2973:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7955,"name":"address","nodeType":"ElementaryTypeName","src":"2973:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7958,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3003:6:26","nodeType":"VariableDeclaration","scope":7960,"src":"2995:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7957,"name":"uint256","nodeType":"ElementaryTypeName","src":"2995:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2972:38:26"},"src":"2953:58:26"},{"anonymous":false,"eventSelector":"c0819c13be868895eb93e40eaceb96de976442fa1d404e5c55f14bb65a8c489a","id":7966,"name":"FeesWithdrawn","nameLocation":"3022:13:26","nodeType":"EventDefinition","parameters":{"id":7965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7962,"indexed":true,"mutability":"mutable","name":"feeRecipient","nameLocation":"3052:12:26","nodeType":"VariableDeclaration","scope":7966,"src":"3036:28:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7961,"name":"address","nodeType":"ElementaryTypeName","src":"3036:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7964,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3074:6:26","nodeType":"VariableDeclaration","scope":7966,"src":"3066:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7963,"name":"uint256","nodeType":"ElementaryTypeName","src":"3066:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:46:26"},"src":"3016:66:26"},{"anonymous":false,"eventSelector":"543ba50a5eec5e6178218e364b1d0f396157b3c8fa278522c2cb7fd99407d474","id":7972,"name":"FundsDeposited","nameLocation":"3093:14:26","nodeType":"EventDefinition","parameters":{"id":7971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7968,"indexed":true,"mutability":"mutable","name":"depositor","nameLocation":"3124:9:26","nodeType":"VariableDeclaration","scope":7972,"src":"3108:25:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7967,"name":"address","nodeType":"ElementaryTypeName","src":"3108:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7970,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3143:6:26","nodeType":"VariableDeclaration","scope":7972,"src":"3135:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7969,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3107:43:26"},"src":"3087:64:26"},{"body":{"id":8213,"nodeType":"Block","src":"4495:2279:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8004,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7992,"src":"4513:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4538:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4530:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8005,"name":"address","nodeType":"ElementaryTypeName","src":"4530:7:26","typeDescriptions":{}}},"id":8008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4530:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4513:27:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420746f6b656e2061646472657373","id":8010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4542:23:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743","typeString":"literal_string \"Invalid token address\""},"value":"Invalid token address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743","typeString":"literal_string \"Invalid token address\""}],"id":8003,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4505:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4505:61:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8012,"nodeType":"ExpressionStatement","src":"4505:61:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8014,"name":"_feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7990,"src":"4584:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4609:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4601:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8015,"name":"address","nodeType":"ElementaryTypeName","src":"4601:7:26","typeDescriptions":{}}},"id":8018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4601:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4584:27:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642066656520726563697069656e742061646472657373","id":8020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4613:31:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_e928a2ae4f5aa3aa8736da69590f64f21173a7402749c02286bcf74acc1ac654","typeString":"literal_string \"Invalid fee recipient address\""},"value":"Invalid fee recipient address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e928a2ae4f5aa3aa8736da69590f64f21173a7402749c02286bcf74acc1ac654","typeString":"literal_string \"Invalid fee recipient address\""}],"id":8013,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4576:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:69:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8022,"nodeType":"ExpressionStatement","src":"4576:69:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8024,"name":"_outcomes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7980,"src":"4663:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":8025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4673:6:26","memberName":"length","nodeType":"MemberAccess","src":"4663:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4682:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4663:20:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4174206c65617374206f6e65206f7574636f6d65207265717569726564","id":8028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4685:31:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_6a797e6116130d6edcb1f7b75ca84f98a6b73776d3858add90067d23d7de7dfe","typeString":"literal_string \"At least one outcome required\""},"value":"At least one outcome required"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6a797e6116130d6edcb1f7b75ca84f98a6b73776d3858add90067d23d7de7dfe","typeString":"literal_string \"At least one outcome required\""}],"id":8023,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4655:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4655:62:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8030,"nodeType":"ExpressionStatement","src":"4655:62:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8032,"name":"_b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7984,"src":"4735:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4740:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4735:6:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c697175696469747920706172616d657465722062206d7573742062652067726561746572207468616e207a65726f","id":8035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4743:49:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ed972adcf57b5c0616261620bce33e84d9cb13280c74b7cbce52eccedc80bc0","typeString":"literal_string \"Liquidity parameter b must be greater than zero\""},"value":"Liquidity parameter b must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ed972adcf57b5c0616261620bce33e84d9cb13280c74b7cbce52eccedc80bc0","typeString":"literal_string \"Liquidity parameter b must be greater than zero\""}],"id":8031,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4727:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4727:66:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8037,"nodeType":"ExpressionStatement","src":"4727:66:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8039,"name":"_duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7986,"src":"4811:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4823:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4811:13:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4475726174696f6e206d75737420626520706f736974697665","id":8042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4826:27:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_e2db737b4f72d51e5d9739ee51f563e55d139cf69c2c66e37332edb20f949e00","typeString":"literal_string \"Duration must be positive\""},"value":"Duration must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e2db737b4f72d51e5d9739ee51f563e55d139cf69c2c66e37332edb20f949e00","typeString":"literal_string \"Duration must be positive\""}],"id":8038,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4803:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4803:51:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8044,"nodeType":"ExpressionStatement","src":"4803:51:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8046,"name":"_outcomes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7980,"src":"4885:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":8047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4895:6:26","memberName":"length","nodeType":"MemberAccess","src":"4885:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4904:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4885:20:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8050,"name":"_outcomes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7980,"src":"4909:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":8051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4919:6:26","memberName":"length","nodeType":"MemberAccess","src":"4909:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":8052,"name":"MAX_OUTCOME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"4929:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4909:31:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4885:55:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206e756d626572206f66206f7574636f6d6573","id":8055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4954:28:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_70459525e44b226ef4dd44c0b839435e364531ade5e02a9f31f9dddb02a455f2","typeString":"literal_string \"Invalid number of outcomes\""},"value":"Invalid number of outcomes"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_70459525e44b226ef4dd44c0b839435e364531ade5e02a9f31f9dddb02a455f2","typeString":"literal_string \"Invalid number of outcomes\""}],"id":8045,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4864:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4864:128:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8057,"nodeType":"ExpressionStatement","src":"4864:128:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8059,"name":"_b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7984,"src":"5023:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":8060,"name":"MAX_LIQUIDITY_PARAM","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7928,"src":"5029:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5023:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c697175696469747920706172616d6574657220276227206578636565647320746865206c696d6974206d6178696d756d","id":8062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5062:51:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6a3f473ec7886d5d129f25f911d39a274e86e24608a2c109ab3b650b384d702","typeString":"literal_string \"Liquidity parameter 'b' exceeds the limit maximum\""},"value":"Liquidity parameter 'b' exceeds the limit maximum"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6a3f473ec7886d5d129f25f911d39a274e86e24608a2c109ab3b650b384d702","typeString":"literal_string \"Liquidity parameter 'b' exceeds the limit maximum\""}],"id":8058,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"5002:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5002:121:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8064,"nodeType":"ExpressionStatement","src":"5002:121:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8066,"name":"_b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7984,"src":"5154:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":8067,"name":"MIN_LIQUIDITY_PARAM","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7925,"src":"5160:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5154:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c697175696469747920706172616d6574657220276227206d7573742062652067726561746572207468616e206d696e696d756d","id":8069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5193:54:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_4ce804036b23db0367aa6d47d857c0b4394ec79406c33302537d3e49acb67a52","typeString":"literal_string \"Liquidity parameter 'b' must be greater than minimum\""},"value":"Liquidity parameter 'b' must be greater than minimum"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4ce804036b23db0367aa6d47d857c0b4394ec79406c33302537d3e49acb67a52","typeString":"literal_string \"Liquidity parameter 'b' must be greater than minimum\""}],"id":8065,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"5133:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5133:124:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8071,"nodeType":"ExpressionStatement","src":"5133:124:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8073,"name":"_initialFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7994,"src":"5359:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8075,"name":"_b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7984,"src":"5421:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8076,"name":"_outcomes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7980,"src":"5425:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":8077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5435:6:26","memberName":"length","nodeType":"MemberAccess","src":"5425:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8074,"name":"calculateMinimumInitialFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9286,"src":"5392:28:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":8078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5392:50:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5466:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":8081,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7992,"src":"5487:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8080,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2534,"src":"5472:14:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$2534_$","typeString":"type(contract IERC20Metadata)"}},"id":8082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:29:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$2534","typeString":"contract IERC20Metadata"}},"id":8083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5502:8:26","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":2533,"src":"5472:38:26","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":8084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5466:46:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8086,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5465:48:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5392:121:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5359:154:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c2066756e6473206d757374206578636565642062202a206c6e286e756d5f6f7574636f6d657329","id":8089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5527:48:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_df5f0d5acc07add6ad527e2bd4f3acd4068fef056a9752ebd2ea1d09c42d831d","typeString":"literal_string \"Initial funds must exceed b * ln(num_outcomes)\""},"value":"Initial funds must exceed b * ln(num_outcomes)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df5f0d5acc07add6ad527e2bd4f3acd4068fef056a9752ebd2ea1d09c42d831d","typeString":"literal_string \"Initial funds must exceed b * ln(num_outcomes)\""}],"id":8072,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"5338:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5338:247:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8091,"nodeType":"ExpressionStatement","src":"5338:247:26"},{"expression":{"id":8094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8092,"name":"marketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7895,"src":"5596:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8093,"name":"_marketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7975,"src":"5607:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5596:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8095,"nodeType":"ExpressionStatement","src":"5596:20:26"},{"expression":{"id":8098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8096,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7874,"src":"5626:5:26","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8097,"name":"_title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7977,"src":"5634:6:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"5626:14:26","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8099,"nodeType":"ExpressionStatement","src":"5626:14:26"},{"expression":{"id":8102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8100,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7876,"src":"5650:6:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8101,"name":"_oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7982,"src":"5659:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5650:16:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8103,"nodeType":"ExpressionStatement","src":"5650:16:26"},{"expression":{"id":8106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8104,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7890,"src":"5676:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8105,"name":"_b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7984,"src":"5680:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5676:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8107,"nodeType":"ExpressionStatement","src":"5676:6:26"},{"expression":{"id":8113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8108,"name":"marketEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7866,"src":"5692:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8109,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"5708:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5714:9:26","memberName":"timestamp","nodeType":"MemberAccess","src":"5708:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8111,"name":"_duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7986,"src":"5726:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5708:27:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5692:43:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8114,"nodeType":"ExpressionStatement","src":"5692:43:26"},{"expression":{"id":8117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8115,"name":"marketClosed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7868,"src":"5745:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":8116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5760:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5745:20:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8118,"nodeType":"ExpressionStatement","src":"5745:20:26"},{"expression":{"id":8121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8119,"name":"marketSettled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7870,"src":"5775:13:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":8120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5791:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5775:21:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8122,"nodeType":"ExpressionStatement","src":"5775:21:26"},{"expression":{"id":8125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8123,"name":"feePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7897,"src":"5806:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8124,"name":"_feePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7988,"src":"5819:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5806:24:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8126,"nodeType":"ExpressionStatement","src":"5806:24:26"},{"expression":{"id":8129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8127,"name":"feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"5840:12:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8128,"name":"_feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7990,"src":"5855:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5840:28:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8130,"nodeType":"ExpressionStatement","src":"5840:28:26"},{"expression":{"id":8135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8131,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7893,"src":"5878:5:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2508","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8133,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7992,"src":"5893:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8132,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"5886:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2508_$","typeString":"type(contract IERC20)"}},"id":8134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5886:21:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2508","typeString":"contract IERC20"}},"src":"5878:29:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2508","typeString":"contract IERC20"}},"id":8136,"nodeType":"ExpressionStatement","src":"5878:29:26"},{"expression":{"id":8140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8137,"name":"i_numOutcomes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7907,"src":"5917:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":8138,"name":"_outcomes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7980,"src":"5933:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":8139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5943:6:26","memberName":"length","nodeType":"MemberAccess","src":"5933:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5917:32:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8141,"nodeType":"ExpressionStatement","src":"5917:32:26"},{"expression":{"id":8148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8142,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7901,"src":"6001:13:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":8144,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7992,"src":"6032:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8143,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2534,"src":"6017:14:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$2534_$","typeString":"type(contract IERC20Metadata)"}},"id":8145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6017:29:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$2534","typeString":"contract IERC20Metadata"}},"id":8146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6047:8:26","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":2533,"src":"6017:38:26","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":8147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6017:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6001:56:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":8149,"nodeType":"ExpressionStatement","src":"6001:56:26"},{"expression":{"id":8154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8150,"name":"positions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7888,"src":"6067:9:26","typeDescriptions":{"typeIdentifier":"t_contract$_PredictionMarketPositions_$9897","typeString":"contract PredictionMarketPositions"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8152,"name":"_positionsAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7996,"src":"6105:17:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8151,"name":"PredictionMarketPositions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9897,"src":"6079:25:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PredictionMarketPositions_$9897_$","typeString":"type(contract PredictionMarketPositions)"}},"id":8153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6079:44:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PredictionMarketPositions_$9897","typeString":"contract PredictionMarketPositions"}},"src":"6067:56:26","typeDescriptions":{"typeIdentifier":"t_contract$_PredictionMarketPositions_$9897","typeString":"contract PredictionMarketPositions"}},"id":8155,"nodeType":"ExpressionStatement","src":"6067:56:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8156,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7901,"src":"6366:13:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8157,"name":"SHARES_DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"6382:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6366:31:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8178,"nodeType":"Block","src":"6489:84:26","statements":[{"expression":{"id":8176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8169,"name":"unitScalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7905,"src":"6503:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6523:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8171,"name":"SHARES_DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"6530:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8172,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7901,"src":"6548:13:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6530:31:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8174,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6529:33:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6523:39:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6503:59:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8177,"nodeType":"ExpressionStatement","src":"6503:59:26"}]},"id":8179,"nodeType":"IfStatement","src":"6362:211:26","trueBody":{"id":8168,"nodeType":"Block","src":"6399:84:26","statements":[{"expression":{"id":8166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8159,"name":"unitScalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7905,"src":"6413:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6433:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8161,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7901,"src":"6440:13:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8162,"name":"SHARES_DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"6456:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6440:31:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8164,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6439:33:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6433:39:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6413:59:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8167,"nodeType":"ExpressionStatement","src":"6413:59:26"}]}},{"expression":{"id":8187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8180,"name":"payoutPerShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7903,"src":"6583:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":8181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6600:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6605:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":8183,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7901,"src":"6611:13:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6605:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8185,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6604:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6600:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6583:42:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8188,"nodeType":"ExpressionStatement","src":"6583:42:26"},{"body":{"id":8211,"nodeType":"Block","src":"6683:85:26","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":8204,"name":"_outcomes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7980,"src":"6726:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":8206,"indexExpression":{"id":8205,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8190,"src":"6736:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6726:12:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":8207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6753:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8203,"name":"Outcome","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7860,"src":"6711:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Outcome_$7860_storage_ptr_$","typeString":"type(struct LMSRPredictionMarket.Outcome storage pointer)"}},"id":8208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6720:4:26","6740:11:26"],"names":["name","totalShares"],"nodeType":"FunctionCall","src":"6711:45:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Outcome_$7860_memory_ptr","typeString":"struct LMSRPredictionMarket.Outcome memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Outcome_$7860_memory_ptr","typeString":"struct LMSRPredictionMarket.Outcome memory"}],"expression":{"id":8200,"name":"outcomes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7864,"src":"6697:8:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Outcome_$7860_storage_$dyn_storage","typeString":"struct LMSRPredictionMarket.Outcome storage ref[] storage ref"}},"id":8202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6706:4:26","memberName":"push","nodeType":"MemberAccess","src":"6697:13:26","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Outcome_$7860_storage_$dyn_storage_ptr_$_t_struct$_Outcome_$7860_storage_$returns$__$attached_to$_t_array$_t_struct$_Outcome_$7860_storage_$dyn_storage_ptr_$","typeString":"function (struct LMSRPredictionMarket.Outcome storage ref[] storage pointer,struct LMSRPredictionMarket.Outcome storage ref)"}},"id":8209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6697:60:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8210,"nodeType":"ExpressionStatement","src":"6697:60:26"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8193,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8190,"src":"6656:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":8194,"name":"_outcomes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7980,"src":"6660:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":8195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6670:6:26","memberName":"length","nodeType":"MemberAccess","src":"6660:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6656:20:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8212,"initializationExpression":{"assignments":[8190],"declarations":[{"constant":false,"id":8190,"mutability":"mutable","name":"i","nameLocation":"6649:1:26","nodeType":"VariableDeclaration","scope":8212,"src":"6641:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8189,"name":"uint256","nodeType":"ElementaryTypeName","src":"6641:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8192,"initialValue":{"hexValue":"30","id":8191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6653:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6641:13:26"},"loopExpression":{"expression":{"id":8198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6678:3:26","subExpression":{"id":8197,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8190,"src":"6678:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8199,"nodeType":"ExpressionStatement","src":"6678:3:26"},"nodeType":"ForStatement","src":"6636:132:26"}]},"documentation":{"id":7973,"nodeType":"StructuredDocumentation","src":"3253:877:26","text":" @dev Initializes the prediction market with the specified parameters.\n @param _marketId Unique identifier for the market.\n @param _title Title of the prediction market.\n @param _outcomes Array of outcome names for the market.\n @param _oracle Address of the oracle responsible for setting the outcome.\n @param _b Liquidity parameter (LMSR constant) that affects share pricing dynamics.\n @param _positionsAddress Address of the ERC1155 contract managing tokenized positions.\n @param _duration Duration (in seconds) for the market to remain open.\n @param _feePercent Fee percentage applied to trades.\n @param _feeRecipient Address receiving the collected fees.\n @param _tokenAddress Address of the ERC20 token used for trades.\n @param _initialFunds Initial funds deposited into the market maker."},"id":8214,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":7999,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"4483:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4487:6:26","memberName":"sender","nodeType":"MemberAccess","src":"4483:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8001,"kind":"baseConstructorSpecifier","modifierName":{"id":7998,"name":"Ownable","nameLocations":["4475:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"4475:7:26"},"nodeType":"ModifierInvocation","src":"4475:19:26"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7975,"mutability":"mutable","name":"_marketId","nameLocation":"4165:9:26","nodeType":"VariableDeclaration","scope":8214,"src":"4157:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7974,"name":"uint256","nodeType":"ElementaryTypeName","src":"4157:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7977,"mutability":"mutable","name":"_title","nameLocation":"4198:6:26","nodeType":"VariableDeclaration","scope":8214,"src":"4184:20:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7976,"name":"string","nodeType":"ElementaryTypeName","src":"4184:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7980,"mutability":"mutable","name":"_outcomes","nameLocation":"4230:9:26","nodeType":"VariableDeclaration","scope":8214,"src":"4214:25:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":7978,"name":"string","nodeType":"ElementaryTypeName","src":"4214:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":7979,"nodeType":"ArrayTypeName","src":"4214:8:26","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":7982,"mutability":"mutable","name":"_oracle","nameLocation":"4257:7:26","nodeType":"VariableDeclaration","scope":8214,"src":"4249:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7981,"name":"address","nodeType":"ElementaryTypeName","src":"4249:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7984,"mutability":"mutable","name":"_b","nameLocation":"4282:2:26","nodeType":"VariableDeclaration","scope":8214,"src":"4274:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7983,"name":"uint256","nodeType":"ElementaryTypeName","src":"4274:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7986,"mutability":"mutable","name":"_duration","nameLocation":"4302:9:26","nodeType":"VariableDeclaration","scope":8214,"src":"4294:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7985,"name":"uint256","nodeType":"ElementaryTypeName","src":"4294:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7988,"mutability":"mutable","name":"_feePercent","nameLocation":"4329:11:26","nodeType":"VariableDeclaration","scope":8214,"src":"4321:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7987,"name":"uint256","nodeType":"ElementaryTypeName","src":"4321:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7990,"mutability":"mutable","name":"_feeRecipient","nameLocation":"4358:13:26","nodeType":"VariableDeclaration","scope":8214,"src":"4350:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7989,"name":"address","nodeType":"ElementaryTypeName","src":"4350:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7992,"mutability":"mutable","name":"_tokenAddress","nameLocation":"4389:13:26","nodeType":"VariableDeclaration","scope":8214,"src":"4381:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7991,"name":"address","nodeType":"ElementaryTypeName","src":"4381:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7994,"mutability":"mutable","name":"_initialFunds","nameLocation":"4420:13:26","nodeType":"VariableDeclaration","scope":8214,"src":"4412:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7993,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7996,"mutability":"mutable","name":"_positionsAddress","nameLocation":"4451:17:26","nodeType":"VariableDeclaration","scope":8214,"src":"4443:25:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7995,"name":"address","nodeType":"ElementaryTypeName","src":"4443:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4147:327:26"},"returnParameters":{"id":8002,"nodeType":"ParameterList","parameters":[],"src":"4495:0:26"},"scope":9461,"src":"4136:2638:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8225,"nodeType":"Block","src":"6896:75:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8217,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"6914:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6918:6:26","memberName":"sender","nodeType":"MemberAccess","src":"6914:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8219,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7876,"src":"6928:6:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6914:20:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a6564","id":8221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6936:16:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""},"value":"Not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""}],"id":8216,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"6906:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:47:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8223,"nodeType":"ExpressionStatement","src":"6906:47:26"},{"id":8224,"nodeType":"PlaceholderStatement","src":"6963:1:26"}]},"id":8226,"name":"onlyOracle","nameLocation":"6883:10:26","nodeType":"ModifierDefinition","parameters":{"id":8215,"nodeType":"ParameterList","parameters":[],"src":"6893:2:26"},"src":"6874:97:26","virtual":false,"visibility":"internal"},{"body":{"id":8410,"nodeType":"Block","src":"7501:2005:26","statements":[{"expression":{"arguments":[{"id":8240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7519:13:26","subExpression":{"id":8239,"name":"marketClosed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7868,"src":"7520:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d61726b657420697320636c6f736564","id":8241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7534:18:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ca757ac181a1f555f8001095913f79499a2a7c0c51154e239b9b227e6a3de18","typeString":"literal_string \"Market is closed\""},"value":"Market is closed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0ca757ac181a1f555f8001095913f79499a2a7c0c51154e239b9b227e6a3de18","typeString":"literal_string \"Market is closed\""}],"id":8238,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"7511:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7511:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8243,"nodeType":"ExpressionStatement","src":"7511:42:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8245,"name":"outcomeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8229,"src":"7571:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":8246,"name":"outcomes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7864,"src":"7586:8:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Outcome_$7860_storage_$dyn_storage","typeString":"struct LMSRPredictionMarket.Outcome storage ref[] storage ref"}},"id":8247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7595:6:26","memberName":"length","nodeType":"MemberAccess","src":"7586:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7571:30:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206f7574636f6d65","id":8249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7603:17:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_030213450aebdb0dfeba67f2b8c40b0e30e9d264ed3ebfc59f419b62872eb850","typeString":"literal_string \"Invalid outcome\""},"value":"Invalid outcome"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_030213450aebdb0dfeba67f2b8c40b0e30e9d264ed3ebfc59f419b62872eb850","typeString":"literal_string \"Invalid outcome\""}],"id":8244,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"7563:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7563:58:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8251,"nodeType":"ExpressionStatement","src":"7563:58:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8253,"name":"numShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8231,"src":"7639:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7651:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7639:13:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d75737420627579206174206c65617374206f6e65207368617265","id":8256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7654:29:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_e46f49624a3778dd29cc7753f992b3b31e71f8e6386f42243fa3661ab01debd1","typeString":"literal_string \"Must buy at least one share\""},"value":"Must buy at least one share"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e46f49624a3778dd29cc7753f992b3b31e71f8e6386f42243fa3661ab01debd1","typeString":"literal_string \"Must buy at least one share\""}],"id":8252,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"7631:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7631:53:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8258,"nodeType":"ExpressionStatement","src":"7631:53:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8260,"name":"numShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8231,"src":"7702:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8261,"name":"MAX_SHARE_TRADE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7919,"src":"7714:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7702:27:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5368617265207472616465206c696d6974206578636565646564","id":8263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7731:28:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_ec07b820ab04f3f135bf98afd1dddb5ce85232526ddba28239da89a6b090ea59","typeString":"literal_string \"Share trade limit exceeded\""},"value":"Share trade limit exceeded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ec07b820ab04f3f135bf98afd1dddb5ce85232526ddba28239da89a6b090ea59","typeString":"literal_string \"Share trade limit exceeded\""}],"id":8259,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"7694:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7694:66:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8265,"nodeType":"ExpressionStatement","src":"7694:66:26"},{"assignments":[8270],"declarations":[{"constant":false,"id":8270,"mutability":"mutable","name":"qBefore","nameLocation":"7830:7:26","nodeType":"VariableDeclaration","scope":8410,"src":"7813:24:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8268,"name":"uint256","nodeType":"ElementaryTypeName","src":"7813:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8269,"nodeType":"ArrayTypeName","src":"7813:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":8273,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":8271,"name":"getQuantities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9177,"src":"7840:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256[] memory)"}},"id":8272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7840:15:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7813:42:26"},{"assignments":[8275],"declarations":[{"constant":false,"id":8275,"mutability":"mutable","name":"costBefore","nameLocation":"7872:10:26","nodeType":"VariableDeclaration","scope":8410,"src":"7865:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":8274,"name":"int128","nodeType":"ElementaryTypeName","src":"7865:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":8279,"initialValue":{"arguments":[{"id":8277,"name":"qBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8270,"src":"7899:7:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":8276,"name":"calculateCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9252,"src":"7885:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_int128_$","typeString":"function (uint256[] memory) view returns (int128)"}},"id":8278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7885:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"7865:42:26"},{"expression":{"id":8285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":8280,"name":"outcomes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7864,"src":"7970:8:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Outcome_$7860_storage_$dyn_storage","typeString":"struct LMSRPredictionMarket.Outcome storage ref[] storage ref"}},"id":8282,"indexExpression":{"id":8281,"name":"outcomeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8229,"src":"7979:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7970:22:26","typeDescriptions":{"typeIdentifier":"t_struct$_Outcome_$7860_storage","typeString":"struct LMSRPredictionMarket.Outcome storage ref"}},"id":8283,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7993:11:26","memberName":"totalShares","nodeType":"MemberAccess","referencedDeclaration":7859,"src":"7970:34:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8284,"name":"numShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8231,"src":"8008:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7970:47:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8286,"nodeType":"ExpressionStatement","src":"7970:47:26"},{"assignments":[8291],"declarations":[{"constant":false,"id":8291,"mutability":"mutable","name":"qAfter","nameLocation":"8086:6:26","nodeType":"VariableDeclaration","scope":8410,"src":"8069:23:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8289,"name":"uint256","nodeType":"ElementaryTypeName","src":"8069:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8290,"nodeType":"ArrayTypeName","src":"8069:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":8294,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":8292,"name":"getQuantities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9177,"src":"8095:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256[] memory)"}},"id":8293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8095:15:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8069:41:26"},{"assignments":[8296],"declarations":[{"constant":false,"id":8296,"mutability":"mutable","name":"costAfter","nameLocation":"8127:9:26","nodeType":"VariableDeclaration","scope":8410,"src":"8120:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":8295,"name":"int128","nodeType":"ElementaryTypeName","src":"8120:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":8300,"initialValue":{"arguments":[{"id":8298,"name":"qAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8291,"src":"8153:6:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":8297,"name":"calculateCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9252,"src":"8139:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_int128_$","typeString":"function (uint256[] memory) view returns (int128)"}},"id":8299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8139:21:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"8120:40:26"},{"assignments":[8302],"declarations":[{"constant":false,"id":8302,"mutability":"mutable","name":"costDifference","nameLocation":"8219:14:26","nodeType":"VariableDeclaration","scope":8410,"src":"8212:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":8301,"name":"int128","nodeType":"ElementaryTypeName","src":"8212:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":8308,"initialValue":{"arguments":[{"id":8305,"name":"costAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8296,"src":"8254:9:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},{"id":8306,"name":"costBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8275,"src":"8265:10:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"},{"typeIdentifier":"t_int128","typeString":"int128"}],"expression":{"id":8303,"name":"ABDKMath64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12797,"src":"8236:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ABDKMath64x64_$12797_$","typeString":"type(library ABDKMath64x64)"}},"id":8304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8250:3:26","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":10146,"src":"8236:17:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int128_$_t_int128_$returns$_t_int128_$","typeString":"function (int128,int128) pure returns (int128)"}},"id":8307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8236:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"8212:64:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":8312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8310,"name":"costDifference","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8302,"src":"8294:14:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":8311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8294:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f737420646966666572656e6365206973206e65676174697665","id":8313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8315:29:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd820a671754417e26fa4386f39ffcb520568ce1667de940e6153b6a3196c202","typeString":"literal_string \"Cost difference is negative\""},"value":"Cost difference is negative"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dd820a671754417e26fa4386f39ffcb520568ce1667de940e6153b6a3196c202","typeString":"literal_string \"Cost difference is negative\""}],"id":8309,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"8286:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8286:59:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8315,"nodeType":"ExpressionStatement","src":"8286:59:26"},{"assignments":[8317],"declarations":[{"constant":false,"id":8317,"mutability":"mutable","name":"scaledCostDifference","nameLocation":"8362:20:26","nodeType":"VariableDeclaration","scope":8410,"src":"8355:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":8316,"name":"int128","nodeType":"ElementaryTypeName","src":"8355:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":8328,"initialValue":{"arguments":[{"id":8320,"name":"costDifference","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8302,"src":"8416:14:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8467:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":8324,"name":"SHARES_DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"8473:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8467:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8321,"name":"ABDKMath64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12797,"src":"8444:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ABDKMath64x64_$12797_$","typeString":"type(library ABDKMath64x64)"}},"id":8322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8458:8:26","memberName":"fromUInt","nodeType":"MemberAccess","referencedDeclaration":10000,"src":"8444:22:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int128_$","typeString":"function (uint256) pure returns (int128)"}},"id":8326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8444:45:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"},{"typeIdentifier":"t_int128","typeString":"int128"}],"expression":{"id":8318,"name":"ABDKMath64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12797,"src":"8385:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ABDKMath64x64_$12797_$","typeString":"type(library ABDKMath64x64)"}},"id":8319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8399:3:26","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":10184,"src":"8385:17:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int128_$_t_int128_$returns$_t_int128_$","typeString":"function (int128,int128) pure returns (int128)"}},"id":8327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8385:114:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"8355:144:26"},{"assignments":[8330],"declarations":[{"constant":false,"id":8330,"mutability":"mutable","name":"cost","nameLocation":"8517:4:26","nodeType":"VariableDeclaration","scope":8410,"src":"8509:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8329,"name":"uint256","nodeType":"ElementaryTypeName","src":"8509:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8337,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8333,"name":"scaledCostDifference","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8317,"src":"8545:20:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"expression":{"id":8331,"name":"ABDKMath64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12797,"src":"8524:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ABDKMath64x64_$12797_$","typeString":"type(library ABDKMath64x64)"}},"id":8332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8538:6:26","memberName":"toUInt","nodeType":"MemberAccess","referencedDeclaration":10026,"src":"8524:20:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int128_$returns$_t_uint64_$","typeString":"function (int128) pure returns (uint64)"}},"id":8334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8524:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8335,"name":"unitScalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7905,"src":"8581:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8524:74:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8509:89:26"},{"assignments":[8339],"declarations":[{"constant":false,"id":8339,"mutability":"mutable","name":"feeAmount","nameLocation":"8646:9:26","nodeType":"VariableDeclaration","scope":8410,"src":"8638:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8338,"name":"uint256","nodeType":"ElementaryTypeName","src":"8638:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8346,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8340,"name":"cost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8330,"src":"8659:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8341,"name":"feePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7897,"src":"8666:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8659:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8343,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8658:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":8344,"name":"PERCENT_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"8680:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8658:41:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8638:61:26"},{"assignments":[8348],"declarations":[{"constant":false,"id":8348,"mutability":"mutable","name":"reinvestAmount","nameLocation":"8717:14:26","nodeType":"VariableDeclaration","scope":8410,"src":"8709:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8347,"name":"uint256","nodeType":"ElementaryTypeName","src":"8709:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8355,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8349,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8339,"src":"8735:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8350,"name":"FEE_REINVEST_PERCENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7916,"src":"8747:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8735:32:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8352,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8734:34:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":8353,"name":"PERCENT_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"8783:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8734:68:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8709:93:26"},{"assignments":[8357],"declarations":[{"constant":false,"id":8357,"mutability":"mutable","name":"feeRecipientAmount","nameLocation":"8820:18:26","nodeType":"VariableDeclaration","scope":8410,"src":"8812:26:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8356,"name":"uint256","nodeType":"ElementaryTypeName","src":"8812:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8361,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8358,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8339,"src":"8841:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8359,"name":"reinvestAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8348,"src":"8853:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8841:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8812:55:26"},{"assignments":[8363],"declarations":[{"constant":false,"id":8363,"mutability":"mutable","name":"netCost","nameLocation":"8885:7:26","nodeType":"VariableDeclaration","scope":8410,"src":"8877:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8362,"name":"uint256","nodeType":"ElementaryTypeName","src":"8877:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8367,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8364,"name":"cost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8330,"src":"8895:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8365,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8339,"src":"8902:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8895:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8877:34:26"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":8371,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"9011:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9015:6:26","memberName":"sender","nodeType":"MemberAccess","src":"9011:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":8375,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"9031:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_LMSRPredictionMarket_$9461","typeString":"contract LMSRPredictionMarket"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LMSRPredictionMarket_$9461","typeString":"contract LMSRPredictionMarket"}],"id":8374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9023:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8373,"name":"address","nodeType":"ElementaryTypeName","src":"9023:7:26","typeDescriptions":{}}},"id":8376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9023:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8377,"name":"netCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8363,"src":"9038:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8369,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7893,"src":"8992:5:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2508","typeString":"contract IERC20"}},"id":8370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8998:12:26","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2507,"src":"8992:18:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":8378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8992:54:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e207472616e73666572206661696c6564","id":8379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9060:23:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4","typeString":"literal_string \"Token transfer failed\""},"value":"Token transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4","typeString":"literal_string \"Token transfer failed\""}],"id":8368,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"8971:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8971:122:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8381,"nodeType":"ExpressionStatement","src":"8971:122:26"},{"expression":{"arguments":[{"expression":{"id":8385,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"9119:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9123:6:26","memberName":"sender","nodeType":"MemberAccess","src":"9119:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8387,"name":"marketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7895,"src":"9131:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8388,"name":"outcomeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8229,"src":"9141:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8389,"name":"numShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8231,"src":"9155:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8382,"name":"positions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7888,"src":"9104:9:26","typeDescriptions":{"typeIdentifier":"t_contract$_PredictionMarketPositions_$9897","typeString":"contract PredictionMarketPositions"}},"id":8384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9114:4:26","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":9767,"src":"9104:14:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256) external"}},"id":8390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9104:61:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8391,"nodeType":"ExpressionStatement","src":"9104:61:26"},{"expression":{"id":8396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8392,"name":"marketMakerFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7879,"src":"9239:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8393,"name":"cost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8330,"src":"9259:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8394,"name":"reinvestAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8348,"src":"9266:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9259:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9239:41:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8397,"nodeType":"ExpressionStatement","src":"9239:41:26"},{"expression":{"id":8400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8398,"name":"collectedFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7885,"src":"9362:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8399,"name":"feeRecipientAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8357,"src":"9379:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9362:35:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8401,"nodeType":"ExpressionStatement","src":"9362:35:26"},{"eventCall":{"arguments":[{"expression":{"id":8403,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"9454:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9458:6:26","memberName":"sender","nodeType":"MemberAccess","src":"9454:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8405,"name":"outcomeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8229,"src":"9466:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8406,"name":"numShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8231,"src":"9480:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8407,"name":"netCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8363,"src":"9491:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8402,"name":"SharesPurchased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7938,"src":"9438:15:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256)"}},"id":8408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9438:61:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8409,"nodeType":"EmitStatement","src":"9433:66:26"}]},"documentation":{"id":8227,"nodeType":"StructuredDocumentation","src":"7071:308:26","text":" @notice Purchases shares for a specific outcome.\n @param outcomeIndex The index of the selected outcome.\n @param numShares The number of shares to purchase.\n @dev Transfers tokens from the user to the contract and mints new shares.\n Emits a {SharesPurchased} event."},"functionSelector":"beebc5da","id":8411,"implemented":true,"kind":"function","modifiers":[{"id":8234,"kind":"modifierInvocation","modifierName":{"id":8233,"name":"nonReentrant","nameLocations":["7474:12:26"],"nodeType":"IdentifierPath","referencedDeclaration":3676,"src":"7474:12:26"},"nodeType":"ModifierInvocation","src":"7474:12:26"},{"id":8236,"kind":"modifierInvocation","modifierName":{"id":8235,"name":"whenNotPaused","nameLocations":["7487:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":3568,"src":"7487:13:26"},"nodeType":"ModifierInvocation","src":"7487:13:26"}],"name":"buyShares","nameLocation":"7394:9:26","nodeType":"FunctionDefinition","parameters":{"id":8232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8229,"mutability":"mutable","name":"outcomeIndex","nameLocation":"7421:12:26","nodeType":"VariableDeclaration","scope":8411,"src":"7413:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8228,"name":"uint256","nodeType":"ElementaryTypeName","src":"7413:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8231,"mutability":"mutable","name":"numShares","nameLocation":"7451:9:26","nodeType":"VariableDeclaration","scope":8411,"src":"7443:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8230,"name":"uint256","nodeType":"ElementaryTypeName","src":"7443:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7403:63:26"},"returnParameters":{"id":8237,"nodeType":"ParameterList","parameters":[],"src":"7501:0:26"},"scope":9461,"src":"7385:2121:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8618,"nodeType":"Block","src":"9924:2477:26","statements":[{"expression":{"arguments":[{"id":8425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9942:13:26","subExpression":{"id":8424,"name":"marketClosed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7868,"src":"9943:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d61726b657420697320636c6f736564","id":8426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9957:18:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ca757ac181a1f555f8001095913f79499a2a7c0c51154e239b9b227e6a3de18","typeString":"literal_string \"Market is closed\""},"value":"Market is closed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0ca757ac181a1f555f8001095913f79499a2a7c0c51154e239b9b227e6a3de18","typeString":"literal_string \"Market is closed\""}],"id":8423,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"9934:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9934:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8428,"nodeType":"ExpressionStatement","src":"9934:42:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8430,"name":"outcomeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8414,"src":"9994:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":8431,"name":"outcomes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7864,"src":"10009:8:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Outcome_$7860_storage_$dyn_storage","typeString":"struct LMSRPredictionMarket.Outcome storage ref[] storage ref"}},"id":8432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10018:6:26","memberName":"length","nodeType":"MemberAccess","src":"10009:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9994:30:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206f7574636f6d65","id":8434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10026:17:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_030213450aebdb0dfeba67f2b8c40b0e30e9d264ed3ebfc59f419b62872eb850","typeString":"literal_string \"Invalid outcome\""},"value":"Invalid outcome"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_030213450aebdb0dfeba67f2b8c40b0e30e9d264ed3ebfc59f419b62872eb850","typeString":"literal_string \"Invalid outcome\""}],"id":8429,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"9986:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9986:58:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8436,"nodeType":"ExpressionStatement","src":"9986:58:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8438,"name":"numShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8416,"src":"10062:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10074:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10062:13:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d7573742073656c6c206174206c65617374206f6e65207368617265","id":8441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10077:30:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d7c4ac3538becebb6c5ac79435b6750524afd3a92e6c64b42ce38e2b56e3ec7","typeString":"literal_string \"Must sell at least one share\""},"value":"Must sell at least one share"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d7c4ac3538becebb6c5ac79435b6750524afd3a92e6c64b42ce38e2b56e3ec7","typeString":"literal_string \"Must sell at least one share\""}],"id":8437,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"10054:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10054:54:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8443,"nodeType":"ExpressionStatement","src":"10054:54:26"},{"assignments":[8445],"declarations":[{"constant":false,"id":8445,"mutability":"mutable","name":"tokenId","nameLocation":"10201:7:26","nodeType":"VariableDeclaration","scope":8618,"src":"10193:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8444,"name":"uint256","nodeType":"ElementaryTypeName","src":"10193:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8451,"initialValue":{"arguments":[{"id":8448,"name":"marketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7895,"src":"10232:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8449,"name":"outcomeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8414,"src":"10242:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8446,"name":"positions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7888,"src":"10211:9:26","typeDescriptions":{"typeIdentifier":"t_contract$_PredictionMarketPositions_$9897","typeString":"contract PredictionMarketPositions"}},"id":8447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10221:10:26","memberName":"getTokenId","nodeType":"MemberAccess","referencedDeclaration":9857,"src":"10211:20:26","typeDescriptions":{"typeIdentifier":"t_function_external_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure external returns (uint256)"}},"id":8450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10211:44:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10193:62:26"},{"assignments":[8453],"declarations":[{"constant":false,"id":8453,"mutability":"mutable","name":"userSharesAmount","nameLocation":"10329:16:26","nodeType":"VariableDeclaration","scope":8618,"src":"10321:24:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8452,"name":"uint256","nodeType":"ElementaryTypeName","src":"10321:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8460,"initialValue":{"arguments":[{"expression":{"id":8456,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"10368:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10372:6:26","memberName":"sender","nodeType":"MemberAccess","src":"10368:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8458,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8445,"src":"10380:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8454,"name":"positions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7888,"src":"10348:9:26","typeDescriptions":{"typeIdentifier":"t_contract$_PredictionMarketPositions_$9897","typeString":"contract PredictionMarketPositions"}},"id":8455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10358:9:26","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":783,"src":"10348:19:26","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view external returns (uint256)"}},"id":8459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10348:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10321:67:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8462,"name":"userSharesAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8453,"src":"10406:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":8463,"name":"numShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8416,"src":"10426:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10406:29:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656e6f7567682073686172657320746f2073656c6c","id":8465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10437:27:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_f178dbab48538f4cfaa8b94e65c098d01fea0090f7c847f377e00f97bf8e37ec","typeString":"literal_string \"Not enough shares to sell\""},"value":"Not enough shares to sell"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f178dbab48538f4cfaa8b94e65c098d01fea0090f7c847f377e00f97bf8e37ec","typeString":"literal_string \"Not enough shares to sell\""}],"id":8461,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"10398:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10398:67:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8467,"nodeType":"ExpressionStatement","src":"10398:67:26"},{"assignments":[8472],"declarations":[{"constant":false,"id":8472,"mutability":"mutable","name":"qBefore","nameLocation":"10534:7:26","nodeType":"VariableDeclaration","scope":8618,"src":"10517:24:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8470,"name":"uint256","nodeType":"ElementaryTypeName","src":"10517:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8471,"nodeType":"ArrayTypeName","src":"10517:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":8475,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":8473,"name":"getQuantities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9177,"src":"10544:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256[] memory)"}},"id":8474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10544:15:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10517:42:26"},{"assignments":[8477],"declarations":[{"constant":false,"id":8477,"mutability":"mutable","name":"costBefore","nameLocation":"10576:10:26","nodeType":"VariableDeclaration","scope":8618,"src":"10569:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":8476,"name":"int128","nodeType":"ElementaryTypeName","src":"10569:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":8481,"initialValue":{"arguments":[{"id":8479,"name":"qBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8472,"src":"10603:7:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":8478,"name":"calculateCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9252,"src":"10589:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_int128_$","typeString":"function (uint256[] memory) view returns (int128)"}},"id":8480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10589:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"10569:42:26"},{"expression":{"id":8487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":8482,"name":"outcomes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7864,"src":"10674:8:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Outcome_$7860_storage_$dyn_storage","typeString":"struct LMSRPredictionMarket.Outcome storage ref[] storage ref"}},"id":8484,"indexExpression":{"id":8483,"name":"outcomeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8414,"src":"10683:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10674:22:26","typeDescriptions":{"typeIdentifier":"t_struct$_Outcome_$7860_storage","typeString":"struct LMSRPredictionMarket.Outcome storage ref"}},"id":8485,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10697:11:26","memberName":"totalShares","nodeType":"MemberAccess","referencedDeclaration":7859,"src":"10674:34:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":8486,"name":"numShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8416,"src":"10712:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10674:47:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8488,"nodeType":"ExpressionStatement","src":"10674:47:26"},{"assignments":[8493],"declarations":[{"constant":false,"id":8493,"mutability":"mutable","name":"qAfter","nameLocation":"10789:6:26","nodeType":"VariableDeclaration","scope":8618,"src":"10772:23:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8491,"name":"uint256","nodeType":"ElementaryTypeName","src":"10772:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8492,"nodeType":"ArrayTypeName","src":"10772:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":8496,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":8494,"name":"getQuantities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9177,"src":"10798:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256[] memory)"}},"id":8495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10798:15:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10772:41:26"},{"assignments":[8498],"declarations":[{"constant":false,"id":8498,"mutability":"mutable","name":"costAfter","nameLocation":"10830:9:26","nodeType":"VariableDeclaration","scope":8618,"src":"10823:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":8497,"name":"int128","nodeType":"ElementaryTypeName","src":"10823:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":8502,"initialValue":{"arguments":[{"id":8500,"name":"qAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8493,"src":"10856:6:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":8499,"name":"calculateCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9252,"src":"10842:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_int128_$","typeString":"function (uint256[] memory) view returns (int128)"}},"id":8501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10842:21:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"10823:40:26"},{"assignments":[8504],"declarations":[{"constant":false,"id":8504,"mutability":"mutable","name":"costDifference","nameLocation":"10925:14:26","nodeType":"VariableDeclaration","scope":8618,"src":"10918:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":8503,"name":"int128","nodeType":"ElementaryTypeName","src":"10918:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":8510,"initialValue":{"arguments":[{"id":8507,"name":"costBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8477,"src":"10960:10:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},{"id":8508,"name":"costAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8498,"src":"10972:9:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"},{"typeIdentifier":"t_int128","typeString":"int128"}],"expression":{"id":8505,"name":"ABDKMath64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12797,"src":"10942:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ABDKMath64x64_$12797_$","typeString":"type(library ABDKMath64x64)"}},"id":8506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10956:3:26","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":10146,"src":"10942:17:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int128_$_t_int128_$returns$_t_int128_$","typeString":"function (int128,int128) pure returns (int128)"}},"id":8509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10942:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"10918:64:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":8514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8512,"name":"costDifference","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8504,"src":"11000:14:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":8513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11018:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11000:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f737420646966666572656e6365206973206e65676174697665","id":8515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11021:29:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd820a671754417e26fa4386f39ffcb520568ce1667de940e6153b6a3196c202","typeString":"literal_string \"Cost difference is negative\""},"value":"Cost difference is negative"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dd820a671754417e26fa4386f39ffcb520568ce1667de940e6153b6a3196c202","typeString":"literal_string \"Cost difference is negative\""}],"id":8511,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"10992:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10992:59:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8517,"nodeType":"ExpressionStatement","src":"10992:59:26"},{"assignments":[8519],"declarations":[{"constant":false,"id":8519,"mutability":"mutable","name":"scaledCostDifference","nameLocation":"11068:20:26","nodeType":"VariableDeclaration","scope":8618,"src":"11061:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":8518,"name":"int128","nodeType":"ElementaryTypeName","src":"11061:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":8530,"initialValue":{"arguments":[{"id":8522,"name":"costDifference","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8504,"src":"11122:14:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11173:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":8526,"name":"SHARES_DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"11179:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11173:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8523,"name":"ABDKMath64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12797,"src":"11150:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ABDKMath64x64_$12797_$","typeString":"type(library ABDKMath64x64)"}},"id":8524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11164:8:26","memberName":"fromUInt","nodeType":"MemberAccess","referencedDeclaration":10000,"src":"11150:22:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int128_$","typeString":"function (uint256) pure returns (int128)"}},"id":8528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11150:45:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"},{"typeIdentifier":"t_int128","typeString":"int128"}],"expression":{"id":8520,"name":"ABDKMath64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12797,"src":"11091:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ABDKMath64x64_$12797_$","typeString":"type(library ABDKMath64x64)"}},"id":8521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11105:3:26","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":10184,"src":"11091:17:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int128_$_t_int128_$returns$_t_int128_$","typeString":"function (int128,int128) pure returns (int128)"}},"id":8529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11091:114:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"11061:144:26"},{"assignments":[8532],"declarations":[{"constant":false,"id":8532,"mutability":"mutable","name":"payment","nameLocation":"11223:7:26","nodeType":"VariableDeclaration","scope":8618,"src":"11215:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8531,"name":"uint256","nodeType":"ElementaryTypeName","src":"11215:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8539,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8535,"name":"scaledCostDifference","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8519,"src":"11254:20:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"expression":{"id":8533,"name":"ABDKMath64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12797,"src":"11233:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ABDKMath64x64_$12797_$","typeString":"type(library ABDKMath64x64)"}},"id":8534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11247:6:26","memberName":"toUInt","nodeType":"MemberAccess","referencedDeclaration":10026,"src":"11233:20:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int128_$returns$_t_uint64_$","typeString":"function (int128) pure returns (uint64)"}},"id":8536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11233:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8537,"name":"unitScalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7905,"src":"11290:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11233:74:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11215:92:26"},{"assignments":[8541],"declarations":[{"constant":false,"id":8541,"mutability":"mutable","name":"feeAmount","nameLocation":"11348:9:26","nodeType":"VariableDeclaration","scope":8618,"src":"11340:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8540,"name":"uint256","nodeType":"ElementaryTypeName","src":"11340:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8548,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8542,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8532,"src":"11361:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8543,"name":"feePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7897,"src":"11371:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11361:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8545,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11360:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":8546,"name":"PERCENT_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"11385:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11360:44:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11340:64:26"},{"assignments":[8550],"declarations":[{"constant":false,"id":8550,"mutability":"mutable","name":"reinvestAmount","nameLocation":"11422:14:26","nodeType":"VariableDeclaration","scope":8618,"src":"11414:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8549,"name":"uint256","nodeType":"ElementaryTypeName","src":"11414:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8557,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8551,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8541,"src":"11440:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8552,"name":"FEE_REINVEST_PERCENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7916,"src":"11452:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11440:32:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8554,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11439:34:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":8555,"name":"PERCENT_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"11488:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11439:68:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11414:93:26"},{"assignments":[8559],"declarations":[{"constant":false,"id":8559,"mutability":"mutable","name":"feeRecipientAmount","nameLocation":"11525:18:26","nodeType":"VariableDeclaration","scope":8618,"src":"11517:26:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8558,"name":"uint256","nodeType":"ElementaryTypeName","src":"11517:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8563,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8560,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8541,"src":"11546:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8561,"name":"reinvestAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8550,"src":"11558:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11546:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11517:55:26"},{"assignments":[8565],"declarations":[{"constant":false,"id":8565,"mutability":"mutable","name":"netPayment","nameLocation":"11590:10:26","nodeType":"VariableDeclaration","scope":8618,"src":"11582:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8564,"name":"uint256","nodeType":"ElementaryTypeName","src":"11582:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8569,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8566,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8532,"src":"11603:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8567,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8541,"src":"11613:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11603:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11582:40:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8571,"name":"marketMakerFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7879,"src":"11735:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8572,"name":"netPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8565,"src":"11755:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8573,"name":"reinvestAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8550,"src":"11768:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11755:27:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11735:47:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74206d61726b6574206d616b65722066756e6473","id":8576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11796:33:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_79cc1c46bdab9dd0f3151006ea671b50259fd9ec4222a8d85a90cb7740578091","typeString":"literal_string \"Insufficient market maker funds\""},"value":"Insufficient market maker funds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_79cc1c46bdab9dd0f3151006ea671b50259fd9ec4222a8d85a90cb7740578091","typeString":"literal_string \"Insufficient market maker funds\""}],"id":8570,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"11714:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11714:125:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8578,"nodeType":"ExpressionStatement","src":"11714:125:26"},{"expression":{"id":8584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8579,"name":"marketMakerFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7879,"src":"11849:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8580,"name":"netPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8565,"src":"11870:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8581,"name":"reinvestAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8550,"src":"11883:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11870:27:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8583,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11869:29:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11849:49:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8585,"nodeType":"ExpressionStatement","src":"11849:49:26"},{"expression":{"id":8588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8586,"name":"collectedFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7885,"src":"11980:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8587,"name":"feeRecipientAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8559,"src":"11997:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:35:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8589,"nodeType":"ExpressionStatement","src":"11980:35:26"},{"expression":{"arguments":[{"expression":{"id":8593,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"12092:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12096:6:26","memberName":"sender","nodeType":"MemberAccess","src":"12092:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8595,"name":"marketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7895,"src":"12104:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8596,"name":"outcomeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8414,"src":"12114:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8597,"name":"numShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8416,"src":"12128:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8590,"name":"positions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7888,"src":"12077:9:26","typeDescriptions":{"typeIdentifier":"t_contract$_PredictionMarketPositions_$9897","typeString":"contract PredictionMarketPositions"}},"id":8592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12087:4:26","memberName":"burn","nodeType":"MemberAccess","referencedDeclaration":9819,"src":"12077:14:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256) external"}},"id":8598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12077:61:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8599,"nodeType":"ExpressionStatement","src":"12077:61:26"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":8603,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"12224:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12228:6:26","memberName":"sender","nodeType":"MemberAccess","src":"12224:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8605,"name":"netPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8565,"src":"12236:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8601,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7893,"src":"12209:5:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2508","typeString":"contract IERC20"}},"id":8602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12215:8:26","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2475,"src":"12209:14:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":8606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12209:38:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e207472616e73666572206661696c6564","id":8607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12261:23:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4","typeString":"literal_string \"Token transfer failed\""},"value":"Token transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4","typeString":"literal_string \"Token transfer failed\""}],"id":8600,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"12188:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12188:106:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8609,"nodeType":"ExpressionStatement","src":"12188:106:26"},{"eventCall":{"arguments":[{"expression":{"id":8611,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"12346:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12350:6:26","memberName":"sender","nodeType":"MemberAccess","src":"12346:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8613,"name":"outcomeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8414,"src":"12358:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8614,"name":"numShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8416,"src":"12372:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8615,"name":"netPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8565,"src":"12383:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8610,"name":"SharesSold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7948,"src":"12335:10:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256)"}},"id":8616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12335:59:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8617,"nodeType":"EmitStatement","src":"12330:64:26"}]},"documentation":{"id":8412,"nodeType":"StructuredDocumentation","src":"9512:289:26","text":" @notice Sells shares for a specific outcome.\n @param outcomeIndex The index of the selected outcome.\n @param numShares The number of shares to sell.\n @dev Burns the user's shares and transfers tokens back to the user.\n Emits a {SharesSold} event."},"functionSelector":"2279a970","id":8619,"implemented":true,"kind":"function","modifiers":[{"id":8419,"kind":"modifierInvocation","modifierName":{"id":8418,"name":"nonReentrant","nameLocations":["9897:12:26"],"nodeType":"IdentifierPath","referencedDeclaration":3676,"src":"9897:12:26"},"nodeType":"ModifierInvocation","src":"9897:12:26"},{"id":8421,"kind":"modifierInvocation","modifierName":{"id":8420,"name":"whenNotPaused","nameLocations":["9910:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":3568,"src":"9910:13:26"},"nodeType":"ModifierInvocation","src":"9910:13:26"}],"name":"sellShares","nameLocation":"9816:10:26","nodeType":"FunctionDefinition","parameters":{"id":8417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8414,"mutability":"mutable","name":"outcomeIndex","nameLocation":"9844:12:26","nodeType":"VariableDeclaration","scope":8619,"src":"9836:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8413,"name":"uint256","nodeType":"ElementaryTypeName","src":"9836:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8416,"mutability":"mutable","name":"numShares","nameLocation":"9874:9:26","nodeType":"VariableDeclaration","scope":8619,"src":"9866:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8415,"name":"uint256","nodeType":"ElementaryTypeName","src":"9866:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9826:63:26"},"returnParameters":{"id":8422,"nodeType":"ParameterList","parameters":[],"src":"9924:0:26"},"scope":9461,"src":"9807:2594:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8651,"nodeType":"Block","src":"12769:230:26","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":8630,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"12819:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12823:6:26","memberName":"sender","nodeType":"MemberAccess","src":"12819:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":8634,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"12839:4:26","typeDescriptions":{"typeIdentifier":"t_contract$_LMSRPredictionMarket_$9461","typeString":"contract LMSRPredictionMarket"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LMSRPredictionMarket_$9461","typeString":"contract LMSRPredictionMarket"}],"id":8633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12831:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8632,"name":"address","nodeType":"ElementaryTypeName","src":"12831:7:26","typeDescriptions":{}}},"id":8635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12831:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8636,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8622,"src":"12846:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8628,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7893,"src":"12800:5:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2508","typeString":"contract IERC20"}},"id":8629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12806:12:26","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2507,"src":"12800:18:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":8637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12800:53:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c2066756e64207472616e73666572206661696c6564","id":8638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12867:30:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_852355895853edb69d4eb2b523e4990b006983cbd01551688e129528d6928858","typeString":"literal_string \"Initial fund transfer failed\""},"value":"Initial fund transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_852355895853edb69d4eb2b523e4990b006983cbd01551688e129528d6928858","typeString":"literal_string \"Initial fund transfer failed\""}],"id":8627,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"12779:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12779:128:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8640,"nodeType":"ExpressionStatement","src":"12779:128:26"},{"expression":{"id":8643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8641,"name":"marketMakerFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7879,"src":"12917:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8642,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8622,"src":"12937:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12917:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8644,"nodeType":"ExpressionStatement","src":"12917:26:26"},{"eventCall":{"arguments":[{"expression":{"id":8646,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"12973:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12977:6:26","memberName":"sender","nodeType":"MemberAccess","src":"12973:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8648,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8622,"src":"12985:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8645,"name":"FundsDeposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7972,"src":"12958:14:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12958:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8650,"nodeType":"EmitStatement","src":"12953:39:26"}]},"documentation":{"id":8620,"nodeType":"StructuredDocumentation","src":"12407:293:26","text":" @notice Deposits additional funds into the market maker.\n @param amount The amount of funds to deposit (in the ERC20 token's smallest unit).\n @dev Can only be called by the owner. Updates the market maker's available funds.\n Emits a {FundsDeposited} event."},"functionSelector":"89ff7069","id":8652,"implemented":true,"kind":"function","modifiers":[{"id":8625,"kind":"modifierInvocation","modifierName":{"id":8624,"name":"onlyOwner","nameLocations":["12759:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"12759:9:26"},"nodeType":"ModifierInvocation","src":"12759:9:26"}],"name":"depositInitialFunds","nameLocation":"12714:19:26","nodeType":"FunctionDefinition","parameters":{"id":8623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8622,"mutability":"mutable","name":"amount","nameLocation":"12742:6:26","nodeType":"VariableDeclaration","scope":8652,"src":"12734:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8621,"name":"uint256","nodeType":"ElementaryTypeName","src":"12734:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12733:16:26"},"returnParameters":{"id":8626,"nodeType":"ParameterList","parameters":[],"src":"12769:0:26"},"scope":9461,"src":"12705:294:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8671,"nodeType":"Block","src":"13209:139:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8657,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"13227:5:26","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13233:9:26","memberName":"timestamp","nodeType":"MemberAccess","src":"13227:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":8659,"name":"marketEndTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7866,"src":"13246:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13227:32:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d61726b6574206e6f74206f76657220796574","id":8661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13261:21:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_73308172bec4f5ccc788fde2c7386bc97acb9e12d48bb73d61fb20465f1c65bb","typeString":"literal_string \"Market not over yet\""},"value":"Market not over yet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_73308172bec4f5ccc788fde2c7386bc97acb9e12d48bb73d61fb20465f1c65bb","typeString":"literal_string \"Market not over yet\""}],"id":8656,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"13219:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13219:64:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8663,"nodeType":"ExpressionStatement","src":"13219:64:26"},{"expression":{"id":8666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8664,"name":"marketClosed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7868,"src":"13293:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13308:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"13293:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8667,"nodeType":"ExpressionStatement","src":"13293:19:26"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":8668,"name":"MarketClosed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7950,"src":"13327:12:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13327:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8670,"nodeType":"EmitStatement","src":"13322:19:26"}]},"documentation":{"id":8653,"nodeType":"StructuredDocumentation","src":"13005:169:26","text":" @notice Closes the market when the end time is reached.\n @dev Can only be called after the market end time.\n Emits a {MarketClosed} event."},"functionSelector":"c511ed5e","id":8672,"implemented":true,"kind":"function","modifiers":[],"name":"closeMarket","nameLocation":"13188:11:26","nodeType":"FunctionDefinition","parameters":{"id":8654,"nodeType":"ParameterList","parameters":[],"src":"13199:2:26"},"returnParameters":{"id":8655,"nodeType":"ParameterList","parameters":[],"src":"13209:0:26"},"scope":9461,"src":"13179:169:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8717,"nodeType":"Block","src":"13667:364:26","statements":[{"expression":{"arguments":[{"id":8681,"name":"marketClosed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7868,"src":"13685:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d61726b6574207374696c6c206f70656e","id":8682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13699:19:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_f2d6c81b80f93b7d47c9f1d94ff6ae03dce0016a4fa86fbfe9cdd167fe1792a8","typeString":"literal_string \"Market still open\""},"value":"Market still open"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f2d6c81b80f93b7d47c9f1d94ff6ae03dce0016a4fa86fbfe9cdd167fe1792a8","typeString":"literal_string \"Market still open\""}],"id":8680,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"13677:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13677:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8684,"nodeType":"ExpressionStatement","src":"13677:42:26"},{"expression":{"arguments":[{"id":8687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13737:14:26","subExpression":{"id":8686,"name":"marketSettled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7870,"src":"13738:13:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d61726b657420616c726561647920736574746c6564","id":8688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13753:24:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_41ad38aedf03f2c3e116c2b9b7bb90bc3aecff7eb7f9e2d2455029428b76c088","typeString":"literal_string \"Market already settled\""},"value":"Market already settled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_41ad38aedf03f2c3e116c2b9b7bb90bc3aecff7eb7f9e2d2455029428b76c088","typeString":"literal_string \"Market already settled\""}],"id":8685,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"13729:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13729:49:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8690,"nodeType":"ExpressionStatement","src":"13729:49:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8692,"name":"_winningOutcome","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8675,"src":"13796:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":8693,"name":"outcomes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7864,"src":"13814:8:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Outcome_$7860_storage_$dyn_storage","typeString":"struct LMSRPredictionMarket.Outcome storage ref[] storage ref"}},"id":8694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13823:6:26","memberName":"length","nodeType":"MemberAccess","src":"13814:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13796:33:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206f7574636f6d65","id":8696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13831:17:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_030213450aebdb0dfeba67f2b8c40b0e30e9d264ed3ebfc59f419b62872eb850","typeString":"literal_string \"Invalid outcome\""},"value":"Invalid outcome"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_030213450aebdb0dfeba67f2b8c40b0e30e9d264ed3ebfc59f419b62872eb850","typeString":"literal_string \"Invalid outcome\""}],"id":8691,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"13788:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13788:61:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8698,"nodeType":"ExpressionStatement","src":"13788:61:26"},{"expression":{"arguments":[{"id":8701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13867:14:26","subExpression":{"id":8700,"name":"marketSettled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7870,"src":"13868:13:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d61726b657420616c726561647920736574746c6564","id":8702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13883:24:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_41ad38aedf03f2c3e116c2b9b7bb90bc3aecff7eb7f9e2d2455029428b76c088","typeString":"literal_string \"Market already settled\""},"value":"Market already settled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_41ad38aedf03f2c3e116c2b9b7bb90bc3aecff7eb7f9e2d2455029428b76c088","typeString":"literal_string \"Market already settled\""}],"id":8699,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"13859:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13859:49:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8704,"nodeType":"ExpressionStatement","src":"13859:49:26"},{"expression":{"id":8707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8705,"name":"winningOutcome","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7872,"src":"13919:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8706,"name":"_winningOutcome","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8675,"src":"13936:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13919:32:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8708,"nodeType":"ExpressionStatement","src":"13919:32:26"},{"expression":{"id":8711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8709,"name":"marketSettled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7870,"src":"13961:13:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13977:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"13961:20:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8712,"nodeType":"ExpressionStatement","src":"13961:20:26"},{"eventCall":{"arguments":[{"id":8714,"name":"_winningOutcome","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8675,"src":"14008:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8713,"name":"OutcomeSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7954,"src":"13997:10:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":8715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13997:27:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8716,"nodeType":"EmitStatement","src":"13992:32:26"}]},"documentation":{"id":8673,"nodeType":"StructuredDocumentation","src":"13354:244:26","text":" @notice Sets the winning outcome for the market.\n @param _winningOutcome The index of the winning outcome.\n @dev Can only be called by the oracle and after the market is closed.\n Emits an {OutcomeSet} event."},"functionSelector":"416e517e","id":8718,"implemented":true,"kind":"function","modifiers":[{"id":8678,"kind":"modifierInvocation","modifierName":{"id":8677,"name":"onlyOracle","nameLocations":["13656:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":8226,"src":"13656:10:26"},"nodeType":"ModifierInvocation","src":"13656:10:26"}],"name":"setOutcome","nameLocation":"13613:10:26","nodeType":"FunctionDefinition","parameters":{"id":8676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8675,"mutability":"mutable","name":"_winningOutcome","nameLocation":"13632:15:26","nodeType":"VariableDeclaration","scope":8718,"src":"13624:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8674,"name":"uint256","nodeType":"ElementaryTypeName","src":"13624:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13623:25:26"},"returnParameters":{"id":8679,"nodeType":"ParameterList","parameters":[],"src":"13667:0:26"},"scope":9461,"src":"13604:427:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8813,"nodeType":"Block","src":"14301:1553:26","statements":[{"expression":{"arguments":[{"id":8727,"name":"marketSettled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7870,"src":"14319:13:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d61726b6574206e6f7420736574746c656420796574","id":8728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14334:24:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_faa992547ea2ba3076582bb5e3ebeaeef5a0e1c861d16a74c41cd714b333b566","typeString":"literal_string \"Market not settled yet\""},"value":"Market not settled yet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_faa992547ea2ba3076582bb5e3ebeaeef5a0e1c861d16a74c41cd714b333b566","typeString":"literal_string \"Market not settled yet\""}],"id":8726,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"14311:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14311:48:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8730,"nodeType":"ExpressionStatement","src":"14311:48:26"},{"assignments":[8732],"declarations":[{"constant":false,"id":8732,"mutability":"mutable","name":"tokenId","nameLocation":"14452:7:26","nodeType":"VariableDeclaration","scope":8813,"src":"14444:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8731,"name":"uint256","nodeType":"ElementaryTypeName","src":"14444:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8738,"initialValue":{"arguments":[{"id":8735,"name":"marketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7895,"src":"14483:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8736,"name":"winningOutcome","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7872,"src":"14493:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8733,"name":"positions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7888,"src":"14462:9:26","typeDescriptions":{"typeIdentifier":"t_contract$_PredictionMarketPositions_$9897","typeString":"contract PredictionMarketPositions"}},"id":8734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14472:10:26","memberName":"getTokenId","nodeType":"MemberAccess","referencedDeclaration":9857,"src":"14462:20:26","typeDescriptions":{"typeIdentifier":"t_function_external_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure external returns (uint256)"}},"id":8737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:46:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14444:64:26"},{"assignments":[8740],"declarations":[{"constant":false,"id":8740,"mutability":"mutable","name":"userSharesAmount","nameLocation":"14591:16:26","nodeType":"VariableDeclaration","scope":8813,"src":"14583:24:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8739,"name":"uint256","nodeType":"ElementaryTypeName","src":"14583:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8747,"initialValue":{"arguments":[{"expression":{"id":8743,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"14630:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14634:6:26","memberName":"sender","nodeType":"MemberAccess","src":"14630:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8745,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8732,"src":"14642:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8741,"name":"positions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7888,"src":"14610:9:26","typeDescriptions":{"typeIdentifier":"t_contract$_PredictionMarketPositions_$9897","typeString":"contract PredictionMarketPositions"}},"id":8742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14620:9:26","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":783,"src":"14610:19:26","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view external returns (uint256)"}},"id":8746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14610:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14583:67:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8749,"name":"userSharesAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8740,"src":"14668:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14687:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14668:20:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2077696e6e696e677320746f20636c61696d","id":8752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14690:22:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_e49ff7cc4d2d28a71e4aa787e071cfc18de9d83194011ec1d1fb6d8d32950e06","typeString":"literal_string \"No winnings to claim\""},"value":"No winnings to claim"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e49ff7cc4d2d28a71e4aa787e071cfc18de9d83194011ec1d1fb6d8d32950e06","typeString":"literal_string \"No winnings to claim\""}],"id":8748,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"14660:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14660:53:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8754,"nodeType":"ExpressionStatement","src":"14660:53:26"},{"assignments":[8756],"declarations":[{"constant":false,"id":8756,"mutability":"mutable","name":"totalWinningShares","nameLocation":"14785:18:26","nodeType":"VariableDeclaration","scope":8813,"src":"14777:26:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8755,"name":"uint256","nodeType":"ElementaryTypeName","src":"14777:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8761,"initialValue":{"expression":{"baseExpression":{"id":8757,"name":"outcomes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7864,"src":"14806:8:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Outcome_$7860_storage_$dyn_storage","typeString":"struct LMSRPredictionMarket.Outcome storage ref[] storage ref"}},"id":8759,"indexExpression":{"id":8758,"name":"winningOutcome","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7872,"src":"14815:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14806:24:26","typeDescriptions":{"typeIdentifier":"t_struct$_Outcome_$7860_storage","typeString":"struct LMSRPredictionMarket.Outcome storage ref"}},"id":8760,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14831:11:26","memberName":"totalShares","nodeType":"MemberAccess","referencedDeclaration":7859,"src":"14806:36:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14777:65:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8763,"name":"totalWinningShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8756,"src":"14873:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":8764,"name":"userSharesAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8740,"src":"14895:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14873:38:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420736861726520616d6f756e7473","id":8766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14925:23:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_0a538d6bce0a8f1a2131ee6498591d13248c15a92ebb8e228f72052a52f216ee","typeString":"literal_string \"Invalid share amounts\""},"value":"Invalid share amounts"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0a538d6bce0a8f1a2131ee6498591d13248c15a92ebb8e228f72052a52f216ee","typeString":"literal_string \"Invalid share amounts\""}],"id":8762,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"14852:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14852:106:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8768,"nodeType":"ExpressionStatement","src":"14852:106:26"},{"assignments":[8770],"declarations":[{"constant":false,"id":8770,"mutability":"mutable","name":"payout","nameLocation":"15232:6:26","nodeType":"VariableDeclaration","scope":8813,"src":"15224:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8769,"name":"uint256","nodeType":"ElementaryTypeName","src":"15224:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8775,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8771,"name":"userSharesAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8740,"src":"15242:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8772,"name":"payoutPerShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7903,"src":"15261:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15242:33:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8774,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15241:35:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15224:52:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8777,"name":"marketMakerFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7879,"src":"15377:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":8778,"name":"payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8770,"src":"15397:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15377:26:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74206d61726b6574206d616b65722066756e6473","id":8780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15405:33:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_79cc1c46bdab9dd0f3151006ea671b50259fd9ec4222a8d85a90cb7740578091","typeString":"literal_string \"Insufficient market maker funds\""},"value":"Insufficient market maker funds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_79cc1c46bdab9dd0f3151006ea671b50259fd9ec4222a8d85a90cb7740578091","typeString":"literal_string \"Insufficient market maker funds\""}],"id":8776,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"15369:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15369:70:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8782,"nodeType":"ExpressionStatement","src":"15369:70:26"},{"expression":{"id":8785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8783,"name":"marketMakerFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7879,"src":"15487:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":8784,"name":"payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8770,"src":"15507:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15487:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8786,"nodeType":"ExpressionStatement","src":"15487:26:26"},{"expression":{"arguments":[{"expression":{"id":8790,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"15606:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15610:6:26","memberName":"sender","nodeType":"MemberAccess","src":"15606:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8792,"name":"marketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7895,"src":"15618:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8793,"name":"winningOutcome","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7872,"src":"15628:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8794,"name":"userSharesAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8740,"src":"15644:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8787,"name":"positions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7888,"src":"15591:9:26","typeDescriptions":{"typeIdentifier":"t_contract$_PredictionMarketPositions_$9897","typeString":"contract PredictionMarketPositions"}},"id":8789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15601:4:26","memberName":"burn","nodeType":"MemberAccess","referencedDeclaration":9819,"src":"15591:14:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256) external"}},"id":8795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15591:70:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8796,"nodeType":"ExpressionStatement","src":"15591:70:26"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":8800,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"15755:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15759:6:26","memberName":"sender","nodeType":"MemberAccess","src":"15755:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8802,"name":"payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8770,"src":"15767:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8798,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7893,"src":"15740:5:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2508","typeString":"contract IERC20"}},"id":8799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15746:8:26","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2475,"src":"15740:14:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":8803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15740:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e207061796f7574206661696c6564","id":8804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15776:21:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_2835161e3b5a0c38477c8da1537e7e54dc665df74c546dbb177f5f87feb6a3b6","typeString":"literal_string \"Token payout failed\""},"value":"Token payout failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2835161e3b5a0c38477c8da1537e7e54dc665df74c546dbb177f5f87feb6a3b6","typeString":"literal_string \"Token payout failed\""}],"id":8797,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"15732:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15732:66:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8806,"nodeType":"ExpressionStatement","src":"15732:66:26"},{"eventCall":{"arguments":[{"expression":{"id":8808,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"15828:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15832:6:26","memberName":"sender","nodeType":"MemberAccess","src":"15828:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8810,"name":"payout","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8770,"src":"15840:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8807,"name":"PayoutClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7960,"src":"15814:13:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15814:33:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8812,"nodeType":"EmitStatement","src":"15809:38:26"}]},"documentation":{"id":8719,"nodeType":"StructuredDocumentation","src":"14037:202:26","text":" @notice Claims the payout for a user holding shares of the winning outcome.\n @dev Transfers tokens to the user based on their shareholding.\n Emits a {PayoutClaimed} event."},"functionSelector":"e88499a9","id":8814,"implemented":true,"kind":"function","modifiers":[{"id":8722,"kind":"modifierInvocation","modifierName":{"id":8721,"name":"nonReentrant","nameLocations":["14274:12:26"],"nodeType":"IdentifierPath","referencedDeclaration":3676,"src":"14274:12:26"},"nodeType":"ModifierInvocation","src":"14274:12:26"},{"id":8724,"kind":"modifierInvocation","modifierName":{"id":8723,"name":"whenNotPaused","nameLocations":["14287:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":3568,"src":"14287:13:26"},"nodeType":"ModifierInvocation","src":"14287:13:26"}],"name":"claimPayout","nameLocation":"14253:11:26","nodeType":"FunctionDefinition","parameters":{"id":8720,"nodeType":"ParameterList","parameters":[],"src":"14264:2:26"},"returnParameters":{"id":8725,"nodeType":"ParameterList","parameters":[],"src":"14301:0:26"},"scope":9461,"src":"14244:1610:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8848,"nodeType":"Block","src":"16062:343:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8819,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"16080:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16084:6:26","memberName":"sender","nodeType":"MemberAccess","src":"16080:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8821,"name":"feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"16094:12:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16080:26:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a6564","id":8823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16108:16:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""},"value":"Not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""}],"id":8818,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"16072:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16072:53:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8825,"nodeType":"ExpressionStatement","src":"16072:53:26"},{"assignments":[8827],"declarations":[{"constant":false,"id":8827,"mutability":"mutable","name":"amount","nameLocation":"16143:6:26","nodeType":"VariableDeclaration","scope":8848,"src":"16135:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8826,"name":"uint256","nodeType":"ElementaryTypeName","src":"16135:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8829,"initialValue":{"id":8828,"name":"collectedFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7885,"src":"16152:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16135:30:26"},{"expression":{"id":8832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8830,"name":"collectedFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7885,"src":"16175:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":8831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16191:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16175:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8833,"nodeType":"ExpressionStatement","src":"16175:17:26"},{"expression":{"arguments":[{"arguments":[{"id":8837,"name":"feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"16301:12:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8838,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8827,"src":"16315:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8835,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7893,"src":"16286:5:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2508","typeString":"contract IERC20"}},"id":8836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16292:8:26","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2475,"src":"16286:14:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":8839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16286:36:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466565207769746864726177616c206661696c6564","id":8840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16324:23:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_0757765f7f0cc8a58d361baae65deb346db999b8a84b84d722988aeb58af6a6b","typeString":"literal_string \"Fee withdrawal failed\""},"value":"Fee withdrawal failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0757765f7f0cc8a58d361baae65deb346db999b8a84b84d722988aeb58af6a6b","typeString":"literal_string \"Fee withdrawal failed\""}],"id":8834,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"16278:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16278:70:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8842,"nodeType":"ExpressionStatement","src":"16278:70:26"},{"eventCall":{"arguments":[{"id":8844,"name":"feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"16377:12:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8845,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8827,"src":"16391:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8843,"name":"FeesWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7966,"src":"16363:13:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16363:35:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8847,"nodeType":"EmitStatement","src":"16358:40:26"}]},"documentation":{"id":8815,"nodeType":"StructuredDocumentation","src":"15860:164:26","text":" @notice Withdraws collected fees to the fee recipient.\n @dev Can only be called by the fee recipient.\n Emits a {FeesWithdrawn} event."},"functionSelector":"476343ee","id":8849,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawFees","nameLocation":"16038:12:26","nodeType":"FunctionDefinition","parameters":{"id":8816,"nodeType":"ParameterList","parameters":[],"src":"16050:2:26"},"returnParameters":{"id":8817,"nodeType":"ParameterList","parameters":[],"src":"16062:0:26"},"scope":9461,"src":"16029:376:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8954,"nodeType":"Block","src":"16797:936:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8860,"name":"outcomeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8852,"src":"16815:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":8861,"name":"outcomes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7864,"src":"16830:8:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Outcome_$7860_storage_$dyn_storage","typeString":"struct LMSRPredictionMarket.Outcome storage ref[] storage ref"}},"id":8862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16839:6:26","memberName":"length","nodeType":"MemberAccess","src":"16830:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16815:30:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206f7574636f6d6520696e646578","id":8864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16847:23:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_b7aa9f534c53d62575122bb7a2fdbcaa0bbf3bea2c3cbbf26522e7400a7a38a4","typeString":"literal_string \"Invalid outcome index\""},"value":"Invalid outcome index"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b7aa9f534c53d62575122bb7a2fdbcaa0bbf3bea2c3cbbf26522e7400a7a38a4","typeString":"literal_string \"Invalid outcome index\""}],"id":8859,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"16807:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16807:64:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8866,"nodeType":"ExpressionStatement","src":"16807:64:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8868,"name":"numShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8854,"src":"16889:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16901:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16889:13:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e756d626572206f6620736861726573206d7573742062652067726561746572207468616e207a65726f","id":8871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16904:44:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_19e6d94b77f53c0a8796497f9385e9e2b5994fa72e52c72396e8f70d3f0655a1","typeString":"literal_string \"Number of shares must be greater than zero\""},"value":"Number of shares must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_19e6d94b77f53c0a8796497f9385e9e2b5994fa72e52c72396e8f70d3f0655a1","typeString":"literal_string \"Number of shares must be greater than zero\""}],"id":8867,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"16881:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16881:68:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8873,"nodeType":"ExpressionStatement","src":"16881:68:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8875,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7890,"src":"16967:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16971:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16967:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c697175696469747920706172616d657465722062206d7573742062652067726561746572207468616e207a65726f","id":8878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16974:49:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ed972adcf57b5c0616261620bce33e84d9cb13280c74b7cbce52eccedc80bc0","typeString":"literal_string \"Liquidity parameter b must be greater than zero\""},"value":"Liquidity parameter b must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ed972adcf57b5c0616261620bce33e84d9cb13280c74b7cbce52eccedc80bc0","typeString":"literal_string \"Liquidity parameter b must be greater than zero\""}],"id":8874,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"16959:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16959:65:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8880,"nodeType":"ExpressionStatement","src":"16959:65:26"},{"assignments":[8885],"declarations":[{"constant":false,"id":8885,"mutability":"mutable","name":"qBefore","nameLocation":"17051:7:26","nodeType":"VariableDeclaration","scope":8954,"src":"17034:24:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8883,"name":"uint256","nodeType":"ElementaryTypeName","src":"17034:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8884,"nodeType":"ArrayTypeName","src":"17034:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":8888,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":8886,"name":"getQuantities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9177,"src":"17061:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256[] memory)"}},"id":8887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17061:15:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"17034:42:26"},{"assignments":[8890],"declarations":[{"constant":false,"id":8890,"mutability":"mutable","name":"costBefore","nameLocation":"17093:10:26","nodeType":"VariableDeclaration","scope":8954,"src":"17086:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":8889,"name":"int128","nodeType":"ElementaryTypeName","src":"17086:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":8894,"initialValue":{"arguments":[{"id":8892,"name":"qBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8885,"src":"17120:7:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":8891,"name":"calculateCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9252,"src":"17106:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_int128_$","typeString":"function (uint256[] memory) view returns (int128)"}},"id":8893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17106:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"17086:42:26"},{"expression":{"id":8899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8895,"name":"qBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8885,"src":"17172:7:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":8897,"indexExpression":{"id":8896,"name":"outcomeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8852,"src":"17180:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17172:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8898,"name":"numShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8854,"src":"17197:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17172:34:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8900,"nodeType":"ExpressionStatement","src":"17172:34:26"},{"assignments":[8902],"declarations":[{"constant":false,"id":8902,"mutability":"mutable","name":"costAfter","nameLocation":"17223:9:26","nodeType":"VariableDeclaration","scope":8954,"src":"17216:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":8901,"name":"int128","nodeType":"ElementaryTypeName","src":"17216:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":8906,"initialValue":{"arguments":[{"id":8904,"name":"qBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8885,"src":"17249:7:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":8903,"name":"calculateCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9252,"src":"17235:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_int128_$","typeString":"function (uint256[] memory) view returns (int128)"}},"id":8905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17235:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"17216:41:26"},{"assignments":[8908],"declarations":[{"constant":false,"id":8908,"mutability":"mutable","name":"costDifference","nameLocation":"17275:14:26","nodeType":"VariableDeclaration","scope":8954,"src":"17268:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":8907,"name":"int128","nodeType":"ElementaryTypeName","src":"17268:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":8914,"initialValue":{"arguments":[{"id":8911,"name":"costAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8902,"src":"17310:9:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},{"id":8912,"name":"costBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8890,"src":"17321:10:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"},{"typeIdentifier":"t_int128","typeString":"int128"}],"expression":{"id":8909,"name":"ABDKMath64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12797,"src":"17292:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ABDKMath64x64_$12797_$","typeString":"type(library ABDKMath64x64)"}},"id":8910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17306:3:26","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":10146,"src":"17292:17:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int128_$_t_int128_$returns$_t_int128_$","typeString":"function (int128,int128) pure returns (int128)"}},"id":8913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17292:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"17268:64:26"},{"assignments":[8916],"declarations":[{"constant":false,"id":8916,"mutability":"mutable","name":"scaledCostDifference","nameLocation":"17349:20:26","nodeType":"VariableDeclaration","scope":8954,"src":"17342:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":8915,"name":"int128","nodeType":"ElementaryTypeName","src":"17342:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":8927,"initialValue":{"arguments":[{"id":8919,"name":"costDifference","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8908,"src":"17403:14:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17454:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":8923,"name":"SHARES_DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"17460:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17454:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8920,"name":"ABDKMath64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12797,"src":"17431:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ABDKMath64x64_$12797_$","typeString":"type(library ABDKMath64x64)"}},"id":8921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17445:8:26","memberName":"fromUInt","nodeType":"MemberAccess","referencedDeclaration":10000,"src":"17431:22:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int128_$","typeString":"function (uint256) pure returns (int128)"}},"id":8925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17431:45:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"},{"typeIdentifier":"t_int128","typeString":"int128"}],"expression":{"id":8917,"name":"ABDKMath64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12797,"src":"17372:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ABDKMath64x64_$12797_$","typeString":"type(library ABDKMath64x64)"}},"id":8918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17386:3:26","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":10184,"src":"17372:17:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int128_$_t_int128_$returns$_t_int128_$","typeString":"function (int128,int128) pure returns (int128)"}},"id":8926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17372:114:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"17342:144:26"},{"assignments":[8929],"declarations":[{"constant":false,"id":8929,"mutability":"mutable","name":"cost","nameLocation":"17504:4:26","nodeType":"VariableDeclaration","scope":8954,"src":"17496:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8928,"name":"uint256","nodeType":"ElementaryTypeName","src":"17496:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8936,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8932,"name":"scaledCostDifference","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8916,"src":"17532:20:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"expression":{"id":8930,"name":"ABDKMath64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12797,"src":"17511:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ABDKMath64x64_$12797_$","typeString":"type(library ABDKMath64x64)"}},"id":8931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17525:6:26","memberName":"toUInt","nodeType":"MemberAccess","referencedDeclaration":10026,"src":"17511:20:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int128_$returns$_t_uint64_$","typeString":"function (int128) pure returns (uint64)"}},"id":8933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17511:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8934,"name":"unitScalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7905,"src":"17568:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17511:74:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17496:89:26"},{"assignments":[8938],"declarations":[{"constant":false,"id":8938,"mutability":"mutable","name":"feeAmount","nameLocation":"17604:9:26","nodeType":"VariableDeclaration","scope":8954,"src":"17596:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8937,"name":"uint256","nodeType":"ElementaryTypeName","src":"17596:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8945,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8939,"name":"cost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8929,"src":"17617:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8940,"name":"feePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7897,"src":"17624:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17617:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8942,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17616:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":8943,"name":"PERCENT_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"17638:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17616:41:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17596:61:26"},{"assignments":[8947],"declarations":[{"constant":false,"id":8947,"mutability":"mutable","name":"netCost","nameLocation":"17675:7:26","nodeType":"VariableDeclaration","scope":8954,"src":"17667:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8946,"name":"uint256","nodeType":"ElementaryTypeName","src":"17667:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8951,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8948,"name":"cost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8929,"src":"17685:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8949,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8938,"src":"17692:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17685:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17667:34:26"},{"expression":{"id":8952,"name":"netCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8947,"src":"17719:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8858,"id":8953,"nodeType":"Return","src":"17712:14:26"}]},"documentation":{"id":8850,"nodeType":"StructuredDocumentation","src":"16411:265:26","text":" @notice Estimates the cost of purchasing a given number of shares.\n @param outcomeIndex The index of the selected outcome.\n @param numShares The number of shares to purchase.\n @return The estimated cost of purchasing the shares."},"functionSelector":"510f5116","id":8955,"implemented":true,"kind":"function","modifiers":[],"name":"estimateCost","nameLocation":"16691:12:26","nodeType":"FunctionDefinition","parameters":{"id":8855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8852,"mutability":"mutable","name":"outcomeIndex","nameLocation":"16721:12:26","nodeType":"VariableDeclaration","scope":8955,"src":"16713:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8851,"name":"uint256","nodeType":"ElementaryTypeName","src":"16713:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8854,"mutability":"mutable","name":"numShares","nameLocation":"16751:9:26","nodeType":"VariableDeclaration","scope":8955,"src":"16743:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8853,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16703:63:26"},"returnParameters":{"id":8858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8955,"src":"16788:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8856,"name":"uint256","nodeType":"ElementaryTypeName","src":"16788:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16787:9:26"},"scope":9461,"src":"16682:1051:26","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":9060,"nodeType":"Block","src":"18125:951:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8966,"name":"outcomeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8958,"src":"18143:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":8967,"name":"outcomes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7864,"src":"18158:8:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Outcome_$7860_storage_$dyn_storage","typeString":"struct LMSRPredictionMarket.Outcome storage ref[] storage ref"}},"id":8968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18167:6:26","memberName":"length","nodeType":"MemberAccess","src":"18158:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18143:30:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206f7574636f6d6520696e646578","id":8970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18175:23:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_b7aa9f534c53d62575122bb7a2fdbcaa0bbf3bea2c3cbbf26522e7400a7a38a4","typeString":"literal_string \"Invalid outcome index\""},"value":"Invalid outcome index"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b7aa9f534c53d62575122bb7a2fdbcaa0bbf3bea2c3cbbf26522e7400a7a38a4","typeString":"literal_string \"Invalid outcome index\""}],"id":8965,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"18135:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18135:64:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8972,"nodeType":"ExpressionStatement","src":"18135:64:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8974,"name":"numShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8960,"src":"18217:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18229:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18217:13:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e756d626572206f6620736861726573206d7573742062652067726561746572207468616e207a65726f","id":8977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18232:44:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_19e6d94b77f53c0a8796497f9385e9e2b5994fa72e52c72396e8f70d3f0655a1","typeString":"literal_string \"Number of shares must be greater than zero\""},"value":"Number of shares must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_19e6d94b77f53c0a8796497f9385e9e2b5994fa72e52c72396e8f70d3f0655a1","typeString":"literal_string \"Number of shares must be greater than zero\""}],"id":8973,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"18209:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18209:68:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8979,"nodeType":"ExpressionStatement","src":"18209:68:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8981,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7890,"src":"18295:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18299:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18295:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c697175696469747920706172616d657465722062206d7573742062652067726561746572207468616e207a65726f","id":8984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18302:49:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ed972adcf57b5c0616261620bce33e84d9cb13280c74b7cbce52eccedc80bc0","typeString":"literal_string \"Liquidity parameter b must be greater than zero\""},"value":"Liquidity parameter b must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ed972adcf57b5c0616261620bce33e84d9cb13280c74b7cbce52eccedc80bc0","typeString":"literal_string \"Liquidity parameter b must be greater than zero\""}],"id":8980,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"18287:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18287:65:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8986,"nodeType":"ExpressionStatement","src":"18287:65:26"},{"assignments":[8991],"declarations":[{"constant":false,"id":8991,"mutability":"mutable","name":"qBefore","nameLocation":"18379:7:26","nodeType":"VariableDeclaration","scope":9060,"src":"18362:24:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":8989,"name":"uint256","nodeType":"ElementaryTypeName","src":"18362:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8990,"nodeType":"ArrayTypeName","src":"18362:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":8994,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":8992,"name":"getQuantities","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9177,"src":"18389:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256[] memory)"}},"id":8993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18389:15:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"18362:42:26"},{"assignments":[8996],"declarations":[{"constant":false,"id":8996,"mutability":"mutable","name":"costBefore","nameLocation":"18421:10:26","nodeType":"VariableDeclaration","scope":9060,"src":"18414:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":8995,"name":"int128","nodeType":"ElementaryTypeName","src":"18414:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":9000,"initialValue":{"arguments":[{"id":8998,"name":"qBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8991,"src":"18448:7:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":8997,"name":"calculateCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9252,"src":"18434:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_int128_$","typeString":"function (uint256[] memory) view returns (int128)"}},"id":8999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18434:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"18414:42:26"},{"expression":{"id":9005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9001,"name":"qBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8991,"src":"18500:7:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":9003,"indexExpression":{"id":9002,"name":"outcomeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8958,"src":"18508:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18500:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":9004,"name":"numShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8960,"src":"18525:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18500:34:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9006,"nodeType":"ExpressionStatement","src":"18500:34:26"},{"assignments":[9008],"declarations":[{"constant":false,"id":9008,"mutability":"mutable","name":"costAfter","nameLocation":"18551:9:26","nodeType":"VariableDeclaration","scope":9060,"src":"18544:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":9007,"name":"int128","nodeType":"ElementaryTypeName","src":"18544:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":9012,"initialValue":{"arguments":[{"id":9010,"name":"qBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8991,"src":"18577:7:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":9009,"name":"calculateCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9252,"src":"18563:13:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_int128_$","typeString":"function (uint256[] memory) view returns (int128)"}},"id":9011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18563:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"18544:41:26"},{"assignments":[9014],"declarations":[{"constant":false,"id":9014,"mutability":"mutable","name":"costDifference","nameLocation":"18603:14:26","nodeType":"VariableDeclaration","scope":9060,"src":"18596:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":9013,"name":"int128","nodeType":"ElementaryTypeName","src":"18596:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":9020,"initialValue":{"arguments":[{"id":9017,"name":"costBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8996,"src":"18638:10:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},{"id":9018,"name":"costAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9008,"src":"18650:9:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"},{"typeIdentifier":"t_int128","typeString":"int128"}],"expression":{"id":9015,"name":"ABDKMath64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12797,"src":"18620:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ABDKMath64x64_$12797_$","typeString":"type(library ABDKMath64x64)"}},"id":9016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18634:3:26","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":10146,"src":"18620:17:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int128_$_t_int128_$returns$_t_int128_$","typeString":"function (int128,int128) pure returns (int128)"}},"id":9019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18620:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"18596:64:26"},{"assignments":[9022],"declarations":[{"constant":false,"id":9022,"mutability":"mutable","name":"scaledCostDifference","nameLocation":"18677:20:26","nodeType":"VariableDeclaration","scope":9060,"src":"18670:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":9021,"name":"int128","nodeType":"ElementaryTypeName","src":"18670:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":9033,"initialValue":{"arguments":[{"id":9025,"name":"costDifference","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9014,"src":"18731:14:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":9028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18782:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":9029,"name":"SHARES_DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"18788:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18782:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9026,"name":"ABDKMath64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12797,"src":"18759:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ABDKMath64x64_$12797_$","typeString":"type(library ABDKMath64x64)"}},"id":9027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18773:8:26","memberName":"fromUInt","nodeType":"MemberAccess","referencedDeclaration":10000,"src":"18759:22:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int128_$","typeString":"function (uint256) pure returns (int128)"}},"id":9031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18759:45:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"},{"typeIdentifier":"t_int128","typeString":"int128"}],"expression":{"id":9023,"name":"ABDKMath64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12797,"src":"18700:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ABDKMath64x64_$12797_$","typeString":"type(library ABDKMath64x64)"}},"id":9024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18714:3:26","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":10184,"src":"18700:17:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int128_$_t_int128_$returns$_t_int128_$","typeString":"function (int128,int128) pure returns (int128)"}},"id":9032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18700:114:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"18670:144:26"},{"assignments":[9035],"declarations":[{"constant":false,"id":9035,"mutability":"mutable","name":"payment","nameLocation":"18832:7:26","nodeType":"VariableDeclaration","scope":9060,"src":"18824:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9034,"name":"uint256","nodeType":"ElementaryTypeName","src":"18824:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9042,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9038,"name":"scaledCostDifference","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"18863:20:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"expression":{"id":9036,"name":"ABDKMath64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12797,"src":"18842:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ABDKMath64x64_$12797_$","typeString":"type(library ABDKMath64x64)"}},"id":9037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18856:6:26","memberName":"toUInt","nodeType":"MemberAccess","referencedDeclaration":10026,"src":"18842:20:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int128_$returns$_t_uint64_$","typeString":"function (int128) pure returns (uint64)"}},"id":9039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18842:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":9040,"name":"unitScalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7905,"src":"18899:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18842:74:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18824:92:26"},{"assignments":[9044],"declarations":[{"constant":false,"id":9044,"mutability":"mutable","name":"feeAmount","nameLocation":"18935:9:26","nodeType":"VariableDeclaration","scope":9060,"src":"18927:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9043,"name":"uint256","nodeType":"ElementaryTypeName","src":"18927:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9051,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9045,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9035,"src":"18948:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":9046,"name":"feePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7897,"src":"18958:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18948:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9048,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18947:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":9049,"name":"PERCENT_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7913,"src":"18972:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18947:44:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18927:64:26"},{"assignments":[9053],"declarations":[{"constant":false,"id":9053,"mutability":"mutable","name":"netpayment","nameLocation":"19009:10:26","nodeType":"VariableDeclaration","scope":9060,"src":"19001:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9052,"name":"uint256","nodeType":"ElementaryTypeName","src":"19001:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9057,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9054,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9035,"src":"19022:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9055,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9044,"src":"19032:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19022:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19001:40:26"},{"expression":{"id":9058,"name":"netpayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9053,"src":"19059:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8964,"id":9059,"nodeType":"Return","src":"19052:17:26"}]},"documentation":{"id":8956,"nodeType":"StructuredDocumentation","src":"17739:263:26","text":" @notice Estimates the payment for selling a given number of shares.\n @param outcomeIndex The index of the selected outcome.\n @param numShares The number of shares to sell.\n @return The estimated payment for selling the shares."},"functionSelector":"53249a31","id":9061,"implemented":true,"kind":"function","modifiers":[],"name":"estimatePayment","nameLocation":"18016:15:26","nodeType":"FunctionDefinition","parameters":{"id":8961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8958,"mutability":"mutable","name":"outcomeIndex","nameLocation":"18049:12:26","nodeType":"VariableDeclaration","scope":9061,"src":"18041:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8957,"name":"uint256","nodeType":"ElementaryTypeName","src":"18041:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8960,"mutability":"mutable","name":"numShares","nameLocation":"18079:9:26","nodeType":"VariableDeclaration","scope":9061,"src":"18071:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8959,"name":"uint256","nodeType":"ElementaryTypeName","src":"18071:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18031:63:26"},"returnParameters":{"id":8964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9061,"src":"18116:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8962,"name":"uint256","nodeType":"ElementaryTypeName","src":"18116:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18115:9:26"},"scope":9461,"src":"18007:1069:26","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":9083,"nodeType":"Block","src":"19296:105:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9070,"name":"_newOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9064,"src":"19314:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":9073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19336:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19328:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9071,"name":"address","nodeType":"ElementaryTypeName","src":"19328:7:26","typeDescriptions":{}}},"id":9074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19328:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"19314:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206f7261636c652061646472657373","id":9076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19340:24:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3","typeString":"literal_string \"Invalid oracle address\""},"value":"Invalid oracle address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3","typeString":"literal_string \"Invalid oracle address\""}],"id":9069,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"19306:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19306:59:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9078,"nodeType":"ExpressionStatement","src":"19306:59:26"},{"expression":{"id":9081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9079,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7876,"src":"19375:6:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9080,"name":"_newOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9064,"src":"19384:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"19375:19:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9082,"nodeType":"ExpressionStatement","src":"19375:19:26"}]},"documentation":{"id":9062,"nodeType":"StructuredDocumentation","src":"19082:148:26","text":" @notice Updates the oracle address.\n @param _newOracle The new oracle address.\n @dev Can only be called by the owner."},"functionSelector":"1cb44dfc","id":9084,"implemented":true,"kind":"function","modifiers":[{"id":9067,"kind":"modifierInvocation","modifierName":{"id":9066,"name":"onlyOwner","nameLocations":["19286:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"19286:9:26"},"nodeType":"ModifierInvocation","src":"19286:9:26"}],"name":"updateOracle","nameLocation":"19244:12:26","nodeType":"FunctionDefinition","parameters":{"id":9065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9064,"mutability":"mutable","name":"_newOracle","nameLocation":"19265:10:26","nodeType":"VariableDeclaration","scope":9084,"src":"19257:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9063,"name":"address","nodeType":"ElementaryTypeName","src":"19257:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19256:20:26"},"returnParameters":{"id":9068,"nodeType":"ParameterList","parameters":[],"src":"19296:0:26"},"scope":9461,"src":"19235:166:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9112,"nodeType":"Block","src":"19968:264:26","statements":[{"expression":{"arguments":[{"id":9091,"name":"marketSettled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7870,"src":"19986:13:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d61726b6574206e6f7420736574746c656420796574","id":9092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20001:24:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_faa992547ea2ba3076582bb5e3ebeaeef5a0e1c861d16a74c41cd714b333b566","typeString":"literal_string \"Market not settled yet\""},"value":"Market not settled yet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_faa992547ea2ba3076582bb5e3ebeaeef5a0e1c861d16a74c41cd714b333b566","typeString":"literal_string \"Market not settled yet\""}],"id":9090,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"19978:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19978:48:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9094,"nodeType":"ExpressionStatement","src":"19978:48:26"},{"assignments":[9096],"declarations":[{"constant":false,"id":9096,"mutability":"mutable","name":"remainingFunds","nameLocation":"20044:14:26","nodeType":"VariableDeclaration","scope":9112,"src":"20036:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9095,"name":"uint256","nodeType":"ElementaryTypeName","src":"20036:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9098,"initialValue":{"id":9097,"name":"marketMakerFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7879,"src":"20061:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20036:41:26"},{"expression":{"id":9101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9099,"name":"marketMakerFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7879,"src":"20087:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":9100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20106:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20087:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9102,"nodeType":"ExpressionStatement","src":"20087:20:26"},{"expression":{"arguments":[{"arguments":[{"id":9106,"name":"feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7899,"src":"20153:12:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9107,"name":"remainingFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9096,"src":"20167:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9104,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7893,"src":"20138:5:26","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2508","typeString":"contract IERC20"}},"id":9105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20144:8:26","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2475,"src":"20138:14:26","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":9108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20138:44:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5769746864726177616c206661696c6564","id":9109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20196:19:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88","typeString":"literal_string \"Withdrawal failed\""},"value":"Withdrawal failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88","typeString":"literal_string \"Withdrawal failed\""}],"id":9103,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"20117:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20117:108:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9111,"nodeType":"ExpressionStatement","src":"20117:108:26"}]},"documentation":{"id":9085,"nodeType":"StructuredDocumentation","src":"19407:310:26","text":" @notice Withdraws any remaining funds from the market maker.\n @dev Can only be called by the owner and after the market is settled.\n Transfers all remaining funds in the market maker to the fee recipient.\n Emits no specific event; uses the token transfer to signal success."},"functionSelector":"ef86ce8e","id":9113,"implemented":true,"kind":"function","modifiers":[{"id":9088,"kind":"modifierInvocation","modifierName":{"id":9087,"name":"onlyOwner","nameLocations":["19958:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"19958:9:26"},"nodeType":"ModifierInvocation","src":"19958:9:26"}],"name":"withdrawRemainingFunds","nameLocation":"19924:22:26","nodeType":"FunctionDefinition","parameters":{"id":9086,"nodeType":"ParameterList","parameters":[],"src":"19946:2:26"},"returnParameters":{"id":9089,"nodeType":"ParameterList","parameters":[],"src":"19968:0:26"},"scope":9461,"src":"19915:317:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9122,"nodeType":"Block","src":"20371:25:26","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9119,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"20381:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20381:8:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9121,"nodeType":"ExpressionStatement","src":"20381:8:26"}]},"documentation":{"id":9114,"nodeType":"StructuredDocumentation","src":"20238:92:26","text":" @notice Pauses the contract.\n @dev Can only be called by the owner."},"functionSelector":"8456cb59","id":9123,"implemented":true,"kind":"function","modifiers":[{"id":9117,"kind":"modifierInvocation","modifierName":{"id":9116,"name":"onlyOwner","nameLocations":["20361:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"20361:9:26"},"nodeType":"ModifierInvocation","src":"20361:9:26"}],"name":"pause","nameLocation":"20344:5:26","nodeType":"FunctionDefinition","parameters":{"id":9115,"nodeType":"ParameterList","parameters":[],"src":"20349:2:26"},"returnParameters":{"id":9118,"nodeType":"ParameterList","parameters":[],"src":"20371:0:26"},"scope":9461,"src":"20335:61:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9132,"nodeType":"Block","src":"20539:27:26","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9129,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"20549:8:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20549:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9131,"nodeType":"ExpressionStatement","src":"20549:10:26"}]},"documentation":{"id":9124,"nodeType":"StructuredDocumentation","src":"20402:94:26","text":" @notice Unpauses the contract.\n @dev Can only be called by the owner."},"functionSelector":"3f4ba83a","id":9133,"implemented":true,"kind":"function","modifiers":[{"id":9127,"kind":"modifierInvocation","modifierName":{"id":9126,"name":"onlyOwner","nameLocations":["20529:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":437,"src":"20529:9:26"},"nodeType":"ModifierInvocation","src":"20529:9:26"}],"name":"unpause","nameLocation":"20510:7:26","nodeType":"FunctionDefinition","parameters":{"id":9125,"nodeType":"ParameterList","parameters":[],"src":"20517:2:26"},"returnParameters":{"id":9128,"nodeType":"ParameterList","parameters":[],"src":"20539:0:26"},"scope":9461,"src":"20501:65:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9176,"nodeType":"Block","src":"20910:196:26","statements":[{"assignments":[9144],"declarations":[{"constant":false,"id":9144,"mutability":"mutable","name":"q","nameLocation":"20937:1:26","nodeType":"VariableDeclaration","scope":9176,"src":"20920:18:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9142,"name":"uint256","nodeType":"ElementaryTypeName","src":"20920:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9143,"nodeType":"ArrayTypeName","src":"20920:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":9151,"initialValue":{"arguments":[{"expression":{"id":9148,"name":"outcomes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7864,"src":"20955:8:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Outcome_$7860_storage_$dyn_storage","typeString":"struct LMSRPredictionMarket.Outcome storage ref[] storage ref"}},"id":9149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20964:6:26","memberName":"length","nodeType":"MemberAccess","src":"20955:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"20941:13:26","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":9145,"name":"uint256","nodeType":"ElementaryTypeName","src":"20945:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9146,"nodeType":"ArrayTypeName","src":"20945:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":9150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20941:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"20920:51:26"},{"body":{"id":9172,"nodeType":"Block","src":"21027:55:26","statements":[{"expression":{"id":9170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9163,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9144,"src":"21041:1:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":9165,"indexExpression":{"id":9164,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9153,"src":"21043:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"21041:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":9166,"name":"outcomes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7864,"src":"21048:8:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Outcome_$7860_storage_$dyn_storage","typeString":"struct LMSRPredictionMarket.Outcome storage ref[] storage ref"}},"id":9168,"indexExpression":{"id":9167,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9153,"src":"21057:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21048:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_Outcome_$7860_storage","typeString":"struct LMSRPredictionMarket.Outcome storage ref"}},"id":9169,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21060:11:26","memberName":"totalShares","nodeType":"MemberAccess","referencedDeclaration":7859,"src":"21048:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21041:30:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9171,"nodeType":"ExpressionStatement","src":"21041:30:26"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9156,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9153,"src":"21001:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9157,"name":"outcomes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7864,"src":"21005:8:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Outcome_$7860_storage_$dyn_storage","typeString":"struct LMSRPredictionMarket.Outcome storage ref[] storage ref"}},"id":9158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21014:6:26","memberName":"length","nodeType":"MemberAccess","src":"21005:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21001:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9173,"initializationExpression":{"assignments":[9153],"declarations":[{"constant":false,"id":9153,"mutability":"mutable","name":"i","nameLocation":"20994:1:26","nodeType":"VariableDeclaration","scope":9173,"src":"20986:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9152,"name":"uint256","nodeType":"ElementaryTypeName","src":"20986:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9155,"initialValue":{"hexValue":"30","id":9154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20998:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20986:13:26"},"loopExpression":{"expression":{"id":9161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"21022:3:26","subExpression":{"id":9160,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9153,"src":"21022:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9162,"nodeType":"ExpressionStatement","src":"21022:3:26"},"nodeType":"ForStatement","src":"20981:101:26"},{"expression":{"id":9174,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9144,"src":"21098:1:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":9139,"id":9175,"nodeType":"Return","src":"21091:8:26"}]},"documentation":{"id":9134,"nodeType":"StructuredDocumentation","src":"20673:165:26","text":" @notice Helper function to retrieve the quantities of all outcomes.\n @return Array of quantities representing total shares for each outcome."},"id":9177,"implemented":true,"kind":"function","modifiers":[],"name":"getQuantities","nameLocation":"20853:13:26","nodeType":"FunctionDefinition","parameters":{"id":9135,"nodeType":"ParameterList","parameters":[],"src":"20866:2:26"},"returnParameters":{"id":9139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9177,"src":"20892:16:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9136,"name":"uint256","nodeType":"ElementaryTypeName","src":"20892:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9137,"nodeType":"ArrayTypeName","src":"20892:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"20891:18:26"},"scope":9461,"src":"20844:262:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9251,"nodeType":"Block","src":"21435:492:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9187,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9181,"src":"21453:1:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":9188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21455:6:26","memberName":"length","nodeType":"MemberAccess","src":"21453:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21464:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21453:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f206f7574636f6d657320617661696c61626c65","id":9191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21467:23:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_46891f62cdaa43dfa795230d801f26175a653aa54d630c434b72955b318c17de","typeString":"literal_string \"No outcomes available\""},"value":"No outcomes available"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_46891f62cdaa43dfa795230d801f26175a653aa54d630c434b72955b318c17de","typeString":"literal_string \"No outcomes available\""}],"id":9186,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"21445:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21445:46:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9193,"nodeType":"ExpressionStatement","src":"21445:46:26"},{"assignments":[9195],"declarations":[{"constant":false,"id":9195,"mutability":"mutable","name":"sumExp","nameLocation":"21508:6:26","nodeType":"VariableDeclaration","scope":9251,"src":"21501:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":9194,"name":"int128","nodeType":"ElementaryTypeName","src":"21501:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":9200,"initialValue":{"arguments":[{"hexValue":"30","id":9198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21540:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":9196,"name":"ABDKMath64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12797,"src":"21517:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ABDKMath64x64_$12797_$","typeString":"type(library ABDKMath64x64)"}},"id":9197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21531:8:26","memberName":"fromUInt","nodeType":"MemberAccess","referencedDeclaration":10000,"src":"21517:22:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int128_$","typeString":"function (uint256) pure returns (int128)"}},"id":9199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21517:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"21501:41:26"},{"body":{"id":9237,"nodeType":"Block","src":"21591:185:26","statements":[{"assignments":[9213],"declarations":[{"constant":false,"id":9213,"mutability":"mutable","name":"qiDivB","nameLocation":"21612:6:26","nodeType":"VariableDeclaration","scope":9237,"src":"21605:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":9212,"name":"int128","nodeType":"ElementaryTypeName","src":"21605:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":9221,"initialValue":{"arguments":[{"baseExpression":{"id":9216,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9181,"src":"21640:1:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":9218,"indexExpression":{"id":9217,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9202,"src":"21642:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21640:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9219,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7890,"src":"21646:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9214,"name":"ABDKMath64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12797,"src":"21621:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ABDKMath64x64_$12797_$","typeString":"type(library ABDKMath64x64)"}},"id":9215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21635:4:26","memberName":"divu","nodeType":"MemberAccess","referencedDeclaration":10542,"src":"21621:18:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_int128_$","typeString":"function (uint256,uint256) pure returns (int128)"}},"id":9220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21621:27:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"21605:43:26"},{"assignments":[9223],"declarations":[{"constant":false,"id":9223,"mutability":"mutable","name":"expQiDivB","nameLocation":"21669:9:26","nodeType":"VariableDeclaration","scope":9237,"src":"21662:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":9222,"name":"int128","nodeType":"ElementaryTypeName","src":"21662:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":9228,"initialValue":{"arguments":[{"id":9226,"name":"qiDivB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9213,"src":"21699:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"expression":{"id":9224,"name":"ABDKMath64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12797,"src":"21681:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ABDKMath64x64_$12797_$","typeString":"type(library ABDKMath64x64)"}},"id":9225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21695:3:26","memberName":"exp","nodeType":"MemberAccess","referencedDeclaration":12361,"src":"21681:17:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int128_$returns$_t_int128_$","typeString":"function (int128) pure returns (int128)"}},"id":9227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21681:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"21662:44:26"},{"expression":{"id":9235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9229,"name":"sumExp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9195,"src":"21720:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9232,"name":"sumExp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9195,"src":"21747:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},{"id":9233,"name":"expQiDivB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9223,"src":"21755:9:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"},{"typeIdentifier":"t_int128","typeString":"int128"}],"expression":{"id":9230,"name":"ABDKMath64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12797,"src":"21729:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ABDKMath64x64_$12797_$","typeString":"type(library ABDKMath64x64)"}},"id":9231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21743:3:26","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":10110,"src":"21729:17:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int128_$_t_int128_$returns$_t_int128_$","typeString":"function (int128,int128) pure returns (int128)"}},"id":9234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21729:36:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"21720:45:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":9236,"nodeType":"ExpressionStatement","src":"21720:45:26"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9205,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9202,"src":"21572:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9206,"name":"q","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9181,"src":"21576:1:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":9207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21578:6:26","memberName":"length","nodeType":"MemberAccess","src":"21576:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21572:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9238,"initializationExpression":{"assignments":[9202],"declarations":[{"constant":false,"id":9202,"mutability":"mutable","name":"i","nameLocation":"21565:1:26","nodeType":"VariableDeclaration","scope":9238,"src":"21557:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9201,"name":"uint256","nodeType":"ElementaryTypeName","src":"21557:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9204,"initialValue":{"hexValue":"30","id":9203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21569:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"21557:13:26"},"loopExpression":{"expression":{"id":9210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"21586:3:26","subExpression":{"id":9209,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9202,"src":"21586:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9211,"nodeType":"ExpressionStatement","src":"21586:3:26"},"nodeType":"ForStatement","src":"21552:224:26"},{"expression":{"arguments":[{"arguments":[{"id":9243,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7890,"src":"21862:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9241,"name":"ABDKMath64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12797,"src":"21839:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ABDKMath64x64_$12797_$","typeString":"type(library ABDKMath64x64)"}},"id":9242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21853:8:26","memberName":"fromUInt","nodeType":"MemberAccess","referencedDeclaration":10000,"src":"21839:22:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int128_$","typeString":"function (uint256) pure returns (int128)"}},"id":9244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21839:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},{"arguments":[{"id":9247,"name":"sumExp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9195,"src":"21899:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"expression":{"id":9245,"name":"ABDKMath64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12797,"src":"21882:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ABDKMath64x64_$12797_$","typeString":"type(library ABDKMath64x64)"}},"id":9246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21896:2:26","memberName":"ln","nodeType":"MemberAccess","referencedDeclaration":11302,"src":"21882:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int128_$returns$_t_int128_$","typeString":"function (int128) pure returns (int128)"}},"id":9248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21882:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"},{"typeIdentifier":"t_int128","typeString":"int128"}],"expression":{"id":9239,"name":"ABDKMath64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12797,"src":"21804:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ABDKMath64x64_$12797_$","typeString":"type(library ABDKMath64x64)"}},"id":9240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21818:3:26","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":10184,"src":"21804:17:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int128_$_t_int128_$returns$_t_int128_$","typeString":"function (int128,int128) pure returns (int128)"}},"id":9249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21804:116:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"functionReturnParameters":9185,"id":9250,"nodeType":"Return","src":"21785:135:26"}]},"documentation":{"id":9178,"nodeType":"StructuredDocumentation","src":"21112:244:26","text":" @notice Internal function to calculate the cost of purchasing shares.\n @param q Array of quantities representing total shares for each outcome.\n @return The cost of purchasing shares as a 64x64 fixed-point number."},"id":9252,"implemented":true,"kind":"function","modifiers":[],"name":"calculateCost","nameLocation":"21370:13:26","nodeType":"FunctionDefinition","parameters":{"id":9182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9181,"mutability":"mutable","name":"q","nameLocation":"21401:1:26","nodeType":"VariableDeclaration","scope":9252,"src":"21384:18:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9179,"name":"uint256","nodeType":"ElementaryTypeName","src":"21384:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9180,"nodeType":"ArrayTypeName","src":"21384:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"21383:20:26"},"returnParameters":{"id":9185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9252,"src":"21427:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":9183,"name":"int128","nodeType":"ElementaryTypeName","src":"21427:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"21426:8:26"},"scope":9461,"src":"21361:566:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9285,"nodeType":"Block","src":"22311:299:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9263,"name":"numOutcomes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9257,"src":"22329:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":9264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22343:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22329:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4174206c656173742074776f206f7574636f6d6573207265717569726564","id":9266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22346:32:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_93a3917e5ea52e245c51738b9d99df8e0e131653bf42830c2661cc3de692601c","typeString":"literal_string \"At least two outcomes required\""},"value":"At least two outcomes required"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93a3917e5ea52e245c51738b9d99df8e0e131653bf42830c2661cc3de692601c","typeString":"literal_string \"At least two outcomes required\""}],"id":9262,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"22321:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22321:58:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9268,"nodeType":"ExpressionStatement","src":"22321:58:26"},{"assignments":[9270],"declarations":[{"constant":false,"id":9270,"mutability":"mutable","name":"lnOutcomes","nameLocation":"22464:10:26","nodeType":"VariableDeclaration","scope":9285,"src":"22457:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":9269,"name":"int128","nodeType":"ElementaryTypeName","src":"22457:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":9278,"initialValue":{"arguments":[{"arguments":[{"id":9275,"name":"numOutcomes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9257,"src":"22530:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9273,"name":"ABDKMath64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12797,"src":"22507:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ABDKMath64x64_$12797_$","typeString":"type(library ABDKMath64x64)"}},"id":9274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22521:8:26","memberName":"fromUInt","nodeType":"MemberAccess","referencedDeclaration":10000,"src":"22507:22:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int128_$","typeString":"function (uint256) pure returns (int128)"}},"id":9276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22507:35:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"expression":{"id":9271,"name":"ABDKMath64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12797,"src":"22477:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ABDKMath64x64_$12797_$","typeString":"type(library ABDKMath64x64)"}},"id":9272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22491:2:26","memberName":"ln","nodeType":"MemberAccess","referencedDeclaration":11302,"src":"22477:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int128_$returns$_t_int128_$","typeString":"function (int128) pure returns (int128)"}},"id":9277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22477:75:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"22457:95:26"},{"expression":{"arguments":[{"id":9281,"name":"lnOutcomes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9270,"src":"22588:10:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},{"id":9282,"name":"_b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9255,"src":"22600:2:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9279,"name":"ABDKMath64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12797,"src":"22569:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ABDKMath64x64_$12797_$","typeString":"type(library ABDKMath64x64)"}},"id":9280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22583:4:26","memberName":"mulu","nodeType":"MemberAccess","referencedDeclaration":10367,"src":"22569:18:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int128_$_t_uint256_$returns$_t_uint256_$","typeString":"function (int128,uint256) pure returns (uint256)"}},"id":9283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22569:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9261,"id":9284,"nodeType":"Return","src":"22562:41:26"}]},"documentation":{"id":9253,"nodeType":"StructuredDocumentation","src":"21933:250:26","text":" @dev Calculates the minimum initial funds required: b * ln(num_outcomes)\n @param _b The LMSR liquidity parameter\n @param numOutcomes The number of outcomes in the market\n @return The minimum initial funds required"},"functionSelector":"96211a97","id":9286,"implemented":true,"kind":"function","modifiers":[],"name":"calculateMinimumInitialFunds","nameLocation":"22197:28:26","nodeType":"FunctionDefinition","parameters":{"id":9258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9255,"mutability":"mutable","name":"_b","nameLocation":"22243:2:26","nodeType":"VariableDeclaration","scope":9286,"src":"22235:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9254,"name":"uint256","nodeType":"ElementaryTypeName","src":"22235:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9257,"mutability":"mutable","name":"numOutcomes","nameLocation":"22263:11:26","nodeType":"VariableDeclaration","scope":9286,"src":"22255:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9256,"name":"uint256","nodeType":"ElementaryTypeName","src":"22255:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22225:55:26"},"returnParameters":{"id":9261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9286,"src":"22302:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9259,"name":"uint256","nodeType":"ElementaryTypeName","src":"22302:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22301:9:26"},"scope":9461,"src":"22188:422:26","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":9307,"nodeType":"Block","src":"23069:79:26","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":9301,"name":"_marketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9289,"src":"23115:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9302,"name":"outcomeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9291,"src":"23126:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9299,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"23104:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"23108:6:26","memberName":"encode","nodeType":"MemberAccess","src":"23104:10:26","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23104:35:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9298,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"23094:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23094:46:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23086:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9296,"name":"uint256","nodeType":"ElementaryTypeName","src":"23086:7:26","typeDescriptions":{}}},"id":9305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23086:55:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9295,"id":9306,"nodeType":"Return","src":"23079:62:26"}]},"documentation":{"id":9287,"nodeType":"StructuredDocumentation","src":"22722:226:26","text":" @notice Gets the unique position ID for a user in a specific outcome.\n @param _marketId The ID of the market.\n @param outcomeIndex The index of the outcome.\n @return The unique position ID."},"functionSelector":"9aaff766","id":9308,"implemented":true,"kind":"function","modifiers":[],"name":"getPositionId","nameLocation":"22962:13:26","nodeType":"FunctionDefinition","parameters":{"id":9292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9289,"mutability":"mutable","name":"_marketId","nameLocation":"22993:9:26","nodeType":"VariableDeclaration","scope":9308,"src":"22985:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9288,"name":"uint256","nodeType":"ElementaryTypeName","src":"22985:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9291,"mutability":"mutable","name":"outcomeIndex","nameLocation":"23020:12:26","nodeType":"VariableDeclaration","scope":9308,"src":"23012:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9290,"name":"uint256","nodeType":"ElementaryTypeName","src":"23012:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22975:63:26"},"returnParameters":{"id":9295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9308,"src":"23060:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9293,"name":"uint256","nodeType":"ElementaryTypeName","src":"23060:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23059:9:26"},"scope":9461,"src":"22953:195:26","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":9317,"nodeType":"Block","src":"23332:39:26","statements":[{"expression":{"expression":{"id":9314,"name":"outcomes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7864,"src":"23349:8:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Outcome_$7860_storage_$dyn_storage","typeString":"struct LMSRPredictionMarket.Outcome storage ref[] storage ref"}},"id":9315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23358:6:26","memberName":"length","nodeType":"MemberAccess","src":"23349:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9313,"id":9316,"nodeType":"Return","src":"23342:22:26"}]},"documentation":{"id":9309,"nodeType":"StructuredDocumentation","src":"23154:114:26","text":" @notice Gets the total number of outcomes in the market.\n @return The number of outcomes."},"functionSelector":"7dc8f086","id":9318,"implemented":true,"kind":"function","modifiers":[],"name":"getOutcomeCount","nameLocation":"23282:15:26","nodeType":"FunctionDefinition","parameters":{"id":9310,"nodeType":"ParameterList","parameters":[],"src":"23297:2:26"},"returnParameters":{"id":9313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9318,"src":"23323:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9311,"name":"uint256","nodeType":"ElementaryTypeName","src":"23323:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23322:9:26"},"scope":9461,"src":"23273:98:26","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9339,"nodeType":"Block","src":"23655:132:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9327,"name":"outcomeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9321,"src":"23673:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9328,"name":"outcomes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7864,"src":"23688:8:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Outcome_$7860_storage_$dyn_storage","typeString":"struct LMSRPredictionMarket.Outcome storage ref[] storage ref"}},"id":9329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23697:6:26","memberName":"length","nodeType":"MemberAccess","src":"23688:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23673:30:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206f7574636f6d6520696e646578","id":9331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23705:23:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_b7aa9f534c53d62575122bb7a2fdbcaa0bbf3bea2c3cbbf26522e7400a7a38a4","typeString":"literal_string \"Invalid outcome index\""},"value":"Invalid outcome index"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b7aa9f534c53d62575122bb7a2fdbcaa0bbf3bea2c3cbbf26522e7400a7a38a4","typeString":"literal_string \"Invalid outcome index\""}],"id":9326,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"23665:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23665:64:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9333,"nodeType":"ExpressionStatement","src":"23665:64:26"},{"expression":{"expression":{"baseExpression":{"id":9334,"name":"outcomes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7864,"src":"23746:8:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Outcome_$7860_storage_$dyn_storage","typeString":"struct LMSRPredictionMarket.Outcome storage ref[] storage ref"}},"id":9336,"indexExpression":{"id":9335,"name":"outcomeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9321,"src":"23755:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23746:22:26","typeDescriptions":{"typeIdentifier":"t_struct$_Outcome_$7860_storage","typeString":"struct LMSRPredictionMarket.Outcome storage ref"}},"id":9337,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23769:11:26","memberName":"totalShares","nodeType":"MemberAccess","referencedDeclaration":7859,"src":"23746:34:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9325,"id":9338,"nodeType":"Return","src":"23739:41:26"}]},"documentation":{"id":9319,"nodeType":"StructuredDocumentation","src":"23377:174:26","text":" @notice Gets the total shares for a specific outcome.\n @param outcomeIndex The index of the outcome.\n @return The total shares for the outcome."},"functionSelector":"b03238f7","id":9340,"implemented":true,"kind":"function","modifiers":[],"name":"getOutcomeTotalShares","nameLocation":"23565:21:26","nodeType":"FunctionDefinition","parameters":{"id":9322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9321,"mutability":"mutable","name":"outcomeIndex","nameLocation":"23604:12:26","nodeType":"VariableDeclaration","scope":9340,"src":"23596:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9320,"name":"uint256","nodeType":"ElementaryTypeName","src":"23596:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23586:36:26"},"returnParameters":{"id":9325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9324,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9340,"src":"23646:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9323,"name":"uint256","nodeType":"ElementaryTypeName","src":"23646:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23645:9:26"},"scope":9461,"src":"23556:231:26","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9364,"nodeType":"Block","src":"24237:130:26","statements":[{"assignments":[9351],"declarations":[{"constant":false,"id":9351,"mutability":"mutable","name":"tokenId","nameLocation":"24255:7:26","nodeType":"VariableDeclaration","scope":9364,"src":"24247:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9350,"name":"uint256","nodeType":"ElementaryTypeName","src":"24247:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9357,"initialValue":{"arguments":[{"id":9354,"name":"marketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7895,"src":"24286:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9355,"name":"outcomeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9345,"src":"24296:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9352,"name":"positions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7888,"src":"24265:9:26","typeDescriptions":{"typeIdentifier":"t_contract$_PredictionMarketPositions_$9897","typeString":"contract PredictionMarketPositions"}},"id":9353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24275:10:26","memberName":"getTokenId","nodeType":"MemberAccess","referencedDeclaration":9857,"src":"24265:20:26","typeDescriptions":{"typeIdentifier":"t_function_external_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure external returns (uint256)"}},"id":9356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24265:44:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"24247:62:26"},{"expression":{"arguments":[{"id":9360,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9343,"src":"24346:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9361,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9351,"src":"24352:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9358,"name":"positions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7888,"src":"24326:9:26","typeDescriptions":{"typeIdentifier":"t_contract$_PredictionMarketPositions_$9897","typeString":"contract PredictionMarketPositions"}},"id":9359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24336:9:26","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":783,"src":"24326:19:26","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view external returns (uint256)"}},"id":9362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24326:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9349,"id":9363,"nodeType":"Return","src":"24319:41:26"}]},"documentation":{"id":9341,"nodeType":"StructuredDocumentation","src":"23793:325:26","text":" @notice Gets the user's share balance for a specific outcome.\n @param user The address of the user.\n @param outcomeIndex The index of the outcome.\n @return The user's share balance for the specified outcome.\n @dev Uses the PredictionMarketPositions contract to retrieve the balance."},"functionSelector":"ddd9d045","id":9365,"implemented":true,"kind":"function","modifiers":[],"name":"getUserShares","nameLocation":"24133:13:26","nodeType":"FunctionDefinition","parameters":{"id":9346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9343,"mutability":"mutable","name":"user","nameLocation":"24164:4:26","nodeType":"VariableDeclaration","scope":9365,"src":"24156:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9342,"name":"address","nodeType":"ElementaryTypeName","src":"24156:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9345,"mutability":"mutable","name":"outcomeIndex","nameLocation":"24186:12:26","nodeType":"VariableDeclaration","scope":9365,"src":"24178:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9344,"name":"uint256","nodeType":"ElementaryTypeName","src":"24178:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24146:58:26"},"returnParameters":{"id":9349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9365,"src":"24228:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9347,"name":"uint256","nodeType":"ElementaryTypeName","src":"24228:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24227:9:26"},"scope":9461,"src":"24124:243:26","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9459,"nodeType":"Block","src":"24850:798:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9374,"name":"outcomeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9368,"src":"24868:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9375,"name":"outcomes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7864,"src":"24883:8:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Outcome_$7860_storage_$dyn_storage","typeString":"struct LMSRPredictionMarket.Outcome storage ref[] storage ref"}},"id":9376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24892:6:26","memberName":"length","nodeType":"MemberAccess","src":"24883:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24868:30:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206f7574636f6d65","id":9378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24900:17:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_030213450aebdb0dfeba67f2b8c40b0e30e9d264ed3ebfc59f419b62872eb850","typeString":"literal_string \"Invalid outcome\""},"value":"Invalid outcome"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_030213450aebdb0dfeba67f2b8c40b0e30e9d264ed3ebfc59f419b62872eb850","typeString":"literal_string \"Invalid outcome\""}],"id":9373,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"24860:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24860:58:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9380,"nodeType":"ExpressionStatement","src":"24860:58:26"},{"assignments":[9382],"declarations":[{"constant":false,"id":9382,"mutability":"mutable","name":"numerator","nameLocation":"24936:9:26","nodeType":"VariableDeclaration","scope":9459,"src":"24929:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":9381,"name":"int128","nodeType":"ElementaryTypeName","src":"24929:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":9394,"initialValue":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":9387,"name":"outcomes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7864,"src":"24998:8:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Outcome_$7860_storage_$dyn_storage","typeString":"struct LMSRPredictionMarket.Outcome storage ref[] storage ref"}},"id":9389,"indexExpression":{"id":9388,"name":"outcomeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9368,"src":"25007:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24998:22:26","typeDescriptions":{"typeIdentifier":"t_struct$_Outcome_$7860_storage","typeString":"struct LMSRPredictionMarket.Outcome storage ref"}},"id":9390,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25021:11:26","memberName":"totalShares","nodeType":"MemberAccess","referencedDeclaration":7859,"src":"24998:34:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9391,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7890,"src":"25034:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9385,"name":"ABDKMath64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12797,"src":"24979:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ABDKMath64x64_$12797_$","typeString":"type(library ABDKMath64x64)"}},"id":9386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24993:4:26","memberName":"divu","nodeType":"MemberAccess","referencedDeclaration":10542,"src":"24979:18:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_int128_$","typeString":"function (uint256,uint256) pure returns (int128)"}},"id":9392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24979:57:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"expression":{"id":9383,"name":"ABDKMath64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12797,"src":"24948:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ABDKMath64x64_$12797_$","typeString":"type(library ABDKMath64x64)"}},"id":9384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24962:3:26","memberName":"exp","nodeType":"MemberAccess","referencedDeclaration":12361,"src":"24948:17:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int128_$returns$_t_int128_$","typeString":"function (int128) pure returns (int128)"}},"id":9393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24948:98:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"24929:117:26"},{"assignments":[9396],"declarations":[{"constant":false,"id":9396,"mutability":"mutable","name":"denominator","nameLocation":"25063:11:26","nodeType":"VariableDeclaration","scope":9459,"src":"25056:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":9395,"name":"int128","nodeType":"ElementaryTypeName","src":"25056:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":9401,"initialValue":{"arguments":[{"hexValue":"30","id":9399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25100:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":9397,"name":"ABDKMath64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12797,"src":"25077:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ABDKMath64x64_$12797_$","typeString":"type(library ABDKMath64x64)"}},"id":9398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25091:8:26","memberName":"fromUInt","nodeType":"MemberAccess","referencedDeclaration":10000,"src":"25077:22:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int128_$","typeString":"function (uint256) pure returns (int128)"}},"id":9400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25077:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"25056:46:26"},{"body":{"id":9435,"nodeType":"Block","src":"25158:208:26","statements":[{"assignments":[9414],"declarations":[{"constant":false,"id":9414,"mutability":"mutable","name":"expQiDivB","nameLocation":"25179:9:26","nodeType":"VariableDeclaration","scope":9435,"src":"25172:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":9413,"name":"int128","nodeType":"ElementaryTypeName","src":"25172:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":9426,"initialValue":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":9419,"name":"outcomes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7864,"src":"25245:8:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Outcome_$7860_storage_$dyn_storage","typeString":"struct LMSRPredictionMarket.Outcome storage ref[] storage ref"}},"id":9421,"indexExpression":{"id":9420,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9403,"src":"25254:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25245:11:26","typeDescriptions":{"typeIdentifier":"t_struct$_Outcome_$7860_storage","typeString":"struct LMSRPredictionMarket.Outcome storage ref"}},"id":9422,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25257:11:26","memberName":"totalShares","nodeType":"MemberAccess","referencedDeclaration":7859,"src":"25245:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9423,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7890,"src":"25270:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9417,"name":"ABDKMath64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12797,"src":"25226:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ABDKMath64x64_$12797_$","typeString":"type(library ABDKMath64x64)"}},"id":9418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25240:4:26","memberName":"divu","nodeType":"MemberAccess","referencedDeclaration":10542,"src":"25226:18:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_int128_$","typeString":"function (uint256,uint256) pure returns (int128)"}},"id":9424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25226:46:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"expression":{"id":9415,"name":"ABDKMath64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12797,"src":"25191:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ABDKMath64x64_$12797_$","typeString":"type(library ABDKMath64x64)"}},"id":9416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25205:3:26","memberName":"exp","nodeType":"MemberAccess","referencedDeclaration":12361,"src":"25191:17:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int128_$returns$_t_int128_$","typeString":"function (int128) pure returns (int128)"}},"id":9425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25191:95:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"25172:114:26"},{"expression":{"id":9433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9427,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9396,"src":"25300:11:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9430,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9396,"src":"25332:11:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},{"id":9431,"name":"expQiDivB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9414,"src":"25345:9:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"},{"typeIdentifier":"t_int128","typeString":"int128"}],"expression":{"id":9428,"name":"ABDKMath64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12797,"src":"25314:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ABDKMath64x64_$12797_$","typeString":"type(library ABDKMath64x64)"}},"id":9429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25328:3:26","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":10110,"src":"25314:17:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int128_$_t_int128_$returns$_t_int128_$","typeString":"function (int128,int128) pure returns (int128)"}},"id":9432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25314:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25300:55:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":9434,"nodeType":"ExpressionStatement","src":"25300:55:26"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9406,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9403,"src":"25132:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9407,"name":"outcomes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7864,"src":"25136:8:26","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Outcome_$7860_storage_$dyn_storage","typeString":"struct LMSRPredictionMarket.Outcome storage ref[] storage ref"}},"id":9408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25145:6:26","memberName":"length","nodeType":"MemberAccess","src":"25136:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25132:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9436,"initializationExpression":{"assignments":[9403],"declarations":[{"constant":false,"id":9403,"mutability":"mutable","name":"i","nameLocation":"25125:1:26","nodeType":"VariableDeclaration","scope":9436,"src":"25117:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9402,"name":"uint256","nodeType":"ElementaryTypeName","src":"25117:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9405,"initialValue":{"hexValue":"30","id":9404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25129:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25117:13:26"},"loopExpression":{"expression":{"id":9411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"25153:3:26","subExpression":{"id":9410,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9403,"src":"25153:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9412,"nodeType":"ExpressionStatement","src":"25153:3:26"},"nodeType":"ForStatement","src":"25112:254:26"},{"assignments":[9438],"declarations":[{"constant":false,"id":9438,"mutability":"mutable","name":"price","nameLocation":"25382:5:26","nodeType":"VariableDeclaration","scope":9459,"src":"25375:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":9437,"name":"int128","nodeType":"ElementaryTypeName","src":"25375:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":9444,"initialValue":{"arguments":[{"id":9441,"name":"numerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9382,"src":"25408:9:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},{"id":9442,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9396,"src":"25419:11:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"},{"typeIdentifier":"t_int128","typeString":"int128"}],"expression":{"id":9439,"name":"ABDKMath64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12797,"src":"25390:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ABDKMath64x64_$12797_$","typeString":"type(library ABDKMath64x64)"}},"id":9440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25404:3:26","memberName":"div","nodeType":"MemberAccess","referencedDeclaration":10412,"src":"25390:17:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int128_$_t_int128_$returns$_t_int128_$","typeString":"function (int128,int128) pure returns (int128)"}},"id":9443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25390:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"25375:56:26"},{"expression":{"arguments":[{"arguments":[{"id":9449,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9438,"src":"25537:5:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":9452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25587:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":9453,"name":"SHARES_DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"25593:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25587:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9450,"name":"ABDKMath64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12797,"src":"25564:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ABDKMath64x64_$12797_$","typeString":"type(library ABDKMath64x64)"}},"id":9451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25578:8:26","memberName":"fromUInt","nodeType":"MemberAccess","referencedDeclaration":10000,"src":"25564:22:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int128_$","typeString":"function (uint256) pure returns (int128)"}},"id":9455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25564:45:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"},{"typeIdentifier":"t_int128","typeString":"int128"}],"expression":{"id":9447,"name":"ABDKMath64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12797,"src":"25498:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ABDKMath64x64_$12797_$","typeString":"type(library ABDKMath64x64)"}},"id":9448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25512:3:26","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":10184,"src":"25498:17:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int128_$_t_int128_$returns$_t_int128_$","typeString":"function (int128,int128) pure returns (int128)"}},"id":9456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25498:129:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"expression":{"id":9445,"name":"ABDKMath64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12797,"src":"25460:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ABDKMath64x64_$12797_$","typeString":"type(library ABDKMath64x64)"}},"id":9446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25474:6:26","memberName":"toUInt","nodeType":"MemberAccess","referencedDeclaration":10026,"src":"25460:20:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int128_$returns$_t_uint64_$","typeString":"function (int128) pure returns (uint64)"}},"id":9457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25460:181:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":9372,"id":9458,"nodeType":"Return","src":"25441:200:26"}]},"documentation":{"id":9366,"nodeType":"StructuredDocumentation","src":"24373:401:26","text":" @notice Gets the current price of shares for a specific outcome.\n @param outcomeIndex The index of the selected outcome.\n @return The price of a single share (scaled to match SHARES_DECIMALS precision).\n @dev Uses the LMSR formula to calculate the price based on current share quantities.\n The price is normalized to the precision defined by SHARES_DECIMALS."},"functionSelector":"e7572230","id":9460,"implemented":true,"kind":"function","modifiers":[],"name":"getPrice","nameLocation":"24789:8:26","nodeType":"FunctionDefinition","parameters":{"id":9369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9368,"mutability":"mutable","name":"outcomeIndex","nameLocation":"24806:12:26","nodeType":"VariableDeclaration","scope":9460,"src":"24798:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9367,"name":"uint256","nodeType":"ElementaryTypeName","src":"24798:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24797:22:26"},"returnParameters":{"id":9372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9371,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9460,"src":"24841:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9370,"name":"uint256","nodeType":"ElementaryTypeName","src":"24841:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24840:9:26"},"scope":9461,"src":"24780:868:26","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":9462,"src":"583:25067:26","usedErrors":[392,397,3548,3551,3657],"usedEvents":[403,3540,3545,7938,7948,7950,7954,7960,7966,7972]}],"src":"33:25618:26"},"id":26},"src/core/MarketFactory.sol":{"ast":{"absolutePath":"src/core/MarketFactory.sol","exportedSymbols":{"ABDKMath64x64":[12797],"AccessControl":[295],"Arrays":[3412],"Context":[3474],"ERC1155":[1580],"ERC1155Utils":[1915],"ERC165":[4310],"IAccessControl":[378],"IERC1155":[1703],"IERC1155Errors":[663],"IERC1155MetadataURI":[1761],"IERC165":[4322],"IERC20":[2508],"IERC20Metadata":[2534],"LMSRPredictionMarket":[9461],"MarketFactory":[9658],"Math":[5928],"Ownable":[526],"Pausable":[3643],"PredictionMarketPositions":[9897],"ReentrancyGuard":[3712],"SignedMath":[7837],"Strings":[4286]},"id":9659,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9463,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:27"},{"absolutePath":"src/core/LMSRPredictionMarket.sol","file":"./LMSRPredictionMarket.sol","id":9464,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9659,"sourceUnit":9462,"src":"57:36:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":9465,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9659,"sourceUnit":527,"src":"94:52:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"src/core/PredictionMarketPositions.sol","file":"./PredictionMarketPositions.sol","id":9466,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9659,"sourceUnit":9898,"src":"147:41:27","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9467,"name":"Ownable","nameLocations":["248:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"248:7:27"},"id":9468,"nodeType":"InheritanceSpecifier","src":"248:7:27"}],"canonicalName":"MarketFactory","contractDependencies":[9461],"contractKind":"contract","fullyImplemented":true,"id":9658,"linearizedBaseContracts":[9658,526,3474],"name":"MarketFactory","nameLocation":"231:13:27","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"3adfe6d0","id":9471,"mutability":"mutable","name":"activeMarkets","nameLocation":"279:13:27","nodeType":"VariableDeclaration","scope":9658,"src":"262:30:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":9469,"name":"address","nodeType":"ElementaryTypeName","src":"262:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9470,"nodeType":"ArrayTypeName","src":"262:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"ba5b7982","id":9474,"mutability":"mutable","name":"positions","nameLocation":"331:9:27","nodeType":"VariableDeclaration","scope":9658,"src":"298:42:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_PredictionMarketPositions_$9897","typeString":"contract PredictionMarketPositions"},"typeName":{"id":9473,"nodeType":"UserDefinedTypeName","pathNode":{"id":9472,"name":"PredictionMarketPositions","nameLocations":["298:25:27"],"nodeType":"IdentifierPath","referencedDeclaration":9897,"src":"298:25:27"},"referencedDeclaration":9897,"src":"298:25:27","typeDescriptions":{"typeIdentifier":"t_contract$_PredictionMarketPositions_$9897","typeString":"contract PredictionMarketPositions"}},"visibility":"public"},{"constant":false,"functionSelector":"c3a811fe","id":9478,"mutability":"mutable","name":"marketTitles","nameLocation":"418:12:27","nodeType":"VariableDeclaration","scope":9658,"src":"384:46:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_string_storage_$","typeString":"mapping(address => string)"},"typeName":{"id":9477,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9475,"name":"address","nodeType":"ElementaryTypeName","src":"392:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"384:26:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_string_storage_$","typeString":"mapping(address => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9476,"name":"string","nodeType":"ElementaryTypeName","src":"403:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"83b05b6735acd4b85e3bded8e72c851d1a87718f81e3c8e6f0c9d9a2baa88e46","id":9482,"name":"MinterAuthorized","nameLocation":"443:16:27","nodeType":"EventDefinition","parameters":{"id":9481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9480,"indexed":true,"mutability":"mutable","name":"marketAddress","nameLocation":"476:13:27","nodeType":"VariableDeclaration","scope":9482,"src":"460:29:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9479,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"459:31:27"},"src":"437:54:27"},{"anonymous":false,"eventSelector":"89e2b56dfb4365b59dc3a37aaf819ce4937e48be6ab23686edcecacf0124ae03","id":9488,"name":"MarketCreated","nameLocation":"502:13:27","nodeType":"EventDefinition","parameters":{"id":9487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9484,"indexed":true,"mutability":"mutable","name":"marketAddress","nameLocation":"532:13:27","nodeType":"VariableDeclaration","scope":9488,"src":"516:29:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9483,"name":"address","nodeType":"ElementaryTypeName","src":"516:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9486,"indexed":false,"mutability":"mutable","name":"title","nameLocation":"554:5:27","nodeType":"VariableDeclaration","scope":9488,"src":"547:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9485,"name":"string","nodeType":"ElementaryTypeName","src":"547:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"515:45:27"},"src":"496:65:27"},{"anonymous":false,"eventSelector":"92199b96df436a113d14e9952bea656a2e2e7fbc271b2141f2c42002e0e2b85b","id":9492,"name":"RolesGranted","nameLocation":"572:12:27","nodeType":"EventDefinition","parameters":{"id":9491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9490,"indexed":true,"mutability":"mutable","name":"marketAddress","nameLocation":"601:13:27","nodeType":"VariableDeclaration","scope":9492,"src":"585:29:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9489,"name":"address","nodeType":"ElementaryTypeName","src":"585:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"584:31:27"},"src":"566:50:27"},{"anonymous":false,"eventSelector":"8c9a4f13b67cb64d7c6aa1ae0c9bf07694af521a28b93e7060020810ab4bc59f","id":9498,"name":"FundsTransferred","nameLocation":"627:16:27","nodeType":"EventDefinition","parameters":{"id":9497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9494,"indexed":true,"mutability":"mutable","name":"marketAddress","nameLocation":"660:13:27","nodeType":"VariableDeclaration","scope":9498,"src":"644:29:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9493,"name":"address","nodeType":"ElementaryTypeName","src":"644:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9496,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"683:6:27","nodeType":"VariableDeclaration","scope":9498,"src":"675:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9495,"name":"uint256","nodeType":"ElementaryTypeName","src":"675:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"643:47:27"},"src":"621:70:27"},{"body":{"id":9514,"nodeType":"Block","src":"951:73:27","statements":[{"expression":{"id":9512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9508,"name":"positions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9474,"src":"961:9:27","typeDescriptions":{"typeIdentifier":"t_contract$_PredictionMarketPositions_$9897","typeString":"contract PredictionMarketPositions"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9510,"name":"_positionsAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9501,"src":"999:17:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9509,"name":"PredictionMarketPositions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9897,"src":"973:25:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PredictionMarketPositions_$9897_$","typeString":"type(contract PredictionMarketPositions)"}},"id":9511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"973:44:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PredictionMarketPositions_$9897","typeString":"contract PredictionMarketPositions"}},"src":"961:56:27","typeDescriptions":{"typeIdentifier":"t_contract$_PredictionMarketPositions_$9897","typeString":"contract PredictionMarketPositions"}},"id":9513,"nodeType":"ExpressionStatement","src":"961:56:27"}]},"documentation":{"id":9499,"nodeType":"StructuredDocumentation","src":"697:189:27","text":" @dev Constructor to initialize the factory with the ERC-1155 positions contract\n @param _positionsAddress Address of the deployed PredictionMarketPositions contract"},"id":9515,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":9504,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"939:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"943:6:27","memberName":"sender","nodeType":"MemberAccess","src":"939:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9506,"kind":"baseConstructorSpecifier","modifierName":{"id":9503,"name":"Ownable","nameLocations":["931:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"931:7:27"},"nodeType":"ModifierInvocation","src":"931:19:27"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9501,"mutability":"mutable","name":"_positionsAddress","nameLocation":"912:17:27","nodeType":"VariableDeclaration","scope":9515,"src":"904:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9500,"name":"address","nodeType":"ElementaryTypeName","src":"904:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"903:27:27"},"returnParameters":{"id":9507,"nodeType":"ParameterList","parameters":[],"src":"951:0:27"},"scope":9658,"src":"892:132:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9646,"nodeType":"Block","src":"1341:1246:27","statements":[{"assignments":[9541],"declarations":[{"constant":false,"id":9541,"mutability":"mutable","name":"newMarket","nameLocation":"1425:9:27","nodeType":"VariableDeclaration","scope":9646,"src":"1404:30:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_LMSRPredictionMarket_$9461","typeString":"contract LMSRPredictionMarket"},"typeName":{"id":9540,"nodeType":"UserDefinedTypeName","pathNode":{"id":9539,"name":"LMSRPredictionMarket","nameLocations":["1404:20:27"],"nodeType":"IdentifierPath","referencedDeclaration":9461,"src":"1404:20:27"},"referencedDeclaration":9461,"src":"1404:20:27","typeDescriptions":{"typeIdentifier":"t_contract$_LMSRPredictionMarket_$9461","typeString":"contract LMSRPredictionMarket"}},"visibility":"internal"}],"id":9560,"initialValue":{"arguments":[{"id":9545,"name":"marketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9517,"src":"1475:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9546,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9519,"src":"1497:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":9547,"name":"outcomes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9522,"src":"1516:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},{"id":9548,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9524,"src":"1538:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9549,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9526,"src":"1558:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9550,"name":"duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9528,"src":"1573:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9551,"name":"feePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9530,"src":"1595:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9552,"name":"feeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9532,"src":"1619:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9553,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9534,"src":"1645:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9554,"name":"initialFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9536,"src":"1671:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":9557,"name":"positions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9474,"src":"1705:9:27","typeDescriptions":{"typeIdentifier":"t_contract$_PredictionMarketPositions_$9897","typeString":"contract PredictionMarketPositions"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PredictionMarketPositions_$9897","typeString":"contract PredictionMarketPositions"}],"id":9556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1697:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9555,"name":"address","nodeType":"ElementaryTypeName","src":"1697:7:27","typeDescriptions":{}}},"id":9558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1697:18:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"1437:24:27","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_contract$_LMSRPredictionMarket_$9461_$","typeString":"function (uint256,string memory,string memory[] memory,address,uint256,uint256,uint256,address,address,uint256,address) returns (contract LMSRPredictionMarket)"},"typeName":{"id":9543,"nodeType":"UserDefinedTypeName","pathNode":{"id":9542,"name":"LMSRPredictionMarket","nameLocations":["1441:20:27"],"nodeType":"IdentifierPath","referencedDeclaration":9461,"src":"1441:20:27"},"referencedDeclaration":9461,"src":"1441:20:27","typeDescriptions":{"typeIdentifier":"t_contract$_LMSRPredictionMarket_$9461","typeString":"contract LMSRPredictionMarket"}}},"id":9559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1437:288:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_LMSRPredictionMarket_$9461","typeString":"contract LMSRPredictionMarket"}},"nodeType":"VariableDeclarationStatement","src":"1404:321:27"},{"expression":{"arguments":[{"arguments":[{"id":9566,"name":"newMarket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9541,"src":"1823:9:27","typeDescriptions":{"typeIdentifier":"t_contract$_LMSRPredictionMarket_$9461","typeString":"contract LMSRPredictionMarket"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LMSRPredictionMarket_$9461","typeString":"contract LMSRPredictionMarket"}],"id":9565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1815:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9564,"name":"address","nodeType":"ElementaryTypeName","src":"1815:7:27","typeDescriptions":{}}},"id":9567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1815:18:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":9561,"name":"activeMarkets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9471,"src":"1796:13:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":9563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1810:4:27","memberName":"push","nodeType":"MemberAccess","src":"1796:18:27","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":9568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1796:38:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9569,"nodeType":"ExpressionStatement","src":"1796:38:27"},{"expression":{"id":9577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9570,"name":"marketTitles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9478,"src":"1845:12:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_string_storage_$","typeString":"mapping(address => string storage ref)"}},"id":9575,"indexExpression":{"arguments":[{"id":9573,"name":"newMarket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9541,"src":"1866:9:27","typeDescriptions":{"typeIdentifier":"t_contract$_LMSRPredictionMarket_$9461","typeString":"contract LMSRPredictionMarket"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LMSRPredictionMarket_$9461","typeString":"contract LMSRPredictionMarket"}],"id":9572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1858:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9571,"name":"address","nodeType":"ElementaryTypeName","src":"1858:7:27","typeDescriptions":{}}},"id":9574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1858:18:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1845:32:27","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9576,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9519,"src":"1880:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1845:40:27","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":9578,"nodeType":"ExpressionStatement","src":"1845:40:27"},{"eventCall":{"arguments":[{"arguments":[{"id":9582,"name":"newMarket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9541,"src":"1922:9:27","typeDescriptions":{"typeIdentifier":"t_contract$_LMSRPredictionMarket_$9461","typeString":"contract LMSRPredictionMarket"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LMSRPredictionMarket_$9461","typeString":"contract LMSRPredictionMarket"}],"id":9581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9580,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:27","typeDescriptions":{}}},"id":9583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1914:18:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9584,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9519,"src":"1934:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":9579,"name":"MarketCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9488,"src":"1900:13:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory)"}},"id":9585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1900:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9586,"nodeType":"EmitStatement","src":"1895:45:27"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9590,"name":"positions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9474,"src":"2011:9:27","typeDescriptions":{"typeIdentifier":"t_contract$_PredictionMarketPositions_$9897","typeString":"contract PredictionMarketPositions"}},"id":9591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2021:11:27","memberName":"MINTER_ROLE","nodeType":"MemberAccess","referencedDeclaration":9677,"src":"2011:21:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":9592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2011:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":9595,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"2044:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_MarketFactory_$9658","typeString":"contract MarketFactory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MarketFactory_$9658","typeString":"contract MarketFactory"}],"id":9594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2036:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9593,"name":"address","nodeType":"ElementaryTypeName","src":"2036:7:27","typeDescriptions":{}}},"id":9596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2036:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":9587,"name":"positions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9474,"src":"1991:9:27","typeDescriptions":{"typeIdentifier":"t_contract$_PredictionMarketPositions_$9897","typeString":"contract PredictionMarketPositions"}},"id":9589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2001:9:27","memberName":"grantRole","nodeType":"MemberAccess","referencedDeclaration":147,"src":"1991:19:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) external"}},"id":9597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1991:59:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9598,"nodeType":"ExpressionStatement","src":"1991:59:27"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":9602,"name":"positions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9474,"src":"2080:9:27","typeDescriptions":{"typeIdentifier":"t_contract$_PredictionMarketPositions_$9897","typeString":"contract PredictionMarketPositions"}},"id":9603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2090:11:27","memberName":"BURNER_ROLE","nodeType":"MemberAccess","referencedDeclaration":9682,"src":"2080:21:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":9604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2080:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":9607,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"2113:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_MarketFactory_$9658","typeString":"contract MarketFactory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_MarketFactory_$9658","typeString":"contract MarketFactory"}],"id":9606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2105:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9605,"name":"address","nodeType":"ElementaryTypeName","src":"2105:7:27","typeDescriptions":{}}},"id":9608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2105:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":9599,"name":"positions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9474,"src":"2060:9:27","typeDescriptions":{"typeIdentifier":"t_contract$_PredictionMarketPositions_$9897","typeString":"contract PredictionMarketPositions"}},"id":9601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2070:9:27","memberName":"grantRole","nodeType":"MemberAccess","referencedDeclaration":147,"src":"2060:19:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) external"}},"id":9609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2060:59:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9610,"nodeType":"ExpressionStatement","src":"2060:59:27"},{"eventCall":{"arguments":[{"arguments":[{"id":9614,"name":"newMarket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9541,"src":"2155:9:27","typeDescriptions":{"typeIdentifier":"t_contract$_LMSRPredictionMarket_$9461","typeString":"contract LMSRPredictionMarket"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LMSRPredictionMarket_$9461","typeString":"contract LMSRPredictionMarket"}],"id":9613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2147:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9612,"name":"address","nodeType":"ElementaryTypeName","src":"2147:7:27","typeDescriptions":{}}},"id":9615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2147:18:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9611,"name":"RolesGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9492,"src":"2134:12:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":9616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2134:32:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9617,"nodeType":"EmitStatement","src":"2129:37:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9618,"name":"initialFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9536,"src":"2181:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2196:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2181:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9638,"nodeType":"IfStatement","src":"2177:291:27","trueBody":{"id":9637,"nodeType":"Block","src":"2199:269:27","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":9626,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2293:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2297:6:27","memberName":"sender","nodeType":"MemberAccess","src":"2293:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":9630,"name":"newMarket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9541,"src":"2333:9:27","typeDescriptions":{"typeIdentifier":"t_contract$_LMSRPredictionMarket_$9461","typeString":"contract LMSRPredictionMarket"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LMSRPredictionMarket_$9461","typeString":"contract LMSRPredictionMarket"}],"id":9629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2325:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9628,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:27","typeDescriptions":{}}},"id":9631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2325:18:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9632,"name":"initialFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9536,"src":"2365:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":9623,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9534,"src":"2245:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9622,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"2238:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2508_$","typeString":"type(contract IERC20)"}},"id":9624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2238:20:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2508","typeString":"contract IERC20"}},"id":9625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2259:12:27","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2507,"src":"2238:33:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":9633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2238:157:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c2066756e64207472616e73666572206661696c6564","id":9634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2413:30:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_852355895853edb69d4eb2b523e4990b006983cbd01551688e129528d6928858","typeString":"literal_string \"Initial fund transfer failed\""},"value":"Initial fund transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_852355895853edb69d4eb2b523e4990b006983cbd01551688e129528d6928858","typeString":"literal_string \"Initial fund transfer failed\""}],"id":9621,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2213:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2213:244:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9636,"nodeType":"ExpressionStatement","src":"2213:244:27"}]}},{"expression":{"arguments":[{"expression":{"id":9642,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2569:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2573:6:27","memberName":"sender","nodeType":"MemberAccess","src":"2569:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":9639,"name":"newMarket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9541,"src":"2541:9:27","typeDescriptions":{"typeIdentifier":"t_contract$_LMSRPredictionMarket_$9461","typeString":"contract LMSRPredictionMarket"}},"id":9641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2551:17:27","memberName":"transferOwnership","nodeType":"MemberAccess","referencedDeclaration":505,"src":"2541:27:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":9644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2541:39:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9645,"nodeType":"ExpressionStatement","src":"2541:39:27"}]},"functionSelector":"97271c14","id":9647,"implemented":true,"kind":"function","modifiers":[],"name":"createMarket","nameLocation":"1039:12:27","nodeType":"FunctionDefinition","parameters":{"id":9537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9517,"mutability":"mutable","name":"marketId","nameLocation":"1069:8:27","nodeType":"VariableDeclaration","scope":9647,"src":"1061:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9516,"name":"uint256","nodeType":"ElementaryTypeName","src":"1061:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9519,"mutability":"mutable","name":"title","nameLocation":"1101:5:27","nodeType":"VariableDeclaration","scope":9647,"src":"1087:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9518,"name":"string","nodeType":"ElementaryTypeName","src":"1087:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9522,"mutability":"mutable","name":"outcomes","nameLocation":"1132:8:27","nodeType":"VariableDeclaration","scope":9647,"src":"1116:24:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":9520,"name":"string","nodeType":"ElementaryTypeName","src":"1116:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":9521,"nodeType":"ArrayTypeName","src":"1116:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":9524,"mutability":"mutable","name":"oracle","nameLocation":"1158:6:27","nodeType":"VariableDeclaration","scope":9647,"src":"1150:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9523,"name":"address","nodeType":"ElementaryTypeName","src":"1150:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9526,"mutability":"mutable","name":"b","nameLocation":"1182:1:27","nodeType":"VariableDeclaration","scope":9647,"src":"1174:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9525,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9528,"mutability":"mutable","name":"duration","nameLocation":"1201:8:27","nodeType":"VariableDeclaration","scope":9647,"src":"1193:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9527,"name":"uint256","nodeType":"ElementaryTypeName","src":"1193:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9530,"mutability":"mutable","name":"feePercent","nameLocation":"1227:10:27","nodeType":"VariableDeclaration","scope":9647,"src":"1219:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9529,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9532,"mutability":"mutable","name":"feeRecipient","nameLocation":"1255:12:27","nodeType":"VariableDeclaration","scope":9647,"src":"1247:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9531,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9534,"mutability":"mutable","name":"tokenAddress","nameLocation":"1285:12:27","nodeType":"VariableDeclaration","scope":9647,"src":"1277:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9533,"name":"address","nodeType":"ElementaryTypeName","src":"1277:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9536,"mutability":"mutable","name":"initialFunds","nameLocation":"1315:12:27","nodeType":"VariableDeclaration","scope":9647,"src":"1307:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9535,"name":"uint256","nodeType":"ElementaryTypeName","src":"1307:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1051:282:27"},"returnParameters":{"id":9538,"nodeType":"ParameterList","parameters":[],"src":"1341:0:27"},"scope":9658,"src":"1030:1557:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9656,"nodeType":"Block","src":"2727:37:27","statements":[{"expression":{"id":9654,"name":"activeMarkets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9471,"src":"2744:13:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":9653,"id":9655,"nodeType":"Return","src":"2737:20:27"}]},"documentation":{"id":9648,"nodeType":"StructuredDocumentation","src":"2593:62:27","text":" @dev Returns the list of all active markets"},"functionSelector":"a5e973c3","id":9657,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveMarkets","nameLocation":"2669:16:27","nodeType":"FunctionDefinition","parameters":{"id":9649,"nodeType":"ParameterList","parameters":[],"src":"2685:2:27"},"returnParameters":{"id":9653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9657,"src":"2709:16:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":9650,"name":"address","nodeType":"ElementaryTypeName","src":"2709:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9651,"nodeType":"ArrayTypeName","src":"2709:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2708:18:27"},"scope":9658,"src":"2660:104:27","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":9659,"src":"222:2544:27","usedErrors":[392,397],"usedEvents":[403,9482,9488,9492,9498]}],"src":"32:2735:27"},"id":27},"src/core/PredictionMarketPositions.sol":{"ast":{"absolutePath":"src/core/PredictionMarketPositions.sol","exportedSymbols":{"AccessControl":[295],"Arrays":[3412],"Context":[3474],"ERC1155":[1580],"ERC1155Utils":[1915],"ERC165":[4310],"IAccessControl":[378],"IERC1155":[1703],"IERC1155Errors":[663],"IERC1155MetadataURI":[1761],"IERC165":[4322],"Math":[5928],"Ownable":[526],"PredictionMarketPositions":[9897],"SignedMath":[7837],"Strings":[4286]},"id":9898,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9660,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:28"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","id":9661,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9898,"sourceUnit":1581,"src":"57:59:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":9662,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9898,"sourceUnit":527,"src":"117:52:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":9663,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9898,"sourceUnit":296,"src":"170:58:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":9664,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9898,"sourceUnit":4287,"src":"229:51:28","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9665,"name":"ERC1155","nameLocations":["320:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":1580,"src":"320:7:28"},"id":9666,"nodeType":"InheritanceSpecifier","src":"320:7:28"},{"baseName":{"id":9667,"name":"Ownable","nameLocations":["329:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"329:7:28"},"id":9668,"nodeType":"InheritanceSpecifier","src":"329:7:28"},{"baseName":{"id":9669,"name":"AccessControl","nameLocations":["338:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"338:13:28"},"id":9670,"nodeType":"InheritanceSpecifier","src":"338:13:28"}],"canonicalName":"PredictionMarketPositions","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9897,"linearizedBaseContracts":[9897,295,526,1580,663,1761,1703,4310,4322,378,3474],"name":"PredictionMarketPositions","nameLocation":"291:25:28","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":9672,"mutability":"mutable","name":"baseURI","nameLocation":"408:7:28","nodeType":"VariableDeclaration","scope":9897,"src":"393:22:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":9671,"name":"string","nodeType":"ElementaryTypeName","src":"393:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":true,"functionSelector":"d5391393","id":9677,"mutability":"constant","name":"MINTER_ROLE","nameLocation":"465:11:28","nodeType":"VariableDeclaration","scope":9897,"src":"441:62:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9673,"name":"bytes32","nodeType":"ElementaryTypeName","src":"441:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":9675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"489:13:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":9674,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"479:9:28","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"479:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"282c51f3","id":9682,"mutability":"constant","name":"BURNER_ROLE","nameLocation":"533:11:28","nodeType":"VariableDeclaration","scope":9897,"src":"509:62:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9678,"name":"bytes32","nodeType":"ElementaryTypeName","src":"509:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4255524e45525f524f4c45","id":9680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"557:13:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848","typeString":"literal_string \"BURNER_ROLE\""},"value":"BURNER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848","typeString":"literal_string \"BURNER_ROLE\""}],"id":9679,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"547:9:28","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"547:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"body":{"id":9714,"nodeType":"Block","src":"670:265:28","statements":[{"expression":{"id":9697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9695,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9672,"src":"719:7:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9696,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9684,"src":"729:4:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"719:14:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":9698,"nodeType":"ExpressionStatement","src":"719:14:28"},{"expression":{"arguments":[{"id":9700,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"798:18:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9701,"name":"_initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9686,"src":"818:13:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9699,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"787:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":9702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"787:45:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9703,"nodeType":"ExpressionStatement","src":"787:45:28"},{"expression":{"arguments":[{"id":9705,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9677,"src":"853:11:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9706,"name":"_initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9686,"src":"866:13:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9704,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"842:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":9707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"842:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9708,"nodeType":"ExpressionStatement","src":"842:38:28"},{"expression":{"arguments":[{"id":9710,"name":"BURNER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9682,"src":"901:11:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":9711,"name":"_initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9686,"src":"914:13:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9709,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"890:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":9712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"890:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9713,"nodeType":"ExpressionStatement","src":"890:38:28"}]},"id":9715,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":9689,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9684,"src":"641:4:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":9690,"kind":"baseConstructorSpecifier","modifierName":{"id":9688,"name":"ERC1155","nameLocations":["633:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":1580,"src":"633:7:28"},"nodeType":"ModifierInvocation","src":"633:13:28"},{"arguments":[{"id":9692,"name":"_initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9686,"src":"655:13:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9693,"kind":"baseConstructorSpecifier","modifierName":{"id":9691,"name":"Ownable","nameLocations":["647:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":526,"src":"647:7:28"},"nodeType":"ModifierInvocation","src":"647:22:28"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9684,"mutability":"mutable","name":"_uri","nameLocation":"604:4:28","nodeType":"VariableDeclaration","scope":9715,"src":"590:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9683,"name":"string","nodeType":"ElementaryTypeName","src":"590:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9686,"mutability":"mutable","name":"_initialOwner","nameLocation":"618:13:28","nodeType":"VariableDeclaration","scope":9715,"src":"610:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9685,"name":"address","nodeType":"ElementaryTypeName","src":"610:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"589:43:28"},"returnParameters":{"id":9694,"nodeType":"ParameterList","parameters":[],"src":"670:0:28"},"scope":9897,"src":"578:357:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[62,755],"body":{"id":9730,"nodeType":"Block","src":"1187:60:28","statements":[{"expression":{"arguments":[{"id":9727,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9717,"src":"1228:11:28","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":9725,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967271,"src":"1204:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_PredictionMarketPositions_$9897_$","typeString":"type(contract super PredictionMarketPositions)"}},"id":9726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1210:17:28","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":62,"src":"1204:23:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":9728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1204:36:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9724,"id":9729,"nodeType":"Return","src":"1197:43:28"}]},"functionSelector":"01ffc9a7","id":9731,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1037:17:28","nodeType":"FunctionDefinition","overrides":{"id":9721,"nodeType":"OverrideSpecifier","overrides":[{"id":9719,"name":"ERC1155","nameLocations":["1136:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":1580,"src":"1136:7:28"},{"id":9720,"name":"AccessControl","nameLocations":["1145:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"1145:13:28"}],"src":"1127:32:28"},"parameters":{"id":9718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9717,"mutability":"mutable","name":"interfaceId","nameLocation":"1062:11:28","nodeType":"VariableDeclaration","scope":9731,"src":"1055:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":9716,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1055:6:28","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1054:20:28"},"returnParameters":{"id":9724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9731,"src":"1177:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9722,"name":"bool","nodeType":"ElementaryTypeName","src":"1177:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1176:6:28"},"scope":9897,"src":"1028:219:28","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":9766,"nodeType":"Block","src":"1516:184:28","statements":[{"assignments":[9747],"declarations":[{"constant":false,"id":9747,"mutability":"mutable","name":"tokenId","nameLocation":"1534:7:28","nodeType":"VariableDeclaration","scope":9766,"src":"1526:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9746,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9752,"initialValue":{"arguments":[{"id":9749,"name":"marketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9736,"src":"1556:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9750,"name":"outcomeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9738,"src":"1566:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9748,"name":"_getTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9841,"src":"1544:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":9751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1544:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1526:53:28"},{"expression":{"arguments":[{"id":9754,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9734,"src":"1621:2:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9755,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9747,"src":"1625:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9756,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9740,"src":"1634:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":9757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1642:2:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":9753,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"1615:5:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":9758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1615:30:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9759,"nodeType":"ExpressionStatement","src":"1615:30:28"},{"eventCall":{"arguments":[{"id":9761,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9734,"src":"1673:2:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9762,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9747,"src":"1677:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9763,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9740,"src":"1686:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9760,"name":"TokensMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9888,"src":"1660:12:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":9764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1660:33:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9765,"nodeType":"EmitStatement","src":"1655:38:28"}]},"documentation":{"id":9732,"nodeType":"StructuredDocumentation","src":"1256:140:28","text":" @notice Mint tokens for a specific market and outcome.\n @dev Only accounts with MINTER_ROLE can call this function."},"functionSelector":"a647e8ec","id":9767,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9743,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9677,"src":"1502:11:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":9744,"kind":"modifierInvocation","modifierName":{"id":9742,"name":"onlyRole","nameLocations":["1493:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"1493:8:28"},"nodeType":"ModifierInvocation","src":"1493:21:28"}],"name":"mint","nameLocation":"1411:4:28","nodeType":"FunctionDefinition","parameters":{"id":9741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9734,"mutability":"mutable","name":"to","nameLocation":"1424:2:28","nodeType":"VariableDeclaration","scope":9767,"src":"1416:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9733,"name":"address","nodeType":"ElementaryTypeName","src":"1416:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9736,"mutability":"mutable","name":"marketId","nameLocation":"1436:8:28","nodeType":"VariableDeclaration","scope":9767,"src":"1428:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9735,"name":"uint256","nodeType":"ElementaryTypeName","src":"1428:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9738,"mutability":"mutable","name":"outcomeIndex","nameLocation":"1454:12:28","nodeType":"VariableDeclaration","scope":9767,"src":"1446:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9737,"name":"uint256","nodeType":"ElementaryTypeName","src":"1446:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9740,"mutability":"mutable","name":"amount","nameLocation":"1476:6:28","nodeType":"VariableDeclaration","scope":9767,"src":"1468:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9739,"name":"uint256","nodeType":"ElementaryTypeName","src":"1468:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1415:68:28"},"returnParameters":{"id":9745,"nodeType":"ParameterList","parameters":[],"src":"1516:0:28"},"scope":9897,"src":"1402:298:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9818,"nodeType":"Block","src":"1967:298:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9783,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9770,"src":"1985:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":9786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2001:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1993:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9784,"name":"address","nodeType":"ElementaryTypeName","src":"1993:7:28","typeDescriptions":{}}},"id":9787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1993:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1985:18:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74206275726e2066726f6d207a65726f2061646472657373","id":9789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2005:31:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_615b3d4a6d0bcb2f8abea393d6c2b412bab38052582f8faef4259418487cdc84","typeString":"literal_string \"Cannot burn from zero address\""},"value":"Cannot burn from zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_615b3d4a6d0bcb2f8abea393d6c2b412bab38052582f8faef4259418487cdc84","typeString":"literal_string \"Cannot burn from zero address\""}],"id":9782,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1977:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1977:60:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9791,"nodeType":"ExpressionStatement","src":"1977:60:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9793,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9776,"src":"2055:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2064:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2055:10:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4275726e20616d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":9796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2067:39:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_322f02bd84acbba69d6c4799a2b9710f6d974ca3546f69e7df820bc31907495e","typeString":"literal_string \"Burn amount must be greater than zero\""},"value":"Burn amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_322f02bd84acbba69d6c4799a2b9710f6d974ca3546f69e7df820bc31907495e","typeString":"literal_string \"Burn amount must be greater than zero\""}],"id":9792,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2047:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2047:60:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9798,"nodeType":"ExpressionStatement","src":"2047:60:28"},{"assignments":[9800],"declarations":[{"constant":false,"id":9800,"mutability":"mutable","name":"tokenId","nameLocation":"2125:7:28","nodeType":"VariableDeclaration","scope":9818,"src":"2117:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9799,"name":"uint256","nodeType":"ElementaryTypeName","src":"2117:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9805,"initialValue":{"arguments":[{"id":9802,"name":"marketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9772,"src":"2147:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9803,"name":"outcomeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9774,"src":"2157:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9801,"name":"_getTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9841,"src":"2135:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":9804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2117:53:28"},{"expression":{"arguments":[{"id":9807,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9770,"src":"2186:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9808,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9800,"src":"2192:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9809,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9776,"src":"2201:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9806,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"2180:5:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":9810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9811,"nodeType":"ExpressionStatement","src":"2180:28:28"},{"eventCall":{"arguments":[{"id":9813,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9770,"src":"2236:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9814,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9800,"src":"2242:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9815,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9776,"src":"2251:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9812,"name":"TokensBurned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9896,"src":"2223:12:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":9816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2223:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9817,"nodeType":"EmitStatement","src":"2218:40:28"}]},"documentation":{"id":9768,"nodeType":"StructuredDocumentation","src":"1706:140:28","text":" @notice Burn tokens for a specific market and outcome.\n @dev Only accounts with BURNER_ROLE can call this function."},"functionSelector":"de7bf0a2","id":9819,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9779,"name":"BURNER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9682,"src":"1954:11:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":9780,"kind":"modifierInvocation","modifierName":{"id":9778,"name":"onlyRole","nameLocations":["1945:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"1945:8:28"},"nodeType":"ModifierInvocation","src":"1945:21:28"}],"name":"burn","nameLocation":"1861:4:28","nodeType":"FunctionDefinition","parameters":{"id":9777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9770,"mutability":"mutable","name":"from","nameLocation":"1874:4:28","nodeType":"VariableDeclaration","scope":9819,"src":"1866:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9769,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9772,"mutability":"mutable","name":"marketId","nameLocation":"1888:8:28","nodeType":"VariableDeclaration","scope":9819,"src":"1880:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9771,"name":"uint256","nodeType":"ElementaryTypeName","src":"1880:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9774,"mutability":"mutable","name":"outcomeIndex","nameLocation":"1906:12:28","nodeType":"VariableDeclaration","scope":9819,"src":"1898:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9773,"name":"uint256","nodeType":"ElementaryTypeName","src":"1898:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9776,"mutability":"mutable","name":"amount","nameLocation":"1928:6:28","nodeType":"VariableDeclaration","scope":9819,"src":"1920:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9775,"name":"uint256","nodeType":"ElementaryTypeName","src":"1920:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1865:70:28"},"returnParameters":{"id":9781,"nodeType":"ParameterList","parameters":[],"src":"1967:0:28"},"scope":9897,"src":"1852:413:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9840,"nodeType":"Block","src":"2477:78:28","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":9834,"name":"marketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9822,"src":"2523:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9835,"name":"outcomeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9824,"src":"2533:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9832,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"2512:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2516:6:28","memberName":"encode","nodeType":"MemberAccess","src":"2512:10:28","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2512:34:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9831,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"2502:9:28","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2502:45:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":9830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2494:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9829,"name":"uint256","nodeType":"ElementaryTypeName","src":"2494:7:28","typeDescriptions":{}}},"id":9838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2494:54:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9828,"id":9839,"nodeType":"Return","src":"2487:61:28"}]},"documentation":{"id":9820,"nodeType":"StructuredDocumentation","src":"2270:109:28","text":" @notice Internal function to compute a unique token ID based on marketId and outcomeIndex."},"id":9841,"implemented":true,"kind":"function","modifiers":[],"name":"_getTokenId","nameLocation":"2393:11:28","nodeType":"FunctionDefinition","parameters":{"id":9825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9822,"mutability":"mutable","name":"marketId","nameLocation":"2413:8:28","nodeType":"VariableDeclaration","scope":9841,"src":"2405:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9821,"name":"uint256","nodeType":"ElementaryTypeName","src":"2405:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9824,"mutability":"mutable","name":"outcomeIndex","nameLocation":"2431:12:28","nodeType":"VariableDeclaration","scope":9841,"src":"2423:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9823,"name":"uint256","nodeType":"ElementaryTypeName","src":"2423:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2404:40:28"},"returnParameters":{"id":9828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9841,"src":"2468:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9826,"name":"uint256","nodeType":"ElementaryTypeName","src":"2468:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2467:9:28"},"scope":9897,"src":"2384:171:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9856,"nodeType":"Block","src":"2805:59:28","statements":[{"expression":{"arguments":[{"id":9852,"name":"marketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9844,"src":"2834:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9853,"name":"outcomeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9846,"src":"2844:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9851,"name":"_getTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9841,"src":"2822:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":9854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2822:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9850,"id":9855,"nodeType":"Return","src":"2815:42:28"}]},"documentation":{"id":9842,"nodeType":"StructuredDocumentation","src":"2561:97:28","text":" @notice Public function to get the token ID for a specific market and outcome."},"functionSelector":"3112de9a","id":9857,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenId","nameLocation":"2722:10:28","nodeType":"FunctionDefinition","parameters":{"id":9847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9844,"mutability":"mutable","name":"marketId","nameLocation":"2741:8:28","nodeType":"VariableDeclaration","scope":9857,"src":"2733:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9843,"name":"uint256","nodeType":"ElementaryTypeName","src":"2733:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9846,"mutability":"mutable","name":"outcomeIndex","nameLocation":"2759:12:28","nodeType":"VariableDeclaration","scope":9857,"src":"2751:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9845,"name":"uint256","nodeType":"ElementaryTypeName","src":"2751:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2732:40:28"},"returnParameters":{"id":9850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9857,"src":"2796:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9848,"name":"uint256","nodeType":"ElementaryTypeName","src":"2796:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2795:9:28"},"scope":9897,"src":"2713:151:28","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[766],"body":{"id":9879,"nodeType":"Block","src":"3034:93:28","statements":[{"expression":{"arguments":[{"arguments":[{"id":9870,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9672,"src":"3075:7:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"arguments":[{"id":9873,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9860,"src":"3101:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9871,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"3084:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$4286_$","typeString":"type(library Strings)"}},"id":9872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3092:8:28","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":4034,"src":"3084:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":9874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3084:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2e6a736f6e","id":9875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3111:7:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972","typeString":"literal_string \".json\""},"value":".json"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972","typeString":"literal_string \".json\""}],"expression":{"id":9868,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"3058:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3062:12:28","memberName":"encodePacked","nodeType":"MemberAccess","src":"3058:16:28","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3058:61:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3051:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":9866,"name":"string","nodeType":"ElementaryTypeName","src":"3051:6:28","typeDescriptions":{}}},"id":9877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3051:69:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":9865,"id":9878,"nodeType":"Return","src":"3044:76:28"}]},"documentation":{"id":9858,"nodeType":"StructuredDocumentation","src":"2870:84:28","text":" @notice Override URI function to return metadata URI for a token."},"functionSelector":"0e89341c","id":9880,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"2968:3:28","nodeType":"FunctionDefinition","overrides":{"id":9862,"nodeType":"OverrideSpecifier","overrides":[],"src":"3001:8:28"},"parameters":{"id":9861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9860,"mutability":"mutable","name":"tokenId","nameLocation":"2980:7:28","nodeType":"VariableDeclaration","scope":9880,"src":"2972:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9859,"name":"uint256","nodeType":"ElementaryTypeName","src":"2972:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2971:17:28"},"returnParameters":{"id":9865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9880,"src":"3019:13:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9863,"name":"string","nodeType":"ElementaryTypeName","src":"3019:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3018:15:28"},"scope":9897,"src":"2959:168:28","stateMutability":"view","virtual":false,"visibility":"public"},{"anonymous":false,"eventSelector":"2e8ac5177a616f2aec08c3048f5021e4e9743ece034e8d83ba5caf76688bb475","id":9888,"name":"TokensMinted","nameLocation":"3139:12:28","nodeType":"EventDefinition","parameters":{"id":9887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9882,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"3168:2:28","nodeType":"VariableDeclaration","scope":9888,"src":"3152:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9881,"name":"address","nodeType":"ElementaryTypeName","src":"3152:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9884,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"3188:7:28","nodeType":"VariableDeclaration","scope":9888,"src":"3172:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9883,"name":"uint256","nodeType":"ElementaryTypeName","src":"3172:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9886,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3205:6:28","nodeType":"VariableDeclaration","scope":9888,"src":"3197:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9885,"name":"uint256","nodeType":"ElementaryTypeName","src":"3197:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3151:61:28"},"src":"3133:80:28"},{"anonymous":false,"eventSelector":"ccbea4088a3b7ae9ca2d15fab9a9742a4075b4d7247768a1eecea917565aba00","id":9896,"name":"TokensBurned","nameLocation":"3224:12:28","nodeType":"EventDefinition","parameters":{"id":9895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9890,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"3253:4:28","nodeType":"VariableDeclaration","scope":9896,"src":"3237:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9889,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9892,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"3275:7:28","nodeType":"VariableDeclaration","scope":9896,"src":"3259:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9891,"name":"uint256","nodeType":"ElementaryTypeName","src":"3259:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9894,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3292:6:28","nodeType":"VariableDeclaration","scope":9896,"src":"3284:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9893,"name":"uint256","nodeType":"ElementaryTypeName","src":"3284:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3236:63:28"},"src":"3218:82:28"}],"scope":9898,"src":"282:3020:28","usedErrors":[305,308,392,397,628,633,638,645,650,655,662],"usedEvents":[317,326,335,403,1600,1615,1624,1631,9888,9896]}],"src":"32:3271:28"},"id":28},"src/mock/ERC20Token.sol":{"ast":{"absolutePath":"src/mock/ERC20Token.sol","exportedSymbols":{"Context":[3474],"ERC20":[2430],"ERC20Token":[9919],"IERC20":[2508],"IERC20Errors":[568],"IERC20Metadata":[2534]},"id":9920,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9899,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:29"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":9900,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9920,"sourceUnit":2431,"src":"57:55:29","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9901,"name":"ERC20","nameLocations":["137:5:29"],"nodeType":"IdentifierPath","referencedDeclaration":2430,"src":"137:5:29"},"id":9902,"nodeType":"InheritanceSpecifier","src":"137:5:29"}],"canonicalName":"ERC20Token","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9919,"linearizedBaseContracts":[9919,2430,568,2534,2508,3474],"name":"ERC20Token","nameLocation":"123:10:29","nodeType":"ContractDefinition","nodes":[{"body":{"id":9917,"nodeType":"Block","src":"217:88:29","statements":[{"expression":{"arguments":[{"expression":{"id":9912,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"233:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"237:6:29","memberName":"sender","nodeType":"MemberAccess","src":"233:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9914,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9904,"src":"245:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9911,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"227:5:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"227:32:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9916,"nodeType":"ExpressionStatement","src":"227:32:29"}]},"id":9918,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"53534c2055534420546f6b656e","id":9907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"190:15:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_bbe851a1b2ad23bceac591ddefcdab3a7cf171aa208ae7acc008a8cf779c34a2","typeString":"literal_string \"SSL USD Token\""},"value":"SSL USD Token"},{"hexValue":"53534c555344","id":9908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"207:8:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_0f0e7e271f13c983d4632cef02ec8a5613f42ce7c8ff7a98bc1601669680fcef","typeString":"literal_string \"SSLUSD\""},"value":"SSLUSD"}],"id":9909,"kind":"baseConstructorSpecifier","modifierName":{"id":9906,"name":"ERC20","nameLocations":["184:5:29"],"nodeType":"IdentifierPath","referencedDeclaration":2430,"src":"184:5:29"},"nodeType":"ModifierInvocation","src":"184:32:29"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9904,"mutability":"mutable","name":"initialSupply","nameLocation":"169:13:29","nodeType":"VariableDeclaration","scope":9918,"src":"161:21:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9903,"name":"uint256","nodeType":"ElementaryTypeName","src":"161:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"160:23:29"},"returnParameters":{"id":9910,"nodeType":"ParameterList","parameters":[],"src":"217:0:29"},"scope":9919,"src":"149:156:29","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":9920,"src":"114:193:29","usedErrors":[538,543,548,557,562,567],"usedEvents":[2442,2451]}],"src":"32:276:29"},"id":29},"src/utils/ABDKMath64x64.sol":{"ast":{"absolutePath":"src/utils/ABDKMath64x64.sol","exportedSymbols":{"ABDKMath64x64":[12797]},"id":12798,"license":"BSD-4-Clause","nodeType":"SourceUnit","nodes":[{"id":9921,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"191:23:30"},{"abstract":false,"baseContracts":[],"canonicalName":"ABDKMath64x64","contractDependencies":[],"contractKind":"library","documentation":{"id":9922,"nodeType":"StructuredDocumentation","src":"216:449:30","text":" Smart contract library of mathematical functions operating with signed\n 64.64-bit fixed point numbers.  Signed 64.64-bit fixed point number is\n basically a simple fraction whose numerator is signed 128-bit integer and\n denominator is 2^64.  As long as denominator is always the same, there is no\n need to store it, thus in Solidity signed 64.64-bit fixed point numbers are\n represented by int128 type holding only the numerator."},"fullyImplemented":true,"id":12797,"linearizedBaseContracts":[12797],"name":"ABDKMath64x64","nameLocation":"674:13:30","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":9926,"mutability":"constant","name":"MIN_64x64","nameLocation":"799:9:30","nodeType":"VariableDeclaration","scope":12797,"src":"775:71:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":9923,"name":"int128","nodeType":"ElementaryTypeName","src":"775:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"value":{"id":9925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"811:35:30","subExpression":{"hexValue":"30783830303030303030303030303030303030303030303030303030303030303030","id":9924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"812:34:30","typeDescriptions":{"typeIdentifier":"t_rational_170141183460469231731687303715884105728_by_1","typeString":"int_const 1701...(31 digits omitted)...5728"},"value":"0x80000000000000000000000000000000"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_170141183460469231731687303715884105728_by_1","typeString":"int_const -170...(32 digits omitted)...5728"}},"visibility":"private"},{"constant":true,"id":9929,"mutability":"constant","name":"MAX_64x64","nameLocation":"958:9:30","nodeType":"VariableDeclaration","scope":12797,"src":"934:70:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":9927,"name":"int128","nodeType":"ElementaryTypeName","src":"934:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"value":{"hexValue":"30783746464646464646464646464646464646464646464646464646464646464646","id":9928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"970:34:30","typeDescriptions":{"typeIdentifier":"t_rational_170141183460469231731687303715884105727_by_1","typeString":"int_const 1701...(31 digits omitted)...5727"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},"visibility":"private"},{"body":{"id":9956,"nodeType":"Block","src":"1304:147:30","statements":[{"id":9955,"nodeType":"UncheckedBlock","src":"1314:131:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9938,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9932,"src":"1346:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":9940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1351:19:30","subExpression":{"hexValue":"307838303030303030303030303030303030","id":9939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1352:18:30","typeDescriptions":{"typeIdentifier":"t_rational_9223372036854775808_by_1","typeString":"int_const 9223372036854775808"},"value":"0x8000000000000000"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_9223372036854775808_by_1","typeString":"int_const -9223372036854775808"}},"src":"1346:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9942,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9932,"src":"1374:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"307837464646464646464646464646464646","id":9943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1379:18:30","typeDescriptions":{"typeIdentifier":"t_rational_9223372036854775807_by_1","typeString":"int_const 9223372036854775807"},"value":"0x7FFFFFFFFFFFFFFF"},"src":"1374:23:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1346:51:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":9937,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1338:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":9946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1338:60:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9947,"nodeType":"ExpressionStatement","src":"1338:60:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9950,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9932,"src":"1426:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":9951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1431:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"1426:7:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1419:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":9948,"name":"int128","nodeType":"ElementaryTypeName","src":"1419:6:30","typeDescriptions":{}}},"id":9953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1419:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"functionReturnParameters":9936,"id":9954,"nodeType":"Return","src":"1412:22:30"}]}]},"documentation":{"id":9930,"nodeType":"StructuredDocumentation","src":"1011:230:30","text":" Convert signed 256-bit integer number into signed 64.64-bit fixed point\n number.  Revert on overflow.\n @param x signed 256-bit integer number\n @return signed 64.64-bit fixed point number"},"id":9957,"implemented":true,"kind":"function","modifiers":[],"name":"fromInt","nameLocation":"1255:7:30","nodeType":"FunctionDefinition","parameters":{"id":9933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9932,"mutability":"mutable","name":"x","nameLocation":"1270:1:30","nodeType":"VariableDeclaration","scope":9957,"src":"1263:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9931,"name":"int256","nodeType":"ElementaryTypeName","src":"1263:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1262:10:30"},"returnParameters":{"id":9936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9957,"src":"1296:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":9934,"name":"int128","nodeType":"ElementaryTypeName","src":"1296:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"1295:8:30"},"scope":12797,"src":"1246:205:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9973,"nodeType":"Block","src":"1734:72:30","statements":[{"id":9972,"nodeType":"UncheckedBlock","src":"1744:56:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":9969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9967,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9960,"src":"1781:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":9968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1786:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"1781:7:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":9966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1775:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":9965,"name":"int64","nodeType":"ElementaryTypeName","src":"1775:5:30","typeDescriptions":{}}},"id":9970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1775:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"functionReturnParameters":9964,"id":9971,"nodeType":"Return","src":"1768:21:30"}]}]},"documentation":{"id":9958,"nodeType":"StructuredDocumentation","src":"1457:217:30","text":" Convert signed 64.64 fixed point number into signed 64-bit integer number\n rounding down.\n @param x signed 64.64-bit fixed point number\n @return signed 64-bit integer number"},"id":9974,"implemented":true,"kind":"function","modifiers":[],"name":"toInt","nameLocation":"1688:5:30","nodeType":"FunctionDefinition","parameters":{"id":9961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9960,"mutability":"mutable","name":"x","nameLocation":"1701:1:30","nodeType":"VariableDeclaration","scope":9974,"src":"1694:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":9959,"name":"int128","nodeType":"ElementaryTypeName","src":"1694:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"1693:10:30"},"returnParameters":{"id":9964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9974,"src":"1727:5:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":9962,"name":"int64","nodeType":"ElementaryTypeName","src":"1727:5:30","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"1726:7:30"},"scope":12797,"src":"1679:127:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9999,"nodeType":"Block","src":"2111:127:30","statements":[{"id":9998,"nodeType":"UncheckedBlock","src":"2121:111:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9983,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9977,"src":"2153:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"307837464646464646464646464646464646","id":9984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2158:18:30","typeDescriptions":{"typeIdentifier":"t_rational_9223372036854775807_by_1","typeString":"int_const 9223372036854775807"},"value":"0x7FFFFFFFFFFFFFFF"},"src":"2153:23:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":9982,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2145:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":9986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:32:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9987,"nodeType":"ExpressionStatement","src":"2145:32:30"},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9992,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9977,"src":"2212:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":9993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2217:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"2212:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2205:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9990,"name":"int256","nodeType":"ElementaryTypeName","src":"2205:6:30","typeDescriptions":{}}},"id":9995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2205:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2198:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":9988,"name":"int128","nodeType":"ElementaryTypeName","src":"2198:6:30","typeDescriptions":{}}},"id":9996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2198:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"functionReturnParameters":9981,"id":9997,"nodeType":"Return","src":"2191:30:30"}]}]},"documentation":{"id":9975,"nodeType":"StructuredDocumentation","src":"1812:234:30","text":" Convert unsigned 256-bit integer number into signed 64.64-bit fixed point\n number.  Revert on overflow.\n @param x unsigned 256-bit integer number\n @return signed 64.64-bit fixed point number"},"id":10000,"implemented":true,"kind":"function","modifiers":[],"name":"fromUInt","nameLocation":"2060:8:30","nodeType":"FunctionDefinition","parameters":{"id":9978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9977,"mutability":"mutable","name":"x","nameLocation":"2077:1:30","nodeType":"VariableDeclaration","scope":10000,"src":"2069:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9976,"name":"uint256","nodeType":"ElementaryTypeName","src":"2069:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2068:11:30"},"returnParameters":{"id":9981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10000,"src":"2103:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":9979,"name":"int128","nodeType":"ElementaryTypeName","src":"2103:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"2102:8:30"},"scope":12797,"src":"2051:187:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10025,"nodeType":"Block","src":"2549:111:30","statements":[{"id":10024,"nodeType":"UncheckedBlock","src":"2559:95:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":10011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10009,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10003,"src":"2591:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":10010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2596:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2591:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10008,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2583:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":10012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2583:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10013,"nodeType":"ExpressionStatement","src":"2583:15:30"},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":10020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10018,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10003,"src":"2634:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":10019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2639:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"2634:7:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":10017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2626:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":10016,"name":"uint128","nodeType":"ElementaryTypeName","src":"2626:7:30","typeDescriptions":{}}},"id":10021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2626:16:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":10015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2619:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":10014,"name":"uint64","nodeType":"ElementaryTypeName","src":"2619:6:30","typeDescriptions":{}}},"id":10022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2619:24:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":10007,"id":10023,"nodeType":"Return","src":"2612:31:30"}]}]},"documentation":{"id":10001,"nodeType":"StructuredDocumentation","src":"2244:243:30","text":" Convert signed 64.64 fixed point number into unsigned 64-bit integer\n number rounding down.  Revert on underflow.\n @param x signed 64.64-bit fixed point number\n @return unsigned 64-bit integer number"},"id":10026,"implemented":true,"kind":"function","modifiers":[],"name":"toUInt","nameLocation":"2501:6:30","nodeType":"FunctionDefinition","parameters":{"id":10004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10003,"mutability":"mutable","name":"x","nameLocation":"2515:1:30","nodeType":"VariableDeclaration","scope":10026,"src":"2508:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":10002,"name":"int128","nodeType":"ElementaryTypeName","src":"2508:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"2507:10:30"},"returnParameters":{"id":10007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10026,"src":"2541:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":10005,"name":"uint64","nodeType":"ElementaryTypeName","src":"2541:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2540:8:30"},"scope":12797,"src":"2492:168:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10056,"nodeType":"Block","src":"2989:174:30","statements":[{"id":10055,"nodeType":"UncheckedBlock","src":"2999:158:30","statements":[{"assignments":[10035],"declarations":[{"constant":false,"id":10035,"mutability":"mutable","name":"result","nameLocation":"3030:6:30","nodeType":"VariableDeclaration","scope":10055,"src":"3023:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10034,"name":"int256","nodeType":"ElementaryTypeName","src":"3023:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":10039,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10036,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10029,"src":"3039:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":10037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3044:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"3039:7:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"3023:23:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10041,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10035,"src":"3068:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":10042,"name":"MIN_64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9926,"src":"3078:9:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"3068:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10044,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10035,"src":"3091:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":10045,"name":"MAX_64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9929,"src":"3101:9:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"3091:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3068:42:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10040,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"3060:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":10048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3060:51:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10049,"nodeType":"ExpressionStatement","src":"3060:51:30"},{"expression":{"arguments":[{"id":10052,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10035,"src":"3139:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3132:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":10050,"name":"int128","nodeType":"ElementaryTypeName","src":"3132:6:30","typeDescriptions":{}}},"id":10053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3132:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"functionReturnParameters":10033,"id":10054,"nodeType":"Return","src":"3125:21:30"}]}]},"documentation":{"id":10027,"nodeType":"StructuredDocumentation","src":"2666:256:30","text":" Convert signed 128.128 fixed point number into signed 64.64-bit fixed point\n number rounding down.  Revert on overflow.\n @param x signed 128.128-bin fixed point number\n @return signed 64.64-bit fixed point number"},"id":10057,"implemented":true,"kind":"function","modifiers":[],"name":"from128x128","nameLocation":"2936:11:30","nodeType":"FunctionDefinition","parameters":{"id":10030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10029,"mutability":"mutable","name":"x","nameLocation":"2955:1:30","nodeType":"VariableDeclaration","scope":10057,"src":"2948:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10028,"name":"int256","nodeType":"ElementaryTypeName","src":"2948:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2947:10:30"},"returnParameters":{"id":10033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10057,"src":"2981:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":10031,"name":"int128","nodeType":"ElementaryTypeName","src":"2981:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"2980:8:30"},"scope":12797,"src":"2927:236:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10073,"nodeType":"Block","src":"3447:73:30","statements":[{"id":10072,"nodeType":"UncheckedBlock","src":"3457:57:30","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":10067,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10060,"src":"3495:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":10066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3488:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":10065,"name":"int256","nodeType":"ElementaryTypeName","src":"3488:6:30","typeDescriptions":{}}},"id":10068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3488:9:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":10069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3501:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"3488:15:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":10064,"id":10071,"nodeType":"Return","src":"3481:22:30"}]}]},"documentation":{"id":10058,"nodeType":"StructuredDocumentation","src":"3169:213:30","text":" Convert signed 64.64 fixed point number into signed 128.128 fixed point\n number.\n @param x signed 64.64-bit fixed point number\n @return signed 128.128 fixed point number"},"id":10074,"implemented":true,"kind":"function","modifiers":[],"name":"to128x128","nameLocation":"3396:9:30","nodeType":"FunctionDefinition","parameters":{"id":10061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10060,"mutability":"mutable","name":"x","nameLocation":"3413:1:30","nodeType":"VariableDeclaration","scope":10074,"src":"3406:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":10059,"name":"int128","nodeType":"ElementaryTypeName","src":"3406:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"3405:10:30"},"returnParameters":{"id":10064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10074,"src":"3439:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10062,"name":"int256","nodeType":"ElementaryTypeName","src":"3439:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"3438:8:30"},"scope":12797,"src":"3387:133:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10109,"nodeType":"Block","src":"3813:180:30","statements":[{"id":10108,"nodeType":"UncheckedBlock","src":"3823:164:30","statements":[{"assignments":[10085],"declarations":[{"constant":false,"id":10085,"mutability":"mutable","name":"result","nameLocation":"3854:6:30","nodeType":"VariableDeclaration","scope":10108,"src":"3847:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10084,"name":"int256","nodeType":"ElementaryTypeName","src":"3847:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":10092,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":10088,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10077,"src":"3870:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":10087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3863:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":10086,"name":"int256","nodeType":"ElementaryTypeName","src":"3863:6:30","typeDescriptions":{}}},"id":10089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:9:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10090,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10079,"src":"3875:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"3863:13:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"3847:29:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10094,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10085,"src":"3898:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":10095,"name":"MIN_64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9926,"src":"3908:9:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"3898:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10097,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10085,"src":"3921:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":10098,"name":"MAX_64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9929,"src":"3931:9:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"3921:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3898:42:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10093,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"3890:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":10101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:51:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10102,"nodeType":"ExpressionStatement","src":"3890:51:30"},{"expression":{"arguments":[{"id":10105,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10085,"src":"3969:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3962:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":10103,"name":"int128","nodeType":"ElementaryTypeName","src":"3962:6:30","typeDescriptions":{}}},"id":10106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3962:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"functionReturnParameters":10083,"id":10107,"nodeType":"Return","src":"3955:21:30"}]}]},"documentation":{"id":10075,"nodeType":"StructuredDocumentation","src":"3526:218:30","text":" Calculate x + y.  Revert on overflow.\n @param x signed 64.64-bit fixed point number\n @param y signed 64.64-bit fixed point number\n @return signed 64.64-bit fixed point number"},"id":10110,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"3758:3:30","nodeType":"FunctionDefinition","parameters":{"id":10080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10077,"mutability":"mutable","name":"x","nameLocation":"3769:1:30","nodeType":"VariableDeclaration","scope":10110,"src":"3762:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":10076,"name":"int128","nodeType":"ElementaryTypeName","src":"3762:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":10079,"mutability":"mutable","name":"y","nameLocation":"3779:1:30","nodeType":"VariableDeclaration","scope":10110,"src":"3772:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":10078,"name":"int128","nodeType":"ElementaryTypeName","src":"3772:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"3761:20:30"},"returnParameters":{"id":10083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10110,"src":"3805:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":10081,"name":"int128","nodeType":"ElementaryTypeName","src":"3805:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"3804:8:30"},"scope":12797,"src":"3749:244:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10145,"nodeType":"Block","src":"4286:180:30","statements":[{"id":10144,"nodeType":"UncheckedBlock","src":"4296:164:30","statements":[{"assignments":[10121],"declarations":[{"constant":false,"id":10121,"mutability":"mutable","name":"result","nameLocation":"4327:6:30","nodeType":"VariableDeclaration","scope":10144,"src":"4320:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10120,"name":"int256","nodeType":"ElementaryTypeName","src":"4320:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":10128,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":10124,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10113,"src":"4343:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":10123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4336:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":10122,"name":"int256","nodeType":"ElementaryTypeName","src":"4336:6:30","typeDescriptions":{}}},"id":10125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4336:9:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":10126,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10115,"src":"4348:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"4336:13:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"4320:29:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10130,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10121,"src":"4371:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":10131,"name":"MIN_64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9926,"src":"4381:9:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"4371:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10133,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10121,"src":"4394:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":10134,"name":"MAX_64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9929,"src":"4404:9:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"4394:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4371:42:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10129,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4363:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":10137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4363:51:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10138,"nodeType":"ExpressionStatement","src":"4363:51:30"},{"expression":{"arguments":[{"id":10141,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10121,"src":"4442:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4435:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":10139,"name":"int128","nodeType":"ElementaryTypeName","src":"4435:6:30","typeDescriptions":{}}},"id":10142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4435:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"functionReturnParameters":10119,"id":10143,"nodeType":"Return","src":"4428:21:30"}]}]},"documentation":{"id":10111,"nodeType":"StructuredDocumentation","src":"3999:218:30","text":" Calculate x - y.  Revert on overflow.\n @param x signed 64.64-bit fixed point number\n @param y signed 64.64-bit fixed point number\n @return signed 64.64-bit fixed point number"},"id":10146,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"4231:3:30","nodeType":"FunctionDefinition","parameters":{"id":10116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10113,"mutability":"mutable","name":"x","nameLocation":"4242:1:30","nodeType":"VariableDeclaration","scope":10146,"src":"4235:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":10112,"name":"int128","nodeType":"ElementaryTypeName","src":"4235:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":10115,"mutability":"mutable","name":"y","nameLocation":"4252:1:30","nodeType":"VariableDeclaration","scope":10146,"src":"4245:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":10114,"name":"int128","nodeType":"ElementaryTypeName","src":"4245:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"4234:20:30"},"returnParameters":{"id":10119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10146,"src":"4278:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":10117,"name":"int128","nodeType":"ElementaryTypeName","src":"4278:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"4277:8:30"},"scope":12797,"src":"4222:244:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10183,"nodeType":"Block","src":"4773:186:30","statements":[{"id":10182,"nodeType":"UncheckedBlock","src":"4783:170:30","statements":[{"assignments":[10157],"declarations":[{"constant":false,"id":10157,"mutability":"mutable","name":"result","nameLocation":"4814:6:30","nodeType":"VariableDeclaration","scope":10182,"src":"4807:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10156,"name":"int256","nodeType":"ElementaryTypeName","src":"4807:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":10166,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":10160,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10149,"src":"4830:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":10159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4823:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":10158,"name":"int256","nodeType":"ElementaryTypeName","src":"4823:6:30","typeDescriptions":{}}},"id":10161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:9:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":10162,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10151,"src":"4835:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"4823:13:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":10164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4840:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"4823:19:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"4807:35:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10168,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10157,"src":"4864:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":10169,"name":"MIN_64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9926,"src":"4874:9:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"4864:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10171,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10157,"src":"4887:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":10172,"name":"MAX_64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9929,"src":"4897:9:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"4887:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4864:42:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10167,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4856:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":10175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4856:51:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10176,"nodeType":"ExpressionStatement","src":"4856:51:30"},{"expression":{"arguments":[{"id":10179,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10157,"src":"4935:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4928:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":10177,"name":"int128","nodeType":"ElementaryTypeName","src":"4928:6:30","typeDescriptions":{}}},"id":10180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4928:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"functionReturnParameters":10155,"id":10181,"nodeType":"Return","src":"4921:21:30"}]}]},"documentation":{"id":10147,"nodeType":"StructuredDocumentation","src":"4472:232:30","text":" Calculate x * y rounding down.  Revert on overflow.\n @param x signed 64.64-bit fixed point number\n @param y signed 64.64-bit fixed point number\n @return signed 64.64-bit fixed point number"},"id":10184,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"4718:3:30","nodeType":"FunctionDefinition","parameters":{"id":10152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10149,"mutability":"mutable","name":"x","nameLocation":"4729:1:30","nodeType":"VariableDeclaration","scope":10184,"src":"4722:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":10148,"name":"int128","nodeType":"ElementaryTypeName","src":"4722:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":10151,"mutability":"mutable","name":"y","nameLocation":"4739:1:30","nodeType":"VariableDeclaration","scope":10184,"src":"4732:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":10150,"name":"int128","nodeType":"ElementaryTypeName","src":"4732:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"4721:20:30"},"returnParameters":{"id":10155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10184,"src":"4765:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":10153,"name":"int128","nodeType":"ElementaryTypeName","src":"4765:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"4764:8:30"},"scope":12797,"src":"4709:250:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10287,"nodeType":"Block","src":"5349:1186:30","statements":[{"id":10286,"nodeType":"UncheckedBlock","src":"5359:1170:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":10196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10194,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10187,"src":"5387:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":10195,"name":"MIN_64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9926,"src":"5392:9:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"5387:14:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":10284,"nodeType":"Block","src":"5662:857:30","statements":[{"assignments":[10215],"declarations":[{"constant":false,"id":10215,"mutability":"mutable","name":"negativeResult","nameLocation":"5685:14:30","nodeType":"VariableDeclaration","scope":10284,"src":"5680:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10214,"name":"bool","nodeType":"ElementaryTypeName","src":"5680:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":10217,"initialValue":{"hexValue":"66616c7365","id":10216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5702:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"5680:27:30"},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":10220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10218,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10187,"src":"5729:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":10219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5733:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5729:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10231,"nodeType":"IfStatement","src":"5725:101:30","trueBody":{"id":10230,"nodeType":"Block","src":"5736:90:30","statements":[{"expression":{"id":10224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10221,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10187,"src":"5758:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"5762:2:30","subExpression":{"id":10222,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10187,"src":"5763:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"5758:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":10225,"nodeType":"ExpressionStatement","src":"5758:6:30"},{"expression":{"id":10228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10226,"name":"negativeResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10215,"src":"5786:14:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":10227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5803:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5786:21:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10229,"nodeType":"ExpressionStatement","src":"5786:21:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10232,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10189,"src":"5847:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":10233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5851:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5847:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10246,"nodeType":"IfStatement","src":"5843:149:30","trueBody":{"id":10245,"nodeType":"Block","src":"5854:138:30","statements":[{"expression":{"id":10238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10235,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10189,"src":"5876:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"5880:2:30","subExpression":{"id":10236,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10189,"src":"5881:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"5876:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":10239,"nodeType":"ExpressionStatement","src":"5876:6:30"},{"expression":{"id":10243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10240,"name":"negativeResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10215,"src":"5941:14:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5958:15:30","subExpression":{"id":10241,"name":"negativeResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10215,"src":"5959:14:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5941:32:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10244,"nodeType":"ExpressionStatement","src":"5941:32:30"}]}},{"assignments":[10248],"declarations":[{"constant":false,"id":10248,"mutability":"mutable","name":"absoluteResult","nameLocation":"6017:14:30","nodeType":"VariableDeclaration","scope":10284,"src":"6009:22:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10247,"name":"uint256","nodeType":"ElementaryTypeName","src":"6009:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10256,"initialValue":{"arguments":[{"id":10250,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10187,"src":"6039:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},{"arguments":[{"id":10253,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10189,"src":"6050:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6042:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10251,"name":"uint256","nodeType":"ElementaryTypeName","src":"6042:7:30","typeDescriptions":{}}},"id":10254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6042:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10249,"name":"mulu","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10367,"src":"6034:4:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int128_$_t_uint256_$returns$_t_uint256_$","typeString":"function (int128,uint256) pure returns (uint256)"}},"id":10255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6034:19:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6009:44:30"},{"condition":{"id":10257,"name":"negativeResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10215,"src":"6075:14:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":10282,"nodeType":"Block","src":"6320:185:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10272,"name":"absoluteResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10248,"src":"6350:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646","id":10273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6368:66:30","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},"src":"6350:84:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10271,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"6342:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":10275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6342:93:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10276,"nodeType":"ExpressionStatement","src":"6342:93:30"},{"expression":{"arguments":[{"id":10279,"name":"absoluteResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10248,"src":"6471:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6464:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":10277,"name":"int256","nodeType":"ElementaryTypeName","src":"6464:6:30","typeDescriptions":{}}},"id":10280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6464:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":10193,"id":10281,"nodeType":"Return","src":"6457:29:30"}]},"id":10283,"nodeType":"IfStatement","src":"6071:434:30","trueBody":{"id":10270,"nodeType":"Block","src":"6091:223:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10259,"name":"absoluteResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10248,"src":"6121:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"307838303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030","id":10260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6139:66:30","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"value":"0x8000000000000000000000000000000000000000000000000000000000000000"},"src":"6121:84:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10258,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"6113:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":10262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6113:93:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10263,"nodeType":"ExpressionStatement","src":"6113:93:30"},{"expression":{"id":10268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"6235:23:30","subExpression":{"arguments":[{"id":10266,"name":"absoluteResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10248,"src":"6243:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6236:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":10264,"name":"int256","nodeType":"ElementaryTypeName","src":"6236:6:30","typeDescriptions":{}}},"id":10267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6236:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":10193,"id":10269,"nodeType":"Return","src":"6228:30:30"}]}}]},"id":10285,"nodeType":"IfStatement","src":"5383:1136:30","trueBody":{"id":10213,"nodeType":"Block","src":"5403:253:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10198,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10189,"src":"5450:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":10200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"5455:51:30","subExpression":{"hexValue":"3078464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646","id":10199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5456:50:30","typeDescriptions":{"typeIdentifier":"t_rational_6277101735386680763835789423207666416102355444464034512895_by_1","typeString":"int_const 6277...(50 digits omitted)...2895"},"value":"0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_6277101735386680763835789423207666416102355444464034512895_by_1","typeString":"int_const -627...(51 digits omitted)...2895"}},"src":"5450:56:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10202,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10189,"src":"5534:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"307831303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030","id":10203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5539:51:30","typeDescriptions":{"typeIdentifier":"t_rational_6277101735386680763835789423207666416102355444464034512896_by_1","typeString":"int_const 6277...(50 digits omitted)...2896"},"value":"0x1000000000000000000000000000000000000000000000000"},"src":"5534:56:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5450:140:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10197,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"5421:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":10206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5421:187:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10207,"nodeType":"ExpressionStatement","src":"5421:187:30"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"5633:2:30","subExpression":{"id":10208,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10189,"src":"5634:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3633","id":10210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5639:2:30","typeDescriptions":{"typeIdentifier":"t_rational_63_by_1","typeString":"int_const 63"},"value":"63"},"src":"5633:8:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":10193,"id":10212,"nodeType":"Return","src":"5626:15:30"}]}}]}]},"documentation":{"id":10185,"nodeType":"StructuredDocumentation","src":"4965:314:30","text":" Calculate x * y rounding towards zero, where x is signed 64.64 fixed point\n number and y is signed 256-bit integer number.  Revert on overflow.\n @param x signed 64.64 fixed point number\n @param y signed 256-bit integer number\n @return signed 256-bit integer number"},"id":10288,"implemented":true,"kind":"function","modifiers":[],"name":"muli","nameLocation":"5293:4:30","nodeType":"FunctionDefinition","parameters":{"id":10190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10187,"mutability":"mutable","name":"x","nameLocation":"5305:1:30","nodeType":"VariableDeclaration","scope":10288,"src":"5298:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":10186,"name":"int128","nodeType":"ElementaryTypeName","src":"5298:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":10189,"mutability":"mutable","name":"y","nameLocation":"5315:1:30","nodeType":"VariableDeclaration","scope":10288,"src":"5308:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10188,"name":"int256","nodeType":"ElementaryTypeName","src":"5308:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"5297:20:30"},"returnParameters":{"id":10193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10288,"src":"5341:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10191,"name":"int256","nodeType":"ElementaryTypeName","src":"5341:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"5340:8:30"},"scope":12797,"src":"5284:1251:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10366,"nodeType":"Block","src":"6925:488:30","statements":[{"id":10365,"nodeType":"UncheckedBlock","src":"6935:472:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10298,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10293,"src":"6963:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6968:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6963:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10303,"nodeType":"IfStatement","src":"6959:20:30","trueBody":{"expression":{"hexValue":"30","id":10301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6978:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":10297,"id":10302,"nodeType":"Return","src":"6971:8:30"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":10307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10305,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10291,"src":"7002:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":10306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7007:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7002:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10304,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"6994:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":10308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6994:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10309,"nodeType":"ExpressionStatement","src":"6994:15:30"},{"assignments":[10311],"declarations":[{"constant":false,"id":10311,"mutability":"mutable","name":"lo","nameLocation":"7032:2:30","nodeType":"VariableDeclaration","scope":10365,"src":"7024:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10310,"name":"uint256","nodeType":"ElementaryTypeName","src":"7024:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10327,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":10316,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10291,"src":"7053:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":10315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7046:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":10314,"name":"int256","nodeType":"ElementaryTypeName","src":"7046:6:30","typeDescriptions":{}}},"id":10317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7046:9:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7038:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10312,"name":"uint256","nodeType":"ElementaryTypeName","src":"7038:7:30","typeDescriptions":{}}},"id":10318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7038:18:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10319,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10293,"src":"7060:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646464646464646464646464646464646464646464646464646464646464646","id":10320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7064:34:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},"src":"7060:38:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10322,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7059:40:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7038:61:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10324,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7037:63:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":10325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7104:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"7037:69:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7024:82:30"},{"assignments":[10329],"declarations":[{"constant":false,"id":10329,"mutability":"mutable","name":"hi","nameLocation":"7128:2:30","nodeType":"VariableDeclaration","scope":10365,"src":"7120:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10328,"name":"uint256","nodeType":"ElementaryTypeName","src":"7120:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10342,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":10334,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10291,"src":"7148:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":10333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7141:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":10332,"name":"int256","nodeType":"ElementaryTypeName","src":"7141:6:30","typeDescriptions":{}}},"id":10335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7141:9:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7133:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10330,"name":"uint256","nodeType":"ElementaryTypeName","src":"7133:7:30","typeDescriptions":{}}},"id":10336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7133:18:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10337,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10293,"src":"7155:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":10338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7160:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"7155:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10340,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7154:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7133:31:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7120:44:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10344,"name":"hi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10329,"src":"7187:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3078464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646","id":10345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7193:50:30","typeDescriptions":{"typeIdentifier":"t_rational_6277101735386680763835789423207666416102355444464034512895_by_1","typeString":"int_const 6277...(50 digits omitted)...2895"},"value":"0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},"src":"7187:56:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10343,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"7179:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":10347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7179:65:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10348,"nodeType":"ExpressionStatement","src":"7179:65:30"},{"expression":{"id":10351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10349,"name":"hi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10329,"src":"7258:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":10350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7265:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"7258:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10352,"nodeType":"ExpressionStatement","src":"7258:9:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10354,"name":"hi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10329,"src":"7290:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"307846464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646","id":10355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7296:66:30","typeDescriptions":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1","typeString":"int_const 1157...(70 digits omitted)...9935"},"value":"0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":10356,"name":"lo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10311,"src":"7365:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7296:71:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7290:77:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10353,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"7282:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":10359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7282:86:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10360,"nodeType":"ExpressionStatement","src":"7282:86:30"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10361,"name":"hi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10329,"src":"7389:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10362,"name":"lo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10311,"src":"7394:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7389:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10297,"id":10364,"nodeType":"Return","src":"7382:14:30"}]}]},"documentation":{"id":10289,"nodeType":"StructuredDocumentation","src":"6541:312:30","text":" Calculate x * y rounding down, where x is signed 64.64 fixed point number\n and y is unsigned 256-bit integer number.  Revert on overflow.\n @param x signed 64.64 fixed point number\n @param y unsigned 256-bit integer number\n @return unsigned 256-bit integer number"},"id":10367,"implemented":true,"kind":"function","modifiers":[],"name":"mulu","nameLocation":"6867:4:30","nodeType":"FunctionDefinition","parameters":{"id":10294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10291,"mutability":"mutable","name":"x","nameLocation":"6879:1:30","nodeType":"VariableDeclaration","scope":10367,"src":"6872:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":10290,"name":"int128","nodeType":"ElementaryTypeName","src":"6872:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":10293,"mutability":"mutable","name":"y","nameLocation":"6890:1:30","nodeType":"VariableDeclaration","scope":10367,"src":"6882:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10292,"name":"uint256","nodeType":"ElementaryTypeName","src":"6882:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6871:21:30"},"returnParameters":{"id":10297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10367,"src":"6916:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10295,"name":"uint256","nodeType":"ElementaryTypeName","src":"6916:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6915:9:30"},"scope":12797,"src":"6858:555:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10411,"nodeType":"Block","src":"7753:217:30","statements":[{"id":10410,"nodeType":"UncheckedBlock","src":"7763:201:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":10380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10378,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10372,"src":"7795:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":10379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7800:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7795:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10377,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"7787:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":10381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7787:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10382,"nodeType":"ExpressionStatement","src":"7787:15:30"},{"assignments":[10384],"declarations":[{"constant":false,"id":10384,"mutability":"mutable","name":"result","nameLocation":"7823:6:30","nodeType":"VariableDeclaration","scope":10410,"src":"7816:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10383,"name":"int256","nodeType":"ElementaryTypeName","src":"7816:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":10394,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":10387,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10370,"src":"7840:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":10386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7833:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":10385,"name":"int256","nodeType":"ElementaryTypeName","src":"7833:6:30","typeDescriptions":{}}},"id":10388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7833:9:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":10389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7846:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"7833:15:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":10391,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7832:17:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":10392,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10372,"src":"7852:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"7832:21:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"7816:37:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10396,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10384,"src":"7875:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":10397,"name":"MIN_64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9926,"src":"7885:9:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"7875:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10399,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10384,"src":"7898:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":10400,"name":"MAX_64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9929,"src":"7908:9:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"7898:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7875:42:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10395,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"7867:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":10403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7867:51:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10404,"nodeType":"ExpressionStatement","src":"7867:51:30"},{"expression":{"arguments":[{"id":10407,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10384,"src":"7946:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7939:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":10405,"name":"int128","nodeType":"ElementaryTypeName","src":"7939:6:30","typeDescriptions":{}}},"id":10408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7939:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"functionReturnParameters":10376,"id":10409,"nodeType":"Return","src":"7932:21:30"}]}]},"documentation":{"id":10368,"nodeType":"StructuredDocumentation","src":"7419:265:30","text":" Calculate x / y rounding towards zero.  Revert on overflow or when y is\n zero.\n @param x signed 64.64-bit fixed point number\n @param y signed 64.64-bit fixed point number\n @return signed 64.64-bit fixed point number"},"id":10412,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"7698:3:30","nodeType":"FunctionDefinition","parameters":{"id":10373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10370,"mutability":"mutable","name":"x","nameLocation":"7709:1:30","nodeType":"VariableDeclaration","scope":10412,"src":"7702:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":10369,"name":"int128","nodeType":"ElementaryTypeName","src":"7702:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":10372,"mutability":"mutable","name":"y","nameLocation":"7719:1:30","nodeType":"VariableDeclaration","scope":10412,"src":"7712:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":10371,"name":"int128","nodeType":"ElementaryTypeName","src":"7712:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"7701:20:30"},"returnParameters":{"id":10376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10412,"src":"7745:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":10374,"name":"int128","nodeType":"ElementaryTypeName","src":"7745:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"7744:8:30"},"scope":12797,"src":"7689:281:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10502,"nodeType":"Block","src":"8349:861:30","statements":[{"id":10501,"nodeType":"UncheckedBlock","src":"8359:845:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10423,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10417,"src":"8391:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":10424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8396:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8391:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10422,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"8383:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":10426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8383:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10427,"nodeType":"ExpressionStatement","src":"8383:15:30"},{"assignments":[10429],"declarations":[{"constant":false,"id":10429,"mutability":"mutable","name":"negativeResult","nameLocation":"8418:14:30","nodeType":"VariableDeclaration","scope":10501,"src":"8413:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10428,"name":"bool","nodeType":"ElementaryTypeName","src":"8413:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":10431,"initialValue":{"hexValue":"66616c7365","id":10430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8435:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"8413:27:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10432,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10415,"src":"8458:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":10433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8462:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8458:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10445,"nodeType":"IfStatement","src":"8454:126:30","trueBody":{"id":10444,"nodeType":"Block","src":"8465:115:30","statements":[{"expression":{"id":10438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10435,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10415,"src":"8483:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"8487:2:30","subExpression":{"id":10436,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10415,"src":"8488:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"8483:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":10439,"nodeType":"ExpressionStatement","src":"8483:6:30"},{"expression":{"id":10442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10440,"name":"negativeResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10429,"src":"8544:14:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":10441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8561:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8544:21:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10443,"nodeType":"ExpressionStatement","src":"8544:21:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10446,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10417,"src":"8597:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":10447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8601:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8597:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10460,"nodeType":"IfStatement","src":"8593:137:30","trueBody":{"id":10459,"nodeType":"Block","src":"8604:126:30","statements":[{"expression":{"id":10452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10449,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10417,"src":"8622:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"8626:2:30","subExpression":{"id":10450,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10417,"src":"8627:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"8622:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":10453,"nodeType":"ExpressionStatement","src":"8622:6:30"},{"expression":{"id":10457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10454,"name":"negativeResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10429,"src":"8683:14:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8700:15:30","subExpression":{"id":10455,"name":"negativeResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10429,"src":"8701:14:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8683:32:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10458,"nodeType":"ExpressionStatement","src":"8683:32:30"}]}},{"assignments":[10462],"declarations":[{"constant":false,"id":10462,"mutability":"mutable","name":"absoluteResult","nameLocation":"8751:14:30","nodeType":"VariableDeclaration","scope":10501,"src":"8743:22:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":10461,"name":"uint128","nodeType":"ElementaryTypeName","src":"8743:7:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"id":10473,"initialValue":{"arguments":[{"arguments":[{"id":10466,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10415,"src":"8782:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8774:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10464,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:30","typeDescriptions":{}}},"id":10467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8774:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":10470,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10417,"src":"8794:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8786:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10468,"name":"uint256","nodeType":"ElementaryTypeName","src":"8786:7:30","typeDescriptions":{}}},"id":10471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8786:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10463,"name":"divuu","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12591,"src":"8768:5:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint128_$","typeString":"function (uint256,uint256) pure returns (uint128)"}},"id":10472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8768:29:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"VariableDeclarationStatement","src":"8743:54:30"},{"condition":{"id":10474,"name":"negativeResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10429,"src":"8815:14:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":10499,"nodeType":"Block","src":"9016:178:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":10491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10489,"name":"absoluteResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10462,"src":"9042:14:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30783746464646464646464646464646464646464646464646464646464646464646","id":10490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9060:34:30","typeDescriptions":{"typeIdentifier":"t_rational_170141183460469231731687303715884105727_by_1","typeString":"int_const 1701...(31 digits omitted)...5727"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},"src":"9042:52:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10488,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"9034:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":10492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9034:61:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10493,"nodeType":"ExpressionStatement","src":"9034:61:30"},{"expression":{"arguments":[{"id":10496,"name":"absoluteResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10462,"src":"9127:14:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":10495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9120:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":10494,"name":"int128","nodeType":"ElementaryTypeName","src":"9120:6:30","typeDescriptions":{}}},"id":10497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9120:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"functionReturnParameters":10421,"id":10498,"nodeType":"Return","src":"9113:29:30"}]},"id":10500,"nodeType":"IfStatement","src":"8811:383:30","trueBody":{"id":10487,"nodeType":"Block","src":"8831:179:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":10478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10476,"name":"absoluteResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10462,"src":"8857:14:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30783830303030303030303030303030303030303030303030303030303030303030","id":10477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8875:34:30","typeDescriptions":{"typeIdentifier":"t_rational_170141183460469231731687303715884105728_by_1","typeString":"int_const 1701...(31 digits omitted)...5728"},"value":"0x80000000000000000000000000000000"},"src":"8857:52:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10475,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"8849:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":10479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8849:61:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10480,"nodeType":"ExpressionStatement","src":"8849:61:30"},{"expression":{"id":10485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"8935:23:30","subExpression":{"arguments":[{"id":10483,"name":"absoluteResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10462,"src":"8943:14:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":10482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8936:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":10481,"name":"int128","nodeType":"ElementaryTypeName","src":"8936:6:30","typeDescriptions":{}}},"id":10484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8936:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"functionReturnParameters":10421,"id":10486,"nodeType":"Return","src":"8928:30:30"}]}}]}]},"documentation":{"id":10413,"nodeType":"StructuredDocumentation","src":"7976:303:30","text":" Calculate x / y rounding towards zero, where x and y are signed 256-bit\n integer numbers.  Revert on overflow or when y is zero.\n @param x signed 256-bit integer number\n @param y signed 256-bit integer number\n @return signed 64.64-bit fixed point number"},"id":10503,"implemented":true,"kind":"function","modifiers":[],"name":"divi","nameLocation":"8293:4:30","nodeType":"FunctionDefinition","parameters":{"id":10418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10415,"mutability":"mutable","name":"x","nameLocation":"8305:1:30","nodeType":"VariableDeclaration","scope":10503,"src":"8298:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10414,"name":"int256","nodeType":"ElementaryTypeName","src":"8298:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10417,"mutability":"mutable","name":"y","nameLocation":"8315:1:30","nodeType":"VariableDeclaration","scope":10503,"src":"8308:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10416,"name":"int256","nodeType":"ElementaryTypeName","src":"8308:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8297:20:30"},"returnParameters":{"id":10421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10503,"src":"8341:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":10419,"name":"int128","nodeType":"ElementaryTypeName","src":"8341:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"8340:8:30"},"scope":12797,"src":"8284:926:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10541,"nodeType":"Block","src":"9597:194:30","statements":[{"id":10540,"nodeType":"UncheckedBlock","src":"9607:178:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10514,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10508,"src":"9639:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":10515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9644:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9639:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10513,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"9631:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":10517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9631:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10518,"nodeType":"ExpressionStatement","src":"9631:15:30"},{"assignments":[10520],"declarations":[{"constant":false,"id":10520,"mutability":"mutable","name":"result","nameLocation":"9668:6:30","nodeType":"VariableDeclaration","scope":10540,"src":"9660:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":10519,"name":"uint128","nodeType":"ElementaryTypeName","src":"9660:7:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"id":10525,"initialValue":{"arguments":[{"id":10522,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10506,"src":"9683:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10523,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10508,"src":"9686:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10521,"name":"divuu","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12591,"src":"9677:5:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint128_$","typeString":"function (uint256,uint256) pure returns (uint128)"}},"id":10524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9677:11:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"VariableDeclarationStatement","src":"9660:28:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":10532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10527,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10520,"src":"9710:6:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"id":10530,"name":"MAX_64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9929,"src":"9728:9:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":10529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9720:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":10528,"name":"uint128","nodeType":"ElementaryTypeName","src":"9720:7:30","typeDescriptions":{}}},"id":10531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9720:18:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9710:28:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10526,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"9702:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":10533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9702:37:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10534,"nodeType":"ExpressionStatement","src":"9702:37:30"},{"expression":{"arguments":[{"id":10537,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10520,"src":"9767:6:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":10536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9760:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":10535,"name":"int128","nodeType":"ElementaryTypeName","src":"9760:6:30","typeDescriptions":{}}},"id":10538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9760:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"functionReturnParameters":10512,"id":10539,"nodeType":"Return","src":"9753:21:30"}]}]},"documentation":{"id":10504,"nodeType":"StructuredDocumentation","src":"9216:309:30","text":" Calculate x / y rounding towards zero, where x and y are unsigned 256-bit\n integer numbers.  Revert on overflow or when y is zero.\n @param x unsigned 256-bit integer number\n @param y unsigned 256-bit integer number\n @return signed 64.64-bit fixed point number"},"id":10542,"implemented":true,"kind":"function","modifiers":[],"name":"divu","nameLocation":"9539:4:30","nodeType":"FunctionDefinition","parameters":{"id":10509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10506,"mutability":"mutable","name":"x","nameLocation":"9552:1:30","nodeType":"VariableDeclaration","scope":10542,"src":"9544:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10505,"name":"uint256","nodeType":"ElementaryTypeName","src":"9544:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10508,"mutability":"mutable","name":"y","nameLocation":"9563:1:30","nodeType":"VariableDeclaration","scope":10542,"src":"9555:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10507,"name":"uint256","nodeType":"ElementaryTypeName","src":"9555:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9543:22:30"},"returnParameters":{"id":10512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10542,"src":"9589:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":10510,"name":"int128","nodeType":"ElementaryTypeName","src":"9589:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"9588:8:30"},"scope":12797,"src":"9530:261:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10560,"nodeType":"Block","src":"10019:97:30","statements":[{"id":10559,"nodeType":"UncheckedBlock","src":"10029:81:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":10553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10551,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10545,"src":"10061:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10552,"name":"MIN_64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9926,"src":"10066:9:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"10061:14:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10550,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"10053:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":10554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10053:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10555,"nodeType":"ExpressionStatement","src":"10053:23:30"},{"expression":{"id":10557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10097:2:30","subExpression":{"id":10556,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10545,"src":"10098:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"functionReturnParameters":10549,"id":10558,"nodeType":"Return","src":"10090:9:30"}]}]},"documentation":{"id":10543,"nodeType":"StructuredDocumentation","src":"9797:163:30","text":" Calculate -x.  Revert on overflow.\n @param x signed 64.64-bit fixed point number\n @return signed 64.64-bit fixed point number"},"id":10561,"implemented":true,"kind":"function","modifiers":[],"name":"neg","nameLocation":"9974:3:30","nodeType":"FunctionDefinition","parameters":{"id":10546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10545,"mutability":"mutable","name":"x","nameLocation":"9985:1:30","nodeType":"VariableDeclaration","scope":10561,"src":"9978:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":10544,"name":"int128","nodeType":"ElementaryTypeName","src":"9978:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"9977:10:30"},"returnParameters":{"id":10549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10561,"src":"10011:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":10547,"name":"int128","nodeType":"ElementaryTypeName","src":"10011:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"10010:8:30"},"scope":12797,"src":"9965:151:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10584,"nodeType":"Block","src":"10345:109:30","statements":[{"id":10583,"nodeType":"UncheckedBlock","src":"10355:93:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":10572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10570,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10564,"src":"10387:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10571,"name":"MIN_64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9926,"src":"10392:9:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"10387:14:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10569,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"10379:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":10573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10379:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10574,"nodeType":"ExpressionStatement","src":"10379:23:30"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":10577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10575,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10564,"src":"10423:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":10576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10427:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10423:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":10580,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10564,"src":"10436:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":10581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10423:14:30","trueExpression":{"id":10579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10431:2:30","subExpression":{"id":10578,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10564,"src":"10432:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"functionReturnParameters":10568,"id":10582,"nodeType":"Return","src":"10416:21:30"}]}]},"documentation":{"id":10562,"nodeType":"StructuredDocumentation","src":"10122:164:30","text":" Calculate |x|.  Revert on overflow.\n @param x signed 64.64-bit fixed point number\n @return signed 64.64-bit fixed point number"},"id":10585,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"10300:3:30","nodeType":"FunctionDefinition","parameters":{"id":10565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10564,"mutability":"mutable","name":"x","nameLocation":"10311:1:30","nodeType":"VariableDeclaration","scope":10585,"src":"10304:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":10563,"name":"int128","nodeType":"ElementaryTypeName","src":"10304:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"10303:10:30"},"returnParameters":{"id":10568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10585,"src":"10337:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":10566,"name":"int128","nodeType":"ElementaryTypeName","src":"10337:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"10336:8:30"},"scope":12797,"src":"10291:163:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10624,"nodeType":"Block","src":"10732:243:30","statements":[{"id":10623,"nodeType":"UncheckedBlock","src":"10742:227:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":10596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10594,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10588,"src":"10774:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":10595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10774:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10593,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"10766:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":10597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10766:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10598,"nodeType":"ExpressionStatement","src":"10766:15:30"},{"assignments":[10600],"declarations":[{"constant":false,"id":10600,"mutability":"mutable","name":"result","nameLocation":"10802:6:30","nodeType":"VariableDeclaration","scope":10623,"src":"10795:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10599,"name":"int256","nodeType":"ElementaryTypeName","src":"10795:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":10607,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"hexValue":"3078313030303030303030303030303030303030303030303030303030303030303030","id":10603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10818:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"value":"0x100000000000000000000000000000000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}],"id":10602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10811:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":10601,"name":"int256","nodeType":"ElementaryTypeName","src":"10811:6:30","typeDescriptions":{}}},"id":10604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10811:43:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":10605,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10588,"src":"10857:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"10811:47:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"10795:63:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10609,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10600,"src":"10880:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":10610,"name":"MIN_64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9926,"src":"10890:9:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"10880:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10612,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10600,"src":"10903:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":10613,"name":"MAX_64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9929,"src":"10913:9:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"10903:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10880:42:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10608,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"10872:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":10616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:51:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10617,"nodeType":"ExpressionStatement","src":"10872:51:30"},{"expression":{"arguments":[{"id":10620,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10600,"src":"10951:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10944:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":10618,"name":"int128","nodeType":"ElementaryTypeName","src":"10944:6:30","typeDescriptions":{}}},"id":10621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10944:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"functionReturnParameters":10592,"id":10622,"nodeType":"Return","src":"10937:21:30"}]}]},"documentation":{"id":10586,"nodeType":"StructuredDocumentation","src":"10460:213:30","text":" Calculate 1 / x rounding towards zero.  Revert on overflow or when x is\n zero.\n @param x signed 64.64-bit fixed point number\n @return signed 64.64-bit fixed point number"},"id":10625,"implemented":true,"kind":"function","modifiers":[],"name":"inv","nameLocation":"10687:3:30","nodeType":"FunctionDefinition","parameters":{"id":10589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10588,"mutability":"mutable","name":"x","nameLocation":"10698:1:30","nodeType":"VariableDeclaration","scope":10625,"src":"10691:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":10587,"name":"int128","nodeType":"ElementaryTypeName","src":"10691:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"10690:10:30"},"returnParameters":{"id":10592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10591,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10625,"src":"10724:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":10590,"name":"int128","nodeType":"ElementaryTypeName","src":"10724:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"10723:8:30"},"scope":12797,"src":"10678:297:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10652,"nodeType":"Block","src":"11304:94:30","statements":[{"id":10651,"nodeType":"UncheckedBlock","src":"11314:78:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":10639,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10628,"src":"11360:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":10638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11353:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":10637,"name":"int256","nodeType":"ElementaryTypeName","src":"11353:6:30","typeDescriptions":{}}},"id":10640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11353:9:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"id":10643,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10630,"src":"11372:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":10642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11365:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":10641,"name":"int256","nodeType":"ElementaryTypeName","src":"11365:6:30","typeDescriptions":{}}},"id":10644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11365:9:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11353:21:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":10646,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11352:23:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":10647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11379:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11352:28:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11345:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":10635,"name":"int128","nodeType":"ElementaryTypeName","src":"11345:6:30","typeDescriptions":{}}},"id":10649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11345:36:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"functionReturnParameters":10634,"id":10650,"nodeType":"Return","src":"11338:43:30"}]}]},"documentation":{"id":10626,"nodeType":"StructuredDocumentation","src":"10981:254:30","text":" Calculate arithmetics average of x and y, i.e. (x + y) / 2 rounding down.\n @param x signed 64.64-bit fixed point number\n @param y signed 64.64-bit fixed point number\n @return signed 64.64-bit fixed point number"},"id":10653,"implemented":true,"kind":"function","modifiers":[],"name":"avg","nameLocation":"11249:3:30","nodeType":"FunctionDefinition","parameters":{"id":10631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10628,"mutability":"mutable","name":"x","nameLocation":"11260:1:30","nodeType":"VariableDeclaration","scope":10653,"src":"11253:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":10627,"name":"int128","nodeType":"ElementaryTypeName","src":"11253:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":10630,"mutability":"mutable","name":"y","nameLocation":"11270:1:30","nodeType":"VariableDeclaration","scope":10653,"src":"11263:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":10629,"name":"int128","nodeType":"ElementaryTypeName","src":"11263:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"11252:20:30"},"returnParameters":{"id":10634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10653,"src":"11296:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":10632,"name":"int128","nodeType":"ElementaryTypeName","src":"11296:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"11295:8:30"},"scope":12797,"src":"11240:158:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10698,"nodeType":"Block","src":"11783:251:30","statements":[{"id":10697,"nodeType":"UncheckedBlock","src":"11793:235:30","statements":[{"assignments":[10664],"declarations":[{"constant":false,"id":10664,"mutability":"mutable","name":"m","nameLocation":"11824:1:30","nodeType":"VariableDeclaration","scope":10697,"src":"11817:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10663,"name":"int256","nodeType":"ElementaryTypeName","src":"11817:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":10674,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":10667,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10656,"src":"11835:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":10666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11828:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":10665,"name":"int256","nodeType":"ElementaryTypeName","src":"11828:6:30","typeDescriptions":{}}},"id":10668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11828:9:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":10671,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10658,"src":"11847:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":10670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11840:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":10669,"name":"int256","nodeType":"ElementaryTypeName","src":"11840:6:30","typeDescriptions":{}}},"id":10672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11840:9:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11828:21:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"11817:32:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10676,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10664,"src":"11871:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":10677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11876:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11871:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10675,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"11863:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":10679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11863:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10680,"nodeType":"ExpressionStatement","src":"11863:15:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10682,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10664,"src":"11900:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"307834303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030","id":10683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11904:66:30","typeDescriptions":{"typeIdentifier":"t_rational_28948022309329048855892746252171976963317496166410141009864396001978282409984_by_1","typeString":"int_const 2894...(69 digits omitted)...9984"},"value":"0x4000000000000000000000000000000000000000000000000000000000000000"},"src":"11900:70:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10681,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"11892:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":10685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11892:79:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10686,"nodeType":"ExpressionStatement","src":"11892:79:30"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":10692,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10664,"src":"12013:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12005:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10690,"name":"uint256","nodeType":"ElementaryTypeName","src":"12005:7:30","typeDescriptions":{}}},"id":10693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12005:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10689,"name":"sqrtu","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12796,"src":"11999:5:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint128_$","typeString":"function (uint256) pure returns (uint128)"}},"id":10694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11999:17:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":10688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11992:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":10687,"name":"int128","nodeType":"ElementaryTypeName","src":"11992:6:30","typeDescriptions":{}}},"id":10695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11992:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"functionReturnParameters":10662,"id":10696,"nodeType":"Return","src":"11985:32:30"}]}]},"documentation":{"id":10654,"nodeType":"StructuredDocumentation","src":"11404:309:30","text":" Calculate geometric average of x and y, i.e. sqrt (x * y) rounding down.\n Revert on overflow or in case x * y is negative.\n @param x signed 64.64-bit fixed point number\n @param y signed 64.64-bit fixed point number\n @return signed 64.64-bit fixed point number"},"id":10699,"implemented":true,"kind":"function","modifiers":[],"name":"gavg","nameLocation":"11727:4:30","nodeType":"FunctionDefinition","parameters":{"id":10659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10656,"mutability":"mutable","name":"x","nameLocation":"11739:1:30","nodeType":"VariableDeclaration","scope":10699,"src":"11732:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":10655,"name":"int128","nodeType":"ElementaryTypeName","src":"11732:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":10658,"mutability":"mutable","name":"y","nameLocation":"11749:1:30","nodeType":"VariableDeclaration","scope":10699,"src":"11742:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":10657,"name":"int128","nodeType":"ElementaryTypeName","src":"11742:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"11731:20:30"},"returnParameters":{"id":10662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10699,"src":"11775:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":10660,"name":"int128","nodeType":"ElementaryTypeName","src":"11775:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"11774:8:30"},"scope":12797,"src":"11718:316:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":11056,"nodeType":"Block","src":"12414:3143:30","statements":[{"id":11055,"nodeType":"UncheckedBlock","src":"12424:3127:30","statements":[{"assignments":[10710],"declarations":[{"constant":false,"id":10710,"mutability":"mutable","name":"negative","nameLocation":"12453:8:30","nodeType":"VariableDeclaration","scope":11055,"src":"12448:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10709,"name":"bool","nodeType":"ElementaryTypeName","src":"12448:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":10720,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":10713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10711,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10702,"src":"12464:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":10712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12468:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12464:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10714,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10704,"src":"12473:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"31","id":10715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12477:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12473:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":10717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12482:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12473:10:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12464:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12448:35:30"},{"assignments":[10722],"declarations":[{"constant":false,"id":10722,"mutability":"mutable","name":"absX","nameLocation":"12506:4:30","nodeType":"VariableDeclaration","scope":11055,"src":"12498:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10721,"name":"uint256","nodeType":"ElementaryTypeName","src":"12498:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10733,"initialValue":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":10727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10725,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10702,"src":"12521:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":10726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12525:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12521:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":10730,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10702,"src":"12534:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":10731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12521:14:30","trueExpression":{"id":10729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12529:2:30","subExpression":{"id":10728,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10702,"src":"12530:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":10724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12513:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":10723,"name":"uint128","nodeType":"ElementaryTypeName","src":"12513:7:30","typeDescriptions":{}}},"id":10732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12513:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"VariableDeclarationStatement","src":"12498:38:30"},{"assignments":[10735],"declarations":[{"constant":false,"id":10735,"mutability":"mutable","name":"absResult","nameLocation":"12558:9:30","nodeType":"VariableDeclaration","scope":11055,"src":"12550:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10734,"name":"uint256","nodeType":"ElementaryTypeName","src":"12550:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10736,"nodeType":"VariableDeclarationStatement","src":"12550:17:30"},{"expression":{"id":10739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10737,"name":"absResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10735,"src":"12581:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3078313030303030303030303030303030303030303030303030303030303030303030","id":10738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12593:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"value":"0x100000000000000000000000000000000"},"src":"12581:47:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10740,"nodeType":"ExpressionStatement","src":"12581:47:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10741,"name":"absX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"12647:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30783130303030303030303030303030303030","id":10742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12655:19:30","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"value":"0x10000000000000000"},"src":"12647:27:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":11024,"nodeType":"Block","src":"13525:1837:30","statements":[{"assignments":[10855],"declarations":[{"constant":false,"id":10855,"mutability":"mutable","name":"absXShift","nameLocation":"13551:9:30","nodeType":"VariableDeclaration","scope":11024,"src":"13543:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10854,"name":"uint256","nodeType":"ElementaryTypeName","src":"13543:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10857,"initialValue":{"hexValue":"3633","id":10856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13563:2:30","typeDescriptions":{"typeIdentifier":"t_rational_63_by_1","typeString":"int_const 63"},"value":"63"},"nodeType":"VariableDeclarationStatement","src":"13543:22:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10858,"name":"absX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"13587:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"307831303030303030303030303030303030303030303030303030","id":10859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13594:27:30","typeDescriptions":{"typeIdentifier":"t_rational_79228162514264337593543950336_by_1","typeString":"int_const 79228162514264337593543950336"},"value":"0x1000000000000000000000000"},"src":"13587:34:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10870,"nodeType":"IfStatement","src":"13583:129:30","trueBody":{"id":10869,"nodeType":"Block","src":"13623:89:30","statements":[{"expression":{"id":10863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10861,"name":"absX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"13645:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":10862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13654:2:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"13645:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10864,"nodeType":"ExpressionStatement","src":"13645:11:30"},{"expression":{"id":10867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10865,"name":"absXShift","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10855,"src":"13678:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3332","id":10866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13691:2:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"13678:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10868,"nodeType":"ExpressionStatement","src":"13678:15:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10871,"name":"absX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"13733:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30783130303030303030303030303030303030303030303030303030303030","id":10872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13740:31:30","typeDescriptions":{"typeIdentifier":"t_rational_5192296858534827628530496329220096_by_1","typeString":"int_const 5192...(26 digits omitted)...0096"},"value":"0x10000000000000000000000000000"},"src":"13733:38:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10883,"nodeType":"IfStatement","src":"13729:133:30","trueBody":{"id":10882,"nodeType":"Block","src":"13773:89:30","statements":[{"expression":{"id":10876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10874,"name":"absX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"13795:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":10875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13804:2:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13795:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10877,"nodeType":"ExpressionStatement","src":"13795:11:30"},{"expression":{"id":10880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10878,"name":"absXShift","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10855,"src":"13828:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3136","id":10879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13841:2:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13828:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10881,"nodeType":"ExpressionStatement","src":"13828:15:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10884,"name":"absX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"13883:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"307831303030303030303030303030303030303030303030303030303030303030","id":10885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13890:33:30","typeDescriptions":{"typeIdentifier":"t_rational_1329227995784915872903807060280344576_by_1","typeString":"int_const 1329...(29 digits omitted)...4576"},"value":"0x1000000000000000000000000000000"},"src":"13883:40:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10896,"nodeType":"IfStatement","src":"13879:133:30","trueBody":{"id":10895,"nodeType":"Block","src":"13925:87:30","statements":[{"expression":{"id":10889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10887,"name":"absX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"13947:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":10888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13956:1:30","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"13947:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10890,"nodeType":"ExpressionStatement","src":"13947:10:30"},{"expression":{"id":10893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10891,"name":"absXShift","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10855,"src":"13979:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"38","id":10892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13992:1:30","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"13979:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10894,"nodeType":"ExpressionStatement","src":"13979:14:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10897,"name":"absX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"14033:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30783130303030303030303030303030303030303030303030303030303030303030","id":10898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14040:34:30","typeDescriptions":{"typeIdentifier":"t_rational_21267647932558653966460912964485513216_by_1","typeString":"int_const 2126...(30 digits omitted)...3216"},"value":"0x10000000000000000000000000000000"},"src":"14033:41:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10909,"nodeType":"IfStatement","src":"14029:134:30","trueBody":{"id":10908,"nodeType":"Block","src":"14076:87:30","statements":[{"expression":{"id":10902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10900,"name":"absX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"14098:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":10901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14098:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10903,"nodeType":"ExpressionStatement","src":"14098:10:30"},{"expression":{"id":10906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10904,"name":"absXShift","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10855,"src":"14130:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"34","id":10905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14143:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14130:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10907,"nodeType":"ExpressionStatement","src":"14130:14:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10910,"name":"absX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"14184:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30783430303030303030303030303030303030303030303030303030303030303030","id":10911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14191:34:30","typeDescriptions":{"typeIdentifier":"t_rational_85070591730234615865843651857942052864_by_1","typeString":"int_const 8507...(30 digits omitted)...2864"},"value":"0x40000000000000000000000000000000"},"src":"14184:41:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10922,"nodeType":"IfStatement","src":"14180:134:30","trueBody":{"id":10921,"nodeType":"Block","src":"14227:87:30","statements":[{"expression":{"id":10915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10913,"name":"absX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"14249:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":10914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14258:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14249:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10916,"nodeType":"ExpressionStatement","src":"14249:10:30"},{"expression":{"id":10919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10917,"name":"absXShift","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10855,"src":"14281:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"32","id":10918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14294:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14281:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10920,"nodeType":"ExpressionStatement","src":"14281:14:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10923,"name":"absX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"14335:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30783830303030303030303030303030303030303030303030303030303030303030","id":10924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14342:34:30","typeDescriptions":{"typeIdentifier":"t_rational_170141183460469231731687303715884105728_by_1","typeString":"int_const 1701...(31 digits omitted)...5728"},"value":"0x80000000000000000000000000000000"},"src":"14335:41:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10935,"nodeType":"IfStatement","src":"14331:134:30","trueBody":{"id":10934,"nodeType":"Block","src":"14378:87:30","statements":[{"expression":{"id":10928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10926,"name":"absX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"14400:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":10927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14409:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14400:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10929,"nodeType":"ExpressionStatement","src":"14400:10:30"},{"expression":{"id":10932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10930,"name":"absXShift","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10855,"src":"14432:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":10931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14445:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14432:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10933,"nodeType":"ExpressionStatement","src":"14432:14:30"}]}},{"assignments":[10937],"declarations":[{"constant":false,"id":10937,"mutability":"mutable","name":"resultShift","nameLocation":"14491:11:30","nodeType":"VariableDeclaration","scope":11024,"src":"14483:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10936,"name":"uint256","nodeType":"ElementaryTypeName","src":"14483:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10939,"initialValue":{"hexValue":"30","id":10938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14505:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14483:23:30"},{"body":{"id":11010,"nodeType":"Block","src":"14539:717:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10944,"name":"absXShift","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10855,"src":"14569:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3634","id":10945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14581:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14569:14:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10943,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"14561:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":10947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14561:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10948,"nodeType":"ExpressionStatement","src":"14561:23:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10949,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10704,"src":"14611:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307831","id":10950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14615:3:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x1"},"src":"14611:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":10952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14622:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14611:12:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10980,"nodeType":"IfStatement","src":"14607:348:30","trueBody":{"id":10979,"nodeType":"Block","src":"14625:330:30","statements":[{"expression":{"id":10960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10954,"name":"absResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10735,"src":"14651:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10955,"name":"absResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10735,"src":"14663:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":10956,"name":"absX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"14675:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14663:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313237","id":10958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14683:3:30","typeDescriptions":{"typeIdentifier":"t_rational_127_by_1","typeString":"int_const 127"},"value":"127"},"src":"14663:23:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14651:35:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10961,"nodeType":"ExpressionStatement","src":"14651:35:30"},{"expression":{"id":10964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10962,"name":"resultShift","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10937,"src":"14712:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":10963,"name":"absXShift","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10855,"src":"14727:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14712:24:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10965,"nodeType":"ExpressionStatement","src":"14712:24:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10966,"name":"absResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10735,"src":"14766:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3078313030303030303030303030303030303030303030303030303030303030303030","id":10967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14778:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"value":"0x100000000000000000000000000000000"},"src":"14766:47:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10978,"nodeType":"IfStatement","src":"14762:171:30","trueBody":{"id":10977,"nodeType":"Block","src":"14815:118:30","statements":[{"expression":{"id":10971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10969,"name":"absResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10735,"src":"14845:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"31","id":10970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14859:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14845:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10972,"nodeType":"ExpressionStatement","src":"14845:15:30"},{"expression":{"id":10975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10973,"name":"resultShift","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10937,"src":"14890:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":10974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14905:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14890:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10976,"nodeType":"ExpressionStatement","src":"14890:16:30"}]}}]}},{"expression":{"id":10987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10981,"name":"absX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"14976:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10982,"name":"absX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"14983:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":10983,"name":"absX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"14990:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14983:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313237","id":10985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14998:3:30","typeDescriptions":{"typeIdentifier":"t_rational_127_by_1","typeString":"int_const 127"},"value":"127"},"src":"14983:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14976:25:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10988,"nodeType":"ExpressionStatement","src":"14976:25:30"},{"expression":{"id":10991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10989,"name":"absXShift","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10855,"src":"15023:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":10990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15037:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15023:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10992,"nodeType":"ExpressionStatement","src":"15023:15:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10993,"name":"absX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"15064:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3078313030303030303030303030303030303030303030303030303030303030303030","id":10994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15072:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"value":"0x100000000000000000000000000000000"},"src":"15064:43:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11005,"nodeType":"IfStatement","src":"15060:148:30","trueBody":{"id":11004,"nodeType":"Block","src":"15109:99:30","statements":[{"expression":{"id":10998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10996,"name":"absX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"15135:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"31","id":10997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15144:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15135:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10999,"nodeType":"ExpressionStatement","src":"15135:10:30"},{"expression":{"id":11002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11000,"name":"absXShift","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10855,"src":"15171:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":11001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15184:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15171:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11003,"nodeType":"ExpressionStatement","src":"15171:14:30"}]}},{"expression":{"id":11008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11006,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10704,"src":"15230:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"31","id":11007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15236:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15230:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11009,"nodeType":"ExpressionStatement","src":"15230:7:30"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10940,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10704,"src":"14531:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":10941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14536:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14531:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11011,"nodeType":"WhileStatement","src":"14524:732:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11013,"name":"resultShift","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10937,"src":"15282:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3634","id":11014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15296:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"15282:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":11012,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"15274:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":11016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15274:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11017,"nodeType":"ExpressionStatement","src":"15274:25:30"},{"expression":{"id":11022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11018,"name":"absResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10735,"src":"15317:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":11019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15331:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":11020,"name":"resultShift","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10937,"src":"15336:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15331:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15317:30:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11023,"nodeType":"ExpressionStatement","src":"15317:30:30"}]},"id":11025,"nodeType":"IfStatement","src":"12643:2719:30","trueBody":{"id":10853,"nodeType":"Block","src":"12676:843:30","statements":[{"expression":{"id":10746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10744,"name":"absX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"12694:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3633","id":10745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12703:2:30","typeDescriptions":{"typeIdentifier":"t_rational_63_by_1","typeString":"int_const 63"},"value":"63"},"src":"12694:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10747,"nodeType":"ExpressionStatement","src":"12694:11:30"},{"body":{"id":10847,"nodeType":"Block","src":"12738:732:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10751,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10704,"src":"12764:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307831","id":10752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12768:3:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x1"},"src":"12764:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":10754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12775:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12764:12:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10765,"nodeType":"IfStatement","src":"12760:102:30","trueBody":{"id":10764,"nodeType":"Block","src":"12778:84:30","statements":[{"expression":{"id":10762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10756,"name":"absResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10735,"src":"12804:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10757,"name":"absResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10735,"src":"12816:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":10758,"name":"absX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"12828:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12816:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313237","id":10760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12836:3:30","typeDescriptions":{"typeIdentifier":"t_rational_127_by_1","typeString":"int_const 127"},"value":"127"},"src":"12816:23:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12804:35:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10763,"nodeType":"ExpressionStatement","src":"12804:35:30"}]}},{"expression":{"id":10772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10766,"name":"absX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"12883:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10767,"name":"absX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"12890:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":10768,"name":"absX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"12897:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12890:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313237","id":10770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12905:3:30","typeDescriptions":{"typeIdentifier":"t_rational_127_by_1","typeString":"int_const 127"},"value":"127"},"src":"12890:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12883:25:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10773,"nodeType":"ExpressionStatement","src":"12883:25:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10774,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10704,"src":"12935:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307832","id":10775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12939:3:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"0x2"},"src":"12935:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":10777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12946:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12935:12:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10788,"nodeType":"IfStatement","src":"12931:102:30","trueBody":{"id":10787,"nodeType":"Block","src":"12949:84:30","statements":[{"expression":{"id":10785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10779,"name":"absResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10735,"src":"12975:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10780,"name":"absResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10735,"src":"12987:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":10781,"name":"absX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"12999:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12987:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313237","id":10783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13007:3:30","typeDescriptions":{"typeIdentifier":"t_rational_127_by_1","typeString":"int_const 127"},"value":"127"},"src":"12987:23:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12975:35:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10786,"nodeType":"ExpressionStatement","src":"12975:35:30"}]}},{"expression":{"id":10795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10789,"name":"absX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"13054:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10790,"name":"absX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"13061:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":10791,"name":"absX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"13068:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13061:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313237","id":10793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13076:3:30","typeDescriptions":{"typeIdentifier":"t_rational_127_by_1","typeString":"int_const 127"},"value":"127"},"src":"13061:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13054:25:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10796,"nodeType":"ExpressionStatement","src":"13054:25:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10797,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10704,"src":"13106:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307834","id":10798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13110:3:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"0x4"},"src":"13106:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":10800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13117:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13106:12:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10811,"nodeType":"IfStatement","src":"13102:102:30","trueBody":{"id":10810,"nodeType":"Block","src":"13120:84:30","statements":[{"expression":{"id":10808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10802,"name":"absResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10735,"src":"13146:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10803,"name":"absResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10735,"src":"13158:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":10804,"name":"absX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"13170:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13158:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313237","id":10806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13178:3:30","typeDescriptions":{"typeIdentifier":"t_rational_127_by_1","typeString":"int_const 127"},"value":"127"},"src":"13158:23:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13146:35:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10809,"nodeType":"ExpressionStatement","src":"13146:35:30"}]}},{"expression":{"id":10818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10812,"name":"absX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"13225:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10813,"name":"absX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"13232:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":10814,"name":"absX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"13239:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13232:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313237","id":10816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13247:3:30","typeDescriptions":{"typeIdentifier":"t_rational_127_by_1","typeString":"int_const 127"},"value":"127"},"src":"13232:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13225:25:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10819,"nodeType":"ExpressionStatement","src":"13225:25:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10820,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10704,"src":"13277:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307838","id":10821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13281:3:30","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x8"},"src":"13277:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":10823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13288:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13277:12:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10834,"nodeType":"IfStatement","src":"13273:102:30","trueBody":{"id":10833,"nodeType":"Block","src":"13291:84:30","statements":[{"expression":{"id":10831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10825,"name":"absResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10735,"src":"13317:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10826,"name":"absResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10735,"src":"13329:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":10827,"name":"absX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"13341:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13329:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313237","id":10829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13349:3:30","typeDescriptions":{"typeIdentifier":"t_rational_127_by_1","typeString":"int_const 127"},"value":"127"},"src":"13329:23:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13317:35:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10832,"nodeType":"ExpressionStatement","src":"13317:35:30"}]}},{"expression":{"id":10841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10835,"name":"absX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"13396:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10836,"name":"absX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"13403:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":10837,"name":"absX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10722,"src":"13410:4:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13403:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313237","id":10839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13418:3:30","typeDescriptions":{"typeIdentifier":"t_rational_127_by_1","typeString":"int_const 127"},"value":"127"},"src":"13403:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13396:25:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10842,"nodeType":"ExpressionStatement","src":"13396:25:30"},{"expression":{"id":10845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10843,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10704,"src":"13444:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":10844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13450:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"13444:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10846,"nodeType":"ExpressionStatement","src":"13444:7:30"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10748,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10704,"src":"12730:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":10749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12730:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10848,"nodeType":"WhileStatement","src":"12723:747:30"},{"expression":{"id":10851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10849,"name":"absResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10735,"src":"13488:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":10850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13502:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"13488:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10852,"nodeType":"ExpressionStatement","src":"13488:16:30"}]}},{"assignments":[11027],"declarations":[{"constant":false,"id":11027,"mutability":"mutable","name":"result","nameLocation":"15382:6:30","nodeType":"VariableDeclaration","scope":11055,"src":"15375:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11026,"name":"int256","nodeType":"ElementaryTypeName","src":"15375:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":11039,"initialValue":{"condition":{"id":11028,"name":"negative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10710,"src":"15391:8:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":11036,"name":"absResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10735,"src":"15430:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15423:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":11034,"name":"int256","nodeType":"ElementaryTypeName","src":"15423:6:30","typeDescriptions":{}}},"id":11037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15423:17:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":11038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"15391:49:30","trueExpression":{"id":11033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"15402:18:30","subExpression":{"arguments":[{"id":11031,"name":"absResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10735,"src":"15410:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15403:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":11029,"name":"int256","nodeType":"ElementaryTypeName","src":"15403:6:30","typeDescriptions":{}}},"id":11032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15403:17:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"15375:65:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":11047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":11043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11041,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11027,"src":"15462:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":11042,"name":"MIN_64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9926,"src":"15472:9:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"15462:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":11046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11044,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11027,"src":"15485:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":11045,"name":"MAX_64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9929,"src":"15495:9:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"15485:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15462:42:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":11040,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"15454:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":11048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15454:51:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11049,"nodeType":"ExpressionStatement","src":"15454:51:30"},{"expression":{"arguments":[{"id":11052,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11027,"src":"15533:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":11051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15526:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":11050,"name":"int128","nodeType":"ElementaryTypeName","src":"15526:6:30","typeDescriptions":{}}},"id":11053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15526:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"functionReturnParameters":10708,"id":11054,"nodeType":"Return","src":"15519:21:30"}]}]},"documentation":{"id":10700,"nodeType":"StructuredDocumentation","src":"12040:304:30","text":" Calculate x^y assuming 0^0 is 1, where x is signed 64.64 fixed point number\n and y is unsigned 256-bit integer number.  Revert on overflow.\n @param x signed 64.64-bit fixed point number\n @param y uint256 value\n @return signed 64.64-bit fixed point number"},"id":11057,"implemented":true,"kind":"function","modifiers":[],"name":"pow","nameLocation":"12358:3:30","nodeType":"FunctionDefinition","parameters":{"id":10705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10702,"mutability":"mutable","name":"x","nameLocation":"12369:1:30","nodeType":"VariableDeclaration","scope":11057,"src":"12362:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":10701,"name":"int128","nodeType":"ElementaryTypeName","src":"12362:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":10704,"mutability":"mutable","name":"y","nameLocation":"12380:1:30","nodeType":"VariableDeclaration","scope":11057,"src":"12372:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10703,"name":"uint256","nodeType":"ElementaryTypeName","src":"12372:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12361:21:30"},"returnParameters":{"id":10708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11057,"src":"12406:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":10706,"name":"int128","nodeType":"ElementaryTypeName","src":"12406:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"12405:8:30"},"scope":12797,"src":"12349:3208:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":11087,"nodeType":"Block","src":"15803:126:30","statements":[{"id":11086,"nodeType":"UncheckedBlock","src":"15813:110:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11066,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11060,"src":"15845:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":11067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15850:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15845:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":11065,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"15837:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":11069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15837:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11070,"nodeType":"ExpressionStatement","src":"15837:15:30"},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":11078,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11060,"src":"15901:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":11077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15894:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":11076,"name":"int256","nodeType":"ElementaryTypeName","src":"15894:6:30","typeDescriptions":{}}},"id":11079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15894:9:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":11075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15886:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":11074,"name":"uint256","nodeType":"ElementaryTypeName","src":"15886:7:30","typeDescriptions":{}}},"id":11080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15886:18:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":11081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15908:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"15886:24:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11073,"name":"sqrtu","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12796,"src":"15880:5:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint128_$","typeString":"function (uint256) pure returns (uint128)"}},"id":11083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15880:31:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":11072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15873:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":11071,"name":"int128","nodeType":"ElementaryTypeName","src":"15873:6:30","typeDescriptions":{}}},"id":11084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15873:39:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"functionReturnParameters":11064,"id":11085,"nodeType":"Return","src":"15866:46:30"}]}]},"documentation":{"id":11058,"nodeType":"StructuredDocumentation","src":"15563:180:30","text":" Calculate sqrt (x) rounding down.  Revert if x < 0.\n @param x signed 64.64-bit fixed point number\n @return signed 64.64-bit fixed point number"},"id":11088,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"15757:4:30","nodeType":"FunctionDefinition","parameters":{"id":11061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11060,"mutability":"mutable","name":"x","nameLocation":"15769:1:30","nodeType":"VariableDeclaration","scope":11088,"src":"15762:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":11059,"name":"int128","nodeType":"ElementaryTypeName","src":"15762:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"15761:10:30"},"returnParameters":{"id":11064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11088,"src":"15795:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":11062,"name":"int128","nodeType":"ElementaryTypeName","src":"15795:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"15794:8:30"},"scope":12797,"src":"15748:181:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":11265,"nodeType":"Block","src":"16176:1170:30","statements":[{"id":11264,"nodeType":"UncheckedBlock","src":"16186:1154:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11097,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11091,"src":"16218:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16222:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16218:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":11096,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"16210:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":11100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16210:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11101,"nodeType":"ExpressionStatement","src":"16210:14:30"},{"assignments":[11103],"declarations":[{"constant":false,"id":11103,"mutability":"mutable","name":"msb","nameLocation":"16246:3:30","nodeType":"VariableDeclaration","scope":11264,"src":"16239:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11102,"name":"int256","nodeType":"ElementaryTypeName","src":"16239:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":11105,"initialValue":{"hexValue":"30","id":11104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16252:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16239:14:30"},{"assignments":[11107],"declarations":[{"constant":false,"id":11107,"mutability":"mutable","name":"xc","nameLocation":"16274:2:30","nodeType":"VariableDeclaration","scope":11264,"src":"16267:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11106,"name":"int256","nodeType":"ElementaryTypeName","src":"16267:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":11109,"initialValue":{"id":11108,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11091,"src":"16279:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"16267:13:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":11112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11110,"name":"xc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11107,"src":"16298:2:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30783130303030303030303030303030303030","id":11111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16304:19:30","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"value":"0x10000000000000000"},"src":"16298:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11122,"nodeType":"IfStatement","src":"16294:100:30","trueBody":{"id":11121,"nodeType":"Block","src":"16325:69:30","statements":[{"expression":{"id":11115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11113,"name":"xc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11107,"src":"16343:2:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":11114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16350:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16343:9:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":11116,"nodeType":"ExpressionStatement","src":"16343:9:30"},{"expression":{"id":11119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11117,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11103,"src":"16370:3:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":11118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16377:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16370:9:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":11120,"nodeType":"ExpressionStatement","src":"16370:9:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":11125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11123,"name":"xc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11107,"src":"16411:2:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3078313030303030303030","id":11124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16417:11:30","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"value":"0x100000000"},"src":"16411:17:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11135,"nodeType":"IfStatement","src":"16407:92:30","trueBody":{"id":11134,"nodeType":"Block","src":"16430:69:30","statements":[{"expression":{"id":11128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11126,"name":"xc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11107,"src":"16448:2:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":11127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16455:2:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"16448:9:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":11129,"nodeType":"ExpressionStatement","src":"16448:9:30"},{"expression":{"id":11132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11130,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11103,"src":"16475:3:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":11131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16482:2:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"16475:9:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":11133,"nodeType":"ExpressionStatement","src":"16475:9:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":11138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11136,"name":"xc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11107,"src":"16516:2:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30783130303030","id":11137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16522:7:30","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"value":"0x10000"},"src":"16516:13:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11148,"nodeType":"IfStatement","src":"16512:88:30","trueBody":{"id":11147,"nodeType":"Block","src":"16531:69:30","statements":[{"expression":{"id":11141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11139,"name":"xc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11107,"src":"16549:2:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":11140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16556:2:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"16549:9:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":11142,"nodeType":"ExpressionStatement","src":"16549:9:30"},{"expression":{"id":11145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11143,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11103,"src":"16576:3:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":11144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16583:2:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"16576:9:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":11146,"nodeType":"ExpressionStatement","src":"16576:9:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":11151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11149,"name":"xc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11107,"src":"16617:2:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3078313030","id":11150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16623:5:30","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"0x100"},"src":"16617:11:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11161,"nodeType":"IfStatement","src":"16613:84:30","trueBody":{"id":11160,"nodeType":"Block","src":"16630:67:30","statements":[{"expression":{"id":11154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11152,"name":"xc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11107,"src":"16648:2:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":11153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16655:1:30","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"16648:8:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":11155,"nodeType":"ExpressionStatement","src":"16648:8:30"},{"expression":{"id":11158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11156,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11103,"src":"16674:3:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":11157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16681:1:30","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"16674:8:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":11159,"nodeType":"ExpressionStatement","src":"16674:8:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":11164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11162,"name":"xc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11107,"src":"16714:2:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30783130","id":11163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16720:4:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"0x10"},"src":"16714:10:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11174,"nodeType":"IfStatement","src":"16710:83:30","trueBody":{"id":11173,"nodeType":"Block","src":"16726:67:30","statements":[{"expression":{"id":11167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11165,"name":"xc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11107,"src":"16744:2:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":11166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16751:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"16744:8:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":11168,"nodeType":"ExpressionStatement","src":"16744:8:30"},{"expression":{"id":11171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11169,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11103,"src":"16770:3:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":11170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16777:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"16770:8:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":11172,"nodeType":"ExpressionStatement","src":"16770:8:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":11177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11175,"name":"xc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11107,"src":"16810:2:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"307834","id":11176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16816:3:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"0x4"},"src":"16810:9:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11187,"nodeType":"IfStatement","src":"16806:82:30","trueBody":{"id":11186,"nodeType":"Block","src":"16821:67:30","statements":[{"expression":{"id":11180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11178,"name":"xc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11107,"src":"16839:2:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":11179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16846:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"16839:8:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":11181,"nodeType":"ExpressionStatement","src":"16839:8:30"},{"expression":{"id":11184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11182,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11103,"src":"16865:3:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":11183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16872:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"16865:8:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":11185,"nodeType":"ExpressionStatement","src":"16865:8:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":11190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11188,"name":"xc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11107,"src":"16905:2:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"307832","id":11189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16911:3:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"0x2"},"src":"16905:9:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11195,"nodeType":"IfStatement","src":"16901:23:30","trueBody":{"expression":{"id":11193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11191,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11103,"src":"16916:3:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":11192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16923:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16916:8:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":11194,"nodeType":"ExpressionStatement","src":"16916:8:30"}},{"assignments":[11197],"declarations":[{"constant":false,"id":11197,"mutability":"mutable","name":"result","nameLocation":"16977:6:30","nodeType":"VariableDeclaration","scope":11264,"src":"16970:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11196,"name":"int256","nodeType":"ElementaryTypeName","src":"16970:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":11203,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":11202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":11200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11198,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11103,"src":"16986:3:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3634","id":11199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16992:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16986:8:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":11201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16998:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16986:14:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"16970:30:30"},{"assignments":[11205],"declarations":[{"constant":false,"id":11205,"mutability":"mutable","name":"ux","nameLocation":"17022:2:30","nodeType":"VariableDeclaration","scope":11264,"src":"17014:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11204,"name":"uint256","nodeType":"ElementaryTypeName","src":"17014:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11220,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":11210,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11091,"src":"17042:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":11209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17035:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":11208,"name":"int256","nodeType":"ElementaryTypeName","src":"17035:6:30","typeDescriptions":{}}},"id":11211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17035:9:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":11207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17027:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":11206,"name":"uint256","nodeType":"ElementaryTypeName","src":"17027:7:30","typeDescriptions":{}}},"id":11212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17027:18:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":11217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313237","id":11215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17057:3:30","typeDescriptions":{"typeIdentifier":"t_rational_127_by_1","typeString":"int_const 127"},"value":"127"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":11216,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11103,"src":"17063:3:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17057:9:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":11214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17049:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":11213,"name":"uint256","nodeType":"ElementaryTypeName","src":"17049:7:30","typeDescriptions":{}}},"id":11218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17049:18:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17027:40:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17014:53:30"},{"body":{"id":11257,"nodeType":"Block","src":"17139:155:30","statements":[{"expression":{"id":11234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11232,"name":"ux","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11205,"src":"17157:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"id":11233,"name":"ux","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11205,"src":"17163:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17157:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11235,"nodeType":"ExpressionStatement","src":"17157:8:30"},{"assignments":[11237],"declarations":[{"constant":false,"id":11237,"mutability":"mutable","name":"b","nameLocation":"17191:1:30","nodeType":"VariableDeclaration","scope":11257,"src":"17183:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11236,"name":"uint256","nodeType":"ElementaryTypeName","src":"17183:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11241,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11238,"name":"ux","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11205,"src":"17195:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":11239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17201:3:30","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"17195:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17183:21:30"},{"expression":{"id":11246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11242,"name":"ux","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11205,"src":"17222:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313237","id":11243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17229:3:30","typeDescriptions":{"typeIdentifier":"t_rational_127_by_1","typeString":"int_const 127"},"value":"127"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":11244,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11237,"src":"17235:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17229:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17222:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11247,"nodeType":"ExpressionStatement","src":"17222:14:30"},{"expression":{"id":11255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11248,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11197,"src":"17254:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":11254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11249,"name":"bit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11222,"src":"17264:3:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":11252,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11237,"src":"17277:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17270:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":11250,"name":"int256","nodeType":"ElementaryTypeName","src":"17270:6:30","typeDescriptions":{}}},"id":11253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17270:9:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17264:15:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17254:25:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":11256,"nodeType":"ExpressionStatement","src":"17254:25:30"}]},"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":11227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11225,"name":"bit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11222,"src":"17119:3:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17125:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17119:7:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11258,"initializationExpression":{"assignments":[11222],"declarations":[{"constant":false,"id":11222,"mutability":"mutable","name":"bit","nameLocation":"17093:3:30","nodeType":"VariableDeclaration","scope":11258,"src":"17086:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11221,"name":"int256","nodeType":"ElementaryTypeName","src":"17086:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":11224,"initialValue":{"hexValue":"307838303030303030303030303030303030","id":11223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17099:18:30","typeDescriptions":{"typeIdentifier":"t_rational_9223372036854775808_by_1","typeString":"int_const 9223372036854775808"},"value":"0x8000000000000000"},"nodeType":"VariableDeclarationStatement","src":"17086:31:30"},"loopExpression":{"expression":{"id":11230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11228,"name":"bit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11222,"src":"17128:3:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"31","id":11229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17136:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17128:9:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":11231,"nodeType":"ExpressionStatement","src":"17128:9:30"},"nodeType":"ForStatement","src":"17081:213:30"},{"expression":{"arguments":[{"id":11261,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11197,"src":"17322:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":11260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17315:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":11259,"name":"int128","nodeType":"ElementaryTypeName","src":"17315:6:30","typeDescriptions":{}}},"id":11262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17315:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"functionReturnParameters":11095,"id":11263,"nodeType":"Return","src":"17308:21:30"}]}]},"documentation":{"id":11089,"nodeType":"StructuredDocumentation","src":"15935:180:30","text":" Calculate binary logarithm of x.  Revert if x <= 0.\n @param x signed 64.64-bit fixed point number\n @return signed 64.64-bit fixed point number"},"id":11266,"implemented":true,"kind":"function","modifiers":[],"name":"log_2","nameLocation":"16129:5:30","nodeType":"FunctionDefinition","parameters":{"id":11092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11091,"mutability":"mutable","name":"x","nameLocation":"16142:1:30","nodeType":"VariableDeclaration","scope":11266,"src":"16135:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":11090,"name":"int128","nodeType":"ElementaryTypeName","src":"16135:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"16134:10:30"},"returnParameters":{"id":11095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11094,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11266,"src":"16168:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":11093,"name":"int128","nodeType":"ElementaryTypeName","src":"16168:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"16167:8:30"},"scope":12797,"src":"16120:1226:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":11301,"nodeType":"Block","src":"17591:172:30","statements":[{"id":11300,"nodeType":"UncheckedBlock","src":"17601:156:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11275,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11269,"src":"17633:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17637:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17633:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":11274,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"17625:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":11278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17625:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11279,"nodeType":"ExpressionStatement","src":"17625:14:30"},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":11289,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11269,"src":"17696:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":11288,"name":"log_2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11266,"src":"17690:5:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int128_$returns$_t_int128_$","typeString":"function (int128) pure returns (int128)"}},"id":11290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17690:8:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":11287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17683:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":11286,"name":"int256","nodeType":"ElementaryTypeName","src":"17683:6:30","typeDescriptions":{}}},"id":11291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17683:16:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":11285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17675:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":11284,"name":"uint256","nodeType":"ElementaryTypeName","src":"17675:7:30","typeDescriptions":{}}},"id":11292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17675:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30784231373231374637443143463739414243394533423339383033463246364146","id":11293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17703:34:30","typeDescriptions":{"typeIdentifier":"t_rational_235865763225513294137944142764154484399_by_1","typeString":"int_const 2358...(31 digits omitted)...4399"},"value":"0xB17217F7D1CF79ABC9E3B39803F2F6AF"},"src":"17675:62:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17741:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"17675:69:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17668:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":11282,"name":"int256","nodeType":"ElementaryTypeName","src":"17668:6:30","typeDescriptions":{}}},"id":11297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17668:77:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":11281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17661:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":11280,"name":"int128","nodeType":"ElementaryTypeName","src":"17661:6:30","typeDescriptions":{}}},"id":11298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17661:85:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"functionReturnParameters":11273,"id":11299,"nodeType":"Return","src":"17654:92:30"}]}]},"documentation":{"id":11267,"nodeType":"StructuredDocumentation","src":"17352:181:30","text":" Calculate natural logarithm of x.  Revert if x <= 0.\n @param x signed 64.64-bit fixed point number\n @return signed 64.64-bit fixed point number"},"id":11302,"implemented":true,"kind":"function","modifiers":[],"name":"ln","nameLocation":"17547:2:30","nodeType":"FunctionDefinition","parameters":{"id":11270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11269,"mutability":"mutable","name":"x","nameLocation":"17557:1:30","nodeType":"VariableDeclaration","scope":11302,"src":"17550:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":11268,"name":"int128","nodeType":"ElementaryTypeName","src":"17550:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"17549:10:30"},"returnParameters":{"id":11273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11302,"src":"17583:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":11271,"name":"int128","nodeType":"ElementaryTypeName","src":"17583:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"17582:8:30"},"scope":12797,"src":"17538:225:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":12323,"nodeType":"Block","src":"18011:8742:30","statements":[{"id":12322,"nodeType":"UncheckedBlock","src":"18021:8726:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11311,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"18053:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3078343030303030303030303030303030303030","id":11312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18057:20:30","typeDescriptions":{"typeIdentifier":"t_rational_1180591620717411303424_by_1","typeString":"int_const 1180591620717411303424"},"value":"0x400000000000000000"},"src":"18053:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":11310,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"18045:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":11314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18045:33:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11315,"nodeType":"ExpressionStatement","src":"18045:33:30"},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11316,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"18109:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":11318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"18113:21:30","subExpression":{"hexValue":"3078343030303030303030303030303030303030","id":11317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18114:20:30","typeDescriptions":{"typeIdentifier":"t_rational_1180591620717411303424_by_1","typeString":"int_const 1180591620717411303424"},"value":"0x400000000000000000"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1180591620717411303424_by_1","typeString":"int_const -1180591620717411303424"}},"src":"18109:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11322,"nodeType":"IfStatement","src":"18105:39:30","trueBody":{"expression":{"hexValue":"30","id":11320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18143:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":11309,"id":11321,"nodeType":"Return","src":"18136:8:30"}},{"assignments":[11324],"declarations":[{"constant":false,"id":11324,"mutability":"mutable","name":"result","nameLocation":"18180:6:30","nodeType":"VariableDeclaration","scope":12322,"src":"18172:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11323,"name":"uint256","nodeType":"ElementaryTypeName","src":"18172:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11326,"initialValue":{"hexValue":"30783830303030303030303030303030303030303030303030303030303030303030","id":11325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18189:34:30","typeDescriptions":{"typeIdentifier":"t_rational_170141183460469231731687303715884105728_by_1","typeString":"int_const 1701...(31 digits omitted)...5728"},"value":"0x80000000000000000000000000000000"},"nodeType":"VariableDeclarationStatement","src":"18172:51:30"},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11327,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"18242:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307838303030303030303030303030303030","id":11328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:18:30","typeDescriptions":{"typeIdentifier":"t_rational_9223372036854775808_by_1","typeString":"int_const 9223372036854775808"},"value":"0x8000000000000000"},"src":"18242:22:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18267:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18242:26:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11341,"nodeType":"IfStatement","src":"18238:125:30","trueBody":{"id":11340,"nodeType":"Block","src":"18270:93:30","statements":[{"expression":{"id":11338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11332,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"18288:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11333,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"18297:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313641303945363637463342434339303842324642313336364541393537443345","id":11334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18306:35:30","typeDescriptions":{"typeIdentifier":"t_rational_481231938336009023090067544955250113854_by_1","typeString":"int_const 4812...(31 digits omitted)...3854"},"value":"0x16A09E667F3BCC908B2FB1366EA957D3E"},"src":"18297:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18345:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"18297:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18288:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11339,"nodeType":"ExpressionStatement","src":"18288:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11342,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"18380:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307834303030303030303030303030303030","id":11343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18384:18:30","typeDescriptions":{"typeIdentifier":"t_rational_4611686018427387904_by_1","typeString":"int_const 4611686018427387904"},"value":"0x4000000000000000"},"src":"18380:22:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18405:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18380:26:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11356,"nodeType":"IfStatement","src":"18376:125:30","trueBody":{"id":11355,"nodeType":"Block","src":"18408:93:30","statements":[{"expression":{"id":11353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11347,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"18426:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11348,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"18435:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313330364645304133314237313532444538443541343633303543383545444543","id":11349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18444:35:30","typeDescriptions":{"typeIdentifier":"t_rational_404666211852346594250993303657235475948_by_1","typeString":"int_const 4046...(31 digits omitted)...5948"},"value":"0x1306FE0A31B7152DE8D5A46305C85EDEC"},"src":"18435:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18483:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"18435:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18426:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11354,"nodeType":"ExpressionStatement","src":"18426:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11357,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"18518:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307832303030303030303030303030303030","id":11358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18522:18:30","typeDescriptions":{"typeIdentifier":"t_rational_2305843009213693952_by_1","typeString":"int_const 2305843009213693952"},"value":"0x2000000000000000"},"src":"18518:22:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18543:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18518:26:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11371,"nodeType":"IfStatement","src":"18514:125:30","trueBody":{"id":11370,"nodeType":"Block","src":"18546:93:30","statements":[{"expression":{"id":11368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11362,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"18564:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11363,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"18573:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313137324238334337443531374144434446374338433530454231344137393146","id":11364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18582:35:30","typeDescriptions":{"typeIdentifier":"t_rational_371080552416919877990254144423618836767_by_1","typeString":"int_const 3710...(31 digits omitted)...6767"},"value":"0x1172B83C7D517ADCDF7C8C50EB14A791F"},"src":"18573:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18621:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"18573:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18564:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11369,"nodeType":"ExpressionStatement","src":"18564:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11372,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"18656:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307831303030303030303030303030303030","id":11373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18660:18:30","typeDescriptions":{"typeIdentifier":"t_rational_1152921504606846976_by_1","typeString":"int_const 1152921504606846976"},"value":"0x1000000000000000"},"src":"18656:22:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18681:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18656:26:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11386,"nodeType":"IfStatement","src":"18652:125:30","trueBody":{"id":11385,"nodeType":"Block","src":"18684:93:30","statements":[{"expression":{"id":11383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11377,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"18702:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11378,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"18711:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313042353538364346393839304636323938423932423731383432413938333633","id":11379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18720:35:30","typeDescriptions":{"typeIdentifier":"t_rational_355347954397881497469693820312941593443_by_1","typeString":"int_const 3553...(31 digits omitted)...3443"},"value":"0x10B5586CF9890F6298B92B71842A98363"},"src":"18711:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18759:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"18711:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18702:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11384,"nodeType":"ExpressionStatement","src":"18702:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11387,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"18794:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078383030303030303030303030303030","id":11388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18798:17:30","typeDescriptions":{"typeIdentifier":"t_rational_576460752303423488_by_1","typeString":"int_const 576460752303423488"},"value":"0x800000000000000"},"src":"18794:21:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18818:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18794:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11401,"nodeType":"IfStatement","src":"18790:124:30","trueBody":{"id":11400,"nodeType":"Block","src":"18821:93:30","statements":[{"expression":{"id":11398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11392,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"18839:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11393,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"18848:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313035394230443331353835373433414537433534384542363843413431374644","id":11394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18857:35:30","typeDescriptions":{"typeIdentifier":"t_rational_347733580493780928808815525413232318461_by_1","typeString":"int_const 3477...(31 digits omitted)...8461"},"value":"0x1059B0D31585743AE7C548EB68CA417FD"},"src":"18848:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18896:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"18848:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18839:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11399,"nodeType":"ExpressionStatement","src":"18839:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11402,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"18931:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078343030303030303030303030303030","id":11403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18935:17:30","typeDescriptions":{"typeIdentifier":"t_rational_288230376151711744_by_1","typeString":"int_const 288230376151711744"},"value":"0x400000000000000"},"src":"18931:21:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18955:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18931:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11416,"nodeType":"IfStatement","src":"18927:124:30","trueBody":{"id":11415,"nodeType":"Block","src":"18958:93:30","statements":[{"expression":{"id":11413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11407,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"18976:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11408,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"18985:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313032433941334537373830363045453646374341434134463741323942444538","id":11409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18994:35:30","typeDescriptions":{"typeIdentifier":"t_rational_343987798952690256687074238090730651112_by_1","typeString":"int_const 3439...(31 digits omitted)...1112"},"value":"0x102C9A3E778060EE6F7CACA4F7A29BDE8"},"src":"18985:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19033:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"18985:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18976:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11414,"nodeType":"ExpressionStatement","src":"18976:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11417,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"19068:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078323030303030303030303030303030","id":11418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19072:17:30","typeDescriptions":{"typeIdentifier":"t_rational_144115188075855872_by_1","typeString":"int_const 144115188075855872"},"value":"0x200000000000000"},"src":"19068:21:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19092:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19068:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11431,"nodeType":"IfStatement","src":"19064:124:30","trueBody":{"id":11430,"nodeType":"Block","src":"19095:93:30","statements":[{"expression":{"id":11428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11422,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"19113:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11423,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"19122:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313031363344413946423333333536443834413636414533333644434446413346","id":11424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19131:35:30","typeDescriptions":{"typeIdentifier":"t_rational_342130066523749645191881555545647086143_by_1","typeString":"int_const 3421...(31 digits omitted)...6143"},"value":"0x10163DA9FB33356D84A66AE336DCDFA3F"},"src":"19122:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19170:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19122:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19113:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11429,"nodeType":"ExpressionStatement","src":"19113:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11432,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"19205:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078313030303030303030303030303030","id":11433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19209:17:30","typeDescriptions":{"typeIdentifier":"t_rational_72057594037927936_by_1","typeString":"int_const 72057594037927936"},"value":"0x100000000000000"},"src":"19205:21:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19229:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19205:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11446,"nodeType":"IfStatement","src":"19201:124:30","trueBody":{"id":11445,"nodeType":"Block","src":"19232:93:30","statements":[{"expression":{"id":11443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11437,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"19250:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11438,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"19259:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030423141464135414243424544363132394142313345433131444339353433","id":11439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19268:35:30","typeDescriptions":{"typeIdentifier":"t_rational_341204966012395051463589306197117539651_by_1","typeString":"int_const 3412...(31 digits omitted)...9651"},"value":"0x100B1AFA5ABCBED6129AB13EC11DC9543"},"src":"19259:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19307:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19259:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19250:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11444,"nodeType":"ExpressionStatement","src":"19250:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11447,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"19342:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783830303030303030303030303030","id":11448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19346:16:30","typeDescriptions":{"typeIdentifier":"t_rational_36028797018963968_by_1","typeString":"int_const 36028797018963968"},"value":"0x80000000000000"},"src":"19342:20:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19365:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19342:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11461,"nodeType":"IfStatement","src":"19338:123:30","trueBody":{"id":11460,"nodeType":"Block","src":"19368:93:30","statements":[{"expression":{"id":11458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11452,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"19386:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11453,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"19395:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030353843383644413143303945413146463139443239344346324636373942","id":11454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19404:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340743354212339922144397487283364652955_by_1","typeString":"int_const 3407...(31 digits omitted)...2955"},"value":"0x10058C86DA1C09EA1FF19D294CF2F679B"},"src":"19395:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19443:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19395:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19386:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11459,"nodeType":"ExpressionStatement","src":"19386:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11462,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"19478:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783430303030303030303030303030","id":11463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19482:16:30","typeDescriptions":{"typeIdentifier":"t_rational_18014398509481984_by_1","typeString":"int_const 18014398509481984"},"value":"0x40000000000000"},"src":"19478:20:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19501:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19478:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11476,"nodeType":"IfStatement","src":"19474:123:30","trueBody":{"id":11475,"nodeType":"Block","src":"19504:93:30","statements":[{"expression":{"id":11473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11467,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"19522:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11468,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"19531:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030324336303545324538434543353036443231424643383941323341303046","id":11469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19540:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340512782555889898808859563671008026639_by_1","typeString":"int_const 3405...(31 digits omitted)...6639"},"value":"0x1002C605E2E8CEC506D21BFC89A23A00F"},"src":"19531:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19579:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19531:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19522:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11474,"nodeType":"ExpressionStatement","src":"19522:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11477,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"19614:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783230303030303030303030303030","id":11478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19618:16:30","typeDescriptions":{"typeIdentifier":"t_rational_9007199254740992_by_1","typeString":"int_const 9007199254740992"},"value":"0x20000000000000"},"src":"19614:20:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19637:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19614:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11491,"nodeType":"IfStatement","src":"19610:123:30","trueBody":{"id":11490,"nodeType":"Block","src":"19640:93:30","statements":[{"expression":{"id":11488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11482,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"19658:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11483,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"19667:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030313632463339303430353146413132384243413943353543333145354446","id":11484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19676:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340397555242326998647385072673097901535_by_1","typeString":"int_const 3403...(31 digits omitted)...1535"},"value":"0x100162F3904051FA128BCA9C55C31E5DF"},"src":"19667:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19715:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19667:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19658:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11489,"nodeType":"ExpressionStatement","src":"19658:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11492,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"19750:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783130303030303030303030303030","id":11493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19754:16:30","typeDescriptions":{"typeIdentifier":"t_rational_4503599627370496_by_1","typeString":"int_const 4503599627370496"},"value":"0x10000000000000"},"src":"19750:20:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19773:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19750:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11506,"nodeType":"IfStatement","src":"19746:123:30","trueBody":{"id":11505,"nodeType":"Block","src":"19776:93:30","statements":[{"expression":{"id":11503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11497,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"19794:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11498,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"19803:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030304231373545464644433736424133384533313637314341393339373235","id":11499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19812:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340339956208435708755752659506489956133_by_1","typeString":"int_const 3403...(31 digits omitted)...6133"},"value":"0x1000B175EFFDC76BA38E31671CA939725"},"src":"19803:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19851:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19803:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19794:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11504,"nodeType":"ExpressionStatement","src":"19794:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11507,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"19886:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307838303030303030303030303030","id":11508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19890:15:30","typeDescriptions":{"typeIdentifier":"t_rational_2251799813685248_by_1","typeString":"int_const 2251799813685248"},"value":"0x8000000000000"},"src":"19886:19:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19908:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19886:23:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11521,"nodeType":"IfStatement","src":"19882:122:30","trueBody":{"id":11520,"nodeType":"Block","src":"19911:93:30","statements":[{"expression":{"id":11518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11512,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"19929:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11513,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"19938:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303538424130314642394639364436434143443442313830393137433344","id":11514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19947:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340311160346490911934870813363085081661_by_1","typeString":"int_const 3403...(31 digits omitted)...1661"},"value":"0x100058BA01FB9F96D6CACD4B180917C3D"},"src":"19938:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19986:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19938:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19929:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11519,"nodeType":"ExpressionStatement","src":"19929:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11522,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"20021:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307834303030303030303030303030","id":11523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20025:15:30","typeDescriptions":{"typeIdentifier":"t_rational_1125899906842624_by_1","typeString":"int_const 1125899906842624"},"value":"0x4000000000000"},"src":"20021:19:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20043:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20021:23:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11536,"nodeType":"IfStatement","src":"20017:122:30","trueBody":{"id":11535,"nodeType":"Block","src":"20046:93:30","statements":[{"expression":{"id":11533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11527,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"20064:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11528,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"20073:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303243354343333744413934393144303938354333343843363845374233","id":11529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20082:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340296763329178528376528243588334151603_by_1","typeString":"int_const 3402...(31 digits omitted)...1603"},"value":"0x10002C5CC37DA9491D0985C348C68E7B3"},"src":"20073:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20121:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"20073:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20064:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11534,"nodeType":"ExpressionStatement","src":"20064:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11537,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"20156:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307832303030303030303030303030","id":11538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20160:15:30","typeDescriptions":{"typeIdentifier":"t_rational_562949953421312_by_1","typeString":"int_const 562949953421312"},"value":"0x2000000000000"},"src":"20156:19:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20178:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20156:23:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11551,"nodeType":"IfStatement","src":"20152:122:30","trueBody":{"id":11550,"nodeType":"Block","src":"20181:93:30","statements":[{"expression":{"id":11548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11542,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"20199:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11543,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"20208:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303136324535323545453035343735343435374435393935323932303236","id":11544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20217:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340289565048926066557319684044576333862_by_1","typeString":"int_const 3402...(31 digits omitted)...3862"},"value":"0x1000162E525EE054754457D5995292026"},"src":"20208:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20256:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"20208:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20199:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11549,"nodeType":"ExpressionStatement","src":"20199:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11552,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"20291:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307831303030303030303030303030","id":11553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20295:15:30","typeDescriptions":{"typeIdentifier":"t_rational_281474976710656_by_1","typeString":"int_const 281474976710656"},"value":"0x1000000000000"},"src":"20291:19:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20313:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20291:23:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11566,"nodeType":"IfStatement","src":"20287:122:30","trueBody":{"id":11565,"nodeType":"Block","src":"20316:93:30","statements":[{"expression":{"id":11563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11557,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"20334:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11558,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"20343:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303042313732353537373543303430363138424634413441444538334643","id":11559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20352:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340285965965899358974465315064323671036_by_1","typeString":"int_const 3402...(31 digits omitted)...1036"},"value":"0x10000B17255775C040618BF4A4ADE83FC"},"src":"20343:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20391:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"20343:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20334:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11564,"nodeType":"ExpressionStatement","src":"20334:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11567,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"20426:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078383030303030303030303030","id":11568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20430:14:30","typeDescriptions":{"typeIdentifier":"t_rational_140737488355328_by_1","typeString":"int_const 140737488355328"},"value":"0x800000000000"},"src":"20426:18:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20447:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20426:22:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11581,"nodeType":"IfStatement","src":"20422:121:30","trueBody":{"id":11580,"nodeType":"Block","src":"20450:93:30","statements":[{"expression":{"id":11578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11572,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"20468:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11573,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"20477:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303035384239314235424339414532454544383145394237443443464142","id":11574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20486:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340284166438660709872813645066166128555_by_1","typeString":"int_const 3402...(31 digits omitted)...8555"},"value":"0x1000058B91B5BC9AE2EED81E9B7D4CFAB"},"src":"20477:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20525:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"20477:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20468:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11579,"nodeType":"ExpressionStatement","src":"20468:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11582,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"20560:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078343030303030303030303030","id":11583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20564:14:30","typeDescriptions":{"typeIdentifier":"t_rational_70368744177664_by_1","typeString":"int_const 70368744177664"},"value":"0x400000000000"},"src":"20560:18:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20581:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20560:22:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11596,"nodeType":"IfStatement","src":"20556:121:30","trueBody":{"id":11595,"nodeType":"Block","src":"20584:93:30","statements":[{"expression":{"id":11593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11587,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"20602:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11588,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"20611:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303032433543383944354543364341344437433841434330313742374339","id":11589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20620:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340283266678610039476911010529773336521_by_1","typeString":"int_const 3402...(31 digits omitted)...6521"},"value":"0x100002C5C89D5EC6CA4D7C8ACC017B7C9"},"src":"20611:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20659:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"20611:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20602:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11594,"nodeType":"ExpressionStatement","src":"20602:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11597,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"20694:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078323030303030303030303030","id":11598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20698:14:30","typeDescriptions":{"typeIdentifier":"t_rational_35184372088832_by_1","typeString":"int_const 35184372088832"},"value":"0x200000000000"},"src":"20694:18:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20715:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20694:22:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11611,"nodeType":"IfStatement","src":"20690:121:30","trueBody":{"id":11610,"nodeType":"Block","src":"20718:93:30","statements":[{"expression":{"id":11608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11602,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"20736:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11603,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"20745:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303031363245343346344638333130363045303244383339413944313644","id":11604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20754:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282816799476865065514053322893021549_by_1","typeString":"int_const 3402...(31 digits omitted)...1549"},"value":"0x10000162E43F4F831060E02D839A9D16D"},"src":"20745:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20793:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"20745:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20736:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11609,"nodeType":"ExpressionStatement","src":"20736:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11612,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"20828:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078313030303030303030303030","id":11613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20832:14:30","typeDescriptions":{"typeIdentifier":"t_rational_17592186044416_by_1","typeString":"int_const 17592186044416"},"value":"0x100000000000"},"src":"20828:18:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20849:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20828:22:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11626,"nodeType":"IfStatement","src":"20824:121:30","trueBody":{"id":11625,"nodeType":"Block","src":"20852:93:30","statements":[{"expression":{"id":11623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11617,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"20870:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11618,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"20879:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030423137323142434643393944394638393045413036393131373633","id":11619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20888:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282591860133317712432962519222523747_by_1","typeString":"int_const 3402...(31 digits omitted)...3747"},"value":"0x100000B1721BCFC99D9F890EA06911763"},"src":"20879:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20927:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"20879:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20870:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11624,"nodeType":"ExpressionStatement","src":"20870:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11627,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"20962:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783830303030303030303030","id":11628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20966:13:30","typeDescriptions":{"typeIdentifier":"t_rational_8796093022208_by_1","typeString":"int_const 8796093022208"},"value":"0x80000000000"},"src":"20962:17:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20982:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20962:21:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11641,"nodeType":"IfStatement","src":"20958:120:30","trueBody":{"id":11640,"nodeType":"Block","src":"20985:93:30","statements":[{"expression":{"id":11638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11632,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"21003:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11633,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"21012:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030353842393043463145364439374639434131344442434331363238","id":11634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21021:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282479390517303956044167089727739432_by_1","typeString":"int_const 3402...(31 digits omitted)...9432"},"value":"0x10000058B90CF1E6D97F9CA14DBCC1628"},"src":"21012:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21060:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21012:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21003:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11639,"nodeType":"ExpressionStatement","src":"21003:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11642,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"21095:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783430303030303030303030","id":11643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21099:13:30","typeDescriptions":{"typeIdentifier":"t_rational_4398046511104_by_1","typeString":"int_const 4398046511104"},"value":"0x40000000000"},"src":"21095:17:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21115:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21095:21:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11656,"nodeType":"IfStatement","src":"21091:120:30","trueBody":{"id":11655,"nodeType":"Block","src":"21118:93:30","statements":[{"expression":{"id":11653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11647,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"21136:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11648,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"21145:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030324335433836334237334630313634363846364241433543413242","id":11649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21154:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282423155723237052512385577070742059_by_1","typeString":"int_const 3402...(31 digits omitted)...2059"},"value":"0x1000002C5C863B73F016468F6BAC5CA2B"},"src":"21145:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21193:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21145:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21136:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11654,"nodeType":"ExpressionStatement","src":"21136:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11657,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"21228:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783230303030303030303030","id":11658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21232:13:30","typeDescriptions":{"typeIdentifier":"t_rational_2199023255552_by_1","typeString":"int_const 2199023255552"},"value":"0x20000000000"},"src":"21228:17:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21248:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21228:21:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11671,"nodeType":"IfStatement","src":"21224:120:30","trueBody":{"id":11670,"nodeType":"Block","src":"21251:93:30","statements":[{"expression":{"id":11668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11662,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"21269:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11663,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"21278:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030313632453433304535413138463631313945334330323238324135","id":11664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21287:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282395038329688593740233918090740389_by_1","typeString":"int_const 3402...(31 digits omitted)...0389"},"value":"0x100000162E430E5A18F6119E3C02282A5"},"src":"21278:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21326:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21278:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21269:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11669,"nodeType":"ExpressionStatement","src":"21269:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11672,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"21361:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783130303030303030303030","id":11673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21365:13:30","typeDescriptions":{"typeIdentifier":"t_rational_1099511627776_by_1","typeString":"int_const 1099511627776"},"value":"0x10000000000"},"src":"21361:17:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21381:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21361:21:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11686,"nodeType":"IfStatement","src":"21357:120:30","trueBody":{"id":11685,"nodeType":"Block","src":"21384:93:30","statements":[{"expression":{"id":11683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11677,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"21402:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11678,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"21411:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030304231373231383335353134423836453644393645464431424645","id":11679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21420:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282380979633785612518603506803612670_by_1","typeString":"int_const 3402...(31 digits omitted)...2670"},"value":"0x1000000B1721835514B86E6D96EFD1BFE"},"src":"21411:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21459:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21411:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21402:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11684,"nodeType":"ExpressionStatement","src":"21402:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11687,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"21494:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307838303030303030303030","id":11688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21498:12:30","typeDescriptions":{"typeIdentifier":"t_rational_549755813888_by_1","typeString":"int_const 549755813888"},"value":"0x8000000000"},"src":"21494:16:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21513:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21494:20:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11701,"nodeType":"IfStatement","src":"21490:119:30","trueBody":{"id":11700,"nodeType":"Block","src":"21516:93:30","statements":[{"expression":{"id":11698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11692,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"21534:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11693,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"21543:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303538423930433042343843364245354446383436433542324546","id":11694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21552:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282373950286051933938400987007267567_by_1","typeString":"int_const 3402...(31 digits omitted)...7567"},"value":"0x100000058B90C0B48C6BE5DF846C5B2EF"},"src":"21543:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21591:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21543:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21534:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11699,"nodeType":"ExpressionStatement","src":"21534:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11702,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"21626:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307834303030303030303030","id":11703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21630:12:30","typeDescriptions":{"typeIdentifier":"t_rational_274877906944_by_1","typeString":"int_const 274877906944"},"value":"0x4000000000"},"src":"21626:16:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21645:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21626:20:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11716,"nodeType":"IfStatement","src":"21622:119:30","trueBody":{"id":11715,"nodeType":"Block","src":"21648:93:30","statements":[{"expression":{"id":11713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11707,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"21666:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11708,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"21675:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303243354338363031434336423945393432313343373237333741","id":11709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21684:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282370435612239547654640565033792378_by_1","typeString":"int_const 3402...(31 digits omitted)...2378"},"value":"0x10000002C5C8601CC6B9E94213C72737A"},"src":"21675:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21723:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21675:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21666:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11714,"nodeType":"ExpressionStatement","src":"21666:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11717,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"21758:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307832303030303030303030","id":11718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21762:12:30","typeDescriptions":{"typeIdentifier":"t_rational_137438953472_by_1","typeString":"int_const 137438953472"},"value":"0x2000000000"},"src":"21758:16:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21758:20:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11731,"nodeType":"IfStatement","src":"21754:119:30","trueBody":{"id":11730,"nodeType":"Block","src":"21780:93:30","statements":[{"expression":{"id":11728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11722,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"21798:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11723,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"21807:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303136324534324646463033374446333841413242323139463036","id":11724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21816:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282368678275346967764181521839267590_by_1","typeString":"int_const 3402...(31 digits omitted)...7590"},"value":"0x1000000162E42FFF037DF38AA2B219F06"},"src":"21807:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21855:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21807:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21798:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11729,"nodeType":"ExpressionStatement","src":"21798:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11732,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"21890:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307831303030303030303030","id":11733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21894:12:30","typeDescriptions":{"typeIdentifier":"t_rational_68719476736_by_1","typeString":"int_const 68719476736"},"value":"0x1000000000"},"src":"21890:16:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21909:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21890:20:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11746,"nodeType":"IfStatement","src":"21886:119:30","trueBody":{"id":11745,"nodeType":"Block","src":"21912:93:30","statements":[{"expression":{"id":11743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11737,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"21930:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11738,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"21939:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303042313732313746424139433733394141353831394634344639","id":11739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21948:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282367799606904081131786786979136761_by_1","typeString":"int_const 3402...(31 digits omitted)...6761"},"value":"0x10000000B17217FBA9C739AA5819F44F9"},"src":"21939:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21987:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21939:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21930:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11744,"nodeType":"ExpressionStatement","src":"21930:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11747,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"22022:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078383030303030303030","id":11748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22026:11:30","typeDescriptions":{"typeIdentifier":"t_rational_34359738368_by_1","typeString":"int_const 34359738368"},"value":"0x800000000"},"src":"22022:15:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22040:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22022:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11761,"nodeType":"IfStatement","src":"22018:118:30","trueBody":{"id":11760,"nodeType":"Block","src":"22043:93:30","statements":[{"expression":{"id":11758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11752,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"22061:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11753,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"22070:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303035384239304246434445453541434433433143454443383233","id":11754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22079:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282367360272683488643795553082001443_by_1","typeString":"int_const 3402...(31 digits omitted)...1443"},"value":"0x1000000058B90BFCDEE5ACD3C1CEDC823"},"src":"22070:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"22070:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22061:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11759,"nodeType":"ExpressionStatement","src":"22061:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11762,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"22153:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078343030303030303030","id":11763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22157:11:30","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"value":"0x400000000"},"src":"22153:15:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22171:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22153:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11776,"nodeType":"IfStatement","src":"22149:118:30","trueBody":{"id":11775,"nodeType":"Block","src":"22174:93:30","statements":[{"expression":{"id":11773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11767,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"22192:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11768,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"22201:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303032433543383546453331463335413641333044413142453530","id":11769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22210:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282367140605573405106851149122747984_by_1","typeString":"int_const 3402...(31 digits omitted)...7984"},"value":"0x100000002C5C85FE31F35A6A30DA1BE50"},"src":"22201:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22249:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"22201:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22192:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11774,"nodeType":"ExpressionStatement","src":"22192:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11777,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"22284:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078323030303030303030","id":11778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22288:11:30","typeDescriptions":{"typeIdentifier":"t_rational_8589934592_by_1","typeString":"int_const 8589934592"},"value":"0x200000000"},"src":"22284:15:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22302:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22284:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11791,"nodeType":"IfStatement","src":"22280:118:30","trueBody":{"id":11790,"nodeType":"Block","src":"22305:93:30","statements":[{"expression":{"id":11788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11782,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"22323:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11783,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"22332:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303031363245343246463039393943453335343142394646464346","id":11784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22341:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282367030772018416515141710341210063_by_1","typeString":"int_const 3402...(31 digits omitted)...0063"},"value":"0x10000000162E42FF0999CE3541B9FFFCF"},"src":"22332:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22380:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"22332:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22323:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11789,"nodeType":"ExpressionStatement","src":"22323:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11792,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"22415:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078313030303030303030","id":11793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:11:30","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"value":"0x100000000"},"src":"22415:15:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22433:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22415:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11806,"nodeType":"IfStatement","src":"22411:118:30","trueBody":{"id":11805,"nodeType":"Block","src":"22436:93:30","statements":[{"expression":{"id":11803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11797,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"22454:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11798,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"22463:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303030423137323137463830463445463541414444413435353534","id":11799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22472:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366975855240935513477676743808340_by_1","typeString":"int_const 3402...(31 digits omitted)...8340"},"value":"0x100000000B17217F80F4EF5AADDA45554"},"src":"22463:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22511:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"22463:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22454:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11804,"nodeType":"ExpressionStatement","src":"22454:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11807,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"22546:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783830303030303030","id":11808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22550:10:30","typeDescriptions":{"typeIdentifier":"t_rational_2147483648_by_1","typeString":"int_const 2147483648"},"value":"0x80000000"},"src":"22546:14:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22563:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22546:18:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11821,"nodeType":"IfStatement","src":"22542:117:30","trueBody":{"id":11820,"nodeType":"Block","src":"22566:93:30","statements":[{"expression":{"id":11818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11812,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"22584:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11813,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"22593:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303030353842393042464246383437394244354138314235314144","id":11814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22602:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366948396852198336193330767679917_by_1","typeString":"int_const 3402...(31 digits omitted)...9917"},"value":"0x10000000058B90BFBF8479BD5A81B51AD"},"src":"22593:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22641:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"22593:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22584:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11819,"nodeType":"ExpressionStatement","src":"22584:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11822,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"22676:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783430303030303030","id":11823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22680:10:30","typeDescriptions":{"typeIdentifier":"t_rational_1073741824_by_1","typeString":"int_const 1073741824"},"value":"0x40000000"},"src":"22676:14:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22693:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22676:18:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11836,"nodeType":"IfStatement","src":"22672:117:30","trueBody":{"id":11835,"nodeType":"Block","src":"22696:93:30","statements":[{"expression":{"id":11833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11827,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"22714:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11828,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"22723:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303030324335433835464446383442443632414533304137344343","id":11829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22732:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366934667657830578438075407037644_by_1","typeString":"int_const 3402...(31 digits omitted)...7644"},"value":"0x1000000002C5C85FDF84BD62AE30A74CC"},"src":"22723:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22771:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"22723:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22714:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11834,"nodeType":"ExpressionStatement","src":"22714:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11837,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"22806:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783230303030303030","id":11838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22810:10:30","typeDescriptions":{"typeIdentifier":"t_rational_536870912_by_1","typeString":"int_const 536870912"},"value":"0x20000000"},"src":"22806:14:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22823:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22806:18:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11851,"nodeType":"IfStatement","src":"22802:117:30","trueBody":{"id":11850,"nodeType":"Block","src":"22826:93:30","statements":[{"expression":{"id":11848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11842,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"22844:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11843,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"22853:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303030313632453432464546423246454432353735353942444141","id":11844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22862:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366927803060646907282177123794346_by_1","typeString":"int_const 3402...(31 digits omitted)...4346"},"value":"0x100000000162E42FEFB2FED257559BDAA"},"src":"22853:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22901:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"22853:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22844:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11849,"nodeType":"ExpressionStatement","src":"22844:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11852,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"22936:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783130303030303030","id":11853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22940:10:30","typeDescriptions":{"typeIdentifier":"t_rational_268435456_by_1","typeString":"int_const 268435456"},"value":"0x10000000"},"src":"22936:14:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22953:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22936:18:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11866,"nodeType":"IfStatement","src":"22932:117:30","trueBody":{"id":11865,"nodeType":"Block","src":"22956:93:30","statements":[{"expression":{"id":11863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11857,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"22974:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11858,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"22983:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303030304231373231374637443541373731364242413441394145","id":11859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22992:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366924370762055123634660330219950_by_1","typeString":"int_const 3402...(31 digits omitted)...9950"},"value":"0x1000000000B17217F7D5A7716BBA4A9AE"},"src":"22983:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23031:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"22983:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22974:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11864,"nodeType":"ExpressionStatement","src":"22974:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11867,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"23066:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307838303030303030","id":11868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23070:9:30","typeDescriptions":{"typeIdentifier":"t_rational_134217728_by_1","typeString":"int_const 134217728"},"value":"0x8000000"},"src":"23066:13:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23082:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23066:17:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11881,"nodeType":"IfStatement","src":"23062:116:30","trueBody":{"id":11880,"nodeType":"Block","src":"23085:93:30","statements":[{"expression":{"id":11878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11872,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"23103:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11873,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"23112:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303030303538423930424642453944444241433545313039434345","id":11874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23121:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366922654612759244793510020291790_by_1","typeString":"int_const 3402...(31 digits omitted)...1790"},"value":"0x100000000058B90BFBE9DDBAC5E109CCE"},"src":"23112:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23160:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23112:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23103:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11879,"nodeType":"ExpressionStatement","src":"23103:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11882,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"23195:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307834303030303030","id":11883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23199:9:30","typeDescriptions":{"typeIdentifier":"t_rational_67108864_by_1","typeString":"int_const 67108864"},"value":"0x4000000"},"src":"23195:13:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23211:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23195:17:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11896,"nodeType":"IfStatement","src":"23191:116:30","trueBody":{"id":11895,"nodeType":"Block","src":"23214:93:30","statements":[{"expression":{"id":11893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11887,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"23232:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11888,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"23241:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303030303243354338354644463442313544453646313745423044","id":11889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23250:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366921796538111308618586887023373_by_1","typeString":"int_const 3402...(31 digits omitted)...3373"},"value":"0x10000000002C5C85FDF4B15DE6F17EB0D"},"src":"23241:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23289:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23241:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11894,"nodeType":"ExpressionStatement","src":"23232:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11897,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"23324:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307832303030303030","id":11898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23328:9:30","typeDescriptions":{"typeIdentifier":"t_rational_33554432_by_1","typeString":"int_const 33554432"},"value":"0x2000000"},"src":"23324:13:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23340:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23324:17:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11911,"nodeType":"IfStatement","src":"23320:116:30","trueBody":{"id":11910,"nodeType":"Block","src":"23343:93:30","statements":[{"expression":{"id":11908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11902,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"23361:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11903,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"23370:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303030303136324534324645464134393446313437384644453035","id":11904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23379:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366921367500787341342538325810693_by_1","typeString":"int_const 3402...(31 digits omitted)...0693"},"value":"0x1000000000162E42FEFA494F1478FDE05"},"src":"23370:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23418:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23370:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23361:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11909,"nodeType":"ExpressionStatement","src":"23361:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11912,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"23453:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307831303030303030","id":11913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23457:9:30","typeDescriptions":{"typeIdentifier":"t_rational_16777216_by_1","typeString":"int_const 16777216"},"value":"0x1000000"},"src":"23453:13:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23469:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23453:17:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11926,"nodeType":"IfStatement","src":"23449:116:30","trueBody":{"id":11925,"nodeType":"Block","src":"23472:93:30","statements":[{"expression":{"id":11923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11917,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"23490:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11918,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"23499:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303030303042313732313746374432304346393237433845393443","id":11919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23508:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366921152982125357907367296559436_by_1","typeString":"int_const 3402...(31 digits omitted)...9436"},"value":"0x10000000000B17217F7D20CF927C8E94C"},"src":"23499:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23547:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23499:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23490:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11924,"nodeType":"ExpressionStatement","src":"23490:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11927,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"23582:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078383030303030","id":11928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23586:8:30","typeDescriptions":{"typeIdentifier":"t_rational_8388608_by_1","typeString":"int_const 8388608"},"value":"0x800000"},"src":"23582:12:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23597:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23582:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11941,"nodeType":"IfStatement","src":"23578:115:30","trueBody":{"id":11940,"nodeType":"Block","src":"23600:93:30","statements":[{"expression":{"id":11938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11932,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"23618:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11933,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"23627:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303030303035384239304246424538463731434234453442333344","id":11934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23636:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366921045722794366240495094772541_by_1","typeString":"int_const 3402...(31 digits omitted)...2541"},"value":"0x1000000000058B90BFBE8F71CB4E4B33D"},"src":"23627:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23675:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23627:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23618:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11939,"nodeType":"ExpressionStatement","src":"23618:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11942,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"23710:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078343030303030","id":11943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23714:8:30","typeDescriptions":{"typeIdentifier":"t_rational_4194304_by_1","typeString":"int_const 4194304"},"value":"0x400000"},"src":"23710:12:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23725:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23710:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11956,"nodeType":"IfStatement","src":"23706:115:30","trueBody":{"id":11955,"nodeType":"Block","src":"23728:93:30","statements":[{"expression":{"id":11953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11947,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"23746:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11948,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"23755:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303030303032433543383546444634373742363632423236393435","id":11949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23764:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920992093128870419737322088773_by_1","typeString":"int_const 3402...(31 digits omitted)...8773"},"value":"0x100000000002C5C85FDF477B662B26945"},"src":"23755:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23803:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23755:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23746:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11954,"nodeType":"ExpressionStatement","src":"23746:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11957,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"23838:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078323030303030","id":11958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23842:8:30","typeDescriptions":{"typeIdentifier":"t_rational_2097152_by_1","typeString":"int_const 2097152"},"value":"0x200000"},"src":"23838:12:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23853:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23838:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11971,"nodeType":"IfStatement","src":"23834:115:30","trueBody":{"id":11970,"nodeType":"Block","src":"23856:93:30","statements":[{"expression":{"id":11968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11962,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"23874:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11963,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"23883:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303030303031363245343246454641334145353333363933383843","id":11964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23892:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920965278296122512528017799308_by_1","typeString":"int_const 3402...(31 digits omitted)...9308"},"value":"0x10000000000162E42FEFA3AE53369388C"},"src":"23883:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23931:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23883:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23874:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11969,"nodeType":"ExpressionStatement","src":"23874:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11972,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"23966:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078313030303030","id":11973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23970:8:30","typeDescriptions":{"typeIdentifier":"t_rational_1048576_by_1","typeString":"int_const 1048576"},"value":"0x100000"},"src":"23966:12:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23981:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23966:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11986,"nodeType":"IfStatement","src":"23962:115:30","trueBody":{"id":11985,"nodeType":"Block","src":"23984:93:30","statements":[{"expression":{"id":11983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11977,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"24002:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11978,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"24011:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303030303030423137323137463744314433353141333839443430","id":11979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24020:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920951870879748559715761167680_by_1","typeString":"int_const 3402...(31 digits omitted)...7680"},"value":"0x100000000000B17217F7D1D351A389D40"},"src":"24011:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24059:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"24011:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24002:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11984,"nodeType":"ExpressionStatement","src":"24002:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":11989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11987,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"24094:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783830303030","id":11988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24098:7:30","typeDescriptions":{"typeIdentifier":"t_rational_524288_by_1","typeString":"int_const 524288"},"value":"0x80000"},"src":"24094:11:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24108:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24094:15:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12001,"nodeType":"IfStatement","src":"24090:114:30","trueBody":{"id":12000,"nodeType":"Block","src":"24111:93:30","statements":[{"expression":{"id":11998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11992,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"24129:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11993,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"24138:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303030303030353842393042464245384538423244334434454445","id":11994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24147:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920945167171561583507731730142_by_1","typeString":"int_const 3402...(31 digits omitted)...0142"},"value":"0x10000000000058B90BFBE8E8B2D3D4EDE"},"src":"24138:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":11996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24186:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"24138:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24129:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11999,"nodeType":"ExpressionStatement","src":"24129:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12002,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"24221:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783430303030","id":12003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24225:7:30","typeDescriptions":{"typeIdentifier":"t_rational_262144_by_1","typeString":"int_const 262144"},"value":"0x40000"},"src":"24221:11:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":12005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24235:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24221:15:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12016,"nodeType":"IfStatement","src":"24217:114:30","trueBody":{"id":12015,"nodeType":"Block","src":"24238:93:30","statements":[{"expression":{"id":12013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12007,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"24256:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12008,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"24265:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303030303030324335433835464446343734314245413645373745","id":12009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24274:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920941815317468095453241730942_by_1","typeString":"int_const 3402...(31 digits omitted)...0942"},"value":"0x1000000000002C5C85FDF4741BEA6E77E"},"src":"24265:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":12011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24313:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"24265:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24256:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12014,"nodeType":"ExpressionStatement","src":"24256:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12017,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"24348:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783230303030","id":12018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24352:7:30","typeDescriptions":{"typeIdentifier":"t_rational_131072_by_1","typeString":"int_const 131072"},"value":"0x20000"},"src":"24348:11:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":12020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24362:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24348:15:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12031,"nodeType":"IfStatement","src":"24344:114:30","trueBody":{"id":12030,"nodeType":"Block","src":"24365:93:30","statements":[{"expression":{"id":12028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12022,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"24383:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12023,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"24392:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303030303030313632453432464546413339464539353538334332","id":12024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24401:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920940139390421351438377911234_by_1","typeString":"int_const 3402...(31 digits omitted)...1234"},"value":"0x100000000000162E42FEFA39FE95583C2"},"src":"24392:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":12026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24440:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"24392:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24383:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12029,"nodeType":"ExpressionStatement","src":"24383:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12032,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"24475:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783130303030","id":12033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24479:7:30","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"value":"0x10000"},"src":"24475:11:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":12035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24489:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24475:15:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12046,"nodeType":"IfStatement","src":"24471:114:30","trueBody":{"id":12045,"nodeType":"Block","src":"24492:93:30","statements":[{"expression":{"id":12043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12037,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"24510:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12038,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"24519:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303030303030304231373231374637443143464237324234354531","id":12039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24528:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920939301426897979434041296353_by_1","typeString":"int_const 3402...(31 digits omitted)...6353"},"value":"0x1000000000000B17217F7D1CFB72B45E1"},"src":"24519:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":12041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24567:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"24519:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24510:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12044,"nodeType":"ExpressionStatement","src":"24510:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12047,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"24602:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307838303030","id":12048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24606:6:30","typeDescriptions":{"typeIdentifier":"t_rational_32768_by_1","typeString":"int_const 32768"},"value":"0x8000"},"src":"24602:10:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":12050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24615:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24602:14:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12061,"nodeType":"IfStatement","src":"24598:113:30","trueBody":{"id":12060,"nodeType":"Block","src":"24618:93:30","statements":[{"expression":{"id":12058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12052,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"24636:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12053,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"24645:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303030303030303538423930424642453845374343333543334630","id":12054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24654:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938882445136293432646812656_by_1","typeString":"int_const 3402...(31 digits omitted)...2656"},"value":"0x100000000000058B90BFBE8E7CC35C3F0"},"src":"24645:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":12056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24693:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"24645:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24636:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12059,"nodeType":"ExpressionStatement","src":"24636:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12062,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"24728:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307834303030","id":12063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24732:6:30","typeDescriptions":{"typeIdentifier":"t_rational_16384_by_1","typeString":"int_const 16384"},"value":"0x4000"},"src":"24728:10:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":12065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24741:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24728:14:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12076,"nodeType":"IfStatement","src":"24724:113:30","trueBody":{"id":12075,"nodeType":"Block","src":"24744:93:30","statements":[{"expression":{"id":12073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12067,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"24762:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12068,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"24771:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303030303030303243354338354644463437334532343245413338","id":12069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24780:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938672954255450432143026744_by_1","typeString":"int_const 3402...(31 digits omitted)...6744"},"value":"0x10000000000002C5C85FDF473E242EA38"},"src":"24771:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":12071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24819:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"24771:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24762:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12074,"nodeType":"ExpressionStatement","src":"24762:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12077,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"24854:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307832303030","id":12078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24858:6:30","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"value":"0x2000"},"src":"24854:10:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":12080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24867:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24854:14:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12091,"nodeType":"IfStatement","src":"24850:113:30","trueBody":{"id":12090,"nodeType":"Block","src":"24870:93:30","statements":[{"expression":{"id":12088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12082,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"24888:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12083,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"24897:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303030303030303136324534324645464133394630324237373243","id":12084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24906:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938568208815028931939497772_by_1","typeString":"int_const 3402...(31 digits omitted)...7772"},"value":"0x1000000000000162E42FEFA39F02B772C"},"src":"24897:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":12086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24945:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"24897:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24888:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12089,"nodeType":"ExpressionStatement","src":"24888:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12092,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"24980:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307831303030","id":12093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24984:6:30","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"value":"0x1000"},"src":"24980:10:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":12095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24993:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24980:14:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12106,"nodeType":"IfStatement","src":"24976:113:30","trueBody":{"id":12105,"nodeType":"Block","src":"24996:93:30","statements":[{"expression":{"id":12103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12097,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"25014:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12098,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"25023:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303030303030303042313732313746374431434637443833433141","id":12099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25032:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938515836094818181849824282_by_1","typeString":"int_const 3402...(31 digits omitted)...4282"},"value":"0x10000000000000B17217F7D1CF7D83C1A"},"src":"25023:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":12101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25071:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"25023:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25014:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12104,"nodeType":"ExpressionStatement","src":"25014:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12107,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"25106:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078383030","id":12108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25110:5:30","typeDescriptions":{"typeIdentifier":"t_rational_2048_by_1","typeString":"int_const 2048"},"value":"0x800"},"src":"25106:9:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":12110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25118:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"25106:13:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12121,"nodeType":"IfStatement","src":"25102:112:30","trueBody":{"id":12120,"nodeType":"Block","src":"25121:93:30","statements":[{"expression":{"id":12118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12112,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"25139:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12113,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"25148:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303030303030303035384239304246424538453742444342453245","id":12114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25157:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938489649734712806808010286_by_1","typeString":"int_const 3402...(31 digits omitted)...0286"},"value":"0x1000000000000058B90BFBE8E7BDCBE2E"},"src":"25148:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":12116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25196:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"25148:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25139:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12119,"nodeType":"ExpressionStatement","src":"25139:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12122,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"25231:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078343030","id":12123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25235:5:30","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"value":"0x400"},"src":"25231:9:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":12125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25243:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"25231:13:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12136,"nodeType":"IfStatement","src":"25227:112:30","trueBody":{"id":12135,"nodeType":"Block","src":"25246:93:30","statements":[{"expression":{"id":12133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12127,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"25264:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12128,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"25273:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303030303030303032433543383546444634373344454138373146","id":12129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25282:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938476556554660119287858975_by_1","typeString":"int_const 3402...(31 digits omitted)...8975"},"value":"0x100000000000002C5C85FDF473DEA871F"},"src":"25273:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":12131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25321:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"25273:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25264:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12134,"nodeType":"ExpressionStatement","src":"25264:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12137,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"25356:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078323030","id":12138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25360:5:30","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"value":"0x200"},"src":"25356:9:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":12140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25368:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"25356:13:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12151,"nodeType":"IfStatement","src":"25352:112:30","trueBody":{"id":12150,"nodeType":"Block","src":"25371:93:30","statements":[{"expression":{"id":12148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12142,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"25389:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12143,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"25398:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303030303030303031363245343246454641333945463434443931","id":12144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25407:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938470009964633775527972241_by_1","typeString":"int_const 3402...(31 digits omitted)...2241"},"value":"0x10000000000000162E42FEFA39EF44D91"},"src":"25398:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":12146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25446:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"25398:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25389:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12149,"nodeType":"ExpressionStatement","src":"25389:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12152,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"25481:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078313030","id":12153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25485:5:30","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"0x100"},"src":"25481:9:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":12155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25493:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"25481:13:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12166,"nodeType":"IfStatement","src":"25477:112:30","trueBody":{"id":12165,"nodeType":"Block","src":"25496:93:30","statements":[{"expression":{"id":12163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12157,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"25514:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12158,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"25523:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303030303030303030423137323137463744314346373945393439","id":12159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25532:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938466736669620603648076105_by_1","typeString":"int_const 3402...(31 digits omitted)...6105"},"value":"0x100000000000000B17217F7D1CF79E949"},"src":"25523:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":12161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25571:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"25523:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25514:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12164,"nodeType":"ExpressionStatement","src":"25514:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12167,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"25606:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783830","id":12168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25610:4:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"0x80"},"src":"25606:8:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":12170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25617:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"25606:12:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12181,"nodeType":"IfStatement","src":"25602:111:30","trueBody":{"id":12180,"nodeType":"Block","src":"25620:93:30","statements":[{"expression":{"id":12178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12172,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"25638:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12173,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"25647:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303030303030303030353842393042464245384537424345353434","id":12174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25656:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938465100022114017708139844_by_1","typeString":"int_const 3402...(31 digits omitted)...9844"},"value":"0x10000000000000058B90BFBE8E7BCE544"},"src":"25647:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":12176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25695:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"25647:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25638:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12179,"nodeType":"ExpressionStatement","src":"25638:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12182,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"25730:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783430","id":12183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25734:4:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"25730:8:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":12185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25741:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"25730:12:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12196,"nodeType":"IfStatement","src":"25726:111:30","trueBody":{"id":12195,"nodeType":"Block","src":"25744:93:30","statements":[{"expression":{"id":12193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12187,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"25762:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12188,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"25771:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303030303030303030324335433835464446343733444536454341","id":12189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25780:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938464281698360724738174666_by_1","typeString":"int_const 3402...(31 digits omitted)...4666"},"value":"0x1000000000000002C5C85FDF473DE6ECA"},"src":"25771:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":12191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25819:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"25771:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25762:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12194,"nodeType":"ExpressionStatement","src":"25762:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12197,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"25854:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783230","id":12198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25858:4:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"25854:8:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":12200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25865:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"25854:12:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12211,"nodeType":"IfStatement","src":"25850:111:30","trueBody":{"id":12210,"nodeType":"Block","src":"25868:93:30","statements":[{"expression":{"id":12208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12202,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"25886:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12203,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"25895:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303030303030303030313632453432464546413339454633363646","id":12204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25904:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463872536484078253192815_by_1","typeString":"int_const 3402...(31 digits omitted)...2815"},"value":"0x100000000000000162E42FEFA39EF366F"},"src":"25895:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":12206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25943:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"25895:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25886:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12209,"nodeType":"ExpressionStatement","src":"25886:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12212,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"25978:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783130","id":12213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25982:4:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"0x10"},"src":"25978:8:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":12215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25989:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"25978:12:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12226,"nodeType":"IfStatement","src":"25974:111:30","trueBody":{"id":12225,"nodeType":"Block","src":"25992:93:30","statements":[{"expression":{"id":12223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12217,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"26010:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12218,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"26019:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303030303030303030304231373231374637443143463739414641","id":12219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26028:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463667955545755010702074_by_1","typeString":"int_const 3402...(31 digits omitted)...2074"},"value":"0x1000000000000000B17217F7D1CF79AFA"},"src":"26019:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":12221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26067:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"26019:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26010:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12224,"nodeType":"ExpressionStatement","src":"26010:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12227,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"26102:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307838","id":12228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26106:3:30","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x8"},"src":"26102:7:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":12230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26112:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"26102:11:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12241,"nodeType":"IfStatement","src":"26098:110:30","trueBody":{"id":12240,"nodeType":"Block","src":"26115:93:30","statements":[{"expression":{"id":12238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12232,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"26133:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12233,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"26142:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303030303030303030303538423930424642453845374243443644","id":12234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26151:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463565665076593389456749_by_1","typeString":"int_const 3402...(31 digits omitted)...6749"},"value":"0x100000000000000058B90BFBE8E7BCD6D"},"src":"26142:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":12236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26190:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"26142:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26133:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12239,"nodeType":"ExpressionStatement","src":"26133:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12242,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"26225:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307834","id":12243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26229:3:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"0x4"},"src":"26225:7:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":12245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26235:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"26225:11:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12256,"nodeType":"IfStatement","src":"26221:110:30","trueBody":{"id":12255,"nodeType":"Block","src":"26238:93:30","statements":[{"expression":{"id":12253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12247,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"26256:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12248,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"26265:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303030303030303030303243354338354644463437334445364232","id":12249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26274:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463514519842012578834098_by_1","typeString":"int_const 3402...(31 digits omitted)...4098"},"value":"0x10000000000000002C5C85FDF473DE6B2"},"src":"26265:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":12251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26313:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"26265:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26256:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12254,"nodeType":"ExpressionStatement","src":"26256:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12257,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"26348:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307832","id":12258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26352:3:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"0x2"},"src":"26348:7:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":12260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26358:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"26348:11:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12271,"nodeType":"IfStatement","src":"26344:110:30","trueBody":{"id":12270,"nodeType":"Block","src":"26361:93:30","statements":[{"expression":{"id":12268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12262,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"26379:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12263,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"26388:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303030303030303030303136324534324645464133394546333538","id":12264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26397:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463488947224722173522776_by_1","typeString":"int_const 3402...(31 digits omitted)...2776"},"value":"0x1000000000000000162E42FEFA39EF358"},"src":"26388:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":12266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26436:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"26388:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26379:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12269,"nodeType":"ExpressionStatement","src":"26379:60:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12272,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"26471:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307831","id":12273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26475:3:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x1"},"src":"26471:7:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":12275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26481:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"26471:11:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12286,"nodeType":"IfStatement","src":"26467:110:30","trueBody":{"id":12285,"nodeType":"Block","src":"26484:93:30","statements":[{"expression":{"id":12283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12277,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"26502:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12278,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"26511:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313030303030303030303030303030303042313732313746374431434637394142","id":12279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26520:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463476160916076970867115_by_1","typeString":"int_const 3402...(31 digits omitted)...7115"},"value":"0x10000000000000000B17217F7D1CF79AB"},"src":"26511:44:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":12281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26559:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"26511:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26502:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12284,"nodeType":"ExpressionStatement","src":"26502:60:30"}]}},{"expression":{"id":12300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12287,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"26591:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3633","id":12292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26617:2:30","typeDescriptions":{"typeIdentifier":"t_rational_63_by_1","typeString":"int_const 63"},"value":"63"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12293,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11305,"src":"26623:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":12294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26628:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"26623:7:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"id":12296,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26622:9:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"26617:14:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":12291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26610:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":12290,"name":"int256","nodeType":"ElementaryTypeName","src":"26610:6:30","typeDescriptions":{}}},"id":12298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26610:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":12289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26602:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":12288,"name":"uint256","nodeType":"ElementaryTypeName","src":"26602:7:30","typeDescriptions":{}}},"id":12299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26602:31:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26591:42:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12301,"nodeType":"ExpressionStatement","src":"26591:42:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12303,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"26655:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"arguments":[{"id":12308,"name":"MAX_64x64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9929,"src":"26680:9:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":12307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26673:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":12306,"name":"int256","nodeType":"ElementaryTypeName","src":"26673:6:30","typeDescriptions":{}}},"id":12309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26673:17:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":12305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26665:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":12304,"name":"uint256","nodeType":"ElementaryTypeName","src":"26665:7:30","typeDescriptions":{}}},"id":12310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26665:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26655:36:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":12302,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"26647:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":12312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26647:45:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12313,"nodeType":"ExpressionStatement","src":"26647:45:30"},{"expression":{"arguments":[{"arguments":[{"id":12318,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11324,"src":"26728:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":12317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26721:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":12316,"name":"int256","nodeType":"ElementaryTypeName","src":"26721:6:30","typeDescriptions":{}}},"id":12319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26721:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":12315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26714:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":12314,"name":"int128","nodeType":"ElementaryTypeName","src":"26714:6:30","typeDescriptions":{}}},"id":12320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26714:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"functionReturnParameters":11309,"id":12321,"nodeType":"Return","src":"26707:29:30"}]}]},"documentation":{"id":11303,"nodeType":"StructuredDocumentation","src":"17769:181:30","text":" Calculate binary exponent of x.  Revert on overflow.\n @param x signed 64.64-bit fixed point number\n @return signed 64.64-bit fixed point number"},"id":12324,"implemented":true,"kind":"function","modifiers":[],"name":"exp_2","nameLocation":"17964:5:30","nodeType":"FunctionDefinition","parameters":{"id":11306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11305,"mutability":"mutable","name":"x","nameLocation":"17977:1:30","nodeType":"VariableDeclaration","scope":12324,"src":"17970:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":11304,"name":"int128","nodeType":"ElementaryTypeName","src":"17970:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"17969:10:30"},"returnParameters":{"id":11309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12324,"src":"18003:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":11307,"name":"int128","nodeType":"ElementaryTypeName","src":"18003:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"18002:8:30"},"scope":12797,"src":"17955:8798:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":12360,"nodeType":"Block","src":"27000:254:30","statements":[{"id":12359,"nodeType":"UncheckedBlock","src":"27010:238:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12333,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12327,"src":"27042:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3078343030303030303030303030303030303030","id":12334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27046:20:30","typeDescriptions":{"typeIdentifier":"t_rational_1180591620717411303424_by_1","typeString":"int_const 1180591620717411303424"},"value":"0x400000000000000000"},"src":"27042:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":12332,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"27034:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":12336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27034:33:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12337,"nodeType":"ExpressionStatement","src":"27034:33:30"},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":12341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12338,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12327,"src":"27098:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":12340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"27102:21:30","subExpression":{"hexValue":"3078343030303030303030303030303030303030","id":12339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27103:20:30","typeDescriptions":{"typeIdentifier":"t_rational_1180591620717411303424_by_1","typeString":"int_const 1180591620717411303424"},"value":"0x400000000000000000"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1180591620717411303424_by_1","typeString":"int_const -1180591620717411303424"}},"src":"27098:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12344,"nodeType":"IfStatement","src":"27094:39:30","trueBody":{"expression":{"hexValue":"30","id":12342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27132:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":12331,"id":12343,"nodeType":"Return","src":"27125:8:30"}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":12355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":12353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":12350,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12327,"src":"27188:1:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":12349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27181:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":12348,"name":"int256","nodeType":"ElementaryTypeName","src":"27181:6:30","typeDescriptions":{}}},"id":12351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27181:9:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078313731353437363532423832464531373737443046464441304432334137443132","id":12352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27193:35:30","typeDescriptions":{"typeIdentifier":"t_rational_490923683258796565746369346286093237522_by_1","typeString":"int_const 4909...(31 digits omitted)...7522"},"value":"0x171547652B82FE1777D0FFDA0D23A7D12"},"src":"27181:47:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":12354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27232:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27181:54:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":12347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27174:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":12346,"name":"int128","nodeType":"ElementaryTypeName","src":"27174:6:30","typeDescriptions":{}}},"id":12356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27174:62:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":12345,"name":"exp_2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12324,"src":"27168:5:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int128_$returns$_t_int128_$","typeString":"function (int128) pure returns (int128)"}},"id":12357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27168:69:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"functionReturnParameters":12331,"id":12358,"nodeType":"Return","src":"27161:76:30"}]}]},"documentation":{"id":12325,"nodeType":"StructuredDocumentation","src":"26759:182:30","text":" Calculate natural exponent of x.  Revert on overflow.\n @param x signed 64.64-bit fixed point number\n @return signed 64.64-bit fixed point number"},"id":12361,"implemented":true,"kind":"function","modifiers":[],"name":"exp","nameLocation":"26955:3:30","nodeType":"FunctionDefinition","parameters":{"id":12328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12327,"mutability":"mutable","name":"x","nameLocation":"26966:1:30","nodeType":"VariableDeclaration","scope":12361,"src":"26959:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":12326,"name":"int128","nodeType":"ElementaryTypeName","src":"26959:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"26958:10:30"},"returnParameters":{"id":12331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12361,"src":"26992:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":12329,"name":"int128","nodeType":"ElementaryTypeName","src":"26992:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"26991:8:30"},"scope":12797,"src":"26946:308:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":12590,"nodeType":"Block","src":"27644:1715:30","statements":[{"id":12589,"nodeType":"UncheckedBlock","src":"27654:1699:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12372,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12366,"src":"27686:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":12373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27691:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"27686:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":12371,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"27678:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":12375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27678:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12376,"nodeType":"ExpressionStatement","src":"27678:15:30"},{"assignments":[12378],"declarations":[{"constant":false,"id":12378,"mutability":"mutable","name":"result","nameLocation":"27716:6:30","nodeType":"VariableDeclaration","scope":12589,"src":"27708:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12377,"name":"uint256","nodeType":"ElementaryTypeName","src":"27708:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12379,"nodeType":"VariableDeclarationStatement","src":"27708:14:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12380,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12364,"src":"27741:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3078464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646","id":12381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27746:50:30","typeDescriptions":{"typeIdentifier":"t_rational_6277101735386680763835789423207666416102355444464034512895_by_1","typeString":"int_const 6277...(50 digits omitted)...2895"},"value":"0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},"src":"27741:55:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":12576,"nodeType":"Block","src":"27859:1380:30","statements":[{"assignments":[12394],"declarations":[{"constant":false,"id":12394,"mutability":"mutable","name":"msb","nameLocation":"27885:3:30","nodeType":"VariableDeclaration","scope":12576,"src":"27877:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12393,"name":"uint256","nodeType":"ElementaryTypeName","src":"27877:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12396,"initialValue":{"hexValue":"313932","id":12395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27891:3:30","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},"nodeType":"VariableDeclarationStatement","src":"27877:17:30"},{"assignments":[12398],"declarations":[{"constant":false,"id":12398,"mutability":"mutable","name":"xc","nameLocation":"27920:2:30","nodeType":"VariableDeclaration","scope":12576,"src":"27912:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12397,"name":"uint256","nodeType":"ElementaryTypeName","src":"27912:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12402,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12399,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12364,"src":"27925:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313932","id":12400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27930:3:30","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},"src":"27925:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27912:21:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12403,"name":"xc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12398,"src":"27955:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3078313030303030303030","id":12404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27961:11:30","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"value":"0x100000000"},"src":"27955:17:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12415,"nodeType":"IfStatement","src":"27951:104:30","trueBody":{"id":12414,"nodeType":"Block","src":"27974:81:30","statements":[{"expression":{"id":12408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12406,"name":"xc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12398,"src":"27996:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":12407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28003:2:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27996:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12409,"nodeType":"ExpressionStatement","src":"27996:9:30"},{"expression":{"id":12412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12410,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12394,"src":"28027:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":12411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28034:2:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"28027:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12413,"nodeType":"ExpressionStatement","src":"28027:9:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12416,"name":"xc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12398,"src":"28076:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30783130303030","id":12417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28082:7:30","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"value":"0x10000"},"src":"28076:13:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12428,"nodeType":"IfStatement","src":"28072:100:30","trueBody":{"id":12427,"nodeType":"Block","src":"28091:81:30","statements":[{"expression":{"id":12421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12419,"name":"xc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12398,"src":"28113:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":12420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28120:2:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"28113:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12422,"nodeType":"ExpressionStatement","src":"28113:9:30"},{"expression":{"id":12425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12423,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12394,"src":"28144:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":12424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28151:2:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"28144:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12426,"nodeType":"ExpressionStatement","src":"28144:9:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12429,"name":"xc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12398,"src":"28193:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3078313030","id":12430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28199:5:30","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"0x100"},"src":"28193:11:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12441,"nodeType":"IfStatement","src":"28189:96:30","trueBody":{"id":12440,"nodeType":"Block","src":"28206:79:30","statements":[{"expression":{"id":12434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12432,"name":"xc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12398,"src":"28228:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":12433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28235:1:30","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"28228:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12435,"nodeType":"ExpressionStatement","src":"28228:8:30"},{"expression":{"id":12438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12436,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12394,"src":"28258:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":12437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28265:1:30","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"28258:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12439,"nodeType":"ExpressionStatement","src":"28258:8:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12442,"name":"xc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12398,"src":"28306:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30783130","id":12443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28312:4:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"0x10"},"src":"28306:10:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12454,"nodeType":"IfStatement","src":"28302:95:30","trueBody":{"id":12453,"nodeType":"Block","src":"28318:79:30","statements":[{"expression":{"id":12447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12445,"name":"xc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12398,"src":"28340:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":12446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28347:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"28340:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12448,"nodeType":"ExpressionStatement","src":"28340:8:30"},{"expression":{"id":12451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12449,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12394,"src":"28370:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":12450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28377:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"28370:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12452,"nodeType":"ExpressionStatement","src":"28370:8:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12455,"name":"xc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12398,"src":"28418:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"307834","id":12456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28424:3:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"0x4"},"src":"28418:9:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12467,"nodeType":"IfStatement","src":"28414:94:30","trueBody":{"id":12466,"nodeType":"Block","src":"28429:79:30","statements":[{"expression":{"id":12460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12458,"name":"xc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12398,"src":"28451:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":12459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28458:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28451:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12461,"nodeType":"ExpressionStatement","src":"28451:8:30"},{"expression":{"id":12464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12462,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12394,"src":"28481:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":12463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28488:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28481:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12465,"nodeType":"ExpressionStatement","src":"28481:8:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12468,"name":"xc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12398,"src":"28529:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"307832","id":12469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28535:3:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"0x2"},"src":"28529:9:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12475,"nodeType":"IfStatement","src":"28525:23:30","trueBody":{"expression":{"id":12473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12471,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12394,"src":"28540:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":12472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28547:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28540:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12474,"nodeType":"ExpressionStatement","src":"28540:8:30"}},{"expression":{"id":12495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12476,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12378,"src":"28598:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12477,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12364,"src":"28608:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323535","id":12478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28613:3:30","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":12479,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12394,"src":"28619:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28613:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28608:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":12482,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28607:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12483,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12366,"src":"28628:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":12484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28632:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28628:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12486,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12394,"src":"28637:3:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"313931","id":12487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28643:3:30","typeDescriptions":{"typeIdentifier":"t_rational_191_by_1","typeString":"int_const 191"},"value":"191"},"src":"28637:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28628:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":12490,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28627:20:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":12491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28650:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28627:24:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":12493,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28626:26:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28607:45:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28598:54:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12496,"nodeType":"ExpressionStatement","src":"28598:54:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12498,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12378,"src":"28678:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30784646464646464646464646464646464646464646464646464646464646464646","id":12499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28688:34:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},"src":"28678:44:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":12497,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"28670:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":12501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28670:53:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12502,"nodeType":"ExpressionStatement","src":"28670:53:30"},{"assignments":[12504],"declarations":[{"constant":false,"id":12504,"mutability":"mutable","name":"hi","nameLocation":"28750:2:30","nodeType":"VariableDeclaration","scope":12576,"src":"28742:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12503,"name":"uint256","nodeType":"ElementaryTypeName","src":"28742:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12511,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12505,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12378,"src":"28755:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12506,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12366,"src":"28765:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":12507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28770:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"28765:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":12509,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28764:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28755:19:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28742:32:30"},{"assignments":[12513],"declarations":[{"constant":false,"id":12513,"mutability":"mutable","name":"lo","nameLocation":"28800:2:30","nodeType":"VariableDeclaration","scope":12576,"src":"28792:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12512,"name":"uint256","nodeType":"ElementaryTypeName","src":"28792:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12520,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12514,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12378,"src":"28805:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12515,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12366,"src":"28815:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646464646464646464646464646464646464646464646464646464646464646","id":12516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28819:34:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},"src":"28815:38:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":12518,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28814:40:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28805:49:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28792:62:30"},{"assignments":[12522],"declarations":[{"constant":false,"id":12522,"mutability":"mutable","name":"xh","nameLocation":"28881:2:30","nodeType":"VariableDeclaration","scope":12576,"src":"28873:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12521,"name":"uint256","nodeType":"ElementaryTypeName","src":"28873:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12526,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12523,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12364,"src":"28886:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313932","id":12524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28891:3:30","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},"src":"28886:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28873:21:30"},{"assignments":[12528],"declarations":[{"constant":false,"id":12528,"mutability":"mutable","name":"xl","nameLocation":"28920:2:30","nodeType":"VariableDeclaration","scope":12576,"src":"28912:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12527,"name":"uint256","nodeType":"ElementaryTypeName","src":"28912:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12532,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12529,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12364,"src":"28925:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":12530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28930:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"28925:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28912:20:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12533,"name":"xl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12528,"src":"28955:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":12534,"name":"lo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12513,"src":"28960:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28955:7:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12540,"nodeType":"IfStatement","src":"28951:20:30","trueBody":{"expression":{"id":12538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12536,"name":"xh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12522,"src":"28964:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":12537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28970:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28964:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12539,"nodeType":"ExpressionStatement","src":"28964:7:30"}},{"expression":{"id":12543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12541,"name":"xl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12528,"src":"28989:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":12542,"name":"lo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12513,"src":"28995:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28989:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12544,"nodeType":"ExpressionStatement","src":"28989:8:30"},{"expression":{"id":12549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12545,"name":"lo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12513,"src":"29052:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12546,"name":"hi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12504,"src":"29057:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":12547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29063:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"29057:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29052:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12550,"nodeType":"ExpressionStatement","src":"29052:14:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12551,"name":"xl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12528,"src":"29088:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":12552,"name":"lo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12513,"src":"29093:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29088:7:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12558,"nodeType":"IfStatement","src":"29084:20:30","trueBody":{"expression":{"id":12556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12554,"name":"xh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12522,"src":"29097:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":12555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29103:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29097:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12557,"nodeType":"ExpressionStatement","src":"29097:7:30"}},{"expression":{"id":12561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12559,"name":"xl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12528,"src":"29122:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":12560,"name":"lo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12513,"src":"29128:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29122:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12562,"nodeType":"ExpressionStatement","src":"29122:8:30"},{"expression":{"id":12574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12563,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12378,"src":"29186:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12564,"name":"xh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12522,"src":"29196:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12565,"name":"hi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12504,"src":"29202:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":12566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29208:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"29202:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29196:15:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"31","id":12572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29223:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"id":12573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"29196:28:30","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12569,"name":"xl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12528,"src":"29214:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":12570,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12366,"src":"29219:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29214:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29186:38:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12575,"nodeType":"ExpressionStatement","src":"29186:38:30"}]},"id":12577,"nodeType":"IfStatement","src":"27737:1502:30","trueBody":{"id":12392,"nodeType":"Block","src":"27798:55:30","statements":[{"expression":{"id":12390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12383,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12378,"src":"27816:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12384,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12364,"src":"27826:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":12385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27831:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27826:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":12387,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27825:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":12388,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12366,"src":"27837:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27825:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27816:22:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12391,"nodeType":"ExpressionStatement","src":"27816:22:30"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12579,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12378,"src":"29261:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30784646464646464646464646464646464646464646464646464646464646464646","id":12580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29271:34:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"},"src":"29261:44:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":12578,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278],"referencedDeclaration":4294967278,"src":"29253:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":12582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29253:53:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12583,"nodeType":"ExpressionStatement","src":"29253:53:30"},{"expression":{"arguments":[{"id":12586,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12378,"src":"29335:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":12585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29327:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":12584,"name":"uint128","nodeType":"ElementaryTypeName","src":"29327:7:30","typeDescriptions":{}}},"id":12587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29327:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":12370,"id":12588,"nodeType":"Return","src":"29320:22:30"}]}]},"documentation":{"id":12362,"nodeType":"StructuredDocumentation","src":"27260:311:30","text":" Calculate x / y rounding towards zero, where x and y are unsigned 256-bit\n integer numbers.  Revert on overflow or when y is zero.\n @param x unsigned 256-bit integer number\n @param y unsigned 256-bit integer number\n @return unsigned 64.64-bit fixed point number"},"id":12591,"implemented":true,"kind":"function","modifiers":[],"name":"divuu","nameLocation":"27585:5:30","nodeType":"FunctionDefinition","parameters":{"id":12367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12364,"mutability":"mutable","name":"x","nameLocation":"27599:1:30","nodeType":"VariableDeclaration","scope":12591,"src":"27591:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12363,"name":"uint256","nodeType":"ElementaryTypeName","src":"27591:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12366,"mutability":"mutable","name":"y","nameLocation":"27610:1:30","nodeType":"VariableDeclaration","scope":12591,"src":"27602:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12365,"name":"uint256","nodeType":"ElementaryTypeName","src":"27602:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27590:22:30"},"returnParameters":{"id":12370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12591,"src":"27635:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":12368,"name":"uint128","nodeType":"ElementaryTypeName","src":"27635:7:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"27634:9:30"},"scope":12797,"src":"27576:1783:30","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":12795,"nodeType":"Block","src":"29632:1346:30","statements":[{"id":12794,"nodeType":"UncheckedBlock","src":"29642:1330:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12599,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12594,"src":"29670:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":12600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"29670:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":12792,"nodeType":"Block","src":"29725:1237:30","statements":[{"assignments":[12606],"declarations":[{"constant":false,"id":12606,"mutability":"mutable","name":"xx","nameLocation":"29751:2:30","nodeType":"VariableDeclaration","scope":12792,"src":"29743:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12605,"name":"uint256","nodeType":"ElementaryTypeName","src":"29743:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12608,"initialValue":{"id":12607,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12594,"src":"29756:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"29743:14:30"},{"assignments":[12610],"declarations":[{"constant":false,"id":12610,"mutability":"mutable","name":"r","nameLocation":"29783:1:30","nodeType":"VariableDeclaration","scope":12792,"src":"29775:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12609,"name":"uint256","nodeType":"ElementaryTypeName","src":"29775:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12612,"initialValue":{"hexValue":"31","id":12611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29787:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"29775:13:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12613,"name":"xx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12606,"src":"29810:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3078313030303030303030303030303030303030303030303030303030303030303030","id":12614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29816:35:30","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"value":"0x100000000000000000000000000000000"},"src":"29810:41:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12625,"nodeType":"IfStatement","src":"29806:128:30","trueBody":{"id":12624,"nodeType":"Block","src":"29853:81:30","statements":[{"expression":{"id":12618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12616,"name":"xx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12606,"src":"29875:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":12617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"29875:10:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12619,"nodeType":"ExpressionStatement","src":"29875:10:30"},{"expression":{"id":12622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12620,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12610,"src":"29907:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":12621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29913:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29907:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12623,"nodeType":"ExpressionStatement","src":"29907:8:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12626,"name":"xx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12606,"src":"29955:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30783130303030303030303030303030303030","id":12627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29961:19:30","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"value":"0x10000000000000000"},"src":"29955:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12638,"nodeType":"IfStatement","src":"29951:111:30","trueBody":{"id":12637,"nodeType":"Block","src":"29982:80:30","statements":[{"expression":{"id":12631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12629,"name":"xx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12606,"src":"30004:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":12630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30011:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"30004:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12632,"nodeType":"ExpressionStatement","src":"30004:9:30"},{"expression":{"id":12635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12633,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12610,"src":"30035:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":12634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30041:2:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"30035:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12636,"nodeType":"ExpressionStatement","src":"30035:8:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12639,"name":"xx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12606,"src":"30083:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3078313030303030303030","id":12640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30089:11:30","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"value":"0x100000000"},"src":"30083:17:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12651,"nodeType":"IfStatement","src":"30079:103:30","trueBody":{"id":12650,"nodeType":"Block","src":"30102:80:30","statements":[{"expression":{"id":12644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12642,"name":"xx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12606,"src":"30124:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":12643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30131:2:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"30124:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12645,"nodeType":"ExpressionStatement","src":"30124:9:30"},{"expression":{"id":12648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12646,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12610,"src":"30155:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":12647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30161:2:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"30155:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12649,"nodeType":"ExpressionStatement","src":"30155:8:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12652,"name":"xx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12606,"src":"30203:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30783130303030","id":12653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30209:7:30","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"value":"0x10000"},"src":"30203:13:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12664,"nodeType":"IfStatement","src":"30199:98:30","trueBody":{"id":12663,"nodeType":"Block","src":"30218:79:30","statements":[{"expression":{"id":12657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12655,"name":"xx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12606,"src":"30240:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":12656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30247:2:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"30240:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12658,"nodeType":"ExpressionStatement","src":"30240:9:30"},{"expression":{"id":12661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12659,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12610,"src":"30271:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":12660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30277:1:30","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"30271:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12662,"nodeType":"ExpressionStatement","src":"30271:7:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12665,"name":"xx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12606,"src":"30318:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3078313030","id":12666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30324:5:30","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"0x100"},"src":"30318:11:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12677,"nodeType":"IfStatement","src":"30314:95:30","trueBody":{"id":12676,"nodeType":"Block","src":"30331:78:30","statements":[{"expression":{"id":12670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12668,"name":"xx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12606,"src":"30353:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":12669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30360:1:30","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"30353:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12671,"nodeType":"ExpressionStatement","src":"30353:8:30"},{"expression":{"id":12674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12672,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12610,"src":"30383:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":12673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30389:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"30383:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12675,"nodeType":"ExpressionStatement","src":"30383:7:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12678,"name":"xx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12606,"src":"30430:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30783130","id":12679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30436:4:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"0x10"},"src":"30430:10:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12690,"nodeType":"IfStatement","src":"30426:94:30","trueBody":{"id":12689,"nodeType":"Block","src":"30442:78:30","statements":[{"expression":{"id":12683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12681,"name":"xx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12606,"src":"30464:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":12682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30471:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"30464:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12684,"nodeType":"ExpressionStatement","src":"30464:8:30"},{"expression":{"id":12687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12685,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12610,"src":"30494:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":12686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30500:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"30494:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12688,"nodeType":"ExpressionStatement","src":"30494:7:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12691,"name":"xx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12606,"src":"30541:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"307834","id":12692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30547:3:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"0x4"},"src":"30541:9:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12698,"nodeType":"IfStatement","src":"30537:22:30","trueBody":{"expression":{"id":12696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12694,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12610,"src":"30552:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":12695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30558:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30552:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12697,"nodeType":"ExpressionStatement","src":"30552:7:30"}},{"expression":{"id":12708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12699,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12610,"src":"30577:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12700,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12610,"src":"30582:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12701,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12594,"src":"30586:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":12702,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12610,"src":"30590:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30586:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30582:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":12705,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"30581:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":12706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30596:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30581:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30577:20:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12709,"nodeType":"ExpressionStatement","src":"30577:20:30"},{"expression":{"id":12719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12710,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12610,"src":"30615:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12711,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12610,"src":"30620:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12712,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12594,"src":"30624:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":12713,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12610,"src":"30628:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30624:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30620:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":12716,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"30619:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":12717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30634:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30619:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30615:20:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12720,"nodeType":"ExpressionStatement","src":"30615:20:30"},{"expression":{"id":12730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12721,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12610,"src":"30653:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12722,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12610,"src":"30658:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12723,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12594,"src":"30662:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":12724,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12610,"src":"30666:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30662:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30658:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":12727,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"30657:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":12728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30672:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30657:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30653:20:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12731,"nodeType":"ExpressionStatement","src":"30653:20:30"},{"expression":{"id":12741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12732,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12610,"src":"30691:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12733,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12610,"src":"30696:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12734,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12594,"src":"30700:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":12735,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12610,"src":"30704:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30700:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30696:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":12738,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"30695:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":12739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30710:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30695:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30691:20:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12742,"nodeType":"ExpressionStatement","src":"30691:20:30"},{"expression":{"id":12752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12743,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12610,"src":"30729:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12744,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12610,"src":"30734:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12745,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12594,"src":"30738:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":12746,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12610,"src":"30742:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30738:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30734:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":12749,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"30733:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":12750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30748:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30733:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30729:20:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12753,"nodeType":"ExpressionStatement","src":"30729:20:30"},{"expression":{"id":12763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12754,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12610,"src":"30767:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12755,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12610,"src":"30772:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12756,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12594,"src":"30776:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":12757,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12610,"src":"30780:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30776:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30772:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":12760,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"30771:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":12761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30786:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30771:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30767:20:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12764,"nodeType":"ExpressionStatement","src":"30767:20:30"},{"expression":{"id":12774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":12765,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12610,"src":"30805:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12766,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12610,"src":"30810:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12767,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12594,"src":"30814:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":12768,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12610,"src":"30818:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30814:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30810:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":12771,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"30809:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":12772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30824:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30809:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30805:20:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12775,"nodeType":"ExpressionStatement","src":"30805:20:30"},{"assignments":[12777],"declarations":[{"constant":false,"id":12777,"mutability":"mutable","name":"r1","nameLocation":"30888:2:30","nodeType":"VariableDeclaration","scope":12792,"src":"30880:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12776,"name":"uint256","nodeType":"ElementaryTypeName","src":"30880:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":12781,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12778,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12594,"src":"30893:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":12779,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12610,"src":"30897:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30893:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30880:18:30"},{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":12786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12784,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12610,"src":"30931:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":12785,"name":"r1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12777,"src":"30935:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30931:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":12788,"name":"r1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12777,"src":"30944:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"30931:15:30","trueExpression":{"id":12787,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12610,"src":"30940:1:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":12783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30923:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":12782,"name":"uint128","nodeType":"ElementaryTypeName","src":"30923:7:30","typeDescriptions":{}}},"id":12790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30923:24:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":12598,"id":12791,"nodeType":"Return","src":"30916:31:30"}]},"id":12793,"nodeType":"IfStatement","src":"29666:1296:30","trueBody":{"id":12604,"nodeType":"Block","src":"29678:41:30","statements":[{"expression":{"hexValue":"30","id":12602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29703:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":12598,"id":12603,"nodeType":"Return","src":"29696:8:30"}]}}]}]},"documentation":{"id":12592,"nodeType":"StructuredDocumentation","src":"29365:205:30","text":" Calculate sqrt (x) rounding down, where x is unsigned 256-bit integer\n number.\n @param x unsigned 256-bit integer number\n @return unsigned 128-bit integer number"},"id":12796,"implemented":true,"kind":"function","modifiers":[],"name":"sqrtu","nameLocation":"29584:5:30","nodeType":"FunctionDefinition","parameters":{"id":12595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12594,"mutability":"mutable","name":"x","nameLocation":"29598:1:30","nodeType":"VariableDeclaration","scope":12796,"src":"29590:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12593,"name":"uint256","nodeType":"ElementaryTypeName","src":"29590:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29589:11:30"},"returnParameters":{"id":12598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12796,"src":"29623:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":12596,"name":"uint128","nodeType":"ElementaryTypeName","src":"29623:7:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"29622:9:30"},"scope":12797,"src":"29575:1403:30","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":12798,"src":"666:30314:30","usedErrors":[],"usedEvents":[]}],"src":"191:30790:30"},"id":30}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ERC1155":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x22933f0f4897ff70a991c3baebfbc2574fd052dc4bae7fcafec45b07c1f23dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13674cffad18cec55f013056496d7d2e3a34bd7bdbe23d1ef0c7588088c73367\",\"dweb:/ipfs/QmcBkrwxNvCApG48Gyby2L6qCNtuhaFncGpbJt3zuukTmu\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"IERC1155MetadataURI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ERC1155Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220d17336ce14b390b01ad874251c37ef0318df87ce8c0913a11acafd5ba184274464736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 PUSH20 0x36CE14B390B01AD874251C37EF0318DF87CE8C09 SGT LOG1 BYTE 0xCA REVERT JUMPDEST LOG1 DUP5 0x27 PREVRANDAO PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"439:3094:8:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220d17336ce14b390b01ad874251c37ef0318df87ce8c0913a11acafd5ba184274464736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 PUSH20 0x36CE14B390B01AD874251C37EF0318DF87CE8C09 SGT LOG1 BYTE 0xCA REVERT JUMPDEST LOG1 DUP5 0x27 PREVRANDAO PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"439:3094:8:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-1155 utility functions. See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":\"ERC1155Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Arrays.sol":{"Arrays":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220a4a5733444f82c41c5559ee5f7fae7db33bd345e64f5db22c492b1a403f4af7464736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 0xA5 PUSH20 0x3444F82C41C5559EE5F7FAE7DB33BD345E64F5DB 0x22 0xC4 SWAP3 0xB1 LOG4 SUB DELEGATECALL 0xAF PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"459:17881:12:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220a4a5733444f82c41c5559ee5f7fae7db33bd345e64f5db22c492b1a403f4af7464736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 0xA5 PUSH20 0x3444F82C41C5559EE5F7FAE7DB33BD345E64F5DB 0x22 0xC4 SWAP3 0xB1 LOG4 SUB DELEGATECALL 0xAF PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"459:17881:12:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Comparators.sol":{"Comparators":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212206a1ede170aa015de89e766da23bd0521b7aab0b438bbcfccc9e9af15166161ff64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x1EDE170AA015DE89E766DA 0x23 0xBD SDIV 0x21 0xB7 0xAA 0xB0 0xB4 CODESIZE 0xBB 0xCF 0xCC 0xC9 0xE9 0xAF ISZERO AND PUSH2 0x61FF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"224:218:13:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212206a1ede170aa015de89e766da23bd0521b7aab0b438bbcfccc9e9af15166161ff64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x1EDE170AA015DE89E766DA 0x23 0xBD SDIV 0x21 0xB7 0xAA 0xB0 0xB4 CODESIZE 0xBB 0xCF 0xCC 0xC9 0xE9 0xAF ISZERO AND PUSH2 0x61FF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"224:218:13:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to compare values. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Comparators.sol\":\"Comparators\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220d3d3dd910cc19267204057e7b98620445f3f33d10c6a1b7d466fb2f1dbaaa3e464736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xD3 0xDD SWAP2 0xC 0xC1 SWAP3 PUSH8 0x204057E7B9862044 PUSH0 EXTCODEHASH CALLER 0xD1 0xC PUSH11 0x1B7D466FB2F1DBAAA3E464 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"657:1315:15:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220d3d3dd910cc19267204057e7b98620445f3f33d10c6a1b7d466fb2f1dbaaa3e464736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xD3 0xDD SWAP2 0xC 0xC1 SWAP3 PUSH8 0x204057E7B9862044 PUSH0 EXTCODEHASH CALLER 0xD1 0xC PUSH11 0x1B7D466FB2F1DBAAA3E464 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"657:1315:15:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Pausable.sol":{"Pausable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"SlotDerivation":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220afc9d2c2ee2667d27acb7a371fad1a5cbd919f2d87f9f7dd98e0f12f7ef026e964736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF 0xC9 0xD2 0xC2 0xEE 0x26 PUSH8 0xD27ACB7A371FAD1A 0x5C 0xBD SWAP2 SWAP16 0x2D DUP8 0xF9 0xF7 0xDD SWAP9 0xE0 CALL 0x2F PUSH31 0xF026E964736F6C634300081400330000000000000000000000000000000000 ","sourceMap":"1598:3723:18:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220afc9d2c2ee2667d27acb7a371fad1a5cbd919f2d87f9f7dd98e0f12f7ef026e964736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF 0xC9 0xD2 0xC2 0xEE 0x26 PUSH8 0xD27ACB7A371FAD1A 0x5C 0xBD SWAP2 SWAP16 0x2D DUP8 0xF9 0xF7 0xDD SWAP9 0xE0 CALL 0x2F PUSH31 0xF026E964736F6C634300081400330000000000000000000000000000000000 ","sourceMap":"1598:3723:18:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by the solidity language / compiler. See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.]. Example usage: ```solidity contract Example {     // Add the library methods     using StorageSlot for bytes32;     using SlotDerivation for bytes32;     // Declare a namespace     string private constant _NAMESPACE = \\\"<namespace>\\\" // eg. OpenZeppelin.Slot     function setValueInNamespace(uint256 key, address newValue) internal {         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;     }     function getValueInNamespace(uint256 key) internal view returns (address) {         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;     } } ``` TIP: Consider using this library along with {StorageSlot}. NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":\"SlotDerivation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220ae25a39ead407bec927c6b9123beab38814d0e8e606e6b51ab70c388ccb21b8f64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0x25 LOG3 SWAP15 0xAD BLOCKHASH PUSH28 0xEC927C6B9123BEAB38814D0E8E606E6B51AB70C388CCB21B8F64736F PUSH13 0x63430008140033000000000000 ","sourceMap":"1407:2774:19:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220ae25a39ead407bec927c6b9123beab38814d0e8e606e6b51ab70c388ccb21b8f64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0x25 LOG3 SWAP15 0xAD BLOCKHASH PUSH28 0xEC927C6B9123BEAB38814D0E8E606E6B51AB70C388CCB21B8F64736F PUSH13 0x63430008140033000000000000 ","sourceMap":"1407:2774:19:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220c2358fe3344612dc97e728dca4c76fb2ef9c3f5ff66a7f69aa89997be37e82f264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 CALLDATALOAD DUP16 0xE3 CALLVALUE CHAINID SLT 0xDC SWAP8 0xE7 0x28 0xDC LOG4 0xC7 PUSH16 0xB2EF9C3F5FF66A7F69AA89997BE37E82 CALLCODE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"251:3680:20:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220c2358fe3344612dc97e728dca4c76fb2ef9c3f5ff66a7f69aa89997be37e82f264736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 CALLDATALOAD DUP16 0xE3 CALLVALUE CHAINID SLT 0xDC SWAP8 0xE7 0x28 0xDC LOG4 0xC7 PUSH16 0xB2EF9C3F5FF66A7F69AA89997BE37E82 CALLCODE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"251:3680:20:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220f55ee99a472eb6dc2cc3e168b7846de5ba4a51af97d44e14b45afd9f8748a7d764736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0x5E 0xE9 SWAP11 SELFBALANCE 0x2E 0xB6 0xDC 0x2C 0xC3 0xE1 PUSH9 0xB7846DE5BA4A51AF97 0xD4 0x4E EQ 0xB4 GAS REVERT SWAP16 DUP8 BASEFEE 0xA7 0xD7 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:28026:23:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220f55ee99a472eb6dc2cc3e168b7846de5ba4a51af97d44e14b45afd9f8748a7d764736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0x5E 0xE9 SWAP11 SELFBALANCE 0x2E 0xB6 0xDC 0x2C 0xC3 0xE1 PUSH9 0xB7846DE5BA4A51AF97 0xD4 0x4E EQ 0xB4 GAS REVERT SWAP16 DUP8 BASEFEE 0xA7 0xD7 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:28026:23:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212202c4ad86538ce8a084b7fdb2cd3d42f4c2dabe3fc8415c635d8bb43bd1dd67f0264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x4A 0xD8 PUSH6 0x38CE8A084B7F 0xDB 0x2C 0xD3 0xD4 0x2F 0x4C 0x2D 0xAB 0xE3 0xFC DUP5 ISZERO 0xC6 CALLDATALOAD 0xD8 0xBB NUMBER 0xBD SAR 0xD6 PUSH32 0x264736F6C634300081400330000000000000000000000000000000000000000 ","sourceMap":"769:34173:24:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212202c4ad86538ce8a084b7fdb2cd3d42f4c2dabe3fc8415c635d8bb43bd1dd67f0264736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x4A 0xD8 PUSH6 0x38CE8A084B7F 0xDB 0x2C 0xD3 0xD4 0x2F 0x4C 0x2D 0xAB 0xE3 0xFC DUP5 ISZERO 0xC6 CALLDATALOAD 0xD8 0xBB NUMBER 0xBD SAR 0xD6 PUSH32 0x264736F6C634300081400330000000000000000000000000000000000000000 ","sourceMap":"769:34173:24:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220b18474e30ba46df553fc97b5dbc5e061d13f068480eada5c75b285875d02dfc564736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 DUP5 PUSH21 0xE30BA46DF553FC97B5DBC5E061D13F068480EADA5C PUSH22 0xB285875D02DFC564736F6C6343000814003300000000 ","sourceMap":"258:2354:25:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220b18474e30ba46df553fc97b5dbc5e061d13f068480eada5c75b285875d02dfc564736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 DUP5 PUSH21 0xE30BA46DF553FC97B5DBC5E061D13F068480EADA5C PUSH22 0xB285875D02DFC564736F6C6343000814003300000000 ","sourceMap":"258:2354:25:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"src/core/LMSRPredictionMarket.sol":{"LMSRPredictionMarket":{"abi":[{"inputs":[{"internalType":"uint256","name":"_marketId","type":"uint256"},{"internalType":"string","name":"_title","type":"string"},{"internalType":"string[]","name":"_outcomes","type":"string[]"},{"internalType":"address","name":"_oracle","type":"address"},{"internalType":"uint256","name":"_b","type":"uint256"},{"internalType":"uint256","name":"_duration","type":"uint256"},{"internalType":"uint256","name":"_feePercent","type":"uint256"},{"internalType":"address","name":"_feeRecipient","type":"address"},{"internalType":"address","name":"_tokenAddress","type":"address"},{"internalType":"uint256","name":"_initialFunds","type":"uint256"},{"internalType":"address","name":"_positionsAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"feeRecipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FeesWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FundsDeposited","type":"event"},{"anonymous":false,"inputs":[],"name":"MarketClosed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"winningOutcome","type":"uint256"}],"name":"OutcomeSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"PayoutClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"outcomeIndex","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"numShares","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"cost","type":"uint256"}],"name":"SharesPurchased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"outcomeIndex","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"numShares","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"payment","type":"uint256"}],"name":"SharesSold","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"FEE_REINVEST_PERCENT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_LIQUIDITY_PARAM","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_OUTCOME","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_SHARE_TRADE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_LIQUIDITY_PARAM","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PERCENT_DENOMINATOR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SHARES_DECIMALS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"b","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"outcomeIndex","type":"uint256"},{"internalType":"uint256","name":"numShares","type":"uint256"}],"name":"buyShares","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_b","type":"uint256"},{"internalType":"uint256","name":"numOutcomes","type":"uint256"}],"name":"calculateMinimumInitialFunds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"claimPayout","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"closeMarket","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"collectedFees","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"depositInitialFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"outcomeIndex","type":"uint256"},{"internalType":"uint256","name":"numShares","type":"uint256"}],"name":"estimateCost","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"outcomeIndex","type":"uint256"},{"internalType":"uint256","name":"numShares","type":"uint256"}],"name":"estimatePayment","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feePercent","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeRecipient","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getOutcomeCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"outcomeIndex","type":"uint256"}],"name":"getOutcomeTotalShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_marketId","type":"uint256"},{"internalType":"uint256","name":"outcomeIndex","type":"uint256"}],"name":"getPositionId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"outcomeIndex","type":"uint256"}],"name":"getPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"outcomeIndex","type":"uint256"}],"name":"getUserShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"i_numOutcomes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"initialFunds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"marketClosed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"marketEndTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"marketId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"marketMakerFunds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"marketSettled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"oracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"outcomes","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"totalShares","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"payoutPerShare","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"positions","outputs":[{"internalType":"contract PredictionMarketPositions","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"outcomeIndex","type":"uint256"},{"internalType":"uint256","name":"numShares","type":"uint256"}],"name":"sellShares","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_winningOutcome","type":"uint256"}],"name":"setOutcome","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"title","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenDecimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unitScalingFactor","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newOracle","type":"address"}],"name":"updateOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"winningOutcome","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawRemainingFunds","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":3706,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":3587,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint8_fromMemory":{"entryPoint":3727,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_rational_by_uint256":{"entryPoint":3772,"id":null,"parameterSlots":1,"returnSlots":1},"checked_exp_rational_by_uint8":{"entryPoint":3754,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":3551,"id":null,"parameterSlots":2,"returnSlots":0},"fun_mulu":{"entryPoint":3787,"id":10367,"parameterSlots":2,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"6101806040523462000dda5760006200453e908138038092620000258261018062000ddf565b61018039610160821262000dd757610180516101a0516001600160401b03811162000dd3576200005f908461018001906101800162000e03565b6101c0516001600160401b03811162000dcf57610180850161019f8201121562000dcf57610180810151946001600160401b03861162000dbb578560051b9060405196620000b1602084018962000ddf565b8752602087019061018081016101a0858501011162000db7576101a08401915b6101a085850101831062000d76575050505050620000f460606101800162000e7a565b610200516102205161024051916200010e61026062000e7a565b936200011c61028062000e7a565b6102a05197909690620001316102c062000e7a565b98331562000d5d578a54336001600160a01b0319821681178d55604051916001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08e80a3600180556002805460ff1916905560098c9055600a8c9055600b8c90556001600160a01b038a161562000d1b57506001600160a01b0388161562000cd6578b511562000c9157841562000c3457851562000bef578b51801515908162000be2575b501562000b9d57612710851162000b3e576064851062000ad3578b51600181111562000a8e5760016001603f1b03811162000a8a578b8160401b600f0b131562000a8a578b604082901b600f0b6801000000000000000081121562000a77575b80640100000000600292121562000a6a575b6201000081121562000a5d575b61010081121562000a50575b601081121562000a43575b600481121562000a37575b121562000a2e575b908c8792603f19810160401b9260401b600f0b90607f031b678000000000000000915b821362000a0c575050906fb17217f7d1cf79abc9e3b39803f2f6af620002d692600f0b0260801d62000ecb565b60405163313ce56760e01b81529091906020816004816001600160a01b038f165afa90811562000a01579062000315918e91620009dd575b5062000eaa565b91828102928184041490151715620009c957106200096d5760c0528051906001600160401b03821162000959576007548060011c9060018116156200094e575b60011660208210146200093a579081601f849311620008da575b50602090601f83116001146200085e578b9262000852575b50508160011b916000199060031b1c1916176007555b600880546001600160a01b0319166001600160a01b039290921691909117905560805242808201106200083e57420160049081556005805461ffff1916905560e091909152610100919091526001600160a01b0390911660a081905284516101605260405163313ce56760e01b8152929160209184919082905afa91821562000833579060ff92918492620007fb575b50610120829052600c80546001600160a01b0319166001600160a01b0392909216919091179055168015620007e557506200046e60ff610120511662000ebc565b600d555b806200048460ff610120511662000eaa565b91620007d157506101405260005b8151811015620006e957600581901b82016020015160408051919082016001600160401b03811183821017620006bd576040528152600060208201526003549068010000000000000000821015620006bd576001820180600355821015620006d3576003600052805180517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b92916001600160401b038211620006bd578460011b840154600181811c91168015620006b2575b60208210146200069c57601f81116200064e575b50602090601f8311600114620005d15791806001959492602094600092620005c5575b5050600019600383901b1c191690851b1785851b8401555b015192821b0101556000198114620005af5760010162000492565b634e487b7160e01b600052601160045260246000fd5b0151905038806200057c565b908560011b850160005260206000209160005b601f1985168110620006355750926001959492869260209583601f198116106200061b575b505050811b0185851b84015562000594565b015160001960f88460031b161c1916905538808062000609565b91926020600181928685015181550194019201620005e4565b8560011b85016000526020600020601f840160051c81016020851062000694575b601f830160051c820181106200068757505062000559565b600081556001016200066f565b50806200066f565b634e487b7160e01b600052602260045260246000fd5b90607f169062000545565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6040516135fd908162000f21823960805181818161096901528181611520015281816115f9015281816116600152612588015260a05181818161025c015281816103ac0152818161072701528181610dbf015281816112270152818161184e0152611d27015260c0518181816105b701528181610a6d01528181610e1b015281816114500152611b34015260e051818181610d2f01528181611373015281816115890152611c1c01526101005181818161036e015281816117d8015261193a01526101205181611abd015261014051818181610667015261090b01526101605181610bb90152f35b634e487b7160e01b81526011600452602490fd5b620007f290820362000ebc565b600d5562000472565b6200082391925060203d6020116200082b575b6200081a818362000ddf565b81019062000e8f565b90386200042d565b503d6200080e565b6040513d85823e3d90fd5b634e487b7160e01b86526011600452602486fd5b01519050388062000387565b60078c528b93506000805160206200451e83398151915291905b601f1984168510620008be576001945083601f19811610620008a4575b505050811b016007556200039d565b015160001960f88460031b161c1916905538808062000895565b8181015183556020948501946001909301929091019062000878565b60078c529091506000805160206200451e833981519152601f840160051c81016020851062000932575b90849392915b8d601f840160051c8301821062000924575050506200036f565b81558594506001016200090a565b508062000904565b634e487b7160e01b8b52602260045260248bfd5b90607f169062000355565b634e487b7160e01b8a52604160045260248afd5b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c2066756e6473206d757374206578636565642062202a206c6e60448201526d286e756d5f6f7574636f6d65732960901b6064820152608490fd5b634e487b7160e01b8c52601160045260248cfd5b620009fa915060203d6020116200082b576200081a818362000ddf565b386200030e565b6040513d8f823e3d90fd5b8091935002908160ff1c9182607f011c918302019160011d8792918e620002a9565b60010162000286565b91810191811d6200027e565b6004928301921d62000273565b6008928301921d62000268565b6010928301921d6200025c565b6020928301921d6200024f565b506040905081811b600f0b811d6200023d565b8b80fd5b60405162461bcd60e51b815260206004820152601e60248201527f4174206c656173742074776f206f7574636f6d657320726571756972656400006044820152606490fd5b60405162461bcd60e51b815260206004820152603460248201527f4c697175696469747920706172616d6574657220276227206d7573742062652060448201527f67726561746572207468616e206d696e696d756d0000000000000000000000006064820152608490fd5b60405162461bcd60e51b815260206004820152603160248201527f4c697175696469747920706172616d6574657220276227206578636565647320604482015270746865206c696d6974206d6178696d756d60781b6064820152608490fd5b60405162461bcd60e51b815260206004820152601a60248201527f496e76616c6964206e756d626572206f66206f7574636f6d65730000000000006044820152606490fd5b60059150111538620001dd565b60405162461bcd60e51b815260206004820152601960248201527f4475726174696f6e206d75737420626520706f736974697665000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152602f60248201527f4c697175696469747920706172616d657465722062206d75737420626520677260448201526e6561746572207468616e207a65726f60881b6064820152608490fd5b60405162461bcd60e51b815260206004820152601d60248201527f4174206c65617374206f6e65206f7574636f6d652072657175697265640000006044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f496e76616c69642066656520726563697069656e7420616464726573730000006044820152606490fd5b62461bcd60e51b815260206004820152601560248201527f496e76616c696420746f6b656e206164647265737300000000000000000000006044820152606490fd5b604051631e4fbdf760e01b8152600481018c9052602490fd5b82516001600160401b03811162000db3576020809262000da58293838761018001918b61018001010162000e03565b8152019301929050620000d1565b8880fd5b8680fd5b634e487b7160e01b85526041600452602485fd5b8380fd5b8280fd5b80fd5b600080fd5b601f909101601f19168101906001600160401b03821190821017620006bd57604052565b919080601f8401121562000dda578251906001600160401b038211620006bd576040519160209162000e3f601f8301601f191684018562000ddf565b81845282828701011162000dda5760005b81811062000e6657508260009394955001015290565b858101830151848201840152820162000e50565b51906001600160a01b038216820362000dda57565b9081602091031262000dda575160ff8116810362000dda5790565b60ff16604d8111620005af57600a0a90565b604d8111620005af57600a0a90565b811562000f1957600f0b60009081811262000f15576001600160801b038316810260401c9260801c026001600160c01b03811162000f155760401b908219821162000dd757500190565b5080fd5b505060009056fe6040608081526004908136101561001557600080fd5b600091823560e01c9081631cb44dfc14611efc5781632279a97014611ae15781633b97e85614611aa35781633f4ba83a14611a39578163416e517e146119695781634690484014611925578163474e19f21461190a578163476343ee146117bc57816348a5dec6146117985781634a79d50c146116835781634df7e3d014611648578163510f5116146115b557816353249a31146114dc5781635c975abb146114b857816369c41a741461149a5781636e77609e146114735781636ed71ede14611438578163715018a6146113de5781637dc0d1d0146113b55781637dc8f086146113965781637fd6f15c1461135b5781638456cb591461130057816389ff7069146111d85781638da5cb5b146111b05781638f512bf4146111915781638fbb4a821461056e5781639003adfe14611172578163905143201461115357816392b2849b1461113757816396211a97146110b35781639aaff766146110565781639b34ae03146110375781639e6c295914610c65578163a2d07d241461101b578163b03238f714610fe7578163ba5b798214610fbe578163beebc5da14610c6a578163c3883f1714610c65578163c511ed5e14610bdc578163ca3bd56914610ba1578163d55e725b14610b82578163ddd9d04514610a42578163e75722301461092e578163e8467af6146108f3578163e88499a914610573578163ed0c986f1461056e578163eed2a1471461045d578163ef86ce8e14610324578163f2fde38b1461028f575063fc0c546a1461024957600080fd5b3461028b578160031936011261028b57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fd5b905034610320576020366003190112610320576102aa611f88565b906102b36120c9565b6001600160a01b0391821692831561030a575050600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b9190503461032057826003193601126103205761033f6120c9565b61035060ff60055460081c1661238c565b6009805490849055815163a9059cbb60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016848201908152602081810193909352909190829081906040010381877f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1908115610453578491610425575b50156103ee578280f35b906020606492519162461bcd60e51b8352820152601160248201527015da5d1a191c985dd85b0819985a5b1959607a1b6044820152fd5b610446915060203d811161044c575b61043e8183611fde565b810190612221565b386103e4565b503d610434565b82513d86823e3d90fd5b82843461056b576020908160031936011261056b5783359060035482101561056b575061048990612079565b509282519360009181549260019380851c92858216908115610561575b878510821461054e5750838952889291879082156105315750506001146104f1575b6104d492500386611fde565b01546104e98351948486958652850190612000565b918301520390f35b505081600052858480600020856000915b8583106105185750506104d493508201016104c8565b80919294505483858c0101520191018590858993610502565b60ff1916848201526104d494151560051b84010191506104c89050565b634e487b7160e01b845260229052602483fd5b93607f16936104a6565b80fd5b612040565b9190503461032057826003193601126103205761058e61229b565b61059661227d565b6105a760ff60055460081c1661238c565b60018060a01b039081600c5416927f0000000000000000000000000000000000000000000000000000000000000000926006548351946318896f4d60e11b8652808487015281602487015260209586816044818b5afa80156108ba5787908a906108c4575b8751627eeac760e11b81523388820190815260208101929092529250829081906040015b03818b5afa9081156108ba578991610888575b50801561084e5780600161065685612079565b50015410610813579088929161068c7f0000000000000000000000000000000000000000000000000000000000000000826121e1565b986106a58a6009546106a0828210156122be565b612214565b600955803b1561080f578751636f3df85160e11b815233888201908152602081019490945260408401949094526060830191909152839183919082908490829060800103925af18015610805576107ed575b5050825163a9059cbb60e01b815233838201908152602081018790529091859183919082908a90829060400103927f0000000000000000000000000000000000000000000000000000000000000000165af19081156107e35786916107c6575b501561078f5750907fec68461f5d4cc45c89e914cb8826a966c73dd35e5f97815ece0a01ffa4a025a691519283523392a26001805580f35b82606492519162461bcd60e51b83528201526013602482015272151bdad95b881c185e5bdd5d0819985a5b1959606a1b6044820152fd5b6107dd9150843d861161044c5761043e8183611fde565b38610757565b83513d88823e3d90fd5b6107f690611fb4565b6108015785386106f7565b8580fd5b85513d84823e3d90fd5b8480fd5b855162461bcd60e51b81528086018890526015602482015274496e76616c696420736861726520616d6f756e747360581b6044820152606490fd5b855162461bcd60e51b815280860188905260146024820152734e6f2077696e6e696e677320746f20636c61696d60601b6044820152606490fd5b90508681813d83116108b3575b61089f8183611fde565b810103126108ae575138610643565b600080fd5b503d610895565b86513d8b823e3d90fd5b5081813d83116108ec575b6108d98183611fde565b810103126108ae5786610630915161060c565b503d6108cf565b50503461028b578160031936011261028b57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b905034610320576020366003190112610320573561095960035491610954838210612134565b612079565b506001809101549061099461098f7f00000000000000000000000000000000000000000000000000000000000000008094612755565b6129d6565b92859286925b828410610a0a5750505050600f0b908115610a0657821b60170b059160016001607f1b0319831215806109f5575b1561056b575067ffffffffffffffff6109ed6109e8602094600f0b6126e3565b61267f565b169051908152f35b5060016001607f1b038313156109c8565b8380fd5b90919293610a34610a3a91610a2e61098f8686610a268b612079565b500154612755565b9061269a565b94612504565b92919061099a565b83833461028b578060031936011261028b57610a5c611f88565b600c5482516318896f4d60e11b81527f000000000000000000000000000000000000000000000000000000000000000086820152602480359082015260209590916001600160a01b0316908683604481855afa928315610b785790879392918793610b43575b508551627eeac760e11b81526001600160a01b0390951690850190815260208101929092528391829081906040015b03915afa928315610b385792610b09575b5051908152f35b9091508281813d8311610b31575b610b218183611fde565b810103126108ae57519083610b02565b503d610b17565b8251903d90823e3d90fd5b8481959294503d8311610b71575b610b5b8183611fde565b810103126108ae57915186929091610af1610ac2565b503d610b51565b85513d88823e3d90fd5b50503461028b578160031936011261028b57602090600a549051908152f35b50503461028b578160031936011261028b57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b9190503461032057826003193601126103205781544210610c2c5782600160ff1960055416176005557f0b5f6bf058282d5cc003efc735b9ee453bbd7f9bef4c6db6300d095f3eefac288180a180f35b906020606492519162461bcd60e51b8352820152601360248201527213585c9ad95d081b9bdd081bdd995c881e595d606a1b6044820152fd5b61205d565b9190503461032057610c7b36611f9e565b610c8693919361229b565b610c8e61227d565b610c9d60ff60055416156120f5565b610caa6003548510612134565b8015610f7b57612710811015610f3857610d27610d146109e8610d00610cd6610cd1612513565b612579565b6001610ce18a612079565b5001610cee878254612172565b9055610cfb610cd1612513565b6126bf565b610d0f8982600f0b1215612195565b6126e3565b67ffffffffffffffff600d5491166121e1565b926064610d547f0000000000000000000000000000000000000000000000000000000000000000866121e1565b04936032850285810460321486151715610f2557606490049087610d82610d7b8489612214565b9783612172565b84516323b872dd60e01b8152338189019081523060208201526040810183905291979181906060016001600160a01b0392916020918391900381877f000000000000000000000000000000000000000000000000000000000000000087165af1908115610f1b5790610dfb918591610efd575b50612239565b600c5416803b15610320578551632991fa3b60e21b8152339281019283527f00000000000000000000000000000000000000000000000000000000000000006020840152604083018b905260608301889052918391839182908490829060800103925af1801561080557610edf575b50507f0ea2cc1a2a0fcfecef8b5ff9be41f8c0ca3770265a060b00de53118f88c91dfa95610eaa610ea2610ed59594610eb594612172565b600954612172565b600955600b54612172565b600b55519283923396846040919493926060820195825260208201520152565b0390a26001805580f35b610eeb90949394611fb4565b610ef9578738939293610e6a565b8780fd5b610f15915060203d811161044c5761043e8183611fde565b38610df5565b87513d86823e3d90fd5b634e487b7160e01b885260118552602488fd5b506020606492519162461bcd60e51b8352820152601a60248201527f5368617265207472616465206c696d69742065786365656465640000000000006044820152fd5b506020606492519162461bcd60e51b8352820152601b60248201527f4d75737420627579206174206c65617374206f6e6520736861726500000000006044820152fd5b50503461028b578160031936011261028b57600c5490516001600160a01b039091168152602090f35b82843461056b57602036600319011261056b575060016110116020933561095460035482106123d1565b5001549051908152f35b50503461028b578160031936011261028b576020905160328152f35b50503461028b578160031936011261028b576020906006549051908152f35b9050823461056b575061106836611f9e565b8351906020820192835284820152838152606081019281841067ffffffffffffffff85111761109e575082602094525190208152f35b604190634e487b7160e01b6000525260246000fd5b9050823461056b57506110c536611f9e565b909160018211156110f4576020846110ed856110e86110e387612667565b6128c5565b612708565b9051908152f35b606490602085519162461bcd60e51b8352820152601e60248201527f4174206c656173742074776f206f7574636f6d657320726571756972656400006044820152fd5b50503461028b578160031936011261028b576020905160058152f35b50503461028b578160031936011261028b576020906009549051908152f35b50503461028b578160031936011261028b57602090600b549051908152f35b50503461028b578160031936011261028b57602090600d549051908152f35b50503461028b578160031936011261028b57905490516001600160a01b039091168152602090f35b919050346103205760209081600319360112610a06578235926111f96120c9565b81516323b872dd60e01b815233828201908152306020820152604081018690528490829081906060010381897f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19081156107e35786916112e3575b50156112a25750907f543ba50a5eec5e6178218e364b1d0f396157b3c8fa278522c2cb7fd99407d4749161129584600954612172565b600955519283523392a280f35b82606492519162461bcd60e51b8352820152601c60248201527f496e697469616c2066756e64207472616e73666572206661696c6564000000006044820152fd5b6112fa9150843d861161044c5761043e8183611fde565b3861125f565b50503461028b578160031936011261028b5760207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589161133e6120c9565b61134661227d565b600160ff19600254161760025551338152a180f35b50503461028b578160031936011261028b57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b50503461028b578160031936011261028b576020906003549051908152f35b50503461028b578160031936011261028b5760085490516001600160a01b039091168152602090f35b833461056b578060031936011261056b576113f76120c9565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461028b578160031936011261028b57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b50503461028b578160031936011261028b5760209060ff60055460081c1690519015158152f35b90503461032057826003193601126103205760209250549051908152f35b50503461028b578160031936011261028b5760209060ff6002541690519015158152f35b50503461028b576020906110ed611582610d146109e8610d0f61157c61150136611f9e565b919061151060035482106123d1565b61151b831515612415565b6115467f00000000000000000000000000000000000000000000000000000000000000001515612474565b61154e612513565b9061157661156f61155e84612579565b9561156984866124d8565b51612214565b91836124d8565b52612579565b906126bf565b60646115ae7f0000000000000000000000000000000000000000000000000000000000000000836121e1565b0490612172565b50503461028b576020906110ed611582610d146109e8610d0f610cfb6115da36611f9e565b91906115e960035482106123d1565b6115f4831515612415565b61161f7f00000000000000000000000000000000000000000000000000000000000000001515612474565b611627612513565b9061157661156f61163784612579565b9561164284866124d8565b51612172565b50503461028b578160031936011261028b57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b82843461056b578060031936011261056b575080519060009060075491600183811c9080851694851561178e575b602095868410811461177b578388528794939291879082156117595750506001146116fc575b50506116f892916116e9910385611fde565b51928284938452830190612000565b0390f35b9085925060076000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688916000925b82841061174157505050820101816116e96116d7565b8054848a01860152889550879490930192810161172b565b60ff19168682015292151560051b850190920192508391506116e990506116d7565b634e487b7160e01b855260228952602485fd5b91607f16916116b1565b50503461028b578160031936011261028b5760209060ff6005541690519015158152f35b9050346103205782600319360112610320576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008181169391929061184a9060209061181033881461230a565b600b5495869189600b5589875180968195829463a9059cbb60e01b84528a840160209093929193604081019460018060a01b031681520152565b03927f0000000000000000000000000000000000000000000000000000000000000000165af19081156107e35786916118ec575b50156118b257507fc0819c13be868895eb93e40eaceb96de976442fa1d404e5c55f14bb65a8c489a9160209151908152a280f35b6020606492519162461bcd60e51b83528201526015602482015274119959481dda5d1a191c985dd85b0819985a5b1959605a1b6044820152fd5b611904915060203d811161044c5761043e8183611fde565b3861187e565b50503461028b578160031936011261028b5751908152602090f35b50503461028b578160031936011261028b57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b919050346103205760203660031901126103205781359161199560018060a01b0360085416331461230a565b6005549160ff831615611a02575050806119ce60ff6101009360081c16156119bc81612347565b6119c96003548610612134565b612347565b8260065561ff001916176005557fbdb6af8caa3a0b8c130fd2ab4c4930e3fd8987c9730340729078e256bbc4b5438280a280f35b906020606492519162461bcd60e51b8352820152601160248201527026b0b935b2ba1039ba34b6361037b832b760791b6044820152fd5b905034610320578260031936011261032057611a536120c9565b6002549060ff821615611a95575060ff1916600255513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b8251638dfc202b60e01b8152fd5b50503461028b578160031936011261028b576020905160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b83833461028b57611af136611f9e565b611af961229b565b611b0161227d565b611b1060ff60055416156120f5565b611b1d6003548310612134565b8015611eb957600c5483516318896f4d60e11b81527f0000000000000000000000000000000000000000000000000000000000000000878201819052602482018590526020926001600160a01b0392908316908481604481855afa908115611de9579085918a91611e84575b508851627eeac760e11b815233818d019081526020810192909252928391829081906040015b03915afa908115611e7a579085918991611e49575b5010611e0657611c15610d146109e8611c06611be1610cd1612513565b6001611bec8b612079565b5001611bf98a8254612214565b905561157c610cd1612513565b610d0f8b82600f0b1215612195565b6064611c417f0000000000000000000000000000000000000000000000000000000000000000836121e1565b046032810281810460321482151715611df35791610eaa611ca392611c7c6064611c9d9b9c9d9e97960491611c768382612214565b94612214565b9981611c97611c8f8d9460095495612172565b8410156122be565b8b612172565b90612214565b600b558883600c541691823b1561028b578951636f3df85160e11b8152338582019081526020810192909252604082018a90526060820188905292839182908490829060800103925af18015611de957611dce575b50865163a9059cbb60e01b8152339181019182526020820186905291839183919082908b9082906040015b03927f0000000000000000000000000000000000000000000000000000000000000000165af1918215611dc457610ed5927f019eed797248695407e185a0977fa0dba8bbaaba6c2f6f4a8bdf6fb32e62ba23969792611d8a928a92611da7575b5050612239565b519283923396846040919493926060820195825260208201520152565b611dbd9250803d1061044c5761043e8183611fde565b8980611d83565b86513d89823e3d90fd5b611d2392849299611ddf8893611fb4565b9992509250611cf8565b88513d8b823e3d90fd5b634e487b7160e01b8a5260118b5260248afd5b855162461bcd60e51b8152808901849052601960248201527f4e6f7420656e6f7567682073686172657320746f2073656c6c000000000000006044820152606490fd5b809250858092503d8311611e73575b611e628183611fde565b81010312610ef9578490518a611bc4565b503d611e58565b87513d8a823e3d90fd5b82819392503d8311611eb2575b611e9b8183611fde565b81010312611eae57518490611baf611b89565b8880fd5b503d611e91565b825162461bcd60e51b8152602081870152601c60248201527f4d7573742073656c6c206174206c65617374206f6e65207368617265000000006044820152606490fd5b90503461032057602036600319011261032057611f17611f88565b611f1f6120c9565b6001600160a01b0316918215611f4c5750506bffffffffffffffffffffffff60a01b600854161760085580f35b906020606492519162461bcd60e51b83528201526016602482015275496e76616c6964206f7261636c65206164647265737360501b6044820152fd5b600435906001600160a01b03821682036108ae57565b60409060031901126108ae576004359060243590565b67ffffffffffffffff8111611fc857604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117611fc857604052565b919082519283825260005b84811061202c575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161200b565b346108ae5760003660031901126108ae5760206040516127108152f35b346108ae5760003660031901126108ae57602060405160648152f35b6003548110156120b357600360005260011b7fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0190600090565b634e487b7160e01b600052603260045260246000fd5b6000546001600160a01b031633036120dd57565b60405163118cdaa760e01b8152336004820152602490fd5b156120fc57565b60405162461bcd60e51b815260206004820152601060248201526f13585c9ad95d081a5cc818db1bdcd95960821b6044820152606490fd5b1561213b57565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206f7574636f6d6560881b6044820152606490fd5b9190820180921161217f57565b634e487b7160e01b600052601160045260246000fd5b1561219c57565b60405162461bcd60e51b815260206004820152601b60248201527f436f737420646966666572656e6365206973206e6567617469766500000000006044820152606490fd5b8181029291811591840414171561217f57565b81156121fe570490565b634e487b7160e01b600052601260045260246000fd5b9190820391821161217f57565b908160209103126108ae575180151581036108ae5790565b1561224057565b60405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606490fd5b60ff6002541661228957565b60405163d93c066560e01b8152600490fd5b6002600154146122ac576002600155565b604051633ee5aeb560e01b8152600490fd5b156122c557565b60405162461bcd60e51b815260206004820152601f60248201527f496e73756666696369656e74206d61726b6574206d616b65722066756e6473006044820152606490fd5b1561231157565b60405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606490fd5b1561234e57565b60405162461bcd60e51b815260206004820152601660248201527513585c9ad95d08185b1c9958591e481cd95d1d1b195960521b6044820152606490fd5b1561239357565b60405162461bcd60e51b815260206004820152601660248201527513585c9ad95d081b9bdd081cd95d1d1b1959081e595d60521b6044820152606490fd5b156123d857565b60405162461bcd60e51b8152602060048201526015602482015274092dcecc2d8d2c840deeae8c6dedaca40d2dcc8caf605b1b6044820152606490fd5b1561241c57565b60405162461bcd60e51b815260206004820152602a60248201527f4e756d626572206f6620736861726573206d7573742062652067726561746572604482015269207468616e207a65726f60b01b6064820152608490fd5b1561247b57565b60405162461bcd60e51b815260206004820152602f60248201527f4c697175696469747920706172616d657465722062206d75737420626520677260448201526e6561746572207468616e207a65726f60881b6064820152608490fd5b80518210156120b35760209160051b010190565b67ffffffffffffffff8111611fc85760051b60200190565b600019811461217f5760010190565b60035461251f816124ec565b9061252d6040519283611fde565b808252601f1961253c826124ec565b0136602084013760005b81811061255257505090565b80600161256161257493612079565b50015461256e82866124d8565b52612504565b612546565b9081511561262a5790600080917f0000000000000000000000000000000000000000000000000000000000000000915b81518410156125dc576125d06125d691610a2e61098f866125ca89886124d8565b51612755565b93612504565b926125a9565b9250506125eb6125f191612667565b916128c5565b600f0b90600f0b0260401d60016001607f1b031981121580612619575b156108ae57600f0b90565b5060016001607f1b0381131561260e565b60405162461bcd60e51b81526020600482015260156024820152744e6f206f7574636f6d657320617661696c61626c6560581b6044820152606490fd5b677fffffffffffffff81116108ae5760401b600f0b90565b600f0b600081126108ae5760401d67ffffffffffffffff1690565b90600f0b90600f0b0160016001607f1b03198112158061261957156108ae57600f0b90565b600f91820b910b0360016001607f1b03198112158061261957156108ae57600f0b90565b60401b60170b60401d60016001607f1b03198112158061261957156108ae57600f0b90565b811561274e57600f0b60009081811261028b576001600160801b038316810260401c9260801c026001600160c01b03811161028b5760401b908219821161056b57500190565b5050600090565b9080156108ae5760006001600160c01b03831161279e57506127799160401b6121f4565b6001600160801b03908181116108ae571660016001607f1b0381116108ae57600f0b90565b9060c083811c93846401000000008110156128b8575b806201000060029210156128ac575b6101008110156128a0575b6010811015612894575b6004811015612889575b101561287f575b6128076000199282600185870160be1984011c019160ff031b6121f4565b946001600160801b0390818711610801578460801c870291851687029084819460401b91838310612875575b505003948160801b9384871061286b575b505060801c036128605761285892036121f4565b905b01612779565b50505060019061285a565b9092019138612844565b0193508438612833565b90600101906127e9565b92810192811c6127e2565b6004938401931c6127d8565b6008938401931c6127ce565b6010938401931c6127c3565b5060e0915080821c6127b4565b600f0b60008082131561056b578082680100000000000000008412156129c9575b8064010000000060029212156129bd575b620100008112156129b1575b6101008112156129a5575b6010811215612999575b600481121561298e575b1215612986575b6001603f1b92603f19820160401b9291607f919082031b5b828513612968575050506fb17217f7d1cf79abc9e3b39803f2f6af9150600f0b0260801d90565b600185901d9490800260ff81901c918202909401939082011c612941565b600101612929565b91810191811d612922565b6004928301921d612918565b6008928301921d61290e565b6010928301921d612903565b6020928301921d6128f7565b506040905082811d6128e6565b600f0b600160461b8112156108ae57683fffffffffffffffff198112612a1b57700171547652b82fe1777d0ffda0d23a7d12612a18910260801d600f0b612a21565b90565b50600090565b600f81810b600160461b8112156108ae57683fffffffffffffffff1981126135bf576001607f1b90600093846001603f1b8216850b136135a7575b846740000000000000008216850b1361358a575b846720000000000000008216850b1361356d575b846710000000000000008216850b13613550575b846708000000000000008216850b13613533575b846704000000000000008216850b13613516575b846702000000000000008216850b136134f9575b846701000000000000008216850b136134dc575b8466800000000000008216850b136134bf575b8466400000000000008216850b136134a2575b8466200000000000008216850b13613485575b8466100000000000008216850b13613468575b8466080000000000008216850b1361344b575b8466040000000000008216850b1361342e575b8466020000000000008216850b13613411575b8466010000000000008216850b136133f4575b84658000000000008216850b136133d7575b84654000000000008216850b136133ba575b84652000000000008216850b1361339d575b84651000000000008216850b13613380575b84650800000000008216850b13613363575b84650400000000008216850b13613346575b84650200000000008216850b13613329575b84650100000000008216850b1361330c575b846480000000008216850b136132ef575b846440000000008216850b136132d2575b846420000000008216850b136132b5575b846410000000008216850b13613298575b846408000000008216850b1361327b575b846404000000008216850b1361325e575b846402000000008216850b13613241575b846401000000008216850b13613224575b8463800000008216850b13613207575b8463400000008216850b136131ea575b8463200000008216850b136131cd575b8463100000008216850b136131b0575b8463080000008216850b13613193575b8463040000008216850b13613176575b8463020000008216850b13613159575b8463010000008216850b1361313c575b84628000008216850b1361311f575b84624000008216850b13613102575b84622000008216850b136130e5575b84621000008216850b136130c8575b84620800008216850b136130ab575b84620400008216850b1361308e575b84620200008216850b13613071575b84620100008216850b13613054575b846180008216850b13613037575b846140008216850b1361301a575b846120008216850b13612ffd575b846110008216850b13612fe0575b846108008216850b13612fc3575b846104008216850b13612fa6575b846102008216850b13612f89575b846101008216850b13612f6c575b8460809181838216870b13612f50575b8160408216870b13612f34575b8160208216870b13612f18575b8160108216870b13612efc575b8160088216870b13612ee0575b8160048216870b13612ec4575b8160028216870b13612ea7575b600116850b13612e89575b5060401d820b603f03820b1c9160016001607f1b03831161056b57500b90565b909170010000000000000000b17217f7d1cf79ab02901c9038612e69565b7001000000000000000162e42fefa39ef358909402821c93612e5e565b9370010000000000000002c5c85fdf473de6b202821c93612e51565b93700100000000000000058b90bfbe8e7bcd6d02821c93612e44565b937001000000000000000b17217f7d1cf79afa02821c93612e37565b93700100000000000000162e42fefa39ef366f02821c93612e2a565b937001000000000000002c5c85fdf473de6eca02821c93612e1d565b9370010000000000000058b90bfbe8e7bce54402821c93612e10565b91700100000000000000b17217f7d1cf79e9490260801c91612e00565b9170010000000000000162e42fefa39ef44d910260801c91612df2565b91700100000000000002c5c85fdf473dea871f0260801c91612de4565b917001000000000000058b90bfbe8e7bdcbe2e0260801c91612dd6565b9170010000000000000b17217f7d1cf7d83c1a0260801c91612dc8565b917001000000000000162e42fefa39f02b772c0260801c91612dba565b9170010000000000002c5c85fdf473e242ea380260801c91612dac565b91700100000000000058b90bfbe8e7cc35c3f00260801c91612d9e565b917001000000000000b17217f7d1cfb72b45e10260801c91612d90565b91700100000000000162e42fefa39fe95583c20260801c91612d81565b917001000000000002c5c85fdf4741bea6e77e0260801c91612d72565b9170010000000000058b90bfbe8e8b2d3d4ede0260801c91612d63565b91700100000000000b17217f7d1d351a389d400260801c91612d54565b9170010000000000162e42fefa3ae53369388c0260801c91612d45565b91700100000000002c5c85fdf477b662b269450260801c91612d36565b917001000000000058b90bfbe8f71cb4e4b33d0260801c91612d27565b9170010000000000b17217f7d20cf927c8e94c0260801c91612d18565b917001000000000162e42fefa494f1478fde050260801c91612d08565b9170010000000002c5c85fdf4b15de6f17eb0d0260801c91612cf8565b91700100000000058b90bfbe9ddbac5e109cce0260801c91612ce8565b917001000000000b17217f7d5a7716bba4a9ae0260801c91612cd8565b91700100000000162e42fefb2fed257559bdaa0260801c91612cc8565b917001000000002c5c85fdf84bd62ae30a74cc0260801c91612cb8565b9170010000000058b90bfbf8479bd5a81b51ad0260801c91612ca8565b91700100000000b17217f80f4ef5aadda455540260801c91612c98565b9170010000000162e42ff0999ce3541b9fffcf0260801c91612c87565b91700100000002c5c85fe31f35a6a30da1be500260801c91612c76565b917001000000058b90bfcdee5acd3c1cedc8230260801c91612c65565b9170010000000b17217fba9c739aa5819f44f90260801c91612c54565b917001000000162e42fff037df38aa2b219f060260801c91612c43565b9170010000002c5c8601cc6b9e94213c72737a0260801c91612c32565b91700100000058b90c0b48c6be5df846c5b2ef0260801c91612c21565b917001000000b1721835514b86e6d96efd1bfe0260801c91612c10565b91700100000162e430e5a18f6119e3c02282a50260801c91612bfe565b917001000002c5c863b73f016468f6bac5ca2b0260801c91612bec565b9170010000058b90cf1e6d97f9ca14dbcc16280260801c91612bda565b91700100000b1721bcfc99d9f890ea069117630260801c91612bc8565b9170010000162e43f4f831060e02d839a9d16d0260801c91612bb6565b91700100002c5c89d5ec6ca4d7c8acc017b7c90260801c91612ba4565b917001000058b91b5bc9ae2eed81e9b7d4cfab0260801c91612b92565b9170010000b17255775c040618bf4a4ade83fc0260801c91612b80565b917001000162e525ee054754457d59952920260260801c91612b6d565b9170010002c5cc37da9491d0985c348c68e7b30260801c91612b5a565b91700100058ba01fb9f96d6cacd4b180917c3d0260801c91612b47565b917001000b175effdc76ba38e31671ca9397250260801c91612b34565b91700100162f3904051fa128bca9c55c31e5df0260801c91612b21565b917001002c605e2e8cec506d21bfc89a23a00f0260801c91612b0e565b9170010058c86da1c09ea1ff19d294cf2f679b0260801c91612afb565b91700100b1afa5abcbed6129ab13ec11dc95430260801c91612ae8565b9170010163da9fb33356d84a66ae336dcdfa3f0260801c91612ad4565b91700102c9a3e778060ee6f7caca4f7a29bde80260801c91612ac0565b917001059b0d31585743ae7c548eb68ca417fd0260801c91612aac565b9170010b5586cf9890f6298b92b71842a983630260801c91612a98565b917001172b83c7d517adcdf7c8c50eb14a791f0260801c91612a84565b917001306fe0a31b7152de8d5a46305c85edec0260801c91612a70565b6fb504f333f9de6484597d89b3754abe9f9250612a5c565b50505060009056fea264697066735822122095fb40e7b7ee25ffc569bf0f8362d837e9c68f4837e3cb14f698a2e1f905f6ed64736f6c63430008140033a66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688","opcodes":"PUSH2 0x180 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0xDDA JUMPI PUSH1 0x0 PUSH3 0x453E SWAP1 DUP2 CODESIZE SUB DUP1 SWAP3 PUSH3 0x25 DUP3 PUSH2 0x180 PUSH3 0xDDF JUMP JUMPDEST PUSH2 0x180 CODECOPY PUSH2 0x160 DUP3 SLT PUSH3 0xDD7 JUMPI PUSH2 0x180 MLOAD PUSH2 0x1A0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0xDD3 JUMPI PUSH3 0x5F SWAP1 DUP5 PUSH2 0x180 ADD SWAP1 PUSH2 0x180 ADD PUSH3 0xE03 JUMP JUMPDEST PUSH2 0x1C0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0xDCF JUMPI PUSH2 0x180 DUP6 ADD PUSH2 0x19F DUP3 ADD SLT ISZERO PUSH3 0xDCF JUMPI PUSH2 0x180 DUP2 ADD MLOAD SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 GT PUSH3 0xDBB JUMPI DUP6 PUSH1 0x5 SHL SWAP1 PUSH1 0x40 MLOAD SWAP7 PUSH3 0xB1 PUSH1 0x20 DUP5 ADD DUP10 PUSH3 0xDDF JUMP JUMPDEST DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP1 PUSH2 0x180 DUP2 ADD PUSH2 0x1A0 DUP6 DUP6 ADD ADD GT PUSH3 0xDB7 JUMPI PUSH2 0x1A0 DUP5 ADD SWAP2 JUMPDEST PUSH2 0x1A0 DUP6 DUP6 ADD ADD DUP4 LT PUSH3 0xD76 JUMPI POP POP POP POP POP PUSH3 0xF4 PUSH1 0x60 PUSH2 0x180 ADD PUSH3 0xE7A JUMP JUMPDEST PUSH2 0x200 MLOAD PUSH2 0x220 MLOAD PUSH2 0x240 MLOAD SWAP2 PUSH3 0x10E PUSH2 0x260 PUSH3 0xE7A JUMP JUMPDEST SWAP4 PUSH3 0x11C PUSH2 0x280 PUSH3 0xE7A JUMP JUMPDEST PUSH2 0x2A0 MLOAD SWAP8 SWAP1 SWAP7 SWAP1 PUSH3 0x131 PUSH2 0x2C0 PUSH3 0xE7A JUMP JUMPDEST SWAP9 CALLER ISZERO PUSH3 0xD5D JUMPI DUP11 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP14 SSTORE PUSH1 0x40 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP15 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x9 DUP13 SWAP1 SSTORE PUSH1 0xA DUP13 SWAP1 SSTORE PUSH1 0xB DUP13 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND ISZERO PUSH3 0xD1B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH3 0xCD6 JUMPI DUP12 MLOAD ISZERO PUSH3 0xC91 JUMPI DUP5 ISZERO PUSH3 0xC34 JUMPI DUP6 ISZERO PUSH3 0xBEF JUMPI DUP12 MLOAD DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH3 0xBE2 JUMPI JUMPDEST POP ISZERO PUSH3 0xB9D JUMPI PUSH2 0x2710 DUP6 GT PUSH3 0xB3E JUMPI PUSH1 0x64 DUP6 LT PUSH3 0xAD3 JUMPI DUP12 MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH3 0xA8E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x3F SHL SUB DUP2 GT PUSH3 0xA8A JUMPI DUP12 DUP2 PUSH1 0x40 SHL PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH3 0xA8A JUMPI DUP12 PUSH1 0x40 DUP3 SWAP1 SHL PUSH1 0xF SIGNEXTEND PUSH9 0x10000000000000000 DUP2 SLT ISZERO PUSH3 0xA77 JUMPI JUMPDEST DUP1 PUSH5 0x100000000 PUSH1 0x2 SWAP3 SLT ISZERO PUSH3 0xA6A JUMPI JUMPDEST PUSH3 0x10000 DUP2 SLT ISZERO PUSH3 0xA5D JUMPI JUMPDEST PUSH2 0x100 DUP2 SLT ISZERO PUSH3 0xA50 JUMPI JUMPDEST PUSH1 0x10 DUP2 SLT ISZERO PUSH3 0xA43 JUMPI JUMPDEST PUSH1 0x4 DUP2 SLT ISZERO PUSH3 0xA37 JUMPI JUMPDEST SLT ISZERO PUSH3 0xA2E JUMPI JUMPDEST SWAP1 DUP13 DUP8 SWAP3 PUSH1 0x3F NOT DUP2 ADD PUSH1 0x40 SHL SWAP3 PUSH1 0x40 SHL PUSH1 0xF SIGNEXTEND SWAP1 PUSH1 0x7F SUB SHL PUSH8 0x8000000000000000 SWAP2 JUMPDEST DUP3 SGT PUSH3 0xA0C JUMPI POP POP SWAP1 PUSH16 0xB17217F7D1CF79ABC9E3B39803F2F6AF PUSH3 0x2D6 SWAP3 PUSH1 0xF SIGNEXTEND MUL PUSH1 0x80 SAR PUSH3 0xECB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH3 0xA01 JUMPI SWAP1 PUSH3 0x315 SWAP2 DUP15 SWAP2 PUSH3 0x9DD JUMPI JUMPDEST POP PUSH3 0xEAA JUMP JUMPDEST SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH3 0x9C9 JUMPI LT PUSH3 0x96D JUMPI PUSH1 0xC0 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x959 JUMPI PUSH1 0x7 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND ISZERO PUSH3 0x94E JUMPI JUMPDEST PUSH1 0x1 AND PUSH1 0x20 DUP3 LT EQ PUSH3 0x93A JUMPI SWAP1 DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH3 0x8DA JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x85E JUMPI DUP12 SWAP3 PUSH3 0x852 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x7 SSTORE JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 MSTORE TIMESTAMP DUP1 DUP3 ADD LT PUSH3 0x83E JUMPI TIMESTAMP ADD PUSH1 0x4 SWAP1 DUP2 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH2 0xFFFF NOT AND SWAP1 SSTORE PUSH1 0xE0 SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0xA0 DUP2 SWAP1 MSTORE DUP5 MLOAD PUSH2 0x160 MSTORE PUSH1 0x40 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP2 PUSH1 0x20 SWAP2 DUP5 SWAP2 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH3 0x833 JUMPI SWAP1 PUSH1 0xFF SWAP3 SWAP2 DUP5 SWAP3 PUSH3 0x7FB JUMPI JUMPDEST POP PUSH2 0x120 DUP3 SWAP1 MSTORE PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE AND DUP1 ISZERO PUSH3 0x7E5 JUMPI POP PUSH3 0x46E PUSH1 0xFF PUSH2 0x120 MLOAD AND PUSH3 0xEBC JUMP JUMPDEST PUSH1 0xD SSTORE JUMPDEST DUP1 PUSH3 0x484 PUSH1 0xFF PUSH2 0x120 MLOAD AND PUSH3 0xEAA JUMP JUMPDEST SWAP2 PUSH3 0x7D1 JUMPI POP PUSH2 0x140 MSTORE PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH3 0x6E9 JUMPI PUSH1 0x5 DUP2 SWAP1 SHL DUP3 ADD PUSH1 0x20 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x6BD JUMPI PUSH1 0x40 MSTORE DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH3 0x6BD JUMPI PUSH1 0x1 DUP3 ADD DUP1 PUSH1 0x3 SSTORE DUP3 LT ISZERO PUSH3 0x6D3 JUMPI PUSH1 0x3 PUSH1 0x0 MSTORE DUP1 MLOAD DUP1 MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x6BD JUMPI DUP5 PUSH1 0x1 SHL DUP5 ADD SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x6B2 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH3 0x69C JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x64E JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x5D1 JUMPI SWAP2 DUP1 PUSH1 0x1 SWAP6 SWAP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x0 SWAP3 PUSH3 0x5C5 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP6 SHL OR DUP6 DUP6 SHL DUP5 ADD SSTORE JUMPDEST ADD MLOAD SWAP3 DUP3 SHL ADD ADD SSTORE PUSH1 0x0 NOT DUP2 EQ PUSH3 0x5AF JUMPI PUSH1 0x1 ADD PUSH3 0x492 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x57C JUMP JUMPDEST SWAP1 DUP6 PUSH1 0x1 SHL DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH3 0x635 JUMPI POP SWAP3 PUSH1 0x1 SWAP6 SWAP5 SWAP3 DUP7 SWAP3 PUSH1 0x20 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x61B JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP6 DUP6 SHL DUP5 ADD SSTORE PUSH3 0x594 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x609 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH3 0x5E4 JUMP JUMPDEST DUP6 PUSH1 0x1 SHL DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0x694 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0x687 JUMPI POP POP PUSH3 0x559 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x66F JUMP JUMPDEST POP DUP1 PUSH3 0x66F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x545 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35FD SWAP1 DUP2 PUSH3 0xF21 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x969 ADD MSTORE DUP2 DUP2 PUSH2 0x1520 ADD MSTORE DUP2 DUP2 PUSH2 0x15F9 ADD MSTORE DUP2 DUP2 PUSH2 0x1660 ADD MSTORE PUSH2 0x2588 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x25C ADD MSTORE DUP2 DUP2 PUSH2 0x3AC ADD MSTORE DUP2 DUP2 PUSH2 0x727 ADD MSTORE DUP2 DUP2 PUSH2 0xDBF ADD MSTORE DUP2 DUP2 PUSH2 0x1227 ADD MSTORE DUP2 DUP2 PUSH2 0x184E ADD MSTORE PUSH2 0x1D27 ADD MSTORE PUSH1 0xC0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x5B7 ADD MSTORE DUP2 DUP2 PUSH2 0xA6D ADD MSTORE DUP2 DUP2 PUSH2 0xE1B ADD MSTORE DUP2 DUP2 PUSH2 0x1450 ADD MSTORE PUSH2 0x1B34 ADD MSTORE PUSH1 0xE0 MLOAD DUP2 DUP2 DUP2 PUSH2 0xD2F ADD MSTORE DUP2 DUP2 PUSH2 0x1373 ADD MSTORE DUP2 DUP2 PUSH2 0x1589 ADD MSTORE PUSH2 0x1C1C ADD MSTORE PUSH2 0x100 MLOAD DUP2 DUP2 DUP2 PUSH2 0x36E ADD MSTORE DUP2 DUP2 PUSH2 0x17D8 ADD MSTORE PUSH2 0x193A ADD MSTORE PUSH2 0x120 MLOAD DUP2 PUSH2 0x1ABD ADD MSTORE PUSH2 0x140 MLOAD DUP2 DUP2 DUP2 PUSH2 0x667 ADD MSTORE PUSH2 0x90B ADD MSTORE PUSH2 0x160 MLOAD DUP2 PUSH2 0xBB9 ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH3 0x7F2 SWAP1 DUP3 SUB PUSH3 0xEBC JUMP JUMPDEST PUSH1 0xD SSTORE PUSH3 0x472 JUMP JUMPDEST PUSH3 0x823 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH3 0x82B JUMPI JUMPDEST PUSH3 0x81A DUP2 DUP4 PUSH3 0xDDF JUMP JUMPDEST DUP2 ADD SWAP1 PUSH3 0xE8F JUMP JUMPDEST SWAP1 CODESIZE PUSH3 0x42D JUMP JUMPDEST POP RETURNDATASIZE PUSH3 0x80E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x387 JUMP JUMPDEST PUSH1 0x7 DUP13 MSTORE DUP12 SWAP4 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x451E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH3 0x8BE JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x8A4 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x7 SSTORE PUSH3 0x39D JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x895 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x878 JUMP JUMPDEST PUSH1 0x7 DUP13 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x451E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0x932 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST DUP14 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD DUP3 LT PUSH3 0x924 JUMPI POP POP POP PUSH3 0x36F JUMP JUMPDEST DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH3 0x90A JUMP JUMPDEST POP DUP1 PUSH3 0x904 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x355 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C2066756E6473206D757374206578636565642062202A206C6E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x286E756D5F6F7574636F6D657329 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP13 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP13 REVERT JUMPDEST PUSH3 0x9FA SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH3 0x82B JUMPI PUSH3 0x81A DUP2 DUP4 PUSH3 0xDDF JUMP JUMPDEST CODESIZE PUSH3 0x30E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP16 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 SWAP2 SWAP4 POP MUL SWAP1 DUP2 PUSH1 0xFF SHR SWAP2 DUP3 PUSH1 0x7F ADD SHR SWAP2 DUP4 MUL ADD SWAP2 PUSH1 0x1 SAR DUP8 SWAP3 SWAP2 DUP15 PUSH3 0x2A9 JUMP JUMPDEST PUSH1 0x1 ADD PUSH3 0x286 JUMP JUMPDEST SWAP2 DUP2 ADD SWAP2 DUP2 SAR PUSH3 0x27E JUMP JUMPDEST PUSH1 0x4 SWAP3 DUP4 ADD SWAP3 SAR PUSH3 0x273 JUMP JUMPDEST PUSH1 0x8 SWAP3 DUP4 ADD SWAP3 SAR PUSH3 0x268 JUMP JUMPDEST PUSH1 0x10 SWAP3 DUP4 ADD SWAP3 SAR PUSH3 0x25C JUMP JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SAR PUSH3 0x24F JUMP JUMPDEST POP PUSH1 0x40 SWAP1 POP DUP2 DUP2 SHL PUSH1 0xF SIGNEXTEND DUP2 SAR PUSH3 0x23D JUMP JUMPDEST DUP12 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4174206C656173742074776F206F7574636F6D65732072657175697265640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C697175696469747920706172616D6574657220276227206D75737420626520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x67726561746572207468616E206D696E696D756D000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C697175696469747920706172616D6574657220276227206578636565647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x746865206C696D6974206D6178696D756D PUSH1 0x78 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206E756D626572206F66206F7574636F6D6573000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x5 SWAP2 POP GT ISZERO CODESIZE PUSH3 0x1DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4475726174696F6E206D75737420626520706F73697469766500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C697175696469747920706172616D657465722062206D757374206265206772 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x6561746572207468616E207A65726F PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4174206C65617374206F6E65206F7574636F6D65207265717569726564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642066656520726563697069656E742061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP13 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0xDB3 JUMPI PUSH1 0x20 DUP1 SWAP3 PUSH3 0xDA5 DUP3 SWAP4 DUP4 DUP8 PUSH2 0x180 ADD SWAP2 DUP12 PUSH2 0x180 ADD ADD ADD PUSH3 0xE03 JUMP JUMPDEST DUP2 MSTORE ADD SWAP4 ADD SWAP3 SWAP1 POP PUSH3 0xD1 JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH3 0x6BD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH3 0xDDA JUMPI DUP3 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x6BD JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 SWAP2 PUSH3 0xE3F PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND DUP5 ADD DUP6 PUSH3 0xDDF JUMP JUMPDEST DUP2 DUP5 MSTORE DUP3 DUP3 DUP8 ADD ADD GT PUSH3 0xDDA JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH3 0xE66 JUMPI POP DUP3 PUSH1 0x0 SWAP4 SWAP5 SWAP6 POP ADD ADD MSTORE SWAP1 JUMP JUMPDEST DUP6 DUP2 ADD DUP4 ADD MLOAD DUP5 DUP3 ADD DUP5 ADD MSTORE DUP3 ADD PUSH3 0xE50 JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0xDDA JUMPI JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH3 0xDDA JUMPI MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH3 0xDDA JUMPI SWAP1 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x4D DUP2 GT PUSH3 0x5AF JUMPI PUSH1 0xA EXP SWAP1 JUMP JUMPDEST PUSH1 0x4D DUP2 GT PUSH3 0x5AF JUMPI PUSH1 0xA EXP SWAP1 JUMP JUMPDEST DUP2 ISZERO PUSH3 0xF19 JUMPI PUSH1 0xF SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 DUP2 SLT PUSH3 0xF15 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND DUP2 MUL PUSH1 0x40 SHR SWAP3 PUSH1 0x80 SHR MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB DUP2 GT PUSH3 0xF15 JUMPI PUSH1 0x40 SHL SWAP1 DUP3 NOT DUP3 GT PUSH3 0xDD7 JUMPI POP ADD SWAP1 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1CB44DFC EQ PUSH2 0x1EFC JUMPI DUP2 PUSH4 0x2279A970 EQ PUSH2 0x1AE1 JUMPI DUP2 PUSH4 0x3B97E856 EQ PUSH2 0x1AA3 JUMPI DUP2 PUSH4 0x3F4BA83A EQ PUSH2 0x1A39 JUMPI DUP2 PUSH4 0x416E517E EQ PUSH2 0x1969 JUMPI DUP2 PUSH4 0x46904840 EQ PUSH2 0x1925 JUMPI DUP2 PUSH4 0x474E19F2 EQ PUSH2 0x190A JUMPI DUP2 PUSH4 0x476343EE EQ PUSH2 0x17BC JUMPI DUP2 PUSH4 0x48A5DEC6 EQ PUSH2 0x1798 JUMPI DUP2 PUSH4 0x4A79D50C EQ PUSH2 0x1683 JUMPI DUP2 PUSH4 0x4DF7E3D0 EQ PUSH2 0x1648 JUMPI DUP2 PUSH4 0x510F5116 EQ PUSH2 0x15B5 JUMPI DUP2 PUSH4 0x53249A31 EQ PUSH2 0x14DC JUMPI DUP2 PUSH4 0x5C975ABB EQ PUSH2 0x14B8 JUMPI DUP2 PUSH4 0x69C41A74 EQ PUSH2 0x149A JUMPI DUP2 PUSH4 0x6E77609E EQ PUSH2 0x1473 JUMPI DUP2 PUSH4 0x6ED71EDE EQ PUSH2 0x1438 JUMPI DUP2 PUSH4 0x715018A6 EQ PUSH2 0x13DE JUMPI DUP2 PUSH4 0x7DC0D1D0 EQ PUSH2 0x13B5 JUMPI DUP2 PUSH4 0x7DC8F086 EQ PUSH2 0x1396 JUMPI DUP2 PUSH4 0x7FD6F15C EQ PUSH2 0x135B JUMPI DUP2 PUSH4 0x8456CB59 EQ PUSH2 0x1300 JUMPI DUP2 PUSH4 0x89FF7069 EQ PUSH2 0x11D8 JUMPI DUP2 PUSH4 0x8DA5CB5B EQ PUSH2 0x11B0 JUMPI DUP2 PUSH4 0x8F512BF4 EQ PUSH2 0x1191 JUMPI DUP2 PUSH4 0x8FBB4A82 EQ PUSH2 0x56E JUMPI DUP2 PUSH4 0x9003ADFE EQ PUSH2 0x1172 JUMPI DUP2 PUSH4 0x90514320 EQ PUSH2 0x1153 JUMPI DUP2 PUSH4 0x92B2849B EQ PUSH2 0x1137 JUMPI DUP2 PUSH4 0x96211A97 EQ PUSH2 0x10B3 JUMPI DUP2 PUSH4 0x9AAFF766 EQ PUSH2 0x1056 JUMPI DUP2 PUSH4 0x9B34AE03 EQ PUSH2 0x1037 JUMPI DUP2 PUSH4 0x9E6C2959 EQ PUSH2 0xC65 JUMPI DUP2 PUSH4 0xA2D07D24 EQ PUSH2 0x101B JUMPI DUP2 PUSH4 0xB03238F7 EQ PUSH2 0xFE7 JUMPI DUP2 PUSH4 0xBA5B7982 EQ PUSH2 0xFBE JUMPI DUP2 PUSH4 0xBEEBC5DA EQ PUSH2 0xC6A JUMPI DUP2 PUSH4 0xC3883F17 EQ PUSH2 0xC65 JUMPI DUP2 PUSH4 0xC511ED5E EQ PUSH2 0xBDC JUMPI DUP2 PUSH4 0xCA3BD569 EQ PUSH2 0xBA1 JUMPI DUP2 PUSH4 0xD55E725B EQ PUSH2 0xB82 JUMPI DUP2 PUSH4 0xDDD9D045 EQ PUSH2 0xA42 JUMPI DUP2 PUSH4 0xE7572230 EQ PUSH2 0x92E JUMPI DUP2 PUSH4 0xE8467AF6 EQ PUSH2 0x8F3 JUMPI DUP2 PUSH4 0xE88499A9 EQ PUSH2 0x573 JUMPI DUP2 PUSH4 0xED0C986F EQ PUSH2 0x56E JUMPI DUP2 PUSH4 0xEED2A147 EQ PUSH2 0x45D JUMPI DUP2 PUSH4 0xEF86CE8E EQ PUSH2 0x324 JUMPI DUP2 PUSH4 0xF2FDE38B EQ PUSH2 0x28F JUMPI POP PUSH4 0xFC0C546A EQ PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x320 JUMPI PUSH2 0x2AA PUSH2 0x1F88 JUMP JUMPDEST SWAP1 PUSH2 0x2B3 PUSH2 0x20C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x30A JUMPI POP POP PUSH1 0x0 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x320 JUMPI PUSH2 0x33F PUSH2 0x20C9 JUMP JUMPDEST PUSH2 0x350 PUSH1 0xFF PUSH1 0x5 SLOAD PUSH1 0x8 SHR AND PUSH2 0x238C JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD SWAP1 DUP5 SWAP1 SSTORE DUP2 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP5 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD SUB DUP2 DUP8 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x453 JUMPI DUP5 SWAP2 PUSH2 0x425 JUMPI JUMPDEST POP ISZERO PUSH2 0x3EE JUMPI DUP3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x15DA5D1A191C985DD85B0819985A5B1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x446 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x44C JUMPI JUMPDEST PUSH2 0x43E DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2221 JUMP JUMPDEST CODESIZE PUSH2 0x3E4 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x434 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x56B JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x56B JUMPI DUP4 CALLDATALOAD SWAP1 PUSH1 0x3 SLOAD DUP3 LT ISZERO PUSH2 0x56B JUMPI POP PUSH2 0x489 SWAP1 PUSH2 0x2079 JUMP JUMPDEST POP SWAP3 DUP3 MLOAD SWAP4 PUSH1 0x0 SWAP2 DUP2 SLOAD SWAP3 PUSH1 0x1 SWAP4 DUP1 DUP6 SHR SWAP3 DUP6 DUP3 AND SWAP1 DUP2 ISZERO PUSH2 0x561 JUMPI JUMPDEST DUP8 DUP6 LT DUP3 EQ PUSH2 0x54E JUMPI POP DUP4 DUP10 MSTORE DUP9 SWAP3 SWAP2 DUP8 SWAP1 DUP3 ISZERO PUSH2 0x531 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x4F1 JUMPI JUMPDEST PUSH2 0x4D4 SWAP3 POP SUB DUP7 PUSH2 0x1FDE JUMP JUMPDEST ADD SLOAD PUSH2 0x4E9 DUP4 MLOAD SWAP5 DUP5 DUP7 SWAP6 DUP7 MSTORE DUP6 ADD SWAP1 PUSH2 0x2000 JUMP JUMPDEST SWAP2 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST POP POP DUP2 PUSH1 0x0 MSTORE DUP6 DUP5 DUP1 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x518 JUMPI POP POP PUSH2 0x4D4 SWAP4 POP DUP3 ADD ADD PUSH2 0x4C8 JUMP JUMPDEST DUP1 SWAP2 SWAP3 SWAP5 POP SLOAD DUP4 DUP6 DUP13 ADD ADD MSTORE ADD SWAP2 ADD DUP6 SWAP1 DUP6 DUP10 SWAP4 PUSH2 0x502 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP5 DUP3 ADD MSTORE PUSH2 0x4D4 SWAP5 ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD ADD SWAP2 POP PUSH2 0x4C8 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 SWAP1 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x4A6 JUMP JUMPDEST DUP1 REVERT JUMPDEST PUSH2 0x2040 JUMP JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x320 JUMPI PUSH2 0x58E PUSH2 0x229B JUMP JUMPDEST PUSH2 0x596 PUSH2 0x227D JUMP JUMPDEST PUSH2 0x5A7 PUSH1 0xFF PUSH1 0x5 SLOAD PUSH1 0x8 SHR AND PUSH2 0x238C JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH1 0xC SLOAD AND SWAP3 PUSH32 0x0 SWAP3 PUSH1 0x6 SLOAD DUP4 MLOAD SWAP5 PUSH4 0x18896F4D PUSH1 0xE1 SHL DUP7 MSTORE DUP1 DUP5 DUP8 ADD MSTORE DUP2 PUSH1 0x24 DUP8 ADD MSTORE PUSH1 0x20 SWAP6 DUP7 DUP2 PUSH1 0x44 DUP2 DUP12 GAS STATICCALL DUP1 ISZERO PUSH2 0x8BA JUMPI DUP8 SWAP1 DUP11 SWAP1 PUSH2 0x8C4 JUMPI JUMPDEST DUP8 MLOAD PUSH3 0x7EEAC7 PUSH1 0xE1 SHL DUP2 MSTORE CALLER DUP9 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 POP DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD JUMPDEST SUB DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x8BA JUMPI DUP10 SWAP2 PUSH2 0x888 JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0x84E JUMPI DUP1 PUSH1 0x1 PUSH2 0x656 DUP6 PUSH2 0x2079 JUMP JUMPDEST POP ADD SLOAD LT PUSH2 0x813 JUMPI SWAP1 DUP9 SWAP3 SWAP2 PUSH2 0x68C PUSH32 0x0 DUP3 PUSH2 0x21E1 JUMP JUMPDEST SWAP9 PUSH2 0x6A5 DUP11 PUSH1 0x9 SLOAD PUSH2 0x6A0 DUP3 DUP3 LT ISZERO PUSH2 0x22BE JUMP JUMPDEST PUSH2 0x2214 JUMP JUMPDEST PUSH1 0x9 SSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0x80F JUMPI DUP8 MLOAD PUSH4 0x6F3DF851 PUSH1 0xE1 SHL DUP2 MSTORE CALLER DUP9 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x80 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x805 JUMPI PUSH2 0x7ED JUMPI JUMPDEST POP POP DUP3 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP4 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 DUP6 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 DUP11 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 PUSH32 0x0 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x7E3 JUMPI DUP7 SWAP2 PUSH2 0x7C6 JUMPI JUMPDEST POP ISZERO PUSH2 0x78F JUMPI POP SWAP1 PUSH32 0xEC68461F5D4CC45C89E914CB8826A966C73DD35E5F97815ECE0A01FFA4A025A6 SWAP2 MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST DUP3 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x151BDAD95B881C185E5BDD5D0819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x7DD SWAP2 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x44C JUMPI PUSH2 0x43E DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST CODESIZE PUSH2 0x757 JUMP JUMPDEST DUP4 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x7F6 SWAP1 PUSH2 0x1FB4 JUMP JUMPDEST PUSH2 0x801 JUMPI DUP6 CODESIZE PUSH2 0x6F7 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP7 ADD DUP9 SWAP1 MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C696420736861726520616D6F756E7473 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP7 ADD DUP9 SWAP1 MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F2077696E6E696E677320746F20636C61696D PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x8B3 JUMPI JUMPDEST PUSH2 0x89F DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8AE JUMPI MLOAD CODESIZE PUSH2 0x643 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x895 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x8EC JUMPI JUMPDEST PUSH2 0x8D9 DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8AE JUMPI DUP7 PUSH2 0x630 SWAP2 MLOAD PUSH2 0x60C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x8CF JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x320 JUMPI CALLDATALOAD PUSH2 0x959 PUSH1 0x3 SLOAD SWAP2 PUSH2 0x954 DUP4 DUP3 LT PUSH2 0x2134 JUMP JUMPDEST PUSH2 0x2079 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SWAP2 ADD SLOAD SWAP1 PUSH2 0x994 PUSH2 0x98F PUSH32 0x0 DUP1 SWAP5 PUSH2 0x2755 JUMP JUMPDEST PUSH2 0x29D6 JUMP JUMPDEST SWAP3 DUP6 SWAP3 DUP7 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0xA0A JUMPI POP POP POP POP PUSH1 0xF SIGNEXTEND SWAP1 DUP2 ISZERO PUSH2 0xA06 JUMPI DUP3 SHL PUSH1 0x17 SIGNEXTEND SDIV SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB NOT DUP4 SLT ISZERO DUP1 PUSH2 0x9F5 JUMPI JUMPDEST ISZERO PUSH2 0x56B JUMPI POP PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x9ED PUSH2 0x9E8 PUSH1 0x20 SWAP5 PUSH1 0xF SIGNEXTEND PUSH2 0x26E3 JUMP JUMPDEST PUSH2 0x267F JUMP JUMPDEST AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB DUP4 SGT ISZERO PUSH2 0x9C8 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH2 0xA34 PUSH2 0xA3A SWAP2 PUSH2 0xA2E PUSH2 0x98F DUP7 DUP7 PUSH2 0xA26 DUP12 PUSH2 0x2079 JUMP JUMPDEST POP ADD SLOAD PUSH2 0x2755 JUMP JUMPDEST SWAP1 PUSH2 0x269A JUMP JUMPDEST SWAP5 PUSH2 0x2504 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x99A JUMP JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x28B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH2 0xA5C PUSH2 0x1F88 JUMP JUMPDEST PUSH1 0xC SLOAD DUP3 MLOAD PUSH4 0x18896F4D PUSH1 0xE1 SHL DUP2 MSTORE PUSH32 0x0 DUP7 DUP3 ADD MSTORE PUSH1 0x24 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x20 SWAP6 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP7 DUP4 PUSH1 0x44 DUP2 DUP6 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0xB78 JUMPI SWAP1 DUP8 SWAP4 SWAP3 SWAP2 DUP8 SWAP4 PUSH2 0xB43 JUMPI JUMPDEST POP DUP6 MLOAD PUSH3 0x7EEAC7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP1 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP4 SWAP2 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD JUMPDEST SUB SWAP2 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0xB38 JUMPI SWAP3 PUSH2 0xB09 JUMPI JUMPDEST POP MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xB31 JUMPI JUMPDEST PUSH2 0xB21 DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8AE JUMPI MLOAD SWAP1 DUP4 PUSH2 0xB02 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xB17 JUMP JUMPDEST DUP3 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP2 SWAP6 SWAP3 SWAP5 POP RETURNDATASIZE DUP4 GT PUSH2 0xB71 JUMPI JUMPDEST PUSH2 0xB5B DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8AE JUMPI SWAP2 MLOAD DUP7 SWAP3 SWAP1 SWAP2 PUSH2 0xAF1 PUSH2 0xAC2 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xB51 JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH1 0xA SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x320 JUMPI DUP2 SLOAD TIMESTAMP LT PUSH2 0xC2C JUMPI DUP3 PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE PUSH32 0xB5F6BF058282D5CC003EFC735B9EE453BBD7F9BEF4C6DB6300D095F3EEFAC28 DUP2 DUP1 LOG1 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13585C9AD95D081B9BDD081BDD995C881E595D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x205D JUMP JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI PUSH2 0xC7B CALLDATASIZE PUSH2 0x1F9E JUMP JUMPDEST PUSH2 0xC86 SWAP4 SWAP2 SWAP4 PUSH2 0x229B JUMP JUMPDEST PUSH2 0xC8E PUSH2 0x227D JUMP JUMPDEST PUSH2 0xC9D PUSH1 0xFF PUSH1 0x5 SLOAD AND ISZERO PUSH2 0x20F5 JUMP JUMPDEST PUSH2 0xCAA PUSH1 0x3 SLOAD DUP6 LT PUSH2 0x2134 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF7B JUMPI PUSH2 0x2710 DUP2 LT ISZERO PUSH2 0xF38 JUMPI PUSH2 0xD27 PUSH2 0xD14 PUSH2 0x9E8 PUSH2 0xD00 PUSH2 0xCD6 PUSH2 0xCD1 PUSH2 0x2513 JUMP JUMPDEST PUSH2 0x2579 JUMP JUMPDEST PUSH1 0x1 PUSH2 0xCE1 DUP11 PUSH2 0x2079 JUMP JUMPDEST POP ADD PUSH2 0xCEE DUP8 DUP3 SLOAD PUSH2 0x2172 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xCFB PUSH2 0xCD1 PUSH2 0x2513 JUMP JUMPDEST PUSH2 0x26BF JUMP JUMPDEST PUSH2 0xD0F DUP10 DUP3 PUSH1 0xF SIGNEXTEND SLT ISZERO PUSH2 0x2195 JUMP JUMPDEST PUSH2 0x26E3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0xD SLOAD SWAP2 AND PUSH2 0x21E1 JUMP JUMPDEST SWAP3 PUSH1 0x64 PUSH2 0xD54 PUSH32 0x0 DUP7 PUSH2 0x21E1 JUMP JUMPDEST DIV SWAP4 PUSH1 0x32 DUP6 MUL DUP6 DUP2 DIV PUSH1 0x32 EQ DUP7 ISZERO OR ISZERO PUSH2 0xF25 JUMPI PUSH1 0x64 SWAP1 DIV SWAP1 DUP8 PUSH2 0xD82 PUSH2 0xD7B DUP5 DUP10 PUSH2 0x2214 JUMP JUMPDEST SWAP8 DUP4 PUSH2 0x2172 JUMP JUMPDEST DUP5 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP2 DUP10 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP8 SWAP2 DUP2 SWAP1 PUSH1 0x60 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 SWAP1 SUB DUP2 DUP8 PUSH32 0x0 DUP8 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xF1B JUMPI SWAP1 PUSH2 0xDFB SWAP2 DUP6 SWAP2 PUSH2 0xEFD JUMPI JUMPDEST POP PUSH2 0x2239 JUMP JUMPDEST PUSH1 0xC SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x320 JUMPI DUP6 MLOAD PUSH4 0x2991FA3B PUSH1 0xE2 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 DUP4 MSTORE PUSH32 0x0 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0x60 DUP4 ADD DUP9 SWAP1 MSTORE SWAP2 DUP4 SWAP2 DUP4 SWAP2 DUP3 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x80 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x805 JUMPI PUSH2 0xEDF JUMPI JUMPDEST POP POP PUSH32 0xEA2CC1A2A0FCFECEF8B5FF9BE41F8C0CA3770265A060B00DE53118F88C91DFA SWAP6 PUSH2 0xEAA PUSH2 0xEA2 PUSH2 0xED5 SWAP6 SWAP5 PUSH2 0xEB5 SWAP5 PUSH2 0x2172 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x2172 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0xB SLOAD PUSH2 0x2172 JUMP JUMPDEST PUSH1 0xB SSTORE MLOAD SWAP3 DUP4 SWAP3 CALLER SWAP7 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST PUSH2 0xEEB SWAP1 SWAP5 SWAP4 SWAP5 PUSH2 0x1FB4 JUMP JUMPDEST PUSH2 0xEF9 JUMPI DUP8 CODESIZE SWAP4 SWAP3 SWAP4 PUSH2 0xE6A JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST PUSH2 0xF15 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x44C JUMPI PUSH2 0x43E DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST CODESIZE PUSH2 0xDF5 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 DUP6 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265207472616465206C696D6974206578636565646564000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D75737420627579206174206C65617374206F6E652073686172650000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0xC SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x56B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x56B JUMPI POP PUSH1 0x1 PUSH2 0x1011 PUSH1 0x20 SWAP4 CALLDATALOAD PUSH2 0x954 PUSH1 0x3 SLOAD DUP3 LT PUSH2 0x23D1 JUMP JUMPDEST POP ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x32 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH1 0x6 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x56B JUMPI POP PUSH2 0x1068 CALLDATASIZE PUSH2 0x1F9E JUMP JUMPDEST DUP4 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 DUP4 MSTORE DUP5 DUP3 ADD MSTORE DUP4 DUP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP3 DUP2 DUP5 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT OR PUSH2 0x109E JUMPI POP DUP3 PUSH1 0x20 SWAP5 MSTORE MLOAD SWAP1 KECCAK256 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x41 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x56B JUMPI POP PUSH2 0x10C5 CALLDATASIZE PUSH2 0x1F9E JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x1 DUP3 GT ISZERO PUSH2 0x10F4 JUMPI PUSH1 0x20 DUP5 PUSH2 0x10ED DUP6 PUSH2 0x10E8 PUSH2 0x10E3 DUP8 PUSH2 0x2667 JUMP JUMPDEST PUSH2 0x28C5 JUMP JUMPDEST PUSH2 0x2708 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4174206C656173742074776F206F7574636F6D65732072657175697265640000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x5 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH1 0x9 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH1 0xB SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH1 0xD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xA06 JUMPI DUP3 CALLDATALOAD SWAP3 PUSH2 0x11F9 PUSH2 0x20C9 JUMP JUMPDEST DUP2 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP3 DUP3 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP7 SWAP1 MSTORE DUP5 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD SUB DUP2 DUP10 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x7E3 JUMPI DUP7 SWAP2 PUSH2 0x12E3 JUMPI JUMPDEST POP ISZERO PUSH2 0x12A2 JUMPI POP SWAP1 PUSH32 0x543BA50A5EEC5E6178218E364B1D0F396157B3C8FA278522C2CB7FD99407D474 SWAP2 PUSH2 0x1295 DUP5 PUSH1 0x9 SLOAD PUSH2 0x2172 JUMP JUMPDEST PUSH1 0x9 SSTORE MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST DUP3 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C2066756E64207472616E73666572206661696C656400000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x12FA SWAP2 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x44C JUMPI PUSH2 0x43E DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST CODESIZE PUSH2 0x125F JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP2 PUSH2 0x133E PUSH2 0x20C9 JUMP JUMPDEST PUSH2 0x1346 PUSH2 0x227D JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH1 0x3 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x8 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x56B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x56B JUMPI PUSH2 0x13F7 PUSH2 0x20C9 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x5 SLOAD PUSH1 0x8 SHR AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x320 JUMPI PUSH1 0x20 SWAP3 POP SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x2 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH2 0x10ED PUSH2 0x1582 PUSH2 0xD14 PUSH2 0x9E8 PUSH2 0xD0F PUSH2 0x157C PUSH2 0x1501 CALLDATASIZE PUSH2 0x1F9E JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1510 PUSH1 0x3 SLOAD DUP3 LT PUSH2 0x23D1 JUMP JUMPDEST PUSH2 0x151B DUP4 ISZERO ISZERO PUSH2 0x2415 JUMP JUMPDEST PUSH2 0x1546 PUSH32 0x0 ISZERO ISZERO PUSH2 0x2474 JUMP JUMPDEST PUSH2 0x154E PUSH2 0x2513 JUMP JUMPDEST SWAP1 PUSH2 0x1576 PUSH2 0x156F PUSH2 0x155E DUP5 PUSH2 0x2579 JUMP JUMPDEST SWAP6 PUSH2 0x1569 DUP5 DUP7 PUSH2 0x24D8 JUMP JUMPDEST MLOAD PUSH2 0x2214 JUMP JUMPDEST SWAP2 DUP4 PUSH2 0x24D8 JUMP JUMPDEST MSTORE PUSH2 0x2579 JUMP JUMPDEST SWAP1 PUSH2 0x26BF JUMP JUMPDEST PUSH1 0x64 PUSH2 0x15AE PUSH32 0x0 DUP4 PUSH2 0x21E1 JUMP JUMPDEST DIV SWAP1 PUSH2 0x2172 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH2 0x10ED PUSH2 0x1582 PUSH2 0xD14 PUSH2 0x9E8 PUSH2 0xD0F PUSH2 0xCFB PUSH2 0x15DA CALLDATASIZE PUSH2 0x1F9E JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x15E9 PUSH1 0x3 SLOAD DUP3 LT PUSH2 0x23D1 JUMP JUMPDEST PUSH2 0x15F4 DUP4 ISZERO ISZERO PUSH2 0x2415 JUMP JUMPDEST PUSH2 0x161F PUSH32 0x0 ISZERO ISZERO PUSH2 0x2474 JUMP JUMPDEST PUSH2 0x1627 PUSH2 0x2513 JUMP JUMPDEST SWAP1 PUSH2 0x1576 PUSH2 0x156F PUSH2 0x1637 DUP5 PUSH2 0x2579 JUMP JUMPDEST SWAP6 PUSH2 0x1642 DUP5 DUP7 PUSH2 0x24D8 JUMP JUMPDEST MLOAD PUSH2 0x2172 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x56B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x56B JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x7 SLOAD SWAP2 PUSH1 0x1 DUP4 DUP2 SHR SWAP1 DUP1 DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0x178E JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP5 LT DUP2 EQ PUSH2 0x177B JUMPI DUP4 DUP9 MSTORE DUP8 SWAP5 SWAP4 SWAP3 SWAP2 DUP8 SWAP1 DUP3 ISZERO PUSH2 0x1759 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x16FC JUMPI JUMPDEST POP POP PUSH2 0x16F8 SWAP3 SWAP2 PUSH2 0x16E9 SWAP2 SUB DUP6 PUSH2 0x1FDE JUMP JUMPDEST MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x2000 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP1 DUP6 SWAP3 POP PUSH1 0x7 PUSH1 0x0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x1741 JUMPI POP POP POP DUP3 ADD ADD DUP2 PUSH2 0x16E9 PUSH2 0x16D7 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP11 ADD DUP7 ADD MSTORE DUP9 SWAP6 POP DUP8 SWAP5 SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x172B JUMP JUMPDEST PUSH1 0xFF NOT AND DUP7 DUP3 ADD MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP DUP4 SWAP2 POP PUSH2 0x16E9 SWAP1 POP PUSH2 0x16D7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x22 DUP10 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x16B1 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x5 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x320 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 DUP2 AND SWAP4 SWAP2 SWAP3 SWAP1 PUSH2 0x184A SWAP1 PUSH1 0x20 SWAP1 PUSH2 0x1810 CALLER DUP9 EQ PUSH2 0x230A JUMP JUMPDEST PUSH1 0xB SLOAD SWAP6 DUP7 SWAP2 DUP10 PUSH1 0xB SSTORE DUP10 DUP8 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 MSTORE DUP11 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x40 DUP2 ADD SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 PUSH32 0x0 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x7E3 JUMPI DUP7 SWAP2 PUSH2 0x18EC JUMPI JUMPDEST POP ISZERO PUSH2 0x18B2 JUMPI POP PUSH32 0xC0819C13BE868895EB93E40EACEB96DE976442FA1D404E5C55F14BB65A8C489A SWAP2 PUSH1 0x20 SWAP2 MLOAD SWAP1 DUP2 MSTORE LOG2 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x119959481DDA5D1A191C985DD85B0819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x1904 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x44C JUMPI PUSH2 0x43E DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST CODESIZE PUSH2 0x187E JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x320 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0x1995 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SLOAD AND CALLER EQ PUSH2 0x230A JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP2 PUSH1 0xFF DUP4 AND ISZERO PUSH2 0x1A02 JUMPI POP POP DUP1 PUSH2 0x19CE PUSH1 0xFF PUSH2 0x100 SWAP4 PUSH1 0x8 SHR AND ISZERO PUSH2 0x19BC DUP2 PUSH2 0x2347 JUMP JUMPDEST PUSH2 0x19C9 PUSH1 0x3 SLOAD DUP7 LT PUSH2 0x2134 JUMP JUMPDEST PUSH2 0x2347 JUMP JUMPDEST DUP3 PUSH1 0x6 SSTORE PUSH2 0xFF00 NOT AND OR PUSH1 0x5 SSTORE PUSH32 0xBDB6AF8CAA3A0B8C130FD2AB4C4930E3FD8987C9730340729078E256BBC4B543 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x26B0B935B2BA1039BA34B6361037B832B7 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x320 JUMPI PUSH2 0x1A53 PUSH2 0x20C9 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x1A95 JUMPI POP PUSH1 0xFF NOT AND PUSH1 0x2 SSTORE MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST DUP3 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0xFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x28B JUMPI PUSH2 0x1AF1 CALLDATASIZE PUSH2 0x1F9E JUMP JUMPDEST PUSH2 0x1AF9 PUSH2 0x229B JUMP JUMPDEST PUSH2 0x1B01 PUSH2 0x227D JUMP JUMPDEST PUSH2 0x1B10 PUSH1 0xFF PUSH1 0x5 SLOAD AND ISZERO PUSH2 0x20F5 JUMP JUMPDEST PUSH2 0x1B1D PUSH1 0x3 SLOAD DUP4 LT PUSH2 0x2134 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1EB9 JUMPI PUSH1 0xC SLOAD DUP4 MLOAD PUSH4 0x18896F4D PUSH1 0xE1 SHL DUP2 MSTORE PUSH32 0x0 DUP8 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 DUP4 AND SWAP1 DUP5 DUP2 PUSH1 0x44 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1DE9 JUMPI SWAP1 DUP6 SWAP2 DUP11 SWAP2 PUSH2 0x1E84 JUMPI JUMPDEST POP DUP9 MLOAD PUSH3 0x7EEAC7 PUSH1 0xE1 SHL DUP2 MSTORE CALLER DUP2 DUP14 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 DUP4 SWAP2 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1E7A JUMPI SWAP1 DUP6 SWAP2 DUP10 SWAP2 PUSH2 0x1E49 JUMPI JUMPDEST POP LT PUSH2 0x1E06 JUMPI PUSH2 0x1C15 PUSH2 0xD14 PUSH2 0x9E8 PUSH2 0x1C06 PUSH2 0x1BE1 PUSH2 0xCD1 PUSH2 0x2513 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1BEC DUP12 PUSH2 0x2079 JUMP JUMPDEST POP ADD PUSH2 0x1BF9 DUP11 DUP3 SLOAD PUSH2 0x2214 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x157C PUSH2 0xCD1 PUSH2 0x2513 JUMP JUMPDEST PUSH2 0xD0F DUP12 DUP3 PUSH1 0xF SIGNEXTEND SLT ISZERO PUSH2 0x2195 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x1C41 PUSH32 0x0 DUP4 PUSH2 0x21E1 JUMP JUMPDEST DIV PUSH1 0x32 DUP2 MUL DUP2 DUP2 DIV PUSH1 0x32 EQ DUP3 ISZERO OR ISZERO PUSH2 0x1DF3 JUMPI SWAP2 PUSH2 0xEAA PUSH2 0x1CA3 SWAP3 PUSH2 0x1C7C PUSH1 0x64 PUSH2 0x1C9D SWAP12 SWAP13 SWAP14 SWAP15 SWAP8 SWAP7 DIV SWAP2 PUSH2 0x1C76 DUP4 DUP3 PUSH2 0x2214 JUMP JUMPDEST SWAP5 PUSH2 0x2214 JUMP JUMPDEST SWAP10 DUP2 PUSH2 0x1C97 PUSH2 0x1C8F DUP14 SWAP5 PUSH1 0x9 SLOAD SWAP6 PUSH2 0x2172 JUMP JUMPDEST DUP5 LT ISZERO PUSH2 0x22BE JUMP JUMPDEST DUP12 PUSH2 0x2172 JUMP JUMPDEST SWAP1 PUSH2 0x2214 JUMP JUMPDEST PUSH1 0xB SSTORE DUP9 DUP4 PUSH1 0xC SLOAD AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH2 0x28B JUMPI DUP10 MLOAD PUSH4 0x6F3DF851 PUSH1 0xE1 SHL DUP2 MSTORE CALLER DUP6 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 ADD DUP11 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP9 SWAP1 MSTORE SWAP3 DUP4 SWAP2 DUP3 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x80 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1DE9 JUMPI PUSH2 0x1DCE JUMPI JUMPDEST POP DUP7 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 DUP4 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 DUP12 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD JUMPDEST SUB SWAP3 PUSH32 0x0 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x1DC4 JUMPI PUSH2 0xED5 SWAP3 PUSH32 0x19EED797248695407E185A0977FA0DBA8BBAABA6C2F6F4A8BDF6FB32E62BA23 SWAP7 SWAP8 SWAP3 PUSH2 0x1D8A SWAP3 DUP11 SWAP3 PUSH2 0x1DA7 JUMPI JUMPDEST POP POP PUSH2 0x2239 JUMP JUMPDEST MLOAD SWAP3 DUP4 SWAP3 CALLER SWAP7 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH2 0x1DBD SWAP3 POP DUP1 RETURNDATASIZE LT PUSH2 0x44C JUMPI PUSH2 0x43E DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST DUP10 DUP1 PUSH2 0x1D83 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x1D23 SWAP3 DUP5 SWAP3 SWAP10 PUSH2 0x1DDF DUP9 SWAP4 PUSH2 0x1FB4 JUMP JUMPDEST SWAP10 SWAP3 POP SWAP3 POP PUSH2 0x1CF8 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x11 DUP12 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP5 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682073686172657320746F2073656C6C00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP6 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x1E73 JUMPI JUMPDEST PUSH2 0x1E62 DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xEF9 JUMPI DUP5 SWAP1 MLOAD DUP11 PUSH2 0x1BC4 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1E58 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP2 SWAP4 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x1EB2 JUMPI JUMPDEST PUSH2 0x1E9B DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1EAE JUMPI MLOAD DUP5 SWAP1 PUSH2 0x1BAF PUSH2 0x1B89 JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x1E91 JUMP JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP8 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742073656C6C206174206C65617374206F6E6520736861726500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x320 JUMPI PUSH2 0x1F17 PUSH2 0x1F88 JUMP JUMPDEST PUSH2 0x1F1F PUSH2 0x20C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x1F4C JUMPI POP POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C6964206F7261636C652061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x8AE JUMPI JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x8AE JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1FC8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1FC8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x202C JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x200B JUMP JUMPDEST CALLVALUE PUSH2 0x8AE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x8AE JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x2710 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x8AE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x8AE JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x64 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x20B3 JUMPI PUSH1 0x3 PUSH1 0x0 MSTORE PUSH1 0x1 SHL PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x20DD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x20FC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x13585C9AD95D081A5CC818DB1BDCD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x213B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C6964206F7574636F6D65 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x217F JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x219C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F737420646966666572656E6365206973206E656761746976650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x217F JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x21FE JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x217F JUMPI JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x8AE JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x8AE JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2240 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH2 0x2289 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x22AC JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x22C5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206D61726B6574206D616B65722066756E647300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2311 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x234E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x13585C9AD95D08185B1C9958591E481CD95D1D1B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2393 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x13585C9AD95D081B9BDD081CD95D1D1B1959081E595D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x23D8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x92DCECC2D8D2C840DEEAE8C6DEDACA40D2DCC8CAF PUSH1 0x5B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x241C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E756D626572206F6620736861726573206D7573742062652067726561746572 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x207468616E207A65726F PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x247B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C697175696469747920706172616D657465722062206D757374206265206772 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x6561746572207468616E207A65726F PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x20B3 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1FC8 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x217F JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x251F DUP2 PUSH2 0x24EC JUMP JUMPDEST SWAP1 PUSH2 0x252D PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1FDE JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x1F NOT PUSH2 0x253C DUP3 PUSH2 0x24EC JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2552 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH2 0x2561 PUSH2 0x2574 SWAP4 PUSH2 0x2079 JUMP JUMPDEST POP ADD SLOAD PUSH2 0x256E DUP3 DUP7 PUSH2 0x24D8 JUMP JUMPDEST MSTORE PUSH2 0x2504 JUMP JUMPDEST PUSH2 0x2546 JUMP JUMPDEST SWAP1 DUP2 MLOAD ISZERO PUSH2 0x262A JUMPI SWAP1 PUSH1 0x0 DUP1 SWAP2 PUSH32 0x0 SWAP2 JUMPDEST DUP2 MLOAD DUP5 LT ISZERO PUSH2 0x25DC JUMPI PUSH2 0x25D0 PUSH2 0x25D6 SWAP2 PUSH2 0xA2E PUSH2 0x98F DUP7 PUSH2 0x25CA DUP10 DUP9 PUSH2 0x24D8 JUMP JUMPDEST MLOAD PUSH2 0x2755 JUMP JUMPDEST SWAP4 PUSH2 0x2504 JUMP JUMPDEST SWAP3 PUSH2 0x25A9 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x25EB PUSH2 0x25F1 SWAP2 PUSH2 0x2667 JUMP JUMPDEST SWAP2 PUSH2 0x28C5 JUMP JUMPDEST PUSH1 0xF SIGNEXTEND SWAP1 PUSH1 0xF SIGNEXTEND MUL PUSH1 0x40 SAR PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB NOT DUP2 SLT ISZERO DUP1 PUSH2 0x2619 JUMPI JUMPDEST ISZERO PUSH2 0x8AE JUMPI PUSH1 0xF SIGNEXTEND SWAP1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB DUP2 SGT ISZERO PUSH2 0x260E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6F206F7574636F6D657320617661696C61626C65 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH8 0x7FFFFFFFFFFFFFFF DUP2 GT PUSH2 0x8AE JUMPI PUSH1 0x40 SHL PUSH1 0xF SIGNEXTEND SWAP1 JUMP JUMPDEST PUSH1 0xF SIGNEXTEND PUSH1 0x0 DUP2 SLT PUSH2 0x8AE JUMPI PUSH1 0x40 SAR PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xF SIGNEXTEND SWAP1 PUSH1 0xF SIGNEXTEND ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB NOT DUP2 SLT ISZERO DUP1 PUSH2 0x2619 JUMPI ISZERO PUSH2 0x8AE JUMPI PUSH1 0xF SIGNEXTEND SWAP1 JUMP JUMPDEST PUSH1 0xF SWAP2 DUP3 SIGNEXTEND SWAP2 SIGNEXTEND SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB NOT DUP2 SLT ISZERO DUP1 PUSH2 0x2619 JUMPI ISZERO PUSH2 0x8AE JUMPI PUSH1 0xF SIGNEXTEND SWAP1 JUMP JUMPDEST PUSH1 0x40 SHL PUSH1 0x17 SIGNEXTEND PUSH1 0x40 SAR PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB NOT DUP2 SLT ISZERO DUP1 PUSH2 0x2619 JUMPI ISZERO PUSH2 0x8AE JUMPI PUSH1 0xF SIGNEXTEND SWAP1 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x274E JUMPI PUSH1 0xF SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 DUP2 SLT PUSH2 0x28B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND DUP2 MUL PUSH1 0x40 SHR SWAP3 PUSH1 0x80 SHR MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB DUP2 GT PUSH2 0x28B JUMPI PUSH1 0x40 SHL SWAP1 DUP3 NOT DUP3 GT PUSH2 0x56B JUMPI POP ADD SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 DUP1 ISZERO PUSH2 0x8AE JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB DUP4 GT PUSH2 0x279E JUMPI POP PUSH2 0x2779 SWAP2 PUSH1 0x40 SHL PUSH2 0x21F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 DUP2 GT PUSH2 0x8AE JUMPI AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB DUP2 GT PUSH2 0x8AE JUMPI PUSH1 0xF SIGNEXTEND SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xC0 DUP4 DUP2 SHR SWAP4 DUP5 PUSH5 0x100000000 DUP2 LT ISZERO PUSH2 0x28B8 JUMPI JUMPDEST DUP1 PUSH3 0x10000 PUSH1 0x2 SWAP3 LT ISZERO PUSH2 0x28AC JUMPI JUMPDEST PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x28A0 JUMPI JUMPDEST PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x2894 JUMPI JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x2889 JUMPI JUMPDEST LT ISZERO PUSH2 0x287F JUMPI JUMPDEST PUSH2 0x2807 PUSH1 0x0 NOT SWAP3 DUP3 PUSH1 0x1 DUP6 DUP8 ADD PUSH1 0xBE NOT DUP5 ADD SHR ADD SWAP2 PUSH1 0xFF SUB SHL PUSH2 0x21F4 JUMP JUMPDEST SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 DUP8 GT PUSH2 0x801 JUMPI DUP5 PUSH1 0x80 SHR DUP8 MUL SWAP2 DUP6 AND DUP8 MUL SWAP1 DUP5 DUP2 SWAP5 PUSH1 0x40 SHL SWAP2 DUP4 DUP4 LT PUSH2 0x2875 JUMPI JUMPDEST POP POP SUB SWAP5 DUP2 PUSH1 0x80 SHL SWAP4 DUP5 DUP8 LT PUSH2 0x286B JUMPI JUMPDEST POP POP PUSH1 0x80 SHR SUB PUSH2 0x2860 JUMPI PUSH2 0x2858 SWAP3 SUB PUSH2 0x21F4 JUMP JUMPDEST SWAP1 JUMPDEST ADD PUSH2 0x2779 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 PUSH2 0x285A JUMP JUMPDEST SWAP1 SWAP3 ADD SWAP2 CODESIZE PUSH2 0x2844 JUMP JUMPDEST ADD SWAP4 POP DUP5 CODESIZE PUSH2 0x2833 JUMP JUMPDEST SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x27E9 JUMP JUMPDEST SWAP3 DUP2 ADD SWAP3 DUP2 SHR PUSH2 0x27E2 JUMP JUMPDEST PUSH1 0x4 SWAP4 DUP5 ADD SWAP4 SHR PUSH2 0x27D8 JUMP JUMPDEST PUSH1 0x8 SWAP4 DUP5 ADD SWAP4 SHR PUSH2 0x27CE JUMP JUMPDEST PUSH1 0x10 SWAP4 DUP5 ADD SWAP4 SHR PUSH2 0x27C3 JUMP JUMPDEST POP PUSH1 0xE0 SWAP2 POP DUP1 DUP3 SHR PUSH2 0x27B4 JUMP JUMPDEST PUSH1 0xF SIGNEXTEND PUSH1 0x0 DUP1 DUP3 SGT ISZERO PUSH2 0x56B JUMPI DUP1 DUP3 PUSH9 0x10000000000000000 DUP5 SLT ISZERO PUSH2 0x29C9 JUMPI JUMPDEST DUP1 PUSH5 0x100000000 PUSH1 0x2 SWAP3 SLT ISZERO PUSH2 0x29BD JUMPI JUMPDEST PUSH3 0x10000 DUP2 SLT ISZERO PUSH2 0x29B1 JUMPI JUMPDEST PUSH2 0x100 DUP2 SLT ISZERO PUSH2 0x29A5 JUMPI JUMPDEST PUSH1 0x10 DUP2 SLT ISZERO PUSH2 0x2999 JUMPI JUMPDEST PUSH1 0x4 DUP2 SLT ISZERO PUSH2 0x298E JUMPI JUMPDEST SLT ISZERO PUSH2 0x2986 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x3F SHL SWAP3 PUSH1 0x3F NOT DUP3 ADD PUSH1 0x40 SHL SWAP3 SWAP2 PUSH1 0x7F SWAP2 SWAP1 DUP3 SUB SHL JUMPDEST DUP3 DUP6 SGT PUSH2 0x2968 JUMPI POP POP POP PUSH16 0xB17217F7D1CF79ABC9E3B39803F2F6AF SWAP2 POP PUSH1 0xF SIGNEXTEND MUL PUSH1 0x80 SAR SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP6 SWAP1 SAR SWAP5 SWAP1 DUP1 MUL PUSH1 0xFF DUP2 SWAP1 SHR SWAP2 DUP3 MUL SWAP1 SWAP5 ADD SWAP4 SWAP1 DUP3 ADD SHR PUSH2 0x2941 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2929 JUMP JUMPDEST SWAP2 DUP2 ADD SWAP2 DUP2 SAR PUSH2 0x2922 JUMP JUMPDEST PUSH1 0x4 SWAP3 DUP4 ADD SWAP3 SAR PUSH2 0x2918 JUMP JUMPDEST PUSH1 0x8 SWAP3 DUP4 ADD SWAP3 SAR PUSH2 0x290E JUMP JUMPDEST PUSH1 0x10 SWAP3 DUP4 ADD SWAP3 SAR PUSH2 0x2903 JUMP JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SAR PUSH2 0x28F7 JUMP JUMPDEST POP PUSH1 0x40 SWAP1 POP DUP3 DUP2 SAR PUSH2 0x28E6 JUMP JUMPDEST PUSH1 0xF SIGNEXTEND PUSH1 0x1 PUSH1 0x46 SHL DUP2 SLT ISZERO PUSH2 0x8AE JUMPI PUSH9 0x3FFFFFFFFFFFFFFFFF NOT DUP2 SLT PUSH2 0x2A1B JUMPI PUSH17 0x171547652B82FE1777D0FFDA0D23A7D12 PUSH2 0x2A18 SWAP2 MUL PUSH1 0x80 SAR PUSH1 0xF SIGNEXTEND PUSH2 0x2A21 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x46 SHL DUP2 SLT ISZERO PUSH2 0x8AE JUMPI PUSH9 0x3FFFFFFFFFFFFFFFFF NOT DUP2 SLT PUSH2 0x35BF JUMPI PUSH1 0x1 PUSH1 0x7F SHL SWAP1 PUSH1 0x0 SWAP4 DUP5 PUSH1 0x1 PUSH1 0x3F SHL DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x35A7 JUMPI JUMPDEST DUP5 PUSH8 0x4000000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x358A JUMPI JUMPDEST DUP5 PUSH8 0x2000000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x356D JUMPI JUMPDEST DUP5 PUSH8 0x1000000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3550 JUMPI JUMPDEST DUP5 PUSH8 0x800000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3533 JUMPI JUMPDEST DUP5 PUSH8 0x400000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3516 JUMPI JUMPDEST DUP5 PUSH8 0x200000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x34F9 JUMPI JUMPDEST DUP5 PUSH8 0x100000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x34DC JUMPI JUMPDEST DUP5 PUSH7 0x80000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x34BF JUMPI JUMPDEST DUP5 PUSH7 0x40000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x34A2 JUMPI JUMPDEST DUP5 PUSH7 0x20000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3485 JUMPI JUMPDEST DUP5 PUSH7 0x10000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3468 JUMPI JUMPDEST DUP5 PUSH7 0x8000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x344B JUMPI JUMPDEST DUP5 PUSH7 0x4000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x342E JUMPI JUMPDEST DUP5 PUSH7 0x2000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3411 JUMPI JUMPDEST DUP5 PUSH7 0x1000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x33F4 JUMPI JUMPDEST DUP5 PUSH6 0x800000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x33D7 JUMPI JUMPDEST DUP5 PUSH6 0x400000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x33BA JUMPI JUMPDEST DUP5 PUSH6 0x200000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x339D JUMPI JUMPDEST DUP5 PUSH6 0x100000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3380 JUMPI JUMPDEST DUP5 PUSH6 0x80000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3363 JUMPI JUMPDEST DUP5 PUSH6 0x40000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3346 JUMPI JUMPDEST DUP5 PUSH6 0x20000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3329 JUMPI JUMPDEST DUP5 PUSH6 0x10000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x330C JUMPI JUMPDEST DUP5 PUSH5 0x8000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x32EF JUMPI JUMPDEST DUP5 PUSH5 0x4000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x32D2 JUMPI JUMPDEST DUP5 PUSH5 0x2000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x32B5 JUMPI JUMPDEST DUP5 PUSH5 0x1000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3298 JUMPI JUMPDEST DUP5 PUSH5 0x800000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x327B JUMPI JUMPDEST DUP5 PUSH5 0x400000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x325E JUMPI JUMPDEST DUP5 PUSH5 0x200000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3241 JUMPI JUMPDEST DUP5 PUSH5 0x100000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3224 JUMPI JUMPDEST DUP5 PUSH4 0x80000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3207 JUMPI JUMPDEST DUP5 PUSH4 0x40000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x31EA JUMPI JUMPDEST DUP5 PUSH4 0x20000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x31CD JUMPI JUMPDEST DUP5 PUSH4 0x10000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x31B0 JUMPI JUMPDEST DUP5 PUSH4 0x8000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3193 JUMPI JUMPDEST DUP5 PUSH4 0x4000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3176 JUMPI JUMPDEST DUP5 PUSH4 0x2000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3159 JUMPI JUMPDEST DUP5 PUSH4 0x1000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x313C JUMPI JUMPDEST DUP5 PUSH3 0x800000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x311F JUMPI JUMPDEST DUP5 PUSH3 0x400000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3102 JUMPI JUMPDEST DUP5 PUSH3 0x200000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x30E5 JUMPI JUMPDEST DUP5 PUSH3 0x100000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x30C8 JUMPI JUMPDEST DUP5 PUSH3 0x80000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x30AB JUMPI JUMPDEST DUP5 PUSH3 0x40000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x308E JUMPI JUMPDEST DUP5 PUSH3 0x20000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3071 JUMPI JUMPDEST DUP5 PUSH3 0x10000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3054 JUMPI JUMPDEST DUP5 PUSH2 0x8000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3037 JUMPI JUMPDEST DUP5 PUSH2 0x4000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x301A JUMPI JUMPDEST DUP5 PUSH2 0x2000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x2FFD JUMPI JUMPDEST DUP5 PUSH2 0x1000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x2FE0 JUMPI JUMPDEST DUP5 PUSH2 0x800 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x2FC3 JUMPI JUMPDEST DUP5 PUSH2 0x400 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x2FA6 JUMPI JUMPDEST DUP5 PUSH2 0x200 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x2F89 JUMPI JUMPDEST DUP5 PUSH2 0x100 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x2F6C JUMPI JUMPDEST DUP5 PUSH1 0x80 SWAP2 DUP2 DUP4 DUP3 AND DUP8 SIGNEXTEND SGT PUSH2 0x2F50 JUMPI JUMPDEST DUP2 PUSH1 0x40 DUP3 AND DUP8 SIGNEXTEND SGT PUSH2 0x2F34 JUMPI JUMPDEST DUP2 PUSH1 0x20 DUP3 AND DUP8 SIGNEXTEND SGT PUSH2 0x2F18 JUMPI JUMPDEST DUP2 PUSH1 0x10 DUP3 AND DUP8 SIGNEXTEND SGT PUSH2 0x2EFC JUMPI JUMPDEST DUP2 PUSH1 0x8 DUP3 AND DUP8 SIGNEXTEND SGT PUSH2 0x2EE0 JUMPI JUMPDEST DUP2 PUSH1 0x4 DUP3 AND DUP8 SIGNEXTEND SGT PUSH2 0x2EC4 JUMPI JUMPDEST DUP2 PUSH1 0x2 DUP3 AND DUP8 SIGNEXTEND SGT PUSH2 0x2EA7 JUMPI JUMPDEST PUSH1 0x1 AND DUP6 SIGNEXTEND SGT PUSH2 0x2E89 JUMPI JUMPDEST POP PUSH1 0x40 SAR DUP3 SIGNEXTEND PUSH1 0x3F SUB DUP3 SIGNEXTEND SHR SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB DUP4 GT PUSH2 0x56B JUMPI POP SIGNEXTEND SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH17 0x10000000000000000B17217F7D1CF79AB MUL SWAP1 SHR SWAP1 CODESIZE PUSH2 0x2E69 JUMP JUMPDEST PUSH17 0x1000000000000000162E42FEFA39EF358 SWAP1 SWAP5 MUL DUP3 SHR SWAP4 PUSH2 0x2E5E JUMP JUMPDEST SWAP4 PUSH17 0x10000000000000002C5C85FDF473DE6B2 MUL DUP3 SHR SWAP4 PUSH2 0x2E51 JUMP JUMPDEST SWAP4 PUSH17 0x100000000000000058B90BFBE8E7BCD6D MUL DUP3 SHR SWAP4 PUSH2 0x2E44 JUMP JUMPDEST SWAP4 PUSH17 0x1000000000000000B17217F7D1CF79AFA MUL DUP3 SHR SWAP4 PUSH2 0x2E37 JUMP JUMPDEST SWAP4 PUSH17 0x100000000000000162E42FEFA39EF366F MUL DUP3 SHR SWAP4 PUSH2 0x2E2A JUMP JUMPDEST SWAP4 PUSH17 0x1000000000000002C5C85FDF473DE6ECA MUL DUP3 SHR SWAP4 PUSH2 0x2E1D JUMP JUMPDEST SWAP4 PUSH17 0x10000000000000058B90BFBE8E7BCE544 MUL DUP3 SHR SWAP4 PUSH2 0x2E10 JUMP JUMPDEST SWAP2 PUSH17 0x100000000000000B17217F7D1CF79E949 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2E00 JUMP JUMPDEST SWAP2 PUSH17 0x10000000000000162E42FEFA39EF44D91 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2DF2 JUMP JUMPDEST SWAP2 PUSH17 0x100000000000002C5C85FDF473DEA871F MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2DE4 JUMP JUMPDEST SWAP2 PUSH17 0x1000000000000058B90BFBE8E7BDCBE2E MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2DD6 JUMP JUMPDEST SWAP2 PUSH17 0x10000000000000B17217F7D1CF7D83C1A MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2DC8 JUMP JUMPDEST SWAP2 PUSH17 0x1000000000000162E42FEFA39F02B772C MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2DBA JUMP JUMPDEST SWAP2 PUSH17 0x10000000000002C5C85FDF473E242EA38 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2DAC JUMP JUMPDEST SWAP2 PUSH17 0x100000000000058B90BFBE8E7CC35C3F0 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D9E JUMP JUMPDEST SWAP2 PUSH17 0x1000000000000B17217F7D1CFB72B45E1 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D90 JUMP JUMPDEST SWAP2 PUSH17 0x100000000000162E42FEFA39FE95583C2 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D81 JUMP JUMPDEST SWAP2 PUSH17 0x1000000000002C5C85FDF4741BEA6E77E MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D72 JUMP JUMPDEST SWAP2 PUSH17 0x10000000000058B90BFBE8E8B2D3D4EDE MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D63 JUMP JUMPDEST SWAP2 PUSH17 0x100000000000B17217F7D1D351A389D40 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D54 JUMP JUMPDEST SWAP2 PUSH17 0x10000000000162E42FEFA3AE53369388C MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D45 JUMP JUMPDEST SWAP2 PUSH17 0x100000000002C5C85FDF477B662B26945 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D36 JUMP JUMPDEST SWAP2 PUSH17 0x1000000000058B90BFBE8F71CB4E4B33D MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D27 JUMP JUMPDEST SWAP2 PUSH17 0x10000000000B17217F7D20CF927C8E94C MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D18 JUMP JUMPDEST SWAP2 PUSH17 0x1000000000162E42FEFA494F1478FDE05 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D08 JUMP JUMPDEST SWAP2 PUSH17 0x10000000002C5C85FDF4B15DE6F17EB0D MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2CF8 JUMP JUMPDEST SWAP2 PUSH17 0x100000000058B90BFBE9DDBAC5E109CCE MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2CE8 JUMP JUMPDEST SWAP2 PUSH17 0x1000000000B17217F7D5A7716BBA4A9AE MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2CD8 JUMP JUMPDEST SWAP2 PUSH17 0x100000000162E42FEFB2FED257559BDAA MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2CC8 JUMP JUMPDEST SWAP2 PUSH17 0x1000000002C5C85FDF84BD62AE30A74CC MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2CB8 JUMP JUMPDEST SWAP2 PUSH17 0x10000000058B90BFBF8479BD5A81B51AD MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2CA8 JUMP JUMPDEST SWAP2 PUSH17 0x100000000B17217F80F4EF5AADDA45554 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2C98 JUMP JUMPDEST SWAP2 PUSH17 0x10000000162E42FF0999CE3541B9FFFCF MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2C87 JUMP JUMPDEST SWAP2 PUSH17 0x100000002C5C85FE31F35A6A30DA1BE50 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2C76 JUMP JUMPDEST SWAP2 PUSH17 0x1000000058B90BFCDEE5ACD3C1CEDC823 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2C65 JUMP JUMPDEST SWAP2 PUSH17 0x10000000B17217FBA9C739AA5819F44F9 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2C54 JUMP JUMPDEST SWAP2 PUSH17 0x1000000162E42FFF037DF38AA2B219F06 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2C43 JUMP JUMPDEST SWAP2 PUSH17 0x10000002C5C8601CC6B9E94213C72737A MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2C32 JUMP JUMPDEST SWAP2 PUSH17 0x100000058B90C0B48C6BE5DF846C5B2EF MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2C21 JUMP JUMPDEST SWAP2 PUSH17 0x1000000B1721835514B86E6D96EFD1BFE MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2C10 JUMP JUMPDEST SWAP2 PUSH17 0x100000162E430E5A18F6119E3C02282A5 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2BFE JUMP JUMPDEST SWAP2 PUSH17 0x1000002C5C863B73F016468F6BAC5CA2B MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2BEC JUMP JUMPDEST SWAP2 PUSH17 0x10000058B90CF1E6D97F9CA14DBCC1628 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2BDA JUMP JUMPDEST SWAP2 PUSH17 0x100000B1721BCFC99D9F890EA06911763 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2BC8 JUMP JUMPDEST SWAP2 PUSH17 0x10000162E43F4F831060E02D839A9D16D MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2BB6 JUMP JUMPDEST SWAP2 PUSH17 0x100002C5C89D5EC6CA4D7C8ACC017B7C9 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2BA4 JUMP JUMPDEST SWAP2 PUSH17 0x1000058B91B5BC9AE2EED81E9B7D4CFAB MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2B92 JUMP JUMPDEST SWAP2 PUSH17 0x10000B17255775C040618BF4A4ADE83FC MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2B80 JUMP JUMPDEST SWAP2 PUSH17 0x1000162E525EE054754457D5995292026 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2B6D JUMP JUMPDEST SWAP2 PUSH17 0x10002C5CC37DA9491D0985C348C68E7B3 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2B5A JUMP JUMPDEST SWAP2 PUSH17 0x100058BA01FB9F96D6CACD4B180917C3D MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2B47 JUMP JUMPDEST SWAP2 PUSH17 0x1000B175EFFDC76BA38E31671CA939725 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2B34 JUMP JUMPDEST SWAP2 PUSH17 0x100162F3904051FA128BCA9C55C31E5DF MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2B21 JUMP JUMPDEST SWAP2 PUSH17 0x1002C605E2E8CEC506D21BFC89A23A00F MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2B0E JUMP JUMPDEST SWAP2 PUSH17 0x10058C86DA1C09EA1FF19D294CF2F679B MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2AFB JUMP JUMPDEST SWAP2 PUSH17 0x100B1AFA5ABCBED6129AB13EC11DC9543 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2AE8 JUMP JUMPDEST SWAP2 PUSH17 0x10163DA9FB33356D84A66AE336DCDFA3F MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2AD4 JUMP JUMPDEST SWAP2 PUSH17 0x102C9A3E778060EE6F7CACA4F7A29BDE8 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2AC0 JUMP JUMPDEST SWAP2 PUSH17 0x1059B0D31585743AE7C548EB68CA417FD MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2AAC JUMP JUMPDEST SWAP2 PUSH17 0x10B5586CF9890F6298B92B71842A98363 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2A98 JUMP JUMPDEST SWAP2 PUSH17 0x1172B83C7D517ADCDF7C8C50EB14A791F MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2A84 JUMP JUMPDEST SWAP2 PUSH17 0x1306FE0A31B7152DE8D5A46305C85EDEC MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2A70 JUMP JUMPDEST PUSH16 0xB504F333F9DE6484597D89B3754ABE9F SWAP3 POP PUSH2 0x2A5C JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0xFB BLOCKHASH 0xE7 0xB7 0xEE 0x25 SELFDESTRUCT 0xC5 PUSH10 0xBF0F8362D837E9C68F48 CALLDATACOPY 0xE3 0xCB EQ 0xF6 SWAP9 LOG2 0xE1 0xF9 SDIV 0xF6 0xED PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER 0xA6 PUSH13 0xC928B5EDB82AF9BD4992295415 GAS 0xB7 0xB0 SWAP5 0x26 SWAP5 0xBE LOG4 0xCE PREVRANDAO PUSH7 0x1D9A8736C68800 ","sourceMap":"583:25067:26:-:0;;;;;;-1:-1:-1;583:25067:26;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;583:25067:26;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;583:25067:26;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;583:25067:26;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;4483:10;;1273:26:2;1269:95;;583:25067:26;;4483:10;-1:-1:-1;;;;;;2371:3:26;;;;;;583:25067;;;-1:-1:-1;;;;;583:25067:26;3052:40:2;583:25067:26;;3052:40:2;583:25067:26;;;1231:15:16;2371:3:26;;-1:-1:-1;;2371:3:26;;;1136:1;583:25067;;;1173:1;583:25067;;;1211:1;583:25067;;;-1:-1:-1;;;;;583:25067:26;;4513:27;583:25067;;-1:-1:-1;;;;;;583:25067:26;;4584:27;583:25067;;;;4663:20;583:25067;;4735:6;;583:25067;;4811:13;;583:25067;;;;4885:20;;;:55;;;;583:25067;2280:1;;;;2457:5;5023:25;;2457:5;;2371:3;5154:25;;2371:3;;583:25067;;;22329:15;;583:25067;;;-1:-1:-1;;;;;2153:23:30;;583:25067:26;;2371:3;;583:25067;2371:3;583:25067;;17633:5:30;583:25067:26;;;16239:14:30;583:25067:26;2371:3;;;583:25067;;;16298:25:30;;;16294:100;;583:25067:26;16411:17:30;16417:11;1231:15:16;16411:17:30;;;16407:92;;583:25067:26;16522:7:30;16516:13;;;16512:88;;583:25067:26;;16617:11:30;;;16613:84;;583:25067:26;16720:4:30;16714:10;;;16710:83;;583:25067:26;16816:3:30;16810:9;;;16806:82;;583:25067:26;16905:9:30;;16901:23;;583:25067:26;;;;;;;;;;2371:3;;583:25067;2371:3;583:25067;;;17057:3:30;583:25067:26;2371:3;2158:18:30;17081:213;17119:7;;;;;583:25067:26;;;17703:34:30;22569::26;583:25067;;;;;;22569:34;:::i;:::-;583:25067;;-1:-1:-1;;;5472:40:26;;583:25067;;;;;16816:3:30;583:25067:26;-1:-1:-1;;;;;583:25067:26;;5472:40;;;;;;;;5466:46;5472:40;;;;;17081:213:30;5466:46:26;;:::i;:::-;2371:3;;;;;;;;;;;;;;;5359:154;2371:3;;583:25067;5596:20;583:25067;;;-1:-1:-1;;;;;2371:3:26;;;;5626:14;2371:3;;583:25067;2371:3;;583:25067;2371:3;;;;;17081:213:30;583:25067:26;2371:3;583:25067;2371:3;;;;;;;583:25067;2371:3;;;;;17081:213:30;2371:3:26;583:25067;2371:3;583:25067;2371:3;;;583:25067;;;2371:3;;;;;;;;583:25067;2371:3;;;;;;;;;;;5626:14;2371:3;;5650:16;2371:3;;-1:-1:-1;;;;;;2371:3:26;-1:-1:-1;;;;;583:25067:26;;;;2371:3;;;;;;583:25067;5676:6;5708:15;2371:3;;;-1:-1:-1;2371:3:26;;5708:15;2371:3;16816::30;583:25067:26;;;;2371:3;;-1:-1:-1;;2371:3:26;;;583:25067;5806:24;;;;583:25067;5840:28;;;;-1:-1:-1;;;;;583:25067:26;;;2371:3;5878:29;;;583:25067;;;5917:32;-1:-1:-1;583:25067:26;-1:-1:-1;;;6017:40:26;;583:25067;5708:15;583:25067;;;;16816:3:30;583:25067:26;;6017:40;;;;;;;;2371:3;6017:40;;;;;;2371:3;-1:-1:-1;583:25067:26;6001:56;;;6067;2371:3;;-1:-1:-1;;;;;;2371:3:26;-1:-1:-1;;;;;583:25067:26;;;;2371:3;;;;;;;6366:31;;2371:3;;;6433:39;2371:3;583:25067;2371:3;;6433:39;:::i;:::-;6413:59;583:25067;6362:211;2371:3;6605:19;2371:3;583:25067;2371:3;;6605:19;:::i;:::-;2371:3;;;6583:42;583:25067;6583:42;-1:-1:-1;6678:3:26;583:25067;;6656:20;;;;;583:25067;1896:1;;;;;583:25067;1896:1;6726:12;583:25067;;;;6726:12;583:25067;;-1:-1:-1;;;;;583:25067:26;;;;;;;;;;1896:1;;-1:-1:-1;583:25067:26;6711:45;;1896:1;6697:8;1896:1;;583:25067;1896:1;;;;;583:25067;1896:1;;;6697:8;1896:1;;;;;;6697:8;-1:-1:-1;2371:3:26;583:25067;;;;2371:3;;583:25067;-1:-1:-1;;;;;2371:3:26;;;;1896:1;583:25067;1896:1;;;2371:3;583:25067;2371:3;;;;;;;;;6678;583:25067;2371:3;;;;;583:25067;2371:3;;;;6678;2371;583:25067;2371:3;583:25067;2371:3;;;583:25067;;;2371:3;;583:25067;2371:3;;;583:25067;2371:3;-1:-1:-1;2371:3:26;;;;-1:-1:-1;;;;6697:8:26;2371:3;;;;;;;;;;1896:1;;;;;2371:3;;6711:45;1896:1;;;;;;583:25067;-1:-1:-1;;1896:1:26;;;;583:25067;1896:1;6641:13;;1896:1;583:25067;;;-1:-1:-1;2371:3:26;;16816::30;2371::26;;-1:-1:-1;2371:3:26;;;;;-1:-1:-1;2371:3:26;;;;;1896:1;;583:25067;1896:1;;;-1:-1:-1;2371:3:26;583:25067;-1:-1:-1;2371:3:26;;-1:-1:-1;2371:3:26;-1:-1:-1;;2371:3:26;;;;;;;;583:25067;2371:3;;;;;583:25067;2371:3;;;;;;;;;;;;;;;;1896:1;;;;;2371:3;;;;;;;;;;6697:8;2371:3;;;;;;;;;;;;;;;583:25067;;2371:3;;;;;;;;;;;;;;;;1896:1;583:25067;1896:1;;;-1:-1:-1;2371:3:26;583:25067;-1:-1:-1;2371:3:26;583:25067;2371:3;;583:25067;2371:3;;;583:25067;2371:3;;;;;583:25067;2371:3;;583:25067;2371:3;;;;;;;;;;;;-1:-1:-1;2371:3:26;;583:25067;2371:3;;;;;;;;;583:25067;;;-1:-1:-1;2371:3:26;;16816::30;2371::26;;-1:-1:-1;2371:3:26;;;17057::30;2371::26;;;;;583:25067;;;-1:-1:-1;583:25067:26;;16816:3:30;583:25067:26;;-1:-1:-1;583:25067:26;1896:1;583:25067;;;-1:-1:-1;1896:1:26;;16816:3:30;1896:1:26;;-1:-1:-1;1896:1:26;6656:20;583:25067;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2371:3;-1:-1:-1;;;2371:3:26;;;16816::30;2371::26;;;;6362:211;6523:39;1896:1;;;6523:39;:::i;:::-;6503:59;583:25067;6362:211;;6017:40;;;;;583:25067;6017:40;583:25067;6017:40;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;583:25067;;2371:3;583:25067;;2371:3;;;;;-1:-1:-1;;;2371:3:26;;;16816::30;2371::26;;583:25067;2371:3;;;;;-1:-1:-1;2371:3:26;;;;;5626:14;2371:3;;;;-1:-1:-1;;;;;;;;;;;;2371:3:26;;;-1:-1:-1;;2371:3:26;;;;;;583:25067;2371:3;;;;;;;;;;;;;;;;;5626:14;2371:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;583:25067;2371:3;;;;583:25067;2371:3;;;;;;;;;;;5626:14;2371:3;;;;-1:-1:-1;;;;;;;;;;;;583:25067:26;2371:3;;583:25067;2371:3;;;583:25067;2371:3;;;;;;;;;;;;583:25067;2371:3;;583:25067;2371:3;;;;;;;;;;;;;;;;;-1:-1:-1;583:25067:26;2371:3;;;;-1:-1:-1;2371:3:26;;;;-1:-1:-1;;;2371:3:26;;;16816::30;2371::26;;583:25067;2371:3;;;17057::30;2371::26;;;;;-1:-1:-1;;;583:25067:26;;;16816:3:30;583:25067:26;;;;2371:3;583:25067;;-1:-1:-1;;;2371:3:26;;583:25067;16816:3:30;2371::26;;;;;;;583:25067;2371:3;583:25067;;;2371:3;-1:-1:-1;;;2371:3:26;;;;;;;;-1:-1:-1;;;2371:3:26;;;16816::30;2371::26;;583:25067;2371:3;5472:40;;;;583:25067;5472:40;583:25067;5472:40;;;;;;;:::i;:::-;;;;;583:25067;;2371:3;583:25067;;2371:3;;;;17128:9:30;583:25067:26;;;;;2371:3;;;;583:25067;;17057:3:30;583:25067:26;2371:3;583:25067;;;;17128:9:30;583:25067:26;;17086:31:30;;;;;;16901:23;583:25067:26;;16901:23:30;;16806:82;583:25067:26;;;;;;16806:82:30;;16710:83;16751:1;583:25067:26;;;;;16710:83:30;;16613:84;16655:1;583:25067:26;;;;;16613:84:30;;16512:88;16556:2;583:25067:26;;;;;16512:88:30;;16407:92;583:25067:26;;;;;;16407:92:30;;16294:100;-1:-1:-1;583:25067:26;;-1:-1:-1;2371:3:26;;;583:25067;;;;16294:100:30;;583:25067:26;;;;;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;;;;;;;2371:3;;583:25067;2371:3;583:25067;;-1:-1:-1;;;2371:3:26;;583:25067;2371:3;;;;;;;;583:25067;2371:3;583:25067;;;2371:3;;;;;;;;;2457:5;583:25067;;-1:-1:-1;;;2457:5:26;;583:25067;2457:5;;;;;;;;583:25067;2457:5;583:25067;;;2457:5;-1:-1:-1;;;2457:5:26;;;;;;;2280:1;583:25067;;-1:-1:-1;;;2280:1:26;;583:25067;2280:1;;;;;;;;583:25067;2280:1;583:25067;;;2280:1;;;;4885:55;583:25067;4909:31;;;;4885:55;;;583:25067;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;;;;;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;;;;;;;;;;1269:95:2;583:25067:26;;-1:-1:-1;;;1322:31:2;;;;;583:25067:26;;;;;1322:31:2;583:25067:26;;;-1:-1:-1;;;;;583:25067:26;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;;;;;;;;;;;;;;2371:3;583:25067;;;-1:-1:-1;;583:25067:26;;;;-1:-1:-1;;;;;583:25067:26;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;583:25067:26;;;;;;;;;;2371:3;583:25067;;-1:-1:-1;;583:25067:26;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;583:25067:26;;;;;;;;-1:-1:-1;583:25067:26;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;583:25067:26;;;;;;:::o;2371:3::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;1896:1::-;;;;;;;;;:::o;6858:555:30:-;6963:6;;6959:20;;583:25067:26;;6968:1:30;7002:6;;;;583:25067:26;;-1:-1:-1;;;;;7060:38:30;;583:25067:26;;7104:2:30;2371:3:26;;7064:34:30;2371:3:26;583:25067;-1:-1:-1;;;;;7187:56:30;;583:25067:26;;7104:2:30;2371:3:26;583:25067;;;7290:77:30;;583:25067:26;;;;6858:555:30;:::o;583:25067:26:-;;;;6959:20:30;6971:8;;6968:1;6971:8;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":8072,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":8737,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256t_uint256":{"entryPoint":8094,"id":null,"parameterSlots":1,"returnSlots":2},"abi_encode_address_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_uint256_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_string":{"entryPoint":8192,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":9452,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":8562,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256":{"entryPoint":8692,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":8673,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":8724,"id":null,"parameterSlots":2,"returnSlots":1},"external_fun_MAX_LIQUIDITY_PARAM":{"entryPoint":8256,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_PERCENT_DENOMINATOR":{"entryPoint":8285,"id":null,"parameterSlots":0,"returnSlots":0},"finalize_allocation":{"entryPoint":8158,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_29055":{"entryPoint":8116,"id":null,"parameterSlots":1,"returnSlots":0},"fun_add":{"entryPoint":9882,"id":10110,"parameterSlots":2,"returnSlots":1},"fun_calculateCost":{"entryPoint":9593,"id":9252,"parameterSlots":1,"returnSlots":1},"fun_checkOwner":{"entryPoint":8393,"id":463,"parameterSlots":0,"returnSlots":0},"fun_divu":{"entryPoint":10069,"id":10542,"parameterSlots":2,"returnSlots":1},"fun_exp":{"entryPoint":10710,"id":12361,"parameterSlots":1,"returnSlots":1},"fun_exp_12324":{"entryPoint":10785,"id":12324,"parameterSlots":1,"returnSlots":1},"fun_fromUInt":{"entryPoint":9831,"id":10000,"parameterSlots":1,"returnSlots":1},"fun_getQuantities":{"entryPoint":9491,"id":9177,"parameterSlots":0,"returnSlots":1},"fun_ln":{"entryPoint":10437,"id":11302,"parameterSlots":1,"returnSlots":1},"fun_mul":{"entryPoint":9955,"id":10184,"parameterSlots":1,"returnSlots":1},"fun_mulu":{"entryPoint":9992,"id":10367,"parameterSlots":2,"returnSlots":1},"fun_nonReentrantBefore":{"entryPoint":8859,"id":3692,"parameterSlots":0,"returnSlots":0},"fun_requireNotPaused":{"entryPoint":8829,"id":3597,"parameterSlots":0,"returnSlots":0},"fun_sub":{"entryPoint":9919,"id":10146,"parameterSlots":2,"returnSlots":1},"fun_toUInt":{"entryPoint":9855,"id":10026,"parameterSlots":1,"returnSlots":1},"increment_uint256":{"entryPoint":9476,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_uint256_dyn":{"entryPoint":9432,"id":null,"parameterSlots":2,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":8500,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_0ca7":{"entryPoint":8437,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_19e6":{"entryPoint":9237,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_41ad":{"entryPoint":9031,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_6ed9":{"entryPoint":9332,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_74c7":{"entryPoint":8761,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_79cc":{"entryPoint":8894,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_b7aa":{"entryPoint":9169,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_dd82":{"entryPoint":8597,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_faa9":{"entryPoint":9100,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_fac3":{"entryPoint":8970,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_struct_Outcome_dyn":{"entryPoint":8313,"id":null,"parameterSlots":1,"returnSlots":2}},"generatedSources":[],"immutableReferences":{"7890":[{"length":32,"start":2409},{"length":32,"start":5408},{"length":32,"start":5625},{"length":32,"start":5728},{"length":32,"start":9608}],"7893":[{"length":32,"start":604},{"length":32,"start":940},{"length":32,"start":1831},{"length":32,"start":3519},{"length":32,"start":4647},{"length":32,"start":6222},{"length":32,"start":7463}],"7895":[{"length":32,"start":1463},{"length":32,"start":2669},{"length":32,"start":3611},{"length":32,"start":5200},{"length":32,"start":6964}],"7897":[{"length":32,"start":3375},{"length":32,"start":4979},{"length":32,"start":5513},{"length":32,"start":7196}],"7899":[{"length":32,"start":878},{"length":32,"start":6104},{"length":32,"start":6458}],"7901":[{"length":32,"start":6845}],"7903":[{"length":32,"start":1639},{"length":32,"start":2315}],"7907":[{"length":32,"start":3001}]},"linkReferences":{},"object":"6040608081526004908136101561001557600080fd5b600091823560e01c9081631cb44dfc14611efc5781632279a97014611ae15781633b97e85614611aa35781633f4ba83a14611a39578163416e517e146119695781634690484014611925578163474e19f21461190a578163476343ee146117bc57816348a5dec6146117985781634a79d50c146116835781634df7e3d014611648578163510f5116146115b557816353249a31146114dc5781635c975abb146114b857816369c41a741461149a5781636e77609e146114735781636ed71ede14611438578163715018a6146113de5781637dc0d1d0146113b55781637dc8f086146113965781637fd6f15c1461135b5781638456cb591461130057816389ff7069146111d85781638da5cb5b146111b05781638f512bf4146111915781638fbb4a821461056e5781639003adfe14611172578163905143201461115357816392b2849b1461113757816396211a97146110b35781639aaff766146110565781639b34ae03146110375781639e6c295914610c65578163a2d07d241461101b578163b03238f714610fe7578163ba5b798214610fbe578163beebc5da14610c6a578163c3883f1714610c65578163c511ed5e14610bdc578163ca3bd56914610ba1578163d55e725b14610b82578163ddd9d04514610a42578163e75722301461092e578163e8467af6146108f3578163e88499a914610573578163ed0c986f1461056e578163eed2a1471461045d578163ef86ce8e14610324578163f2fde38b1461028f575063fc0c546a1461024957600080fd5b3461028b578160031936011261028b57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fd5b905034610320576020366003190112610320576102aa611f88565b906102b36120c9565b6001600160a01b0391821692831561030a575050600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b9190503461032057826003193601126103205761033f6120c9565b61035060ff60055460081c1661238c565b6009805490849055815163a9059cbb60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016848201908152602081810193909352909190829081906040010381877f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1908115610453578491610425575b50156103ee578280f35b906020606492519162461bcd60e51b8352820152601160248201527015da5d1a191c985dd85b0819985a5b1959607a1b6044820152fd5b610446915060203d811161044c575b61043e8183611fde565b810190612221565b386103e4565b503d610434565b82513d86823e3d90fd5b82843461056b576020908160031936011261056b5783359060035482101561056b575061048990612079565b509282519360009181549260019380851c92858216908115610561575b878510821461054e5750838952889291879082156105315750506001146104f1575b6104d492500386611fde565b01546104e98351948486958652850190612000565b918301520390f35b505081600052858480600020856000915b8583106105185750506104d493508201016104c8565b80919294505483858c0101520191018590858993610502565b60ff1916848201526104d494151560051b84010191506104c89050565b634e487b7160e01b845260229052602483fd5b93607f16936104a6565b80fd5b612040565b9190503461032057826003193601126103205761058e61229b565b61059661227d565b6105a760ff60055460081c1661238c565b60018060a01b039081600c5416927f0000000000000000000000000000000000000000000000000000000000000000926006548351946318896f4d60e11b8652808487015281602487015260209586816044818b5afa80156108ba5787908a906108c4575b8751627eeac760e11b81523388820190815260208101929092529250829081906040015b03818b5afa9081156108ba578991610888575b50801561084e5780600161065685612079565b50015410610813579088929161068c7f0000000000000000000000000000000000000000000000000000000000000000826121e1565b986106a58a6009546106a0828210156122be565b612214565b600955803b1561080f578751636f3df85160e11b815233888201908152602081019490945260408401949094526060830191909152839183919082908490829060800103925af18015610805576107ed575b5050825163a9059cbb60e01b815233838201908152602081018790529091859183919082908a90829060400103927f0000000000000000000000000000000000000000000000000000000000000000165af19081156107e35786916107c6575b501561078f5750907fec68461f5d4cc45c89e914cb8826a966c73dd35e5f97815ece0a01ffa4a025a691519283523392a26001805580f35b82606492519162461bcd60e51b83528201526013602482015272151bdad95b881c185e5bdd5d0819985a5b1959606a1b6044820152fd5b6107dd9150843d861161044c5761043e8183611fde565b38610757565b83513d88823e3d90fd5b6107f690611fb4565b6108015785386106f7565b8580fd5b85513d84823e3d90fd5b8480fd5b855162461bcd60e51b81528086018890526015602482015274496e76616c696420736861726520616d6f756e747360581b6044820152606490fd5b855162461bcd60e51b815280860188905260146024820152734e6f2077696e6e696e677320746f20636c61696d60601b6044820152606490fd5b90508681813d83116108b3575b61089f8183611fde565b810103126108ae575138610643565b600080fd5b503d610895565b86513d8b823e3d90fd5b5081813d83116108ec575b6108d98183611fde565b810103126108ae5786610630915161060c565b503d6108cf565b50503461028b578160031936011261028b57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b905034610320576020366003190112610320573561095960035491610954838210612134565b612079565b506001809101549061099461098f7f00000000000000000000000000000000000000000000000000000000000000008094612755565b6129d6565b92859286925b828410610a0a5750505050600f0b908115610a0657821b60170b059160016001607f1b0319831215806109f5575b1561056b575067ffffffffffffffff6109ed6109e8602094600f0b6126e3565b61267f565b169051908152f35b5060016001607f1b038313156109c8565b8380fd5b90919293610a34610a3a91610a2e61098f8686610a268b612079565b500154612755565b9061269a565b94612504565b92919061099a565b83833461028b578060031936011261028b57610a5c611f88565b600c5482516318896f4d60e11b81527f000000000000000000000000000000000000000000000000000000000000000086820152602480359082015260209590916001600160a01b0316908683604481855afa928315610b785790879392918793610b43575b508551627eeac760e11b81526001600160a01b0390951690850190815260208101929092528391829081906040015b03915afa928315610b385792610b09575b5051908152f35b9091508281813d8311610b31575b610b218183611fde565b810103126108ae57519083610b02565b503d610b17565b8251903d90823e3d90fd5b8481959294503d8311610b71575b610b5b8183611fde565b810103126108ae57915186929091610af1610ac2565b503d610b51565b85513d88823e3d90fd5b50503461028b578160031936011261028b57602090600a549051908152f35b50503461028b578160031936011261028b57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b9190503461032057826003193601126103205781544210610c2c5782600160ff1960055416176005557f0b5f6bf058282d5cc003efc735b9ee453bbd7f9bef4c6db6300d095f3eefac288180a180f35b906020606492519162461bcd60e51b8352820152601360248201527213585c9ad95d081b9bdd081bdd995c881e595d606a1b6044820152fd5b61205d565b9190503461032057610c7b36611f9e565b610c8693919361229b565b610c8e61227d565b610c9d60ff60055416156120f5565b610caa6003548510612134565b8015610f7b57612710811015610f3857610d27610d146109e8610d00610cd6610cd1612513565b612579565b6001610ce18a612079565b5001610cee878254612172565b9055610cfb610cd1612513565b6126bf565b610d0f8982600f0b1215612195565b6126e3565b67ffffffffffffffff600d5491166121e1565b926064610d547f0000000000000000000000000000000000000000000000000000000000000000866121e1565b04936032850285810460321486151715610f2557606490049087610d82610d7b8489612214565b9783612172565b84516323b872dd60e01b8152338189019081523060208201526040810183905291979181906060016001600160a01b0392916020918391900381877f000000000000000000000000000000000000000000000000000000000000000087165af1908115610f1b5790610dfb918591610efd575b50612239565b600c5416803b15610320578551632991fa3b60e21b8152339281019283527f00000000000000000000000000000000000000000000000000000000000000006020840152604083018b905260608301889052918391839182908490829060800103925af1801561080557610edf575b50507f0ea2cc1a2a0fcfecef8b5ff9be41f8c0ca3770265a060b00de53118f88c91dfa95610eaa610ea2610ed59594610eb594612172565b600954612172565b600955600b54612172565b600b55519283923396846040919493926060820195825260208201520152565b0390a26001805580f35b610eeb90949394611fb4565b610ef9578738939293610e6a565b8780fd5b610f15915060203d811161044c5761043e8183611fde565b38610df5565b87513d86823e3d90fd5b634e487b7160e01b885260118552602488fd5b506020606492519162461bcd60e51b8352820152601a60248201527f5368617265207472616465206c696d69742065786365656465640000000000006044820152fd5b506020606492519162461bcd60e51b8352820152601b60248201527f4d75737420627579206174206c65617374206f6e6520736861726500000000006044820152fd5b50503461028b578160031936011261028b57600c5490516001600160a01b039091168152602090f35b82843461056b57602036600319011261056b575060016110116020933561095460035482106123d1565b5001549051908152f35b50503461028b578160031936011261028b576020905160328152f35b50503461028b578160031936011261028b576020906006549051908152f35b9050823461056b575061106836611f9e565b8351906020820192835284820152838152606081019281841067ffffffffffffffff85111761109e575082602094525190208152f35b604190634e487b7160e01b6000525260246000fd5b9050823461056b57506110c536611f9e565b909160018211156110f4576020846110ed856110e86110e387612667565b6128c5565b612708565b9051908152f35b606490602085519162461bcd60e51b8352820152601e60248201527f4174206c656173742074776f206f7574636f6d657320726571756972656400006044820152fd5b50503461028b578160031936011261028b576020905160058152f35b50503461028b578160031936011261028b576020906009549051908152f35b50503461028b578160031936011261028b57602090600b549051908152f35b50503461028b578160031936011261028b57602090600d549051908152f35b50503461028b578160031936011261028b57905490516001600160a01b039091168152602090f35b919050346103205760209081600319360112610a06578235926111f96120c9565b81516323b872dd60e01b815233828201908152306020820152604081018690528490829081906060010381897f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19081156107e35786916112e3575b50156112a25750907f543ba50a5eec5e6178218e364b1d0f396157b3c8fa278522c2cb7fd99407d4749161129584600954612172565b600955519283523392a280f35b82606492519162461bcd60e51b8352820152601c60248201527f496e697469616c2066756e64207472616e73666572206661696c6564000000006044820152fd5b6112fa9150843d861161044c5761043e8183611fde565b3861125f565b50503461028b578160031936011261028b5760207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589161133e6120c9565b61134661227d565b600160ff19600254161760025551338152a180f35b50503461028b578160031936011261028b57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b50503461028b578160031936011261028b576020906003549051908152f35b50503461028b578160031936011261028b5760085490516001600160a01b039091168152602090f35b833461056b578060031936011261056b576113f76120c9565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461028b578160031936011261028b57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b50503461028b578160031936011261028b5760209060ff60055460081c1690519015158152f35b90503461032057826003193601126103205760209250549051908152f35b50503461028b578160031936011261028b5760209060ff6002541690519015158152f35b50503461028b576020906110ed611582610d146109e8610d0f61157c61150136611f9e565b919061151060035482106123d1565b61151b831515612415565b6115467f00000000000000000000000000000000000000000000000000000000000000001515612474565b61154e612513565b9061157661156f61155e84612579565b9561156984866124d8565b51612214565b91836124d8565b52612579565b906126bf565b60646115ae7f0000000000000000000000000000000000000000000000000000000000000000836121e1565b0490612172565b50503461028b576020906110ed611582610d146109e8610d0f610cfb6115da36611f9e565b91906115e960035482106123d1565b6115f4831515612415565b61161f7f00000000000000000000000000000000000000000000000000000000000000001515612474565b611627612513565b9061157661156f61163784612579565b9561164284866124d8565b51612172565b50503461028b578160031936011261028b57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b82843461056b578060031936011261056b575080519060009060075491600183811c9080851694851561178e575b602095868410811461177b578388528794939291879082156117595750506001146116fc575b50506116f892916116e9910385611fde565b51928284938452830190612000565b0390f35b9085925060076000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688916000925b82841061174157505050820101816116e96116d7565b8054848a01860152889550879490930192810161172b565b60ff19168682015292151560051b850190920192508391506116e990506116d7565b634e487b7160e01b855260228952602485fd5b91607f16916116b1565b50503461028b578160031936011261028b5760209060ff6005541690519015158152f35b9050346103205782600319360112610320576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008181169391929061184a9060209061181033881461230a565b600b5495869189600b5589875180968195829463a9059cbb60e01b84528a840160209093929193604081019460018060a01b031681520152565b03927f0000000000000000000000000000000000000000000000000000000000000000165af19081156107e35786916118ec575b50156118b257507fc0819c13be868895eb93e40eaceb96de976442fa1d404e5c55f14bb65a8c489a9160209151908152a280f35b6020606492519162461bcd60e51b83528201526015602482015274119959481dda5d1a191c985dd85b0819985a5b1959605a1b6044820152fd5b611904915060203d811161044c5761043e8183611fde565b3861187e565b50503461028b578160031936011261028b5751908152602090f35b50503461028b578160031936011261028b57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b919050346103205760203660031901126103205781359161199560018060a01b0360085416331461230a565b6005549160ff831615611a02575050806119ce60ff6101009360081c16156119bc81612347565b6119c96003548610612134565b612347565b8260065561ff001916176005557fbdb6af8caa3a0b8c130fd2ab4c4930e3fd8987c9730340729078e256bbc4b5438280a280f35b906020606492519162461bcd60e51b8352820152601160248201527026b0b935b2ba1039ba34b6361037b832b760791b6044820152fd5b905034610320578260031936011261032057611a536120c9565b6002549060ff821615611a95575060ff1916600255513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b8251638dfc202b60e01b8152fd5b50503461028b578160031936011261028b576020905160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b83833461028b57611af136611f9e565b611af961229b565b611b0161227d565b611b1060ff60055416156120f5565b611b1d6003548310612134565b8015611eb957600c5483516318896f4d60e11b81527f0000000000000000000000000000000000000000000000000000000000000000878201819052602482018590526020926001600160a01b0392908316908481604481855afa908115611de9579085918a91611e84575b508851627eeac760e11b815233818d019081526020810192909252928391829081906040015b03915afa908115611e7a579085918991611e49575b5010611e0657611c15610d146109e8611c06611be1610cd1612513565b6001611bec8b612079565b5001611bf98a8254612214565b905561157c610cd1612513565b610d0f8b82600f0b1215612195565b6064611c417f0000000000000000000000000000000000000000000000000000000000000000836121e1565b046032810281810460321482151715611df35791610eaa611ca392611c7c6064611c9d9b9c9d9e97960491611c768382612214565b94612214565b9981611c97611c8f8d9460095495612172565b8410156122be565b8b612172565b90612214565b600b558883600c541691823b1561028b578951636f3df85160e11b8152338582019081526020810192909252604082018a90526060820188905292839182908490829060800103925af18015611de957611dce575b50865163a9059cbb60e01b8152339181019182526020820186905291839183919082908b9082906040015b03927f0000000000000000000000000000000000000000000000000000000000000000165af1918215611dc457610ed5927f019eed797248695407e185a0977fa0dba8bbaaba6c2f6f4a8bdf6fb32e62ba23969792611d8a928a92611da7575b5050612239565b519283923396846040919493926060820195825260208201520152565b611dbd9250803d1061044c5761043e8183611fde565b8980611d83565b86513d89823e3d90fd5b611d2392849299611ddf8893611fb4565b9992509250611cf8565b88513d8b823e3d90fd5b634e487b7160e01b8a5260118b5260248afd5b855162461bcd60e51b8152808901849052601960248201527f4e6f7420656e6f7567682073686172657320746f2073656c6c000000000000006044820152606490fd5b809250858092503d8311611e73575b611e628183611fde565b81010312610ef9578490518a611bc4565b503d611e58565b87513d8a823e3d90fd5b82819392503d8311611eb2575b611e9b8183611fde565b81010312611eae57518490611baf611b89565b8880fd5b503d611e91565b825162461bcd60e51b8152602081870152601c60248201527f4d7573742073656c6c206174206c65617374206f6e65207368617265000000006044820152606490fd5b90503461032057602036600319011261032057611f17611f88565b611f1f6120c9565b6001600160a01b0316918215611f4c5750506bffffffffffffffffffffffff60a01b600854161760085580f35b906020606492519162461bcd60e51b83528201526016602482015275496e76616c6964206f7261636c65206164647265737360501b6044820152fd5b600435906001600160a01b03821682036108ae57565b60409060031901126108ae576004359060243590565b67ffffffffffffffff8111611fc857604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117611fc857604052565b919082519283825260005b84811061202c575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161200b565b346108ae5760003660031901126108ae5760206040516127108152f35b346108ae5760003660031901126108ae57602060405160648152f35b6003548110156120b357600360005260011b7fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0190600090565b634e487b7160e01b600052603260045260246000fd5b6000546001600160a01b031633036120dd57565b60405163118cdaa760e01b8152336004820152602490fd5b156120fc57565b60405162461bcd60e51b815260206004820152601060248201526f13585c9ad95d081a5cc818db1bdcd95960821b6044820152606490fd5b1561213b57565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206f7574636f6d6560881b6044820152606490fd5b9190820180921161217f57565b634e487b7160e01b600052601160045260246000fd5b1561219c57565b60405162461bcd60e51b815260206004820152601b60248201527f436f737420646966666572656e6365206973206e6567617469766500000000006044820152606490fd5b8181029291811591840414171561217f57565b81156121fe570490565b634e487b7160e01b600052601260045260246000fd5b9190820391821161217f57565b908160209103126108ae575180151581036108ae5790565b1561224057565b60405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606490fd5b60ff6002541661228957565b60405163d93c066560e01b8152600490fd5b6002600154146122ac576002600155565b604051633ee5aeb560e01b8152600490fd5b156122c557565b60405162461bcd60e51b815260206004820152601f60248201527f496e73756666696369656e74206d61726b6574206d616b65722066756e6473006044820152606490fd5b1561231157565b60405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606490fd5b1561234e57565b60405162461bcd60e51b815260206004820152601660248201527513585c9ad95d08185b1c9958591e481cd95d1d1b195960521b6044820152606490fd5b1561239357565b60405162461bcd60e51b815260206004820152601660248201527513585c9ad95d081b9bdd081cd95d1d1b1959081e595d60521b6044820152606490fd5b156123d857565b60405162461bcd60e51b8152602060048201526015602482015274092dcecc2d8d2c840deeae8c6dedaca40d2dcc8caf605b1b6044820152606490fd5b1561241c57565b60405162461bcd60e51b815260206004820152602a60248201527f4e756d626572206f6620736861726573206d7573742062652067726561746572604482015269207468616e207a65726f60b01b6064820152608490fd5b1561247b57565b60405162461bcd60e51b815260206004820152602f60248201527f4c697175696469747920706172616d657465722062206d75737420626520677260448201526e6561746572207468616e207a65726f60881b6064820152608490fd5b80518210156120b35760209160051b010190565b67ffffffffffffffff8111611fc85760051b60200190565b600019811461217f5760010190565b60035461251f816124ec565b9061252d6040519283611fde565b808252601f1961253c826124ec565b0136602084013760005b81811061255257505090565b80600161256161257493612079565b50015461256e82866124d8565b52612504565b612546565b9081511561262a5790600080917f0000000000000000000000000000000000000000000000000000000000000000915b81518410156125dc576125d06125d691610a2e61098f866125ca89886124d8565b51612755565b93612504565b926125a9565b9250506125eb6125f191612667565b916128c5565b600f0b90600f0b0260401d60016001607f1b031981121580612619575b156108ae57600f0b90565b5060016001607f1b0381131561260e565b60405162461bcd60e51b81526020600482015260156024820152744e6f206f7574636f6d657320617661696c61626c6560581b6044820152606490fd5b677fffffffffffffff81116108ae5760401b600f0b90565b600f0b600081126108ae5760401d67ffffffffffffffff1690565b90600f0b90600f0b0160016001607f1b03198112158061261957156108ae57600f0b90565b600f91820b910b0360016001607f1b03198112158061261957156108ae57600f0b90565b60401b60170b60401d60016001607f1b03198112158061261957156108ae57600f0b90565b811561274e57600f0b60009081811261028b576001600160801b038316810260401c9260801c026001600160c01b03811161028b5760401b908219821161056b57500190565b5050600090565b9080156108ae5760006001600160c01b03831161279e57506127799160401b6121f4565b6001600160801b03908181116108ae571660016001607f1b0381116108ae57600f0b90565b9060c083811c93846401000000008110156128b8575b806201000060029210156128ac575b6101008110156128a0575b6010811015612894575b6004811015612889575b101561287f575b6128076000199282600185870160be1984011c019160ff031b6121f4565b946001600160801b0390818711610801578460801c870291851687029084819460401b91838310612875575b505003948160801b9384871061286b575b505060801c036128605761285892036121f4565b905b01612779565b50505060019061285a565b9092019138612844565b0193508438612833565b90600101906127e9565b92810192811c6127e2565b6004938401931c6127d8565b6008938401931c6127ce565b6010938401931c6127c3565b5060e0915080821c6127b4565b600f0b60008082131561056b578082680100000000000000008412156129c9575b8064010000000060029212156129bd575b620100008112156129b1575b6101008112156129a5575b6010811215612999575b600481121561298e575b1215612986575b6001603f1b92603f19820160401b9291607f919082031b5b828513612968575050506fb17217f7d1cf79abc9e3b39803f2f6af9150600f0b0260801d90565b600185901d9490800260ff81901c918202909401939082011c612941565b600101612929565b91810191811d612922565b6004928301921d612918565b6008928301921d61290e565b6010928301921d612903565b6020928301921d6128f7565b506040905082811d6128e6565b600f0b600160461b8112156108ae57683fffffffffffffffff198112612a1b57700171547652b82fe1777d0ffda0d23a7d12612a18910260801d600f0b612a21565b90565b50600090565b600f81810b600160461b8112156108ae57683fffffffffffffffff1981126135bf576001607f1b90600093846001603f1b8216850b136135a7575b846740000000000000008216850b1361358a575b846720000000000000008216850b1361356d575b846710000000000000008216850b13613550575b846708000000000000008216850b13613533575b846704000000000000008216850b13613516575b846702000000000000008216850b136134f9575b846701000000000000008216850b136134dc575b8466800000000000008216850b136134bf575b8466400000000000008216850b136134a2575b8466200000000000008216850b13613485575b8466100000000000008216850b13613468575b8466080000000000008216850b1361344b575b8466040000000000008216850b1361342e575b8466020000000000008216850b13613411575b8466010000000000008216850b136133f4575b84658000000000008216850b136133d7575b84654000000000008216850b136133ba575b84652000000000008216850b1361339d575b84651000000000008216850b13613380575b84650800000000008216850b13613363575b84650400000000008216850b13613346575b84650200000000008216850b13613329575b84650100000000008216850b1361330c575b846480000000008216850b136132ef575b846440000000008216850b136132d2575b846420000000008216850b136132b5575b846410000000008216850b13613298575b846408000000008216850b1361327b575b846404000000008216850b1361325e575b846402000000008216850b13613241575b846401000000008216850b13613224575b8463800000008216850b13613207575b8463400000008216850b136131ea575b8463200000008216850b136131cd575b8463100000008216850b136131b0575b8463080000008216850b13613193575b8463040000008216850b13613176575b8463020000008216850b13613159575b8463010000008216850b1361313c575b84628000008216850b1361311f575b84624000008216850b13613102575b84622000008216850b136130e5575b84621000008216850b136130c8575b84620800008216850b136130ab575b84620400008216850b1361308e575b84620200008216850b13613071575b84620100008216850b13613054575b846180008216850b13613037575b846140008216850b1361301a575b846120008216850b13612ffd575b846110008216850b13612fe0575b846108008216850b13612fc3575b846104008216850b13612fa6575b846102008216850b13612f89575b846101008216850b13612f6c575b8460809181838216870b13612f50575b8160408216870b13612f34575b8160208216870b13612f18575b8160108216870b13612efc575b8160088216870b13612ee0575b8160048216870b13612ec4575b8160028216870b13612ea7575b600116850b13612e89575b5060401d820b603f03820b1c9160016001607f1b03831161056b57500b90565b909170010000000000000000b17217f7d1cf79ab02901c9038612e69565b7001000000000000000162e42fefa39ef358909402821c93612e5e565b9370010000000000000002c5c85fdf473de6b202821c93612e51565b93700100000000000000058b90bfbe8e7bcd6d02821c93612e44565b937001000000000000000b17217f7d1cf79afa02821c93612e37565b93700100000000000000162e42fefa39ef366f02821c93612e2a565b937001000000000000002c5c85fdf473de6eca02821c93612e1d565b9370010000000000000058b90bfbe8e7bce54402821c93612e10565b91700100000000000000b17217f7d1cf79e9490260801c91612e00565b9170010000000000000162e42fefa39ef44d910260801c91612df2565b91700100000000000002c5c85fdf473dea871f0260801c91612de4565b917001000000000000058b90bfbe8e7bdcbe2e0260801c91612dd6565b9170010000000000000b17217f7d1cf7d83c1a0260801c91612dc8565b917001000000000000162e42fefa39f02b772c0260801c91612dba565b9170010000000000002c5c85fdf473e242ea380260801c91612dac565b91700100000000000058b90bfbe8e7cc35c3f00260801c91612d9e565b917001000000000000b17217f7d1cfb72b45e10260801c91612d90565b91700100000000000162e42fefa39fe95583c20260801c91612d81565b917001000000000002c5c85fdf4741bea6e77e0260801c91612d72565b9170010000000000058b90bfbe8e8b2d3d4ede0260801c91612d63565b91700100000000000b17217f7d1d351a389d400260801c91612d54565b9170010000000000162e42fefa3ae53369388c0260801c91612d45565b91700100000000002c5c85fdf477b662b269450260801c91612d36565b917001000000000058b90bfbe8f71cb4e4b33d0260801c91612d27565b9170010000000000b17217f7d20cf927c8e94c0260801c91612d18565b917001000000000162e42fefa494f1478fde050260801c91612d08565b9170010000000002c5c85fdf4b15de6f17eb0d0260801c91612cf8565b91700100000000058b90bfbe9ddbac5e109cce0260801c91612ce8565b917001000000000b17217f7d5a7716bba4a9ae0260801c91612cd8565b91700100000000162e42fefb2fed257559bdaa0260801c91612cc8565b917001000000002c5c85fdf84bd62ae30a74cc0260801c91612cb8565b9170010000000058b90bfbf8479bd5a81b51ad0260801c91612ca8565b91700100000000b17217f80f4ef5aadda455540260801c91612c98565b9170010000000162e42ff0999ce3541b9fffcf0260801c91612c87565b91700100000002c5c85fe31f35a6a30da1be500260801c91612c76565b917001000000058b90bfcdee5acd3c1cedc8230260801c91612c65565b9170010000000b17217fba9c739aa5819f44f90260801c91612c54565b917001000000162e42fff037df38aa2b219f060260801c91612c43565b9170010000002c5c8601cc6b9e94213c72737a0260801c91612c32565b91700100000058b90c0b48c6be5df846c5b2ef0260801c91612c21565b917001000000b1721835514b86e6d96efd1bfe0260801c91612c10565b91700100000162e430e5a18f6119e3c02282a50260801c91612bfe565b917001000002c5c863b73f016468f6bac5ca2b0260801c91612bec565b9170010000058b90cf1e6d97f9ca14dbcc16280260801c91612bda565b91700100000b1721bcfc99d9f890ea069117630260801c91612bc8565b9170010000162e43f4f831060e02d839a9d16d0260801c91612bb6565b91700100002c5c89d5ec6ca4d7c8acc017b7c90260801c91612ba4565b917001000058b91b5bc9ae2eed81e9b7d4cfab0260801c91612b92565b9170010000b17255775c040618bf4a4ade83fc0260801c91612b80565b917001000162e525ee054754457d59952920260260801c91612b6d565b9170010002c5cc37da9491d0985c348c68e7b30260801c91612b5a565b91700100058ba01fb9f96d6cacd4b180917c3d0260801c91612b47565b917001000b175effdc76ba38e31671ca9397250260801c91612b34565b91700100162f3904051fa128bca9c55c31e5df0260801c91612b21565b917001002c605e2e8cec506d21bfc89a23a00f0260801c91612b0e565b9170010058c86da1c09ea1ff19d294cf2f679b0260801c91612afb565b91700100b1afa5abcbed6129ab13ec11dc95430260801c91612ae8565b9170010163da9fb33356d84a66ae336dcdfa3f0260801c91612ad4565b91700102c9a3e778060ee6f7caca4f7a29bde80260801c91612ac0565b917001059b0d31585743ae7c548eb68ca417fd0260801c91612aac565b9170010b5586cf9890f6298b92b71842a983630260801c91612a98565b917001172b83c7d517adcdf7c8c50eb14a791f0260801c91612a84565b917001306fe0a31b7152de8d5a46305c85edec0260801c91612a70565b6fb504f333f9de6484597d89b3754abe9f9250612a5c565b50505060009056fea264697066735822122095fb40e7b7ee25ffc569bf0f8362d837e9c68f4837e3cb14f698a2e1f905f6ed64736f6c63430008140033","opcodes":"PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1CB44DFC EQ PUSH2 0x1EFC JUMPI DUP2 PUSH4 0x2279A970 EQ PUSH2 0x1AE1 JUMPI DUP2 PUSH4 0x3B97E856 EQ PUSH2 0x1AA3 JUMPI DUP2 PUSH4 0x3F4BA83A EQ PUSH2 0x1A39 JUMPI DUP2 PUSH4 0x416E517E EQ PUSH2 0x1969 JUMPI DUP2 PUSH4 0x46904840 EQ PUSH2 0x1925 JUMPI DUP2 PUSH4 0x474E19F2 EQ PUSH2 0x190A JUMPI DUP2 PUSH4 0x476343EE EQ PUSH2 0x17BC JUMPI DUP2 PUSH4 0x48A5DEC6 EQ PUSH2 0x1798 JUMPI DUP2 PUSH4 0x4A79D50C EQ PUSH2 0x1683 JUMPI DUP2 PUSH4 0x4DF7E3D0 EQ PUSH2 0x1648 JUMPI DUP2 PUSH4 0x510F5116 EQ PUSH2 0x15B5 JUMPI DUP2 PUSH4 0x53249A31 EQ PUSH2 0x14DC JUMPI DUP2 PUSH4 0x5C975ABB EQ PUSH2 0x14B8 JUMPI DUP2 PUSH4 0x69C41A74 EQ PUSH2 0x149A JUMPI DUP2 PUSH4 0x6E77609E EQ PUSH2 0x1473 JUMPI DUP2 PUSH4 0x6ED71EDE EQ PUSH2 0x1438 JUMPI DUP2 PUSH4 0x715018A6 EQ PUSH2 0x13DE JUMPI DUP2 PUSH4 0x7DC0D1D0 EQ PUSH2 0x13B5 JUMPI DUP2 PUSH4 0x7DC8F086 EQ PUSH2 0x1396 JUMPI DUP2 PUSH4 0x7FD6F15C EQ PUSH2 0x135B JUMPI DUP2 PUSH4 0x8456CB59 EQ PUSH2 0x1300 JUMPI DUP2 PUSH4 0x89FF7069 EQ PUSH2 0x11D8 JUMPI DUP2 PUSH4 0x8DA5CB5B EQ PUSH2 0x11B0 JUMPI DUP2 PUSH4 0x8F512BF4 EQ PUSH2 0x1191 JUMPI DUP2 PUSH4 0x8FBB4A82 EQ PUSH2 0x56E JUMPI DUP2 PUSH4 0x9003ADFE EQ PUSH2 0x1172 JUMPI DUP2 PUSH4 0x90514320 EQ PUSH2 0x1153 JUMPI DUP2 PUSH4 0x92B2849B EQ PUSH2 0x1137 JUMPI DUP2 PUSH4 0x96211A97 EQ PUSH2 0x10B3 JUMPI DUP2 PUSH4 0x9AAFF766 EQ PUSH2 0x1056 JUMPI DUP2 PUSH4 0x9B34AE03 EQ PUSH2 0x1037 JUMPI DUP2 PUSH4 0x9E6C2959 EQ PUSH2 0xC65 JUMPI DUP2 PUSH4 0xA2D07D24 EQ PUSH2 0x101B JUMPI DUP2 PUSH4 0xB03238F7 EQ PUSH2 0xFE7 JUMPI DUP2 PUSH4 0xBA5B7982 EQ PUSH2 0xFBE JUMPI DUP2 PUSH4 0xBEEBC5DA EQ PUSH2 0xC6A JUMPI DUP2 PUSH4 0xC3883F17 EQ PUSH2 0xC65 JUMPI DUP2 PUSH4 0xC511ED5E EQ PUSH2 0xBDC JUMPI DUP2 PUSH4 0xCA3BD569 EQ PUSH2 0xBA1 JUMPI DUP2 PUSH4 0xD55E725B EQ PUSH2 0xB82 JUMPI DUP2 PUSH4 0xDDD9D045 EQ PUSH2 0xA42 JUMPI DUP2 PUSH4 0xE7572230 EQ PUSH2 0x92E JUMPI DUP2 PUSH4 0xE8467AF6 EQ PUSH2 0x8F3 JUMPI DUP2 PUSH4 0xE88499A9 EQ PUSH2 0x573 JUMPI DUP2 PUSH4 0xED0C986F EQ PUSH2 0x56E JUMPI DUP2 PUSH4 0xEED2A147 EQ PUSH2 0x45D JUMPI DUP2 PUSH4 0xEF86CE8E EQ PUSH2 0x324 JUMPI DUP2 PUSH4 0xF2FDE38B EQ PUSH2 0x28F JUMPI POP PUSH4 0xFC0C546A EQ PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x320 JUMPI PUSH2 0x2AA PUSH2 0x1F88 JUMP JUMPDEST SWAP1 PUSH2 0x2B3 PUSH2 0x20C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x30A JUMPI POP POP PUSH1 0x0 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x320 JUMPI PUSH2 0x33F PUSH2 0x20C9 JUMP JUMPDEST PUSH2 0x350 PUSH1 0xFF PUSH1 0x5 SLOAD PUSH1 0x8 SHR AND PUSH2 0x238C JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD SWAP1 DUP5 SWAP1 SSTORE DUP2 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP5 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD SUB DUP2 DUP8 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x453 JUMPI DUP5 SWAP2 PUSH2 0x425 JUMPI JUMPDEST POP ISZERO PUSH2 0x3EE JUMPI DUP3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x15DA5D1A191C985DD85B0819985A5B1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x446 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x44C JUMPI JUMPDEST PUSH2 0x43E DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2221 JUMP JUMPDEST CODESIZE PUSH2 0x3E4 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x434 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x56B JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x56B JUMPI DUP4 CALLDATALOAD SWAP1 PUSH1 0x3 SLOAD DUP3 LT ISZERO PUSH2 0x56B JUMPI POP PUSH2 0x489 SWAP1 PUSH2 0x2079 JUMP JUMPDEST POP SWAP3 DUP3 MLOAD SWAP4 PUSH1 0x0 SWAP2 DUP2 SLOAD SWAP3 PUSH1 0x1 SWAP4 DUP1 DUP6 SHR SWAP3 DUP6 DUP3 AND SWAP1 DUP2 ISZERO PUSH2 0x561 JUMPI JUMPDEST DUP8 DUP6 LT DUP3 EQ PUSH2 0x54E JUMPI POP DUP4 DUP10 MSTORE DUP9 SWAP3 SWAP2 DUP8 SWAP1 DUP3 ISZERO PUSH2 0x531 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x4F1 JUMPI JUMPDEST PUSH2 0x4D4 SWAP3 POP SUB DUP7 PUSH2 0x1FDE JUMP JUMPDEST ADD SLOAD PUSH2 0x4E9 DUP4 MLOAD SWAP5 DUP5 DUP7 SWAP6 DUP7 MSTORE DUP6 ADD SWAP1 PUSH2 0x2000 JUMP JUMPDEST SWAP2 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST POP POP DUP2 PUSH1 0x0 MSTORE DUP6 DUP5 DUP1 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x518 JUMPI POP POP PUSH2 0x4D4 SWAP4 POP DUP3 ADD ADD PUSH2 0x4C8 JUMP JUMPDEST DUP1 SWAP2 SWAP3 SWAP5 POP SLOAD DUP4 DUP6 DUP13 ADD ADD MSTORE ADD SWAP2 ADD DUP6 SWAP1 DUP6 DUP10 SWAP4 PUSH2 0x502 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP5 DUP3 ADD MSTORE PUSH2 0x4D4 SWAP5 ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD ADD SWAP2 POP PUSH2 0x4C8 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 SWAP1 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x4A6 JUMP JUMPDEST DUP1 REVERT JUMPDEST PUSH2 0x2040 JUMP JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x320 JUMPI PUSH2 0x58E PUSH2 0x229B JUMP JUMPDEST PUSH2 0x596 PUSH2 0x227D JUMP JUMPDEST PUSH2 0x5A7 PUSH1 0xFF PUSH1 0x5 SLOAD PUSH1 0x8 SHR AND PUSH2 0x238C JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH1 0xC SLOAD AND SWAP3 PUSH32 0x0 SWAP3 PUSH1 0x6 SLOAD DUP4 MLOAD SWAP5 PUSH4 0x18896F4D PUSH1 0xE1 SHL DUP7 MSTORE DUP1 DUP5 DUP8 ADD MSTORE DUP2 PUSH1 0x24 DUP8 ADD MSTORE PUSH1 0x20 SWAP6 DUP7 DUP2 PUSH1 0x44 DUP2 DUP12 GAS STATICCALL DUP1 ISZERO PUSH2 0x8BA JUMPI DUP8 SWAP1 DUP11 SWAP1 PUSH2 0x8C4 JUMPI JUMPDEST DUP8 MLOAD PUSH3 0x7EEAC7 PUSH1 0xE1 SHL DUP2 MSTORE CALLER DUP9 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 POP DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD JUMPDEST SUB DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x8BA JUMPI DUP10 SWAP2 PUSH2 0x888 JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0x84E JUMPI DUP1 PUSH1 0x1 PUSH2 0x656 DUP6 PUSH2 0x2079 JUMP JUMPDEST POP ADD SLOAD LT PUSH2 0x813 JUMPI SWAP1 DUP9 SWAP3 SWAP2 PUSH2 0x68C PUSH32 0x0 DUP3 PUSH2 0x21E1 JUMP JUMPDEST SWAP9 PUSH2 0x6A5 DUP11 PUSH1 0x9 SLOAD PUSH2 0x6A0 DUP3 DUP3 LT ISZERO PUSH2 0x22BE JUMP JUMPDEST PUSH2 0x2214 JUMP JUMPDEST PUSH1 0x9 SSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0x80F JUMPI DUP8 MLOAD PUSH4 0x6F3DF851 PUSH1 0xE1 SHL DUP2 MSTORE CALLER DUP9 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x80 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x805 JUMPI PUSH2 0x7ED JUMPI JUMPDEST POP POP DUP3 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP4 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 DUP6 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 DUP11 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 PUSH32 0x0 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x7E3 JUMPI DUP7 SWAP2 PUSH2 0x7C6 JUMPI JUMPDEST POP ISZERO PUSH2 0x78F JUMPI POP SWAP1 PUSH32 0xEC68461F5D4CC45C89E914CB8826A966C73DD35E5F97815ECE0A01FFA4A025A6 SWAP2 MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST DUP3 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x151BDAD95B881C185E5BDD5D0819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x7DD SWAP2 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x44C JUMPI PUSH2 0x43E DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST CODESIZE PUSH2 0x757 JUMP JUMPDEST DUP4 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x7F6 SWAP1 PUSH2 0x1FB4 JUMP JUMPDEST PUSH2 0x801 JUMPI DUP6 CODESIZE PUSH2 0x6F7 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP7 ADD DUP9 SWAP1 MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C696420736861726520616D6F756E7473 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP7 ADD DUP9 SWAP1 MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F2077696E6E696E677320746F20636C61696D PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x8B3 JUMPI JUMPDEST PUSH2 0x89F DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8AE JUMPI MLOAD CODESIZE PUSH2 0x643 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x895 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x8EC JUMPI JUMPDEST PUSH2 0x8D9 DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8AE JUMPI DUP7 PUSH2 0x630 SWAP2 MLOAD PUSH2 0x60C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x8CF JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x320 JUMPI CALLDATALOAD PUSH2 0x959 PUSH1 0x3 SLOAD SWAP2 PUSH2 0x954 DUP4 DUP3 LT PUSH2 0x2134 JUMP JUMPDEST PUSH2 0x2079 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SWAP2 ADD SLOAD SWAP1 PUSH2 0x994 PUSH2 0x98F PUSH32 0x0 DUP1 SWAP5 PUSH2 0x2755 JUMP JUMPDEST PUSH2 0x29D6 JUMP JUMPDEST SWAP3 DUP6 SWAP3 DUP7 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0xA0A JUMPI POP POP POP POP PUSH1 0xF SIGNEXTEND SWAP1 DUP2 ISZERO PUSH2 0xA06 JUMPI DUP3 SHL PUSH1 0x17 SIGNEXTEND SDIV SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB NOT DUP4 SLT ISZERO DUP1 PUSH2 0x9F5 JUMPI JUMPDEST ISZERO PUSH2 0x56B JUMPI POP PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x9ED PUSH2 0x9E8 PUSH1 0x20 SWAP5 PUSH1 0xF SIGNEXTEND PUSH2 0x26E3 JUMP JUMPDEST PUSH2 0x267F JUMP JUMPDEST AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB DUP4 SGT ISZERO PUSH2 0x9C8 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH2 0xA34 PUSH2 0xA3A SWAP2 PUSH2 0xA2E PUSH2 0x98F DUP7 DUP7 PUSH2 0xA26 DUP12 PUSH2 0x2079 JUMP JUMPDEST POP ADD SLOAD PUSH2 0x2755 JUMP JUMPDEST SWAP1 PUSH2 0x269A JUMP JUMPDEST SWAP5 PUSH2 0x2504 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x99A JUMP JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x28B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH2 0xA5C PUSH2 0x1F88 JUMP JUMPDEST PUSH1 0xC SLOAD DUP3 MLOAD PUSH4 0x18896F4D PUSH1 0xE1 SHL DUP2 MSTORE PUSH32 0x0 DUP7 DUP3 ADD MSTORE PUSH1 0x24 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x20 SWAP6 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP7 DUP4 PUSH1 0x44 DUP2 DUP6 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0xB78 JUMPI SWAP1 DUP8 SWAP4 SWAP3 SWAP2 DUP8 SWAP4 PUSH2 0xB43 JUMPI JUMPDEST POP DUP6 MLOAD PUSH3 0x7EEAC7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP1 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP4 SWAP2 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD JUMPDEST SUB SWAP2 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0xB38 JUMPI SWAP3 PUSH2 0xB09 JUMPI JUMPDEST POP MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xB31 JUMPI JUMPDEST PUSH2 0xB21 DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8AE JUMPI MLOAD SWAP1 DUP4 PUSH2 0xB02 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xB17 JUMP JUMPDEST DUP3 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP2 SWAP6 SWAP3 SWAP5 POP RETURNDATASIZE DUP4 GT PUSH2 0xB71 JUMPI JUMPDEST PUSH2 0xB5B DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8AE JUMPI SWAP2 MLOAD DUP7 SWAP3 SWAP1 SWAP2 PUSH2 0xAF1 PUSH2 0xAC2 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xB51 JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH1 0xA SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x320 JUMPI DUP2 SLOAD TIMESTAMP LT PUSH2 0xC2C JUMPI DUP3 PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE PUSH32 0xB5F6BF058282D5CC003EFC735B9EE453BBD7F9BEF4C6DB6300D095F3EEFAC28 DUP2 DUP1 LOG1 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13585C9AD95D081B9BDD081BDD995C881E595D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x205D JUMP JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI PUSH2 0xC7B CALLDATASIZE PUSH2 0x1F9E JUMP JUMPDEST PUSH2 0xC86 SWAP4 SWAP2 SWAP4 PUSH2 0x229B JUMP JUMPDEST PUSH2 0xC8E PUSH2 0x227D JUMP JUMPDEST PUSH2 0xC9D PUSH1 0xFF PUSH1 0x5 SLOAD AND ISZERO PUSH2 0x20F5 JUMP JUMPDEST PUSH2 0xCAA PUSH1 0x3 SLOAD DUP6 LT PUSH2 0x2134 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF7B JUMPI PUSH2 0x2710 DUP2 LT ISZERO PUSH2 0xF38 JUMPI PUSH2 0xD27 PUSH2 0xD14 PUSH2 0x9E8 PUSH2 0xD00 PUSH2 0xCD6 PUSH2 0xCD1 PUSH2 0x2513 JUMP JUMPDEST PUSH2 0x2579 JUMP JUMPDEST PUSH1 0x1 PUSH2 0xCE1 DUP11 PUSH2 0x2079 JUMP JUMPDEST POP ADD PUSH2 0xCEE DUP8 DUP3 SLOAD PUSH2 0x2172 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xCFB PUSH2 0xCD1 PUSH2 0x2513 JUMP JUMPDEST PUSH2 0x26BF JUMP JUMPDEST PUSH2 0xD0F DUP10 DUP3 PUSH1 0xF SIGNEXTEND SLT ISZERO PUSH2 0x2195 JUMP JUMPDEST PUSH2 0x26E3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0xD SLOAD SWAP2 AND PUSH2 0x21E1 JUMP JUMPDEST SWAP3 PUSH1 0x64 PUSH2 0xD54 PUSH32 0x0 DUP7 PUSH2 0x21E1 JUMP JUMPDEST DIV SWAP4 PUSH1 0x32 DUP6 MUL DUP6 DUP2 DIV PUSH1 0x32 EQ DUP7 ISZERO OR ISZERO PUSH2 0xF25 JUMPI PUSH1 0x64 SWAP1 DIV SWAP1 DUP8 PUSH2 0xD82 PUSH2 0xD7B DUP5 DUP10 PUSH2 0x2214 JUMP JUMPDEST SWAP8 DUP4 PUSH2 0x2172 JUMP JUMPDEST DUP5 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP2 DUP10 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP8 SWAP2 DUP2 SWAP1 PUSH1 0x60 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 SWAP1 SUB DUP2 DUP8 PUSH32 0x0 DUP8 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xF1B JUMPI SWAP1 PUSH2 0xDFB SWAP2 DUP6 SWAP2 PUSH2 0xEFD JUMPI JUMPDEST POP PUSH2 0x2239 JUMP JUMPDEST PUSH1 0xC SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x320 JUMPI DUP6 MLOAD PUSH4 0x2991FA3B PUSH1 0xE2 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 DUP4 MSTORE PUSH32 0x0 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0x60 DUP4 ADD DUP9 SWAP1 MSTORE SWAP2 DUP4 SWAP2 DUP4 SWAP2 DUP3 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x80 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x805 JUMPI PUSH2 0xEDF JUMPI JUMPDEST POP POP PUSH32 0xEA2CC1A2A0FCFECEF8B5FF9BE41F8C0CA3770265A060B00DE53118F88C91DFA SWAP6 PUSH2 0xEAA PUSH2 0xEA2 PUSH2 0xED5 SWAP6 SWAP5 PUSH2 0xEB5 SWAP5 PUSH2 0x2172 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x2172 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0xB SLOAD PUSH2 0x2172 JUMP JUMPDEST PUSH1 0xB SSTORE MLOAD SWAP3 DUP4 SWAP3 CALLER SWAP7 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST PUSH2 0xEEB SWAP1 SWAP5 SWAP4 SWAP5 PUSH2 0x1FB4 JUMP JUMPDEST PUSH2 0xEF9 JUMPI DUP8 CODESIZE SWAP4 SWAP3 SWAP4 PUSH2 0xE6A JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST PUSH2 0xF15 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x44C JUMPI PUSH2 0x43E DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST CODESIZE PUSH2 0xDF5 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 DUP6 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265207472616465206C696D6974206578636565646564000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D75737420627579206174206C65617374206F6E652073686172650000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0xC SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x56B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x56B JUMPI POP PUSH1 0x1 PUSH2 0x1011 PUSH1 0x20 SWAP4 CALLDATALOAD PUSH2 0x954 PUSH1 0x3 SLOAD DUP3 LT PUSH2 0x23D1 JUMP JUMPDEST POP ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x32 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH1 0x6 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x56B JUMPI POP PUSH2 0x1068 CALLDATASIZE PUSH2 0x1F9E JUMP JUMPDEST DUP4 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 DUP4 MSTORE DUP5 DUP3 ADD MSTORE DUP4 DUP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP3 DUP2 DUP5 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT OR PUSH2 0x109E JUMPI POP DUP3 PUSH1 0x20 SWAP5 MSTORE MLOAD SWAP1 KECCAK256 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x41 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x56B JUMPI POP PUSH2 0x10C5 CALLDATASIZE PUSH2 0x1F9E JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x1 DUP3 GT ISZERO PUSH2 0x10F4 JUMPI PUSH1 0x20 DUP5 PUSH2 0x10ED DUP6 PUSH2 0x10E8 PUSH2 0x10E3 DUP8 PUSH2 0x2667 JUMP JUMPDEST PUSH2 0x28C5 JUMP JUMPDEST PUSH2 0x2708 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4174206C656173742074776F206F7574636F6D65732072657175697265640000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x5 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH1 0x9 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH1 0xB SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH1 0xD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xA06 JUMPI DUP3 CALLDATALOAD SWAP3 PUSH2 0x11F9 PUSH2 0x20C9 JUMP JUMPDEST DUP2 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP3 DUP3 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP7 SWAP1 MSTORE DUP5 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD SUB DUP2 DUP10 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x7E3 JUMPI DUP7 SWAP2 PUSH2 0x12E3 JUMPI JUMPDEST POP ISZERO PUSH2 0x12A2 JUMPI POP SWAP1 PUSH32 0x543BA50A5EEC5E6178218E364B1D0F396157B3C8FA278522C2CB7FD99407D474 SWAP2 PUSH2 0x1295 DUP5 PUSH1 0x9 SLOAD PUSH2 0x2172 JUMP JUMPDEST PUSH1 0x9 SSTORE MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST DUP3 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C2066756E64207472616E73666572206661696C656400000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x12FA SWAP2 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x44C JUMPI PUSH2 0x43E DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST CODESIZE PUSH2 0x125F JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP2 PUSH2 0x133E PUSH2 0x20C9 JUMP JUMPDEST PUSH2 0x1346 PUSH2 0x227D JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH1 0x3 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x8 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x56B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x56B JUMPI PUSH2 0x13F7 PUSH2 0x20C9 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x5 SLOAD PUSH1 0x8 SHR AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x320 JUMPI PUSH1 0x20 SWAP3 POP SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x2 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH2 0x10ED PUSH2 0x1582 PUSH2 0xD14 PUSH2 0x9E8 PUSH2 0xD0F PUSH2 0x157C PUSH2 0x1501 CALLDATASIZE PUSH2 0x1F9E JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1510 PUSH1 0x3 SLOAD DUP3 LT PUSH2 0x23D1 JUMP JUMPDEST PUSH2 0x151B DUP4 ISZERO ISZERO PUSH2 0x2415 JUMP JUMPDEST PUSH2 0x1546 PUSH32 0x0 ISZERO ISZERO PUSH2 0x2474 JUMP JUMPDEST PUSH2 0x154E PUSH2 0x2513 JUMP JUMPDEST SWAP1 PUSH2 0x1576 PUSH2 0x156F PUSH2 0x155E DUP5 PUSH2 0x2579 JUMP JUMPDEST SWAP6 PUSH2 0x1569 DUP5 DUP7 PUSH2 0x24D8 JUMP JUMPDEST MLOAD PUSH2 0x2214 JUMP JUMPDEST SWAP2 DUP4 PUSH2 0x24D8 JUMP JUMPDEST MSTORE PUSH2 0x2579 JUMP JUMPDEST SWAP1 PUSH2 0x26BF JUMP JUMPDEST PUSH1 0x64 PUSH2 0x15AE PUSH32 0x0 DUP4 PUSH2 0x21E1 JUMP JUMPDEST DIV SWAP1 PUSH2 0x2172 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH2 0x10ED PUSH2 0x1582 PUSH2 0xD14 PUSH2 0x9E8 PUSH2 0xD0F PUSH2 0xCFB PUSH2 0x15DA CALLDATASIZE PUSH2 0x1F9E JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x15E9 PUSH1 0x3 SLOAD DUP3 LT PUSH2 0x23D1 JUMP JUMPDEST PUSH2 0x15F4 DUP4 ISZERO ISZERO PUSH2 0x2415 JUMP JUMPDEST PUSH2 0x161F PUSH32 0x0 ISZERO ISZERO PUSH2 0x2474 JUMP JUMPDEST PUSH2 0x1627 PUSH2 0x2513 JUMP JUMPDEST SWAP1 PUSH2 0x1576 PUSH2 0x156F PUSH2 0x1637 DUP5 PUSH2 0x2579 JUMP JUMPDEST SWAP6 PUSH2 0x1642 DUP5 DUP7 PUSH2 0x24D8 JUMP JUMPDEST MLOAD PUSH2 0x2172 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x56B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x56B JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x7 SLOAD SWAP2 PUSH1 0x1 DUP4 DUP2 SHR SWAP1 DUP1 DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0x178E JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP5 LT DUP2 EQ PUSH2 0x177B JUMPI DUP4 DUP9 MSTORE DUP8 SWAP5 SWAP4 SWAP3 SWAP2 DUP8 SWAP1 DUP3 ISZERO PUSH2 0x1759 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x16FC JUMPI JUMPDEST POP POP PUSH2 0x16F8 SWAP3 SWAP2 PUSH2 0x16E9 SWAP2 SUB DUP6 PUSH2 0x1FDE JUMP JUMPDEST MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x2000 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP1 DUP6 SWAP3 POP PUSH1 0x7 PUSH1 0x0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x1741 JUMPI POP POP POP DUP3 ADD ADD DUP2 PUSH2 0x16E9 PUSH2 0x16D7 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP11 ADD DUP7 ADD MSTORE DUP9 SWAP6 POP DUP8 SWAP5 SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x172B JUMP JUMPDEST PUSH1 0xFF NOT AND DUP7 DUP3 ADD MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP DUP4 SWAP2 POP PUSH2 0x16E9 SWAP1 POP PUSH2 0x16D7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x22 DUP10 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x16B1 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x5 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x320 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 DUP2 AND SWAP4 SWAP2 SWAP3 SWAP1 PUSH2 0x184A SWAP1 PUSH1 0x20 SWAP1 PUSH2 0x1810 CALLER DUP9 EQ PUSH2 0x230A JUMP JUMPDEST PUSH1 0xB SLOAD SWAP6 DUP7 SWAP2 DUP10 PUSH1 0xB SSTORE DUP10 DUP8 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 MSTORE DUP11 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x40 DUP2 ADD SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 PUSH32 0x0 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x7E3 JUMPI DUP7 SWAP2 PUSH2 0x18EC JUMPI JUMPDEST POP ISZERO PUSH2 0x18B2 JUMPI POP PUSH32 0xC0819C13BE868895EB93E40EACEB96DE976442FA1D404E5C55F14BB65A8C489A SWAP2 PUSH1 0x20 SWAP2 MLOAD SWAP1 DUP2 MSTORE LOG2 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x119959481DDA5D1A191C985DD85B0819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x1904 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x44C JUMPI PUSH2 0x43E DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST CODESIZE PUSH2 0x187E JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x320 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0x1995 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SLOAD AND CALLER EQ PUSH2 0x230A JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP2 PUSH1 0xFF DUP4 AND ISZERO PUSH2 0x1A02 JUMPI POP POP DUP1 PUSH2 0x19CE PUSH1 0xFF PUSH2 0x100 SWAP4 PUSH1 0x8 SHR AND ISZERO PUSH2 0x19BC DUP2 PUSH2 0x2347 JUMP JUMPDEST PUSH2 0x19C9 PUSH1 0x3 SLOAD DUP7 LT PUSH2 0x2134 JUMP JUMPDEST PUSH2 0x2347 JUMP JUMPDEST DUP3 PUSH1 0x6 SSTORE PUSH2 0xFF00 NOT AND OR PUSH1 0x5 SSTORE PUSH32 0xBDB6AF8CAA3A0B8C130FD2AB4C4930E3FD8987C9730340729078E256BBC4B543 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x26B0B935B2BA1039BA34B6361037B832B7 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x320 JUMPI PUSH2 0x1A53 PUSH2 0x20C9 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x1A95 JUMPI POP PUSH1 0xFF NOT AND PUSH1 0x2 SSTORE MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST DUP3 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0xFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x28B JUMPI PUSH2 0x1AF1 CALLDATASIZE PUSH2 0x1F9E JUMP JUMPDEST PUSH2 0x1AF9 PUSH2 0x229B JUMP JUMPDEST PUSH2 0x1B01 PUSH2 0x227D JUMP JUMPDEST PUSH2 0x1B10 PUSH1 0xFF PUSH1 0x5 SLOAD AND ISZERO PUSH2 0x20F5 JUMP JUMPDEST PUSH2 0x1B1D PUSH1 0x3 SLOAD DUP4 LT PUSH2 0x2134 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1EB9 JUMPI PUSH1 0xC SLOAD DUP4 MLOAD PUSH4 0x18896F4D PUSH1 0xE1 SHL DUP2 MSTORE PUSH32 0x0 DUP8 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 DUP4 AND SWAP1 DUP5 DUP2 PUSH1 0x44 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1DE9 JUMPI SWAP1 DUP6 SWAP2 DUP11 SWAP2 PUSH2 0x1E84 JUMPI JUMPDEST POP DUP9 MLOAD PUSH3 0x7EEAC7 PUSH1 0xE1 SHL DUP2 MSTORE CALLER DUP2 DUP14 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 DUP4 SWAP2 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1E7A JUMPI SWAP1 DUP6 SWAP2 DUP10 SWAP2 PUSH2 0x1E49 JUMPI JUMPDEST POP LT PUSH2 0x1E06 JUMPI PUSH2 0x1C15 PUSH2 0xD14 PUSH2 0x9E8 PUSH2 0x1C06 PUSH2 0x1BE1 PUSH2 0xCD1 PUSH2 0x2513 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1BEC DUP12 PUSH2 0x2079 JUMP JUMPDEST POP ADD PUSH2 0x1BF9 DUP11 DUP3 SLOAD PUSH2 0x2214 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x157C PUSH2 0xCD1 PUSH2 0x2513 JUMP JUMPDEST PUSH2 0xD0F DUP12 DUP3 PUSH1 0xF SIGNEXTEND SLT ISZERO PUSH2 0x2195 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x1C41 PUSH32 0x0 DUP4 PUSH2 0x21E1 JUMP JUMPDEST DIV PUSH1 0x32 DUP2 MUL DUP2 DUP2 DIV PUSH1 0x32 EQ DUP3 ISZERO OR ISZERO PUSH2 0x1DF3 JUMPI SWAP2 PUSH2 0xEAA PUSH2 0x1CA3 SWAP3 PUSH2 0x1C7C PUSH1 0x64 PUSH2 0x1C9D SWAP12 SWAP13 SWAP14 SWAP15 SWAP8 SWAP7 DIV SWAP2 PUSH2 0x1C76 DUP4 DUP3 PUSH2 0x2214 JUMP JUMPDEST SWAP5 PUSH2 0x2214 JUMP JUMPDEST SWAP10 DUP2 PUSH2 0x1C97 PUSH2 0x1C8F DUP14 SWAP5 PUSH1 0x9 SLOAD SWAP6 PUSH2 0x2172 JUMP JUMPDEST DUP5 LT ISZERO PUSH2 0x22BE JUMP JUMPDEST DUP12 PUSH2 0x2172 JUMP JUMPDEST SWAP1 PUSH2 0x2214 JUMP JUMPDEST PUSH1 0xB SSTORE DUP9 DUP4 PUSH1 0xC SLOAD AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH2 0x28B JUMPI DUP10 MLOAD PUSH4 0x6F3DF851 PUSH1 0xE1 SHL DUP2 MSTORE CALLER DUP6 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 ADD DUP11 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP9 SWAP1 MSTORE SWAP3 DUP4 SWAP2 DUP3 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x80 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1DE9 JUMPI PUSH2 0x1DCE JUMPI JUMPDEST POP DUP7 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 DUP4 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 DUP12 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD JUMPDEST SUB SWAP3 PUSH32 0x0 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x1DC4 JUMPI PUSH2 0xED5 SWAP3 PUSH32 0x19EED797248695407E185A0977FA0DBA8BBAABA6C2F6F4A8BDF6FB32E62BA23 SWAP7 SWAP8 SWAP3 PUSH2 0x1D8A SWAP3 DUP11 SWAP3 PUSH2 0x1DA7 JUMPI JUMPDEST POP POP PUSH2 0x2239 JUMP JUMPDEST MLOAD SWAP3 DUP4 SWAP3 CALLER SWAP7 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH2 0x1DBD SWAP3 POP DUP1 RETURNDATASIZE LT PUSH2 0x44C JUMPI PUSH2 0x43E DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST DUP10 DUP1 PUSH2 0x1D83 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x1D23 SWAP3 DUP5 SWAP3 SWAP10 PUSH2 0x1DDF DUP9 SWAP4 PUSH2 0x1FB4 JUMP JUMPDEST SWAP10 SWAP3 POP SWAP3 POP PUSH2 0x1CF8 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x11 DUP12 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP5 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682073686172657320746F2073656C6C00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP6 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x1E73 JUMPI JUMPDEST PUSH2 0x1E62 DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xEF9 JUMPI DUP5 SWAP1 MLOAD DUP11 PUSH2 0x1BC4 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1E58 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP2 SWAP4 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x1EB2 JUMPI JUMPDEST PUSH2 0x1E9B DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1EAE JUMPI MLOAD DUP5 SWAP1 PUSH2 0x1BAF PUSH2 0x1B89 JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x1E91 JUMP JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP8 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742073656C6C206174206C65617374206F6E6520736861726500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x320 JUMPI PUSH2 0x1F17 PUSH2 0x1F88 JUMP JUMPDEST PUSH2 0x1F1F PUSH2 0x20C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x1F4C JUMPI POP POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C6964206F7261636C652061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x8AE JUMPI JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x8AE JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1FC8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1FC8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x202C JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x200B JUMP JUMPDEST CALLVALUE PUSH2 0x8AE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x8AE JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x2710 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x8AE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x8AE JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x64 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x20B3 JUMPI PUSH1 0x3 PUSH1 0x0 MSTORE PUSH1 0x1 SHL PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x20DD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x20FC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x13585C9AD95D081A5CC818DB1BDCD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x213B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C6964206F7574636F6D65 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x217F JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x219C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F737420646966666572656E6365206973206E656761746976650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x217F JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x21FE JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x217F JUMPI JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x8AE JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x8AE JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2240 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH2 0x2289 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x22AC JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x22C5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206D61726B6574206D616B65722066756E647300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2311 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x234E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x13585C9AD95D08185B1C9958591E481CD95D1D1B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2393 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x13585C9AD95D081B9BDD081CD95D1D1B1959081E595D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x23D8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x92DCECC2D8D2C840DEEAE8C6DEDACA40D2DCC8CAF PUSH1 0x5B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x241C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E756D626572206F6620736861726573206D7573742062652067726561746572 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x207468616E207A65726F PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x247B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C697175696469747920706172616D657465722062206D757374206265206772 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x6561746572207468616E207A65726F PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x20B3 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1FC8 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x217F JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x251F DUP2 PUSH2 0x24EC JUMP JUMPDEST SWAP1 PUSH2 0x252D PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1FDE JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x1F NOT PUSH2 0x253C DUP3 PUSH2 0x24EC JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2552 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH2 0x2561 PUSH2 0x2574 SWAP4 PUSH2 0x2079 JUMP JUMPDEST POP ADD SLOAD PUSH2 0x256E DUP3 DUP7 PUSH2 0x24D8 JUMP JUMPDEST MSTORE PUSH2 0x2504 JUMP JUMPDEST PUSH2 0x2546 JUMP JUMPDEST SWAP1 DUP2 MLOAD ISZERO PUSH2 0x262A JUMPI SWAP1 PUSH1 0x0 DUP1 SWAP2 PUSH32 0x0 SWAP2 JUMPDEST DUP2 MLOAD DUP5 LT ISZERO PUSH2 0x25DC JUMPI PUSH2 0x25D0 PUSH2 0x25D6 SWAP2 PUSH2 0xA2E PUSH2 0x98F DUP7 PUSH2 0x25CA DUP10 DUP9 PUSH2 0x24D8 JUMP JUMPDEST MLOAD PUSH2 0x2755 JUMP JUMPDEST SWAP4 PUSH2 0x2504 JUMP JUMPDEST SWAP3 PUSH2 0x25A9 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x25EB PUSH2 0x25F1 SWAP2 PUSH2 0x2667 JUMP JUMPDEST SWAP2 PUSH2 0x28C5 JUMP JUMPDEST PUSH1 0xF SIGNEXTEND SWAP1 PUSH1 0xF SIGNEXTEND MUL PUSH1 0x40 SAR PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB NOT DUP2 SLT ISZERO DUP1 PUSH2 0x2619 JUMPI JUMPDEST ISZERO PUSH2 0x8AE JUMPI PUSH1 0xF SIGNEXTEND SWAP1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB DUP2 SGT ISZERO PUSH2 0x260E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6F206F7574636F6D657320617661696C61626C65 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH8 0x7FFFFFFFFFFFFFFF DUP2 GT PUSH2 0x8AE JUMPI PUSH1 0x40 SHL PUSH1 0xF SIGNEXTEND SWAP1 JUMP JUMPDEST PUSH1 0xF SIGNEXTEND PUSH1 0x0 DUP2 SLT PUSH2 0x8AE JUMPI PUSH1 0x40 SAR PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xF SIGNEXTEND SWAP1 PUSH1 0xF SIGNEXTEND ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB NOT DUP2 SLT ISZERO DUP1 PUSH2 0x2619 JUMPI ISZERO PUSH2 0x8AE JUMPI PUSH1 0xF SIGNEXTEND SWAP1 JUMP JUMPDEST PUSH1 0xF SWAP2 DUP3 SIGNEXTEND SWAP2 SIGNEXTEND SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB NOT DUP2 SLT ISZERO DUP1 PUSH2 0x2619 JUMPI ISZERO PUSH2 0x8AE JUMPI PUSH1 0xF SIGNEXTEND SWAP1 JUMP JUMPDEST PUSH1 0x40 SHL PUSH1 0x17 SIGNEXTEND PUSH1 0x40 SAR PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB NOT DUP2 SLT ISZERO DUP1 PUSH2 0x2619 JUMPI ISZERO PUSH2 0x8AE JUMPI PUSH1 0xF SIGNEXTEND SWAP1 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x274E JUMPI PUSH1 0xF SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 DUP2 SLT PUSH2 0x28B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND DUP2 MUL PUSH1 0x40 SHR SWAP3 PUSH1 0x80 SHR MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB DUP2 GT PUSH2 0x28B JUMPI PUSH1 0x40 SHL SWAP1 DUP3 NOT DUP3 GT PUSH2 0x56B JUMPI POP ADD SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 DUP1 ISZERO PUSH2 0x8AE JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB DUP4 GT PUSH2 0x279E JUMPI POP PUSH2 0x2779 SWAP2 PUSH1 0x40 SHL PUSH2 0x21F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 DUP2 GT PUSH2 0x8AE JUMPI AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB DUP2 GT PUSH2 0x8AE JUMPI PUSH1 0xF SIGNEXTEND SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xC0 DUP4 DUP2 SHR SWAP4 DUP5 PUSH5 0x100000000 DUP2 LT ISZERO PUSH2 0x28B8 JUMPI JUMPDEST DUP1 PUSH3 0x10000 PUSH1 0x2 SWAP3 LT ISZERO PUSH2 0x28AC JUMPI JUMPDEST PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x28A0 JUMPI JUMPDEST PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x2894 JUMPI JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x2889 JUMPI JUMPDEST LT ISZERO PUSH2 0x287F JUMPI JUMPDEST PUSH2 0x2807 PUSH1 0x0 NOT SWAP3 DUP3 PUSH1 0x1 DUP6 DUP8 ADD PUSH1 0xBE NOT DUP5 ADD SHR ADD SWAP2 PUSH1 0xFF SUB SHL PUSH2 0x21F4 JUMP JUMPDEST SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 DUP8 GT PUSH2 0x801 JUMPI DUP5 PUSH1 0x80 SHR DUP8 MUL SWAP2 DUP6 AND DUP8 MUL SWAP1 DUP5 DUP2 SWAP5 PUSH1 0x40 SHL SWAP2 DUP4 DUP4 LT PUSH2 0x2875 JUMPI JUMPDEST POP POP SUB SWAP5 DUP2 PUSH1 0x80 SHL SWAP4 DUP5 DUP8 LT PUSH2 0x286B JUMPI JUMPDEST POP POP PUSH1 0x80 SHR SUB PUSH2 0x2860 JUMPI PUSH2 0x2858 SWAP3 SUB PUSH2 0x21F4 JUMP JUMPDEST SWAP1 JUMPDEST ADD PUSH2 0x2779 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 PUSH2 0x285A JUMP JUMPDEST SWAP1 SWAP3 ADD SWAP2 CODESIZE PUSH2 0x2844 JUMP JUMPDEST ADD SWAP4 POP DUP5 CODESIZE PUSH2 0x2833 JUMP JUMPDEST SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x27E9 JUMP JUMPDEST SWAP3 DUP2 ADD SWAP3 DUP2 SHR PUSH2 0x27E2 JUMP JUMPDEST PUSH1 0x4 SWAP4 DUP5 ADD SWAP4 SHR PUSH2 0x27D8 JUMP JUMPDEST PUSH1 0x8 SWAP4 DUP5 ADD SWAP4 SHR PUSH2 0x27CE JUMP JUMPDEST PUSH1 0x10 SWAP4 DUP5 ADD SWAP4 SHR PUSH2 0x27C3 JUMP JUMPDEST POP PUSH1 0xE0 SWAP2 POP DUP1 DUP3 SHR PUSH2 0x27B4 JUMP JUMPDEST PUSH1 0xF SIGNEXTEND PUSH1 0x0 DUP1 DUP3 SGT ISZERO PUSH2 0x56B JUMPI DUP1 DUP3 PUSH9 0x10000000000000000 DUP5 SLT ISZERO PUSH2 0x29C9 JUMPI JUMPDEST DUP1 PUSH5 0x100000000 PUSH1 0x2 SWAP3 SLT ISZERO PUSH2 0x29BD JUMPI JUMPDEST PUSH3 0x10000 DUP2 SLT ISZERO PUSH2 0x29B1 JUMPI JUMPDEST PUSH2 0x100 DUP2 SLT ISZERO PUSH2 0x29A5 JUMPI JUMPDEST PUSH1 0x10 DUP2 SLT ISZERO PUSH2 0x2999 JUMPI JUMPDEST PUSH1 0x4 DUP2 SLT ISZERO PUSH2 0x298E JUMPI JUMPDEST SLT ISZERO PUSH2 0x2986 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x3F SHL SWAP3 PUSH1 0x3F NOT DUP3 ADD PUSH1 0x40 SHL SWAP3 SWAP2 PUSH1 0x7F SWAP2 SWAP1 DUP3 SUB SHL JUMPDEST DUP3 DUP6 SGT PUSH2 0x2968 JUMPI POP POP POP PUSH16 0xB17217F7D1CF79ABC9E3B39803F2F6AF SWAP2 POP PUSH1 0xF SIGNEXTEND MUL PUSH1 0x80 SAR SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP6 SWAP1 SAR SWAP5 SWAP1 DUP1 MUL PUSH1 0xFF DUP2 SWAP1 SHR SWAP2 DUP3 MUL SWAP1 SWAP5 ADD SWAP4 SWAP1 DUP3 ADD SHR PUSH2 0x2941 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2929 JUMP JUMPDEST SWAP2 DUP2 ADD SWAP2 DUP2 SAR PUSH2 0x2922 JUMP JUMPDEST PUSH1 0x4 SWAP3 DUP4 ADD SWAP3 SAR PUSH2 0x2918 JUMP JUMPDEST PUSH1 0x8 SWAP3 DUP4 ADD SWAP3 SAR PUSH2 0x290E JUMP JUMPDEST PUSH1 0x10 SWAP3 DUP4 ADD SWAP3 SAR PUSH2 0x2903 JUMP JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SAR PUSH2 0x28F7 JUMP JUMPDEST POP PUSH1 0x40 SWAP1 POP DUP3 DUP2 SAR PUSH2 0x28E6 JUMP JUMPDEST PUSH1 0xF SIGNEXTEND PUSH1 0x1 PUSH1 0x46 SHL DUP2 SLT ISZERO PUSH2 0x8AE JUMPI PUSH9 0x3FFFFFFFFFFFFFFFFF NOT DUP2 SLT PUSH2 0x2A1B JUMPI PUSH17 0x171547652B82FE1777D0FFDA0D23A7D12 PUSH2 0x2A18 SWAP2 MUL PUSH1 0x80 SAR PUSH1 0xF SIGNEXTEND PUSH2 0x2A21 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x46 SHL DUP2 SLT ISZERO PUSH2 0x8AE JUMPI PUSH9 0x3FFFFFFFFFFFFFFFFF NOT DUP2 SLT PUSH2 0x35BF JUMPI PUSH1 0x1 PUSH1 0x7F SHL SWAP1 PUSH1 0x0 SWAP4 DUP5 PUSH1 0x1 PUSH1 0x3F SHL DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x35A7 JUMPI JUMPDEST DUP5 PUSH8 0x4000000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x358A JUMPI JUMPDEST DUP5 PUSH8 0x2000000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x356D JUMPI JUMPDEST DUP5 PUSH8 0x1000000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3550 JUMPI JUMPDEST DUP5 PUSH8 0x800000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3533 JUMPI JUMPDEST DUP5 PUSH8 0x400000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3516 JUMPI JUMPDEST DUP5 PUSH8 0x200000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x34F9 JUMPI JUMPDEST DUP5 PUSH8 0x100000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x34DC JUMPI JUMPDEST DUP5 PUSH7 0x80000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x34BF JUMPI JUMPDEST DUP5 PUSH7 0x40000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x34A2 JUMPI JUMPDEST DUP5 PUSH7 0x20000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3485 JUMPI JUMPDEST DUP5 PUSH7 0x10000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3468 JUMPI JUMPDEST DUP5 PUSH7 0x8000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x344B JUMPI JUMPDEST DUP5 PUSH7 0x4000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x342E JUMPI JUMPDEST DUP5 PUSH7 0x2000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3411 JUMPI JUMPDEST DUP5 PUSH7 0x1000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x33F4 JUMPI JUMPDEST DUP5 PUSH6 0x800000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x33D7 JUMPI JUMPDEST DUP5 PUSH6 0x400000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x33BA JUMPI JUMPDEST DUP5 PUSH6 0x200000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x339D JUMPI JUMPDEST DUP5 PUSH6 0x100000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3380 JUMPI JUMPDEST DUP5 PUSH6 0x80000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3363 JUMPI JUMPDEST DUP5 PUSH6 0x40000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3346 JUMPI JUMPDEST DUP5 PUSH6 0x20000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3329 JUMPI JUMPDEST DUP5 PUSH6 0x10000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x330C JUMPI JUMPDEST DUP5 PUSH5 0x8000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x32EF JUMPI JUMPDEST DUP5 PUSH5 0x4000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x32D2 JUMPI JUMPDEST DUP5 PUSH5 0x2000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x32B5 JUMPI JUMPDEST DUP5 PUSH5 0x1000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3298 JUMPI JUMPDEST DUP5 PUSH5 0x800000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x327B JUMPI JUMPDEST DUP5 PUSH5 0x400000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x325E JUMPI JUMPDEST DUP5 PUSH5 0x200000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3241 JUMPI JUMPDEST DUP5 PUSH5 0x100000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3224 JUMPI JUMPDEST DUP5 PUSH4 0x80000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3207 JUMPI JUMPDEST DUP5 PUSH4 0x40000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x31EA JUMPI JUMPDEST DUP5 PUSH4 0x20000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x31CD JUMPI JUMPDEST DUP5 PUSH4 0x10000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x31B0 JUMPI JUMPDEST DUP5 PUSH4 0x8000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3193 JUMPI JUMPDEST DUP5 PUSH4 0x4000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3176 JUMPI JUMPDEST DUP5 PUSH4 0x2000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3159 JUMPI JUMPDEST DUP5 PUSH4 0x1000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x313C JUMPI JUMPDEST DUP5 PUSH3 0x800000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x311F JUMPI JUMPDEST DUP5 PUSH3 0x400000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3102 JUMPI JUMPDEST DUP5 PUSH3 0x200000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x30E5 JUMPI JUMPDEST DUP5 PUSH3 0x100000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x30C8 JUMPI JUMPDEST DUP5 PUSH3 0x80000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x30AB JUMPI JUMPDEST DUP5 PUSH3 0x40000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x308E JUMPI JUMPDEST DUP5 PUSH3 0x20000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3071 JUMPI JUMPDEST DUP5 PUSH3 0x10000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3054 JUMPI JUMPDEST DUP5 PUSH2 0x8000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3037 JUMPI JUMPDEST DUP5 PUSH2 0x4000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x301A JUMPI JUMPDEST DUP5 PUSH2 0x2000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x2FFD JUMPI JUMPDEST DUP5 PUSH2 0x1000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x2FE0 JUMPI JUMPDEST DUP5 PUSH2 0x800 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x2FC3 JUMPI JUMPDEST DUP5 PUSH2 0x400 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x2FA6 JUMPI JUMPDEST DUP5 PUSH2 0x200 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x2F89 JUMPI JUMPDEST DUP5 PUSH2 0x100 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x2F6C JUMPI JUMPDEST DUP5 PUSH1 0x80 SWAP2 DUP2 DUP4 DUP3 AND DUP8 SIGNEXTEND SGT PUSH2 0x2F50 JUMPI JUMPDEST DUP2 PUSH1 0x40 DUP3 AND DUP8 SIGNEXTEND SGT PUSH2 0x2F34 JUMPI JUMPDEST DUP2 PUSH1 0x20 DUP3 AND DUP8 SIGNEXTEND SGT PUSH2 0x2F18 JUMPI JUMPDEST DUP2 PUSH1 0x10 DUP3 AND DUP8 SIGNEXTEND SGT PUSH2 0x2EFC JUMPI JUMPDEST DUP2 PUSH1 0x8 DUP3 AND DUP8 SIGNEXTEND SGT PUSH2 0x2EE0 JUMPI JUMPDEST DUP2 PUSH1 0x4 DUP3 AND DUP8 SIGNEXTEND SGT PUSH2 0x2EC4 JUMPI JUMPDEST DUP2 PUSH1 0x2 DUP3 AND DUP8 SIGNEXTEND SGT PUSH2 0x2EA7 JUMPI JUMPDEST PUSH1 0x1 AND DUP6 SIGNEXTEND SGT PUSH2 0x2E89 JUMPI JUMPDEST POP PUSH1 0x40 SAR DUP3 SIGNEXTEND PUSH1 0x3F SUB DUP3 SIGNEXTEND SHR SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB DUP4 GT PUSH2 0x56B JUMPI POP SIGNEXTEND SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH17 0x10000000000000000B17217F7D1CF79AB MUL SWAP1 SHR SWAP1 CODESIZE PUSH2 0x2E69 JUMP JUMPDEST PUSH17 0x1000000000000000162E42FEFA39EF358 SWAP1 SWAP5 MUL DUP3 SHR SWAP4 PUSH2 0x2E5E JUMP JUMPDEST SWAP4 PUSH17 0x10000000000000002C5C85FDF473DE6B2 MUL DUP3 SHR SWAP4 PUSH2 0x2E51 JUMP JUMPDEST SWAP4 PUSH17 0x100000000000000058B90BFBE8E7BCD6D MUL DUP3 SHR SWAP4 PUSH2 0x2E44 JUMP JUMPDEST SWAP4 PUSH17 0x1000000000000000B17217F7D1CF79AFA MUL DUP3 SHR SWAP4 PUSH2 0x2E37 JUMP JUMPDEST SWAP4 PUSH17 0x100000000000000162E42FEFA39EF366F MUL DUP3 SHR SWAP4 PUSH2 0x2E2A JUMP JUMPDEST SWAP4 PUSH17 0x1000000000000002C5C85FDF473DE6ECA MUL DUP3 SHR SWAP4 PUSH2 0x2E1D JUMP JUMPDEST SWAP4 PUSH17 0x10000000000000058B90BFBE8E7BCE544 MUL DUP3 SHR SWAP4 PUSH2 0x2E10 JUMP JUMPDEST SWAP2 PUSH17 0x100000000000000B17217F7D1CF79E949 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2E00 JUMP JUMPDEST SWAP2 PUSH17 0x10000000000000162E42FEFA39EF44D91 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2DF2 JUMP JUMPDEST SWAP2 PUSH17 0x100000000000002C5C85FDF473DEA871F MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2DE4 JUMP JUMPDEST SWAP2 PUSH17 0x1000000000000058B90BFBE8E7BDCBE2E MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2DD6 JUMP JUMPDEST SWAP2 PUSH17 0x10000000000000B17217F7D1CF7D83C1A MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2DC8 JUMP JUMPDEST SWAP2 PUSH17 0x1000000000000162E42FEFA39F02B772C MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2DBA JUMP JUMPDEST SWAP2 PUSH17 0x10000000000002C5C85FDF473E242EA38 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2DAC JUMP JUMPDEST SWAP2 PUSH17 0x100000000000058B90BFBE8E7CC35C3F0 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D9E JUMP JUMPDEST SWAP2 PUSH17 0x1000000000000B17217F7D1CFB72B45E1 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D90 JUMP JUMPDEST SWAP2 PUSH17 0x100000000000162E42FEFA39FE95583C2 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D81 JUMP JUMPDEST SWAP2 PUSH17 0x1000000000002C5C85FDF4741BEA6E77E MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D72 JUMP JUMPDEST SWAP2 PUSH17 0x10000000000058B90BFBE8E8B2D3D4EDE MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D63 JUMP JUMPDEST SWAP2 PUSH17 0x100000000000B17217F7D1D351A389D40 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D54 JUMP JUMPDEST SWAP2 PUSH17 0x10000000000162E42FEFA3AE53369388C MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D45 JUMP JUMPDEST SWAP2 PUSH17 0x100000000002C5C85FDF477B662B26945 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D36 JUMP JUMPDEST SWAP2 PUSH17 0x1000000000058B90BFBE8F71CB4E4B33D MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D27 JUMP JUMPDEST SWAP2 PUSH17 0x10000000000B17217F7D20CF927C8E94C MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D18 JUMP JUMPDEST SWAP2 PUSH17 0x1000000000162E42FEFA494F1478FDE05 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D08 JUMP JUMPDEST SWAP2 PUSH17 0x10000000002C5C85FDF4B15DE6F17EB0D MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2CF8 JUMP JUMPDEST SWAP2 PUSH17 0x100000000058B90BFBE9DDBAC5E109CCE MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2CE8 JUMP JUMPDEST SWAP2 PUSH17 0x1000000000B17217F7D5A7716BBA4A9AE MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2CD8 JUMP JUMPDEST SWAP2 PUSH17 0x100000000162E42FEFB2FED257559BDAA MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2CC8 JUMP JUMPDEST SWAP2 PUSH17 0x1000000002C5C85FDF84BD62AE30A74CC MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2CB8 JUMP JUMPDEST SWAP2 PUSH17 0x10000000058B90BFBF8479BD5A81B51AD MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2CA8 JUMP JUMPDEST SWAP2 PUSH17 0x100000000B17217F80F4EF5AADDA45554 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2C98 JUMP JUMPDEST SWAP2 PUSH17 0x10000000162E42FF0999CE3541B9FFFCF MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2C87 JUMP JUMPDEST SWAP2 PUSH17 0x100000002C5C85FE31F35A6A30DA1BE50 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2C76 JUMP JUMPDEST SWAP2 PUSH17 0x1000000058B90BFCDEE5ACD3C1CEDC823 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2C65 JUMP JUMPDEST SWAP2 PUSH17 0x10000000B17217FBA9C739AA5819F44F9 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2C54 JUMP JUMPDEST SWAP2 PUSH17 0x1000000162E42FFF037DF38AA2B219F06 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2C43 JUMP JUMPDEST SWAP2 PUSH17 0x10000002C5C8601CC6B9E94213C72737A MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2C32 JUMP JUMPDEST SWAP2 PUSH17 0x100000058B90C0B48C6BE5DF846C5B2EF MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2C21 JUMP JUMPDEST SWAP2 PUSH17 0x1000000B1721835514B86E6D96EFD1BFE MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2C10 JUMP JUMPDEST SWAP2 PUSH17 0x100000162E430E5A18F6119E3C02282A5 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2BFE JUMP JUMPDEST SWAP2 PUSH17 0x1000002C5C863B73F016468F6BAC5CA2B MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2BEC JUMP JUMPDEST SWAP2 PUSH17 0x10000058B90CF1E6D97F9CA14DBCC1628 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2BDA JUMP JUMPDEST SWAP2 PUSH17 0x100000B1721BCFC99D9F890EA06911763 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2BC8 JUMP JUMPDEST SWAP2 PUSH17 0x10000162E43F4F831060E02D839A9D16D MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2BB6 JUMP JUMPDEST SWAP2 PUSH17 0x100002C5C89D5EC6CA4D7C8ACC017B7C9 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2BA4 JUMP JUMPDEST SWAP2 PUSH17 0x1000058B91B5BC9AE2EED81E9B7D4CFAB MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2B92 JUMP JUMPDEST SWAP2 PUSH17 0x10000B17255775C040618BF4A4ADE83FC MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2B80 JUMP JUMPDEST SWAP2 PUSH17 0x1000162E525EE054754457D5995292026 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2B6D JUMP JUMPDEST SWAP2 PUSH17 0x10002C5CC37DA9491D0985C348C68E7B3 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2B5A JUMP JUMPDEST SWAP2 PUSH17 0x100058BA01FB9F96D6CACD4B180917C3D MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2B47 JUMP JUMPDEST SWAP2 PUSH17 0x1000B175EFFDC76BA38E31671CA939725 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2B34 JUMP JUMPDEST SWAP2 PUSH17 0x100162F3904051FA128BCA9C55C31E5DF MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2B21 JUMP JUMPDEST SWAP2 PUSH17 0x1002C605E2E8CEC506D21BFC89A23A00F MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2B0E JUMP JUMPDEST SWAP2 PUSH17 0x10058C86DA1C09EA1FF19D294CF2F679B MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2AFB JUMP JUMPDEST SWAP2 PUSH17 0x100B1AFA5ABCBED6129AB13EC11DC9543 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2AE8 JUMP JUMPDEST SWAP2 PUSH17 0x10163DA9FB33356D84A66AE336DCDFA3F MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2AD4 JUMP JUMPDEST SWAP2 PUSH17 0x102C9A3E778060EE6F7CACA4F7A29BDE8 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2AC0 JUMP JUMPDEST SWAP2 PUSH17 0x1059B0D31585743AE7C548EB68CA417FD MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2AAC JUMP JUMPDEST SWAP2 PUSH17 0x10B5586CF9890F6298B92B71842A98363 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2A98 JUMP JUMPDEST SWAP2 PUSH17 0x1172B83C7D517ADCDF7C8C50EB14A791F MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2A84 JUMP JUMPDEST SWAP2 PUSH17 0x1306FE0A31B7152DE8D5A46305C85EDEC MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2A70 JUMP JUMPDEST PUSH16 0xB504F333F9DE6484597D89B3754ABE9F SWAP3 POP PUSH2 0x2A5C JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0xFB BLOCKHASH 0xE7 0xB7 0xEE 0x25 SELFDESTRUCT 0xC5 PUSH10 0xBF0F8362D837E9C68F48 CALLDATACOPY 0xE3 0xCB EQ 0xF6 SWAP9 LOG2 0xE1 0xF9 SDIV 0xF6 0xED PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"583:25067:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23104:35;583:25067;23104:35;;;583:25067;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1431:29;-1:-1:-1;;;;;583:25067:26;;;;;;;;;;;;;;;;;;-1:-1:-1;;583:25067:26;;;;;;:::i;:::-;1500:62:2;;;:::i;:::-;-1:-1:-1;;;;;583:25067:26;;;;2627:22:2;;2623:91;;583:25067:26;;;;;;;;;;;;;;3052:40:2;583:25067:26;3052:40:2;;583:25067:26;;2623:91:2;583:25067:26;-1:-1:-1;;;2672:31:2;;;;;583:25067:26;;;;;2672:31:2;583:25067:26;;;;;;;;;;;;;;;;;;;1500:62:2;;:::i;:::-;19978:48:26;583:25067;19986:13;583:25067;;;;19978:48;:::i;:::-;20061:16;583:25067;;;;;;;;-1:-1:-1;;;20138:44:26;;-1:-1:-1;;;;;20153:12:26;583:25067;20138:44;;;583:25067;;;20138:44;583:25067;;;;;;;;;20138:44;583:25067;;;;;;20138:44;583:25067;;20138:5;-1:-1:-1;;;;;583:25067:26;20138:44;;;;;;;;;;;583:25067;;;;;;;;;;20138:44;583:25067;;;;;;;;;;;;;;;;;-1:-1:-1;;;583:25067:26;;;;;20138:44;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;583:25067;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;888:25;;;;;;;;;:::i;:::-;583:25067;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;583:25067:26;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;888:25;583:25067;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;583:25067:26;;;;;;;;;;;;;;;-1:-1:-1;583:25067:26;;-1:-1:-1;583:25067:26;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;;;;;888:25;;;583:25067;;:::i;:::-;;;;;;;;;;;;;;;2466:103:17;;:::i;:::-;1439:72:16;;:::i;:::-;14311:48:26;583:25067;14319:13;583:25067;;;;14311:48;:::i;:::-;583:25067;;;;;;;14462:9;583:25067;;14483:8;;583:25067;14493:14;583:25067;;;;;;;14462:46;;;;;;583:25067;;;;;;14462:46;;;;583:25067;14462:46;;;;;;;;;;;;;;583:25067;;;-1:-1:-1;;;14610:40:26;;14630:10;14610:40;;;583:25067;;;;;;;;;;;-1:-1:-1;583:25067:26;;;;;;14610:40;;;;;;;;;;;;;;;583:25067;14668:20;;;583:25067;;14806:24;583:25067;14806:24;;;:::i;:::-;:36;;583:25067;14873:38;583:25067;;15261:14;;;;15242:33;15261:14;15242:33;;:::i;:::-;583:25067;15487:26;583:25067;15377:16;583:25067;15369:70;15377:26;;;;15369:70;:::i;:::-;15487:26;:::i;:::-;15377:16;583:25067;15591:70;;;;;583:25067;;-1:-1:-1;;;15591:70:26;;14630:10;15591:70;;;583:25067;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;583:25067:26;;;;;;;;15591:70;;;;;;;;;;583:25067;-1:-1:-1;;583:25067:26;;-1:-1:-1;;;15740:34:26;;14630:10;15740:34;;;583:25067;;;;;;;;;;;;;;;;;;14630:10;;583:25067;;;;15740:34;:5;;583:25067;15740:34;;;;;;;;;;;583:25067;;;;;;;15814:33;583:25067;;;;;14630:10;15814:33;;583:25067;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;583:25067:26;;;;;15740:34;;;;;;;;;;;;;;:::i;:::-;;;;;583:25067;;;;;;;;;15591:70;;;;:::i;:::-;583:25067;;15591:70;;;;583:25067;;;;15591:70;583:25067;;;;;;;;;15591:70;583:25067;;;;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;;;-1:-1:-1;;;583:25067:26;;;;;;;14610:40;;;;;;;;;;;;;;;;:::i;:::-;;;583:25067;;;;;14610:40;;;583:25067;;;;14610:40;;;;;;583:25067;;;;;;;;;14462:46;;;;;;;;;;;;;;:::i;:::-;;;583:25067;;;;;14610:40;583:25067;;14462:46;;;;;;;583:25067;;;;;;;;;;;;;;;;;1631:39;583:25067;;;;;;;;;;;-1:-1:-1;;583:25067:26;;;;;24998:22;583:25067;;24868:30;24860:58;24868:30;;;24860:58;:::i;:::-;24998:22;:::i;:::-;583:25067;;24998:34;;;583:25067;25034:1;24948:98;24979:57;25034:1;24979:57;;;:::i;:::-;24948:98;:::i;:::-;25056:46;;25117:13;;25112:254;25132:19;;;;;;583:25067;;;;;;7795:6:30;;;583:25067:26;;;;;;;;-1:-1:-1;;;;;;7875:19:30;;;;:42;;25112:254:26;583:25067;;;;;25460:181;25498:129;583:25067;;;;25498:129;:::i;:::-;25460:181;:::i;:::-;583:25067;;;;;;;7875:42:30;7898:19;-1:-1:-1;;;;;7898:19:30;;;7875:42;;583:25067:26;;;;25153:3;25245:11;;;;25314:41;25153:3;25245:11;25191:95;25226:46;25245:11;;;;;:::i;:::-;:23;;583:25067;25226:46;:::i;25191:95::-;25314:41;;:::i;:::-;25153:3;;:::i;:::-;25117:13;;;;;583:25067;;;;;;;;;;;;;;;;:::i;:::-;24265:9;583:25067;;;-1:-1:-1;;;24265:44:26;;24286:8;24265:44;;;583:25067;;;;;;;;;;;;-1:-1:-1;;;;;583:25067:26;;;;;;;24265:44;;;;;;;;;;;;;;;;583:25067;-1:-1:-1;583:25067:26;;-1:-1:-1;;;24326:34:26;;-1:-1:-1;;;;;583:25067:26;;;24326:34;;;583:25067;;;;;;;;;;;;;;;;;;24326:34;;;;;;;;;;;;;583:25067;;;;;;;24326:34;;;;;;;;;;;;;;;;;:::i;:::-;;;583:25067;;;;;24326:34;;;;;;;;;;583:25067;;;;;;;;;;24265:44;;;;;;;;;;;;;;;;;:::i;:::-;;;583:25067;;;;;;;;;;24326:34;24265:44;;;;;;;;583:25067;;;;;;;;;;;;;;;;;;;;;;;;;1143:31;583:25067;;;;;;;;;;;;;;;;;;;;;;;;1715:38;583:25067;;;;;;;;;;;;;;;;;;;;13227:15;:32;583:25067;;;13308:4;583:25067;;13293:19;583:25067;;;13293:19;583:25067;13327:14;;;;583:25067;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;583:25067:26;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;2466:103:17;;;;;:::i;:::-;1439:72:16;;:::i;:::-;7511:42:26;583:25067;7520:12;583:25067;;7519:13;7511:42;:::i;:::-;7563:58;7586:8;583:25067;7571:30;;7563:58;:::i;:::-;7639:13;;583:25067;;2457:5;7702:27;;583:25067;;;8524:74;:42;8385:114;8236:40;7885:22;7840:15;;:::i;:::-;7885:22;:::i;:::-;7970:34;:22;;;:::i;:::-;:34;;:47;583:25067;;;7970:47;:::i;:::-;583:25067;;8139:21;8095:15;;:::i;8139:21::-;8236:40;:::i;:::-;8286:59;583:25067;;;;8294:19;;8286:59;:::i;:::-;8385:114;:::i;8524:42::-;583:25067;8581:17;583:25067;;;8524:74;:::i;:::-;8666:10;1980:3;8659:17;8666:10;8659:17;;:::i;:::-;583:25067;;2079:2;583:25067;;;;;2079:2;583:25067;;;;;;;1980:3;583:25067;;8841:26;;8895:16;8841:26;;;;:::i;:::-;8895:16;;;:::i;:::-;583:25067;;-1:-1:-1;;;8992:54:26;;9011:10;8992:54;;;583:25067;;;9031:4;583:25067;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;583:25067:26;;8992:54;;583:25067;;8992:54;;583:25067;8992:5;;583:25067;;8992:54;;;;;;;;8971:122;8992:54;;;;;583:25067;8971:122;;:::i;:::-;9104:9;583:25067;;9104:61;;;;;583:25067;;-1:-1:-1;;;9104:61:26;;9011:10;9104:61;;;583:25067;;;9131:8;583:25067;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9104:61;;;;;;;;;;583:25067;9259:21;;9438:61;9259:21;9239:41;9259:21;9438:61;9259:21;;9362:35;9259:21;;:::i;:::-;9239:41;583:25067;9239:41;:::i;:::-;;583:25067;9362:35;583:25067;9362:35;:::i;:::-;;583:25067;;9011:10;;;;9438:61;;583:25067;;;;;;;;;;;;;;;;;;9438:61;;;;7970:34;583:25067;;;;9104:61;;;;;;;:::i;:::-;583:25067;;9104:61;;;;;;;583:25067;;;;8992:54;;;;;;;;;;;;;;:::i;:::-;;;;;583:25067;;;;;;;;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1218:42;583:25067;;;-1:-1:-1;;;;;583:25067:26;;;;;;;;;;;;;;;;-1:-1:-1;;583:25067:26;;;;;;23746:22;583:25067;;;23665:64;583:25067;;23673:30;;23665:64;:::i;23746:22::-;:34;;583:25067;;;;;;;;;;;;;;;;;;;;;;;;2079:2;583:25067;;;;;;;;;;;;;;;;;;;1014:29;583:25067;;;;;;;;;;;;;;;;;;:::i;:::-;;;23104:35;;;;583:25067;;;;;;;23104:35;;;583:25067;;;;;;;;;;;;;;;23104:35;583:25067;;;23094:46;;583:25067;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22329:15;;22343:1;22329:15;;583:25067;;;;22507:35;22569:34;22507:35;22477:75;22507:35;;;:::i;:::-;22477:75;:::i;:::-;22569:34;:::i;:::-;583:25067;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:1;583:25067;;;;;;;;;;;;;;;;;;;1102:35;583:25067;;;;;;;;;;;;;;;;;;;;;;;1180:32;583:25067;;;;;;;;;;;;;;;;;;;;;;;1676:33;583:25067;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;583:25067:26;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:62:2;;;:::i;:::-;583:25067:26;;-1:-1:-1;;;12800:53:26;;12819:10;12800:53;;;583:25067;;;12839:4;583:25067;;;;;;;;;;12839:4;;583:25067;;;;;;12800:53;583:25067;;12800:5;-1:-1:-1;;;;;583:25067:26;12800:53;;;;;;;;;;;583:25067;;;;;;;12958:34;583:25067;12917:26;583:25067;12917:26;583:25067;12917:26;:::i;:::-;;583:25067;;;;;12819:10;12958:34;;583:25067;;;;;;;;;;;;;;;;;;;;;;;;;;;12800:53;;;;;;;;;;;;;;:::i;:::-;;;;583:25067;;;;;;;;;;;;;;;2551:20:16;1500:62:2;;;:::i;:::-;1439:72:16;;:::i;:::-;2532:4;583:25067:26;;2522:14:16;583:25067:26;;;2522:14:16;583:25067:26;;735:10:14;583:25067:26;;2551:20:16;583:25067:26;;;;;;;;;;;;;;;;;;;1505:35;583:25067;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1074:21;583:25067;;;-1:-1:-1;;;;;583:25067:26;;;;;;;;;;;;;;;;;;;;;1500:62:2;;:::i;:::-;583:25067:26;;;-1:-1:-1;;;;;;583:25067:26;;;;-1:-1:-1;;;;;583:25067:26;3052:40:2;583:25067:26;;3052:40:2;583:25067:26;;;;;;;;;;;;;;;;;;;1466:33;583:25067;;;;;;;;;;;;;;;;;;;;983:25;583:25067;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1920:7:16;583:25067:26;;;;;;;;;;;;;;;;;;19022:19;18842:74;:42;18700:114;18620:40;18563:22;583:25067;;;:::i;:::-;;;18135:64;18158:8;583:25067;18143:30;;18135:64;:::i;:::-;18209:68;18217:13;;;18209:68;:::i;:::-;18287:65;18295:1;:5;;18287:65;:::i;:::-;18389:15;;:::i;:::-;18434:22;18500:34;;18434:22;;;:::i;:::-;18500:34;;;;;:::i;:::-;583:25067;18500:34;:::i;:::-;;;;:::i;:::-;583:25067;18563:22;:::i;:::-;18620:40;;:::i;18842:74::-;1980:3;18948:20;18958:10;18948:20;;:::i;:::-;583:25067;19022:19;;:::i;583:25067::-;;;;;;;;17685:16;17511:74;:42;17372:114;17292:40;17235:22;583:25067;;;:::i;:::-;;;16807:64;16830:8;583:25067;16815:30;;16807:64;:::i;:::-;16881:68;16889:13;;;16881:68;:::i;:::-;16959:65;16967:1;:5;;16959:65;:::i;:::-;17061:15;;:::i;:::-;17106:22;17172:34;;17106:22;;;:::i;:::-;17172:34;;;;;:::i;:::-;583:25067;17172:34;:::i;583:25067::-;;;;;;;;;;;;;;;;;1371:26;583:25067;;;;;;;;;;;;;;;;;;;;;;;1049:19;583:25067;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;1049:19;583:25067;;;;;;;;;;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;;;;;;;;-1:-1:-1;583:25067:26;;;;;;;;;;;-1:-1:-1;;583:25067:26;;;;;;;;;;;;;;;;-1:-1:-1;583:25067:26;;-1:-1:-1;583:25067:26;;-1:-1:-1;583:25067:26;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;953:24;583:25067;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16094:12:26;583:25067;;;;;;;16286:36;;;;16072:53;16080:10;:26;;16072:53;:::i;:::-;16152:13;583:25067;;;;;16152:13;583:25067;;;;;;;;;;;;;16286:36;;;;;583:25067;;;;;;;;;;;;;;;;;;;;;16286:36;;:5;;583:25067;16286:36;;;;;;;;;;;583:25067;;;;;;16363:35;583:25067;16286:36;583:25067;;;;;16363:35;583:25067;;;16286:36;583:25067;;;;;;;;;;;;;;;;;-1:-1:-1;;;583:25067:26;;;;;16286:36;;;;;;;;;;;;;;:::i;:::-;;;;583:25067;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1546:37;-1:-1:-1;;;;;583:25067:26;;;;;;;;;;;;;;;-1:-1:-1;;583:25067:26;;;;;;;6906:47;583:25067;;;;;6928:6;583:25067;;6914:10;:20;6906:47;:::i;:::-;13685:12;583:25067;;;;;;;;;;;13859:49;583:25067;;;6928:6;583:25067;;13737:14;13729:49;;;:::i;:::-;13788:61;583:25067;;13796:33;;13788:61;:::i;:::-;13859:49;:::i;:::-;583:25067;13919:32;583:25067;;;;;13685:12;583:25067;13997:27;;;;583:25067;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;;;;;;;;;1500:62:2;;:::i;:::-;1920:7:16;583:25067:26;;;;;2264:9:16;2260:62;;-1:-1:-1;;;583:25067:26;1920:7:16;583:25067:26;;735:10:14;583:25067:26;;2798:22:16;;583:25067:26;;2798:22:16;583:25067:26;;2260:62:16;583:25067:26;;-1:-1:-1;;;2296:15:16;;;583:25067:26;;;;;;;;;;;;;;;;;;1589:36;583:25067;;;;;;;;;;;;;:::i;:::-;2466:103:17;;:::i;:::-;1439:72:16;;:::i;:::-;9934:42:26;583:25067;9943:12;583:25067;;9942:13;9934:42;:::i;:::-;9986:58;10009:8;583:25067;9994:30;;9986:58;:::i;:::-;10062:13;;583:25067;;10211:9;583:25067;;;-1:-1:-1;;;10211:44:26;;10232:8;10211:44;;;583:25067;;;;;;;;;10211:44;;-1:-1:-1;;;;;583:25067:26;;;;;10211:44;583:25067;;;;10211:44;;;;;;;;;;;;;;583:25067;-1:-1:-1;583:25067:26;;-1:-1:-1;;;10348:40:26;;10368:10;10348:40;;;583:25067;;;;;;;;;;;;;;;;;;;10348:40;;;;;;;;;;;;;;;;;583:25067;10406:29;;583:25067;;11233:74;:42;11091:114;10942:40;10589:22;10544:15;;:::i;10589:22::-;583:25067;10674:22;;;:::i;:::-;:34;;:47;583:25067;;;10674:47;:::i;:::-;583:25067;;10842:21;10798:15;;:::i;10942:40::-;10992:59;583:25067;;;;11000:19;;10992:59;:::i;11233:74::-;1980:3;11361:20;11371:10;11361:20;;:::i;:::-;583:25067;2079:2;583:25067;;;;;2079:2;583:25067;;;;;;;;11849:49;11980:35;583:25067;11603:19;1980:3;11870:27;583:25067;;;;;;;11546:26;;;;;:::i;:::-;11603:19;;:::i;:::-;583:25067;;11714:125;11755:27;583:25067;;11735:16;583:25067;11755:27;;:::i;:::-;11735:47;;;11714:125;:::i;:::-;11870:27;;:::i;:::-;11849:49;;:::i;11980:35::-;;583:25067;;;10211:9;583:25067;;12077:61;;;;;;583:25067;;-1:-1:-1;;;12077:61:26;;10368:10;12077:61;;;583:25067;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12077:61;;;;;;;;;;583:25067;-1:-1:-1;583:25067:26;;-1:-1:-1;;;12209:38:26;;10368:10;12209:38;;;583:25067;;;;;;;;;;;;;;;;;;;;;;;12209:38;;:5;;583:25067;12209:38;;;;;;;12335:59;12209:38;12335:59;12209:38;;;12188:106;12209:38;;;;;583:25067;12188:106;;;:::i;:::-;583:25067;10368:10;;;;12335:59;;583:25067;;;;;;;;;;;;;;;;;;12209:38;;;;;;-1:-1:-1;12209:38:26;;;;;;:::i;:::-;;;;;;583:25067;;;;;;;;;12077:61;12209:38;12077:61;;;;;;;;:::i;:::-;;;;;;;;;583:25067;;;;;;;;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;;;;;;;;;;;10348:40;;;;;;;;;;;;;;;;;;:::i;:::-;;;583:25067;;;;;;;10348:40;;;;;;;;;583:25067;;;;;;;;;10211:44;;;;;;;;;;;;;;;;:::i;:::-;;;583:25067;;;;;;;10348:40;10211:44;;583:25067;;;;10211:44;;;;;583:25067;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;583:25067:26;;;;;;:::i;:::-;1500:62:2;;:::i;:::-;-1:-1:-1;;;;;583:25067:26;;19314:24;;583:25067;;;;;;;19375:19;583:25067;;;19375:19;583:25067;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;583:25067:26;;;;;;;;;-1:-1:-1;;;;;583:25067:26;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;583:25067:26;;;;;;;;;-1:-1:-1;583:25067:26;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;583:25067:26;;;;;;;2457:5;583:25067;;;;;;;;;-1:-1:-1;;583:25067:26;;;;;;;1980:3;583:25067;;;;10009:8;583:25067;;;;;;10009:8;-1:-1:-1;583:25067:26;;;;;;-1:-1:-1;583:25067:26;:::o;:::-;;;;;;;;;;;;1796:162:2;1710:6;583:25067:26;-1:-1:-1;;;;;583:25067:26;735:10:14;1855:23:2;1851:101;;1796:162::o;1851:101::-;583:25067:26;;-1:-1:-1;;;1901:40:2;;735:10:14;1901:40:2;;;583:25067:26;;;1901:40:2;583:25067:26;;;;:::o;:::-;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;;-1:-1:-1;;;583:25067:26;;;;;;;2002:128:16;583:25067:26;1920:7:16;583:25067:26;;2063:61:16;;2002:128::o;2063:61::-;583:25067:26;;-1:-1:-1;;;2098:15:16;;;;;2575:307:17;1899:1;2702:7;583:25067:26;2702:18:17;2698:86;;1899:1;2702:7;583:25067:26;2575:307:17:o;2698:86::-;583:25067:26;;-1:-1:-1;;;2743:30:17;;;;;583:25067:26;;;;:::o;:::-;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;;;;;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;;;;;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;-1:-1:-1;;583:25067:26;;;;;;;:::o;20844:262::-;20955:8;583:25067;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;583:25067:26;;;:::i;:::-;;;;;;;-1:-1:-1;21001:19:26;;;;;;21091:8;;20844:262;:::o;21022:3::-;21048:11;:23;:11;21022:3;21048:11;;:::i;:::-;:23;;583:25067;21041:30;;;;:::i;:::-;583:25067;21022:3;:::i;:::-;20986:13;;21361:566;;583:25067;;21453:12;583:25067;;21501:41;21464:1;21557:13;21646:1;;21552:224;21586:3;583:25067;;21572:12;;;;;21729:36;21586:3;21640:4;21681:25;21621:27;21640:4;;;;;:::i;:::-;583:25067;21621:27;:::i;21729:36::-;21586:3;;:::i;:::-;21557:13;;;21572:12;;;;21839:25;21882:24;21572:12;21839:25;:::i;:::-;21882:24;;:::i;:::-;583:25067;;;;;;4840:2:30;583:25067:26;-1:-1:-1;;;;;811:35:30;4864:19;;;:42;;;21552:224:26;583:25067;;;;;21361:566;:::o;4864:42:30:-;4887:19;-1:-1:-1;;;;;4887:19:30;;;4864:42;;583:25067:26;;;-1:-1:-1;;;583:25067:26;;;;;;;;;;;;-1:-1:-1;;;583:25067:26;;;;;;;2051:187:30;2158:18;2153:23;;583:25067:26;;2217:2:30;583:25067:26;;;2051:187:30;:::o;2492:168::-;583:25067:26;;2596:1:30;2591:6;;583:25067:26;;2639:2:30;583:25067:26;;;;2492:168:30:o;3749:244::-;;583:25067:26;;;;;;-1:-1:-1;;;;;811:35:30;3898:19;;;:42;;;583:25067:26;;;;;3749:244:30;:::o;4222:::-;583:25067:26;;;;;;;-1:-1:-1;;;;;;4371:19:30;;;;:42;;583:25067:26;;;;;4222:244:30;:::o;4709:250::-;583:25067:26;;;;;;-1:-1:-1;;;;;811:35:30;4864:19;;;:42;;;583:25067:26;;;;;4709:250:30;:::o;6858:555::-;6963:6;;6959:20;;583:25067:26;;6968:1:30;7002:6;;;;583:25067:26;;-1:-1:-1;;;;;7060:38:30;;583:25067:26;;7104:2:30;583:25067:26;;7160:3:30;583:25067:26;;-1:-1:-1;;;;;7187:56:30;;583:25067:26;;7104:2:30;583:25067:26;;;;7290:77:30;;583:25067:26;;;;6858:555:30;:::o;6959:20::-;6971:8;;6968:1;6971:8;:::o;9530:261::-;;9639:6;;583:25067:26;;-1:-1:-1;;;;;;27741:55:30;;583:25067:26;;;27825:13:30;583:25067:26;27831:2:30;583:25067:26;27825:13:30;:::i;:::-;-1:-1:-1;;;;;29261:44:30;;;;583:25067:26;;;-1:-1:-1;;;;;9710:28:30;;583:25067:26;;;;9530:261:30;:::o;27737:1502::-;27877:17;7193:50;583:25067:26;;;27912:21:30;;27961:11;27955:17;;;27951:104;;27737:1502;28076:13;28082:7;28535:3;28076:13;;;28072:100;;27737:1502;28199:5;28193:11;;;28189:96;;27737:1502;28312:4;28306:10;;;28302:95;;27737:1502;28424:3;28418:9;;;28414:94;;27737:1502;28529:9;;28525:23;;27737:1502;28607:45;583:25067:26;;;;;;;;;;;;;;;;;;28607:45:30;:::i;:::-;28688:34;-1:-1:-1;;;;;28678:44:30;;;;583:25067:26;;;28770:3:30;583:25067:26;;;28815:38:30;;;583:25067:26;;28873:21:30;;;583:25067:26;28930:2:30;583:25067:26;28955:7:30;;;;28951:20;;27737:1502;583:25067:26;;;;;28770:3:30;583:25067:26;29088:7:30;;;;29084:20;;27737:1502;-1:-1:-1;;28770:3:30;583:25067:26;29196:15:30;583:25067:26;;29214:6:30;583:25067:26;;29214:6:30;:::i;:::-;29196:28;;583:25067:26;27737:1502:30;;29196:28;;;;583:25067:26;29196:28:30;;;29084:20;583:25067:26;;;29084:20:30;;;;28951;583:25067:26;;-1:-1:-1;28951:20:30;;;;28525:23;583:25067:26;;;28525:23:30;;;28414:94;583:25067:26;;;;;;28414:94:30;;28302:95;28347:1;583:25067:26;;;;;28302:95:30;;28189:96;28235:1;583:25067:26;;;;;28189:96:30;;28072:100;28120:2;583:25067:26;;;;;28072:100:30;;27951:104;-1:-1:-1;583:25067:26;;-1:-1:-1;583:25067:26;;;27951:104:30;;17538:225;583:25067:26;;17637:1:30;17633:5;;;583:25067:26;;;16239:14:30;16267:13;16304:19;16298:25;;;16294:100;;17538:225;16411:17;16417:11;16911:3;16411:17;;;16407:92;;17538:225;16522:7;16516:13;;;16512:88;;17538:225;16623:5;16617:11;;;16613:84;;17538:225;16720:4;16714:10;;;16710:83;;17538:225;16816:3;16810:9;;;16806:82;;17538:225;16905:9;;16901:23;;17538:225;-1:-1:-1;;;17099:18:30;-1:-1:-1;;583:25067:26;;16992:2:30;583:25067:26;;;17057:3:30;;583:25067:26;;;;17119:7:30;;;;;;583:25067:26;;;17703:34:30;583:25067:26;;;;;17741:3:30;583:25067:26;17538:225:30;:::o;17128:9::-;17136:1;583:25067:26;;;;;;;;;;;;;;;;;;;;;;17086:31:30;;16901:23;16923:1;583:25067:26;16901:23:30;;16806:82;583:25067:26;;;;;;16806:82:30;;16710:83;16751:1;583:25067:26;;;;;16710:83:30;;16613:84;16655:1;583:25067:26;;;;;16613:84:30;;16512:88;16556:2;583:25067:26;;;;;16512:88:30;;16407:92;16455:2;583:25067:26;;;;;16407:92:30;;16294:100;-1:-1:-1;16350:2:30;;-1:-1:-1;583:25067:26;;;16294:100:30;;26946:308;583:25067:26;;-1:-1:-1;;;27042:24:30;;583:25067:26;;;-1:-1:-1;;27098:25:30;;27094:39;;27193:35;27168:69;583:25067:26;;27232:3:30;583:25067:26;;;27168:69:30;:::i;:::-;26946:308;:::o;27094:39::-;27125:8;27132:1;27125:8;:::o;17955:8798::-;583:25067:26;;;;-1:-1:-1;;;18053:24:30;;583:25067:26;;;-1:-1:-1;;18109:25:30;;18105:39;;583:25067:26;18189:34:30;;18267:1;;18242:22;;-1:-1:-1;;;18242:22:30;;583:25067:26;;18242:26:30;18238:125;;17955:8798;18380:22;18384:18;18380:22;;583:25067:26;;18380:26:30;18376:125;;17955:8798;18518:22;18522:18;18518:22;;583:25067:26;;18518:26:30;18514:125;;17955:8798;18656:22;18660:18;18656:22;;583:25067:26;;18656:26:30;18652:125;;17955:8798;18794:21;18798:17;18794:21;;583:25067:26;;18794:25:30;18790:124;;17955:8798;18931:21;18935:17;18931:21;;583:25067:26;;18931:25:30;18927:124;;17955:8798;19068:21;19072:17;19068:21;;583:25067:26;;19068:25:30;19064:124;;17955:8798;19205:21;19209:17;19205:21;;583:25067:26;;19205:25:30;19201:124;;17955:8798;19342:20;19346:16;19342:20;;583:25067:26;;19342:24:30;19338:123;;17955:8798;19478:20;19482:16;19478:20;;583:25067:26;;19478:24:30;19474:123;;17955:8798;19614:20;19618:16;19614:20;;583:25067:26;;19614:24:30;19610:123;;17955:8798;19750:20;19754:16;19750:20;;583:25067:26;;19750:24:30;19746:123;;17955:8798;19886:19;19890:15;19886:19;;583:25067:26;;19886:23:30;19882:122;;17955:8798;20021:19;20025:15;20021:19;;583:25067:26;;20021:23:30;20017:122;;17955:8798;20156:19;20160:15;20156:19;;583:25067:26;;20156:23:30;20152:122;;17955:8798;20291:19;20295:15;20291:19;;583:25067:26;;20291:23:30;20287:122;;17955:8798;20426:18;20430:14;20426:18;;583:25067:26;;20426:22:30;20422:121;;17955:8798;20560:18;20564:14;20560:18;;583:25067:26;;20560:22:30;20556:121;;17955:8798;20694:18;20698:14;20694:18;;583:25067:26;;20694:22:30;20690:121;;17955:8798;20828:18;20832:14;20828:18;;583:25067:26;;20828:22:30;20824:121;;17955:8798;20962:17;20966:13;20962:17;;583:25067:26;;20962:21:30;20958:120;;17955:8798;21095:17;21099:13;21095:17;;583:25067:26;;21095:21:30;21091:120;;17955:8798;21228:17;21232:13;21228:17;;583:25067:26;;21228:21:30;21224:120;;17955:8798;21361:17;21365:13;21361:17;;583:25067:26;;21361:21:30;21357:120;;17955:8798;21494:16;21498:12;21494:16;;583:25067:26;;21494:20:30;21490:119;;17955:8798;21626:16;21630:12;21626:16;;583:25067:26;;21626:20:30;21622:119;;17955:8798;21758:16;21762:12;21758:16;;583:25067:26;;21758:20:30;21754:119;;17955:8798;21890:16;21894:12;21890:16;;583:25067:26;;21890:20:30;21886:119;;17955:8798;22022:15;22026:11;22022:15;;583:25067:26;;22022:19:30;22018:118;;17955:8798;22153:15;22157:11;22153:15;;583:25067:26;;22153:19:30;22149:118;;17955:8798;22284:15;22288:11;22284:15;;583:25067:26;;22284:19:30;22280:118;;17955:8798;22415:15;22419:11;22415:15;;583:25067:26;;22415:19:30;22411:118;;17955:8798;22546:14;22550:10;22546:14;;583:25067:26;;22546:18:30;22542:117;;17955:8798;22676:14;22680:10;22676:14;;583:25067:26;;22676:18:30;22672:117;;17955:8798;22806:14;22810:10;22806:14;;583:25067:26;;22806:18:30;22802:117;;17955:8798;22936:14;22940:10;22936:14;;583:25067:26;;22936:18:30;22932:117;;17955:8798;23066:13;23070:9;23066:13;;583:25067:26;;23066:17:30;23062:116;;17955:8798;23195:13;23199:9;23195:13;;583:25067:26;;23195:17:30;23191:116;;17955:8798;23324:13;23328:9;23324:13;;583:25067:26;;23324:17:30;23320:116;;17955:8798;23453:13;23457:9;23453:13;;583:25067:26;;23453:17:30;23449:116;;17955:8798;23582:12;23586:8;23582:12;;583:25067:26;;23582:16:30;23578:115;;17955:8798;23710:12;23714:8;23710:12;;583:25067:26;;23710:16:30;23706:115;;17955:8798;23838:12;23842:8;23838:12;;583:25067:26;;23838:16:30;23834:115;;17955:8798;23966:12;23970:8;23966:12;;583:25067:26;;23966:16:30;23962:115;;17955:8798;24094:11;24098:7;24094:11;;583:25067:26;;24094:15:30;24090:114;;17955:8798;24221:11;24225:7;24221:11;;583:25067:26;;24221:15:30;24217:114;;17955:8798;24348:11;24352:7;24348:11;;583:25067:26;;24348:15:30;24344:114;;17955:8798;24475:11;24479:7;24475:11;;583:25067:26;;24475:15:30;24471:114;;17955:8798;24602:10;24606:6;24602:10;;583:25067:26;;24602:14:30;24598:113;;17955:8798;24728:10;24732:6;24728:10;;583:25067:26;;24728:14:30;24724:113;;17955:8798;24854:10;24858:6;24854:10;;583:25067:26;;24854:14:30;24850:113;;17955:8798;24980:10;24984:6;24980:10;;583:25067:26;;24980:14:30;24976:113;;17955:8798;25106:9;25110:5;25106:9;;583:25067:26;;25106:13:30;25102:112;;17955:8798;25231:9;25235:5;25231:9;;583:25067:26;;25231:13:30;25227:112;;17955:8798;25356:9;25360:5;25356:9;;583:25067:26;;25356:13:30;25352:112;;17955:8798;25481:9;25485:5;25481:9;;583:25067:26;;25481:13:30;25477:112;;17955:8798;25610:4;;25606:8;;;;;583:25067:26;;25606:12:30;25602:111;;17955:8798;25730:8;25734:4;25730:8;;583:25067:26;;25730:12:30;25726:111;;17955:8798;25854:8;25858:4;25854:8;;583:25067:26;;25854:12:30;25850:111;;17955:8798;25978:8;25982:4;25978:8;;583:25067:26;;25978:12:30;25974:111;;17955:8798;26102:7;26106:3;26102:7;;583:25067:26;;26102:11:30;26098:110;;17955:8798;26225:7;26229:3;26225:7;;583:25067:26;;26225:11:30;26221:110;;17955:8798;26348:7;26352:3;26348:7;;583:25067:26;;26348:11:30;26344:110;;17955:8798;583:25067:26;26471:7:30;583:25067:26;;26471:11:30;26467:110;;17955:8798;583:25067:26;25734:4:30;583:25067:26;;;26617:2:30;583:25067:26;;;;26655:36:30;-1:-1:-1;;;;;26655:36:30;;583:25067:26;;;;17955:8798:30;:::o;26467:110::-;583:25067:26;;26520:35:30;583:25067:26;;;26467:110:30;;;;26344;26397:35;583:25067:26;;;;;;26344:110:30;;26221;583:25067:26;26274:35:30;583:25067:26;;;26221:110:30;;;26098;583:25067:26;26151:35:30;583:25067:26;;;26098:110:30;;;25974:111;583:25067:26;26028:35:30;583:25067:26;;;25974:111:30;;;25850;583:25067:26;25904:35:30;583:25067:26;;;25850:111:30;;;25726;583:25067:26;25780:35:30;583:25067:26;;;25726:111:30;;;25602;583:25067:26;25656:35:30;583:25067:26;;;25602:111:30;;;25477:112;583:25067:26;25532:35:30;583:25067:26;25571:3:30;583:25067:26;25477:112:30;;;25352;583:25067:26;25407:35:30;583:25067:26;25446:3:30;583:25067:26;25352:112:30;;;25227;583:25067:26;25282:35:30;583:25067:26;25321:3:30;583:25067:26;25227:112:30;;;25102;583:25067:26;25157:35:30;583:25067:26;25196:3:30;583:25067:26;25102:112:30;;;24976:113;583:25067:26;25032:35:30;583:25067:26;25071:3:30;583:25067:26;24976:113:30;;;24850;583:25067:26;24906:35:30;583:25067:26;24945:3:30;583:25067:26;24850:113:30;;;24724;583:25067:26;24780:35:30;583:25067:26;24819:3:30;583:25067:26;24724:113:30;;;24598;583:25067:26;24654:35:30;583:25067:26;24693:3:30;583:25067:26;24598:113:30;;;24471:114;583:25067:26;24528:35:30;583:25067:26;24567:3:30;583:25067:26;24471:114:30;;;24344;583:25067:26;24401:35:30;583:25067:26;24440:3:30;583:25067:26;24344:114:30;;;24217;583:25067:26;24274:35:30;583:25067:26;24313:3:30;583:25067:26;24217:114:30;;;24090;583:25067:26;24147:35:30;583:25067:26;24186:3:30;583:25067:26;24090:114:30;;;23962:115;583:25067:26;24020:35:30;583:25067:26;24059:3:30;583:25067:26;23962:115:30;;;23834;583:25067:26;23892:35:30;583:25067:26;23931:3:30;583:25067:26;23834:115:30;;;23706;583:25067:26;23764:35:30;583:25067:26;23803:3:30;583:25067:26;23706:115:30;;;23578;583:25067:26;23636:35:30;583:25067:26;23675:3:30;583:25067:26;23578:115:30;;;23449:116;583:25067:26;23508:35:30;583:25067:26;23547:3:30;583:25067:26;23449:116:30;;;23320;583:25067:26;23379:35:30;583:25067:26;23418:3:30;583:25067:26;23320:116:30;;;23191;583:25067:26;23250:35:30;583:25067:26;23289:3:30;583:25067:26;23191:116:30;;;23062;583:25067:26;23121:35:30;583:25067:26;23160:3:30;583:25067:26;23062:116:30;;;22932:117;583:25067:26;22992:35:30;583:25067:26;23031:3:30;583:25067:26;22932:117:30;;;22802;583:25067:26;22862:35:30;583:25067:26;22901:3:30;583:25067:26;22802:117:30;;;22672;583:25067:26;22732:35:30;583:25067:26;22771:3:30;583:25067:26;22672:117:30;;;22542;583:25067:26;22602:35:30;583:25067:26;22641:3:30;583:25067:26;22542:117:30;;;22411:118;583:25067:26;22472:35:30;583:25067:26;22511:3:30;583:25067:26;22411:118:30;;;22280;583:25067:26;22341:35:30;583:25067:26;22380:3:30;583:25067:26;22280:118:30;;;22149;583:25067:26;22210:35:30;583:25067:26;22249:3:30;583:25067:26;22149:118:30;;;22018;583:25067:26;22079:35:30;583:25067:26;22118:3:30;583:25067:26;22018:118:30;;;21886:119;583:25067:26;21948:35:30;583:25067:26;21987:3:30;583:25067:26;21886:119:30;;;21754;583:25067:26;21816:35:30;583:25067:26;21855:3:30;583:25067:26;21754:119:30;;;21622;583:25067:26;21684:35:30;583:25067:26;21723:3:30;583:25067:26;21622:119:30;;;21490;583:25067:26;21552:35:30;583:25067:26;21591:3:30;583:25067:26;21490:119:30;;;21357:120;583:25067:26;21420:35:30;583:25067:26;21459:3:30;583:25067:26;21357:120:30;;;21224;583:25067:26;21287:35:30;583:25067:26;21326:3:30;583:25067:26;21224:120:30;;;21091;583:25067:26;21154:35:30;583:25067:26;21193:3:30;583:25067:26;21091:120:30;;;20958;583:25067:26;21021:35:30;583:25067:26;21060:3:30;583:25067:26;20958:120:30;;;20824:121;583:25067:26;20888:35:30;583:25067:26;20927:3:30;583:25067:26;20824:121:30;;;20690;583:25067:26;20754:35:30;583:25067:26;20793:3:30;583:25067:26;20690:121:30;;;20556;583:25067:26;20620:35:30;583:25067:26;20659:3:30;583:25067:26;20556:121:30;;;20422;583:25067:26;20486:35:30;583:25067:26;20525:3:30;583:25067:26;20422:121:30;;;20287:122;583:25067:26;20352:35:30;583:25067:26;20391:3:30;583:25067:26;20287:122:30;;;20152;583:25067:26;20217:35:30;583:25067:26;20256:3:30;583:25067:26;20152:122:30;;;20017;583:25067:26;20082:35:30;583:25067:26;20121:3:30;583:25067:26;20017:122:30;;;19882;583:25067:26;19947:35:30;583:25067:26;19986:3:30;583:25067:26;19882:122:30;;;19746:123;583:25067:26;19812:35:30;583:25067:26;19851:3:30;583:25067:26;19746:123:30;;;19610;583:25067:26;19676:35:30;583:25067:26;19715:3:30;583:25067:26;19610:123:30;;;19474;583:25067:26;19540:35:30;583:25067:26;19579:3:30;583:25067:26;19474:123:30;;;19338;583:25067:26;19404:35:30;583:25067:26;19443:3:30;583:25067:26;19338:123:30;;;19201:124;583:25067:26;19268:35:30;583:25067:26;19307:3:30;583:25067:26;19201:124:30;;;19064;583:25067:26;19131:35:30;583:25067:26;19170:3:30;583:25067:26;19064:124:30;;;18927;583:25067:26;18994:35:30;583:25067:26;19033:3:30;583:25067:26;18927:124:30;;;18790;583:25067:26;18857:35:30;583:25067:26;18896:3:30;583:25067:26;18790:124:30;;;18652:125;583:25067:26;18720:35:30;583:25067:26;18759:3:30;583:25067:26;18652:125:30;;;18514;583:25067:26;18582:35:30;583:25067:26;18621:3:30;583:25067:26;18514:125:30;;;18376;583:25067:26;18444:35:30;583:25067:26;18483:3:30;583:25067:26;18376:125:30;;;18238;583:25067:26;;-1:-1:-1;18238:125:30;;18105:39;18136:8;;;18143:1;18136:8;:::o"},"methodIdentifiers":{"FEE_REINVEST_PERCENT()":"a2d07d24","MAX_LIQUIDITY_PARAM()":"8fbb4a82","MAX_OUTCOME()":"92b2849b","MAX_SHARE_TRADE()":"ed0c986f","MIN_LIQUIDITY_PARAM()":"c3883f17","PERCENT_DENOMINATOR()":"9e6c2959","SHARES_DECIMALS()":"474e19f2","b()":"4df7e3d0","buyShares(uint256,uint256)":"beebc5da","calculateMinimumInitialFunds(uint256,uint256)":"96211a97","claimPayout()":"e88499a9","closeMarket()":"c511ed5e","collectedFees()":"9003adfe","depositInitialFunds(uint256)":"89ff7069","estimateCost(uint256,uint256)":"510f5116","estimatePayment(uint256,uint256)":"53249a31","feePercent()":"7fd6f15c","feeRecipient()":"46904840","getOutcomeCount()":"7dc8f086","getOutcomeTotalShares(uint256)":"b03238f7","getPositionId(uint256,uint256)":"9aaff766","getPrice(uint256)":"e7572230","getUserShares(address,uint256)":"ddd9d045","i_numOutcomes()":"ca3bd569","initialFunds()":"d55e725b","marketClosed()":"48a5dec6","marketEndTime()":"69c41a74","marketId()":"6ed71ede","marketMakerFunds()":"90514320","marketSettled()":"6e77609e","oracle()":"7dc0d1d0","outcomes(uint256)":"eed2a147","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","payoutPerShare()":"e8467af6","positions()":"ba5b7982","renounceOwnership()":"715018a6","sellShares(uint256,uint256)":"2279a970","setOutcome(uint256)":"416e517e","title()":"4a79d50c","token()":"fc0c546a","tokenDecimals()":"3b97e856","transferOwnership(address)":"f2fde38b","unitScalingFactor()":"8f512bf4","unpause()":"3f4ba83a","updateOracle(address)":"1cb44dfc","winningOutcome()":"9b34ae03","withdrawFees()":"476343ee","withdrawRemainingFunds()":"ef86ce8e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_marketId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_outcomes\",\"type\":\"string[]\"},{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_b\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_feeRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_initialFunds\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_positionsAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FeesWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MarketClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"winningOutcome\",\"type\":\"uint256\"}],\"name\":\"OutcomeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PayoutClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outcomeIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"numShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"}],\"name\":\"SharesPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outcomeIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"numShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"}],\"name\":\"SharesSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FEE_REINVEST_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_LIQUIDITY_PARAM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_OUTCOME\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SHARE_TRADE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_LIQUIDITY_PARAM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENT_DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SHARES_DECIMALS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"b\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"outcomeIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numShares\",\"type\":\"uint256\"}],\"name\":\"buyShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_b\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numOutcomes\",\"type\":\"uint256\"}],\"name\":\"calculateMinimumInitialFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimPayout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closeMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectedFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositInitialFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"outcomeIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numShares\",\"type\":\"uint256\"}],\"name\":\"estimateCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"outcomeIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numShares\",\"type\":\"uint256\"}],\"name\":\"estimatePayment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOutcomeCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"outcomeIndex\",\"type\":\"uint256\"}],\"name\":\"getOutcomeTotalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_marketId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outcomeIndex\",\"type\":\"uint256\"}],\"name\":\"getPositionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"outcomeIndex\",\"type\":\"uint256\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"outcomeIndex\",\"type\":\"uint256\"}],\"name\":\"getUserShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_numOutcomes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketClosed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketMakerFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketSettled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"outcomes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalShares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payoutPerShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"contract PredictionMarketPositions\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"outcomeIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numShares\",\"type\":\"uint256\"}],\"name\":\"sellShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_winningOutcome\",\"type\":\"uint256\"}],\"name\":\"setOutcome\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"title\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unitScalingFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOracle\",\"type\":\"address\"}],\"name\":\"updateOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winningOutcome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawRemainingFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"buyShares(uint256,uint256)\":{\"details\":\"Transfers tokens from the user to the contract and mints new shares. Emits a {SharesPurchased} event.\",\"params\":{\"numShares\":\"The number of shares to purchase.\",\"outcomeIndex\":\"The index of the selected outcome.\"}},\"calculateMinimumInitialFunds(uint256,uint256)\":{\"details\":\"Calculates the minimum initial funds required: b * ln(num_outcomes)\",\"params\":{\"_b\":\"The LMSR liquidity parameter\",\"numOutcomes\":\"The number of outcomes in the market\"},\"returns\":{\"_0\":\"The minimum initial funds required\"}},\"claimPayout()\":{\"details\":\"Transfers tokens to the user based on their shareholding. Emits a {PayoutClaimed} event.\"},\"closeMarket()\":{\"details\":\"Can only be called after the market end time. Emits a {MarketClosed} event.\"},\"constructor\":{\"details\":\"Initializes the prediction market with the specified parameters.\",\"params\":{\"_b\":\"Liquidity parameter (LMSR constant) that affects share pricing dynamics.\",\"_duration\":\"Duration (in seconds) for the market to remain open.\",\"_feePercent\":\"Fee percentage applied to trades.\",\"_feeRecipient\":\"Address receiving the collected fees.\",\"_initialFunds\":\"Initial funds deposited into the market maker.\",\"_marketId\":\"Unique identifier for the market.\",\"_oracle\":\"Address of the oracle responsible for setting the outcome.\",\"_outcomes\":\"Array of outcome names for the market.\",\"_positionsAddress\":\"Address of the ERC1155 contract managing tokenized positions.\",\"_title\":\"Title of the prediction market.\",\"_tokenAddress\":\"Address of the ERC20 token used for trades.\"}},\"depositInitialFunds(uint256)\":{\"details\":\"Can only be called by the owner. Updates the market maker's available funds. Emits a {FundsDeposited} event.\",\"params\":{\"amount\":\"The amount of funds to deposit (in the ERC20 token's smallest unit).\"}},\"estimateCost(uint256,uint256)\":{\"params\":{\"numShares\":\"The number of shares to purchase.\",\"outcomeIndex\":\"The index of the selected outcome.\"},\"returns\":{\"_0\":\"The estimated cost of purchasing the shares.\"}},\"estimatePayment(uint256,uint256)\":{\"params\":{\"numShares\":\"The number of shares to sell.\",\"outcomeIndex\":\"The index of the selected outcome.\"},\"returns\":{\"_0\":\"The estimated payment for selling the shares.\"}},\"getOutcomeCount()\":{\"returns\":{\"_0\":\"The number of outcomes.\"}},\"getOutcomeTotalShares(uint256)\":{\"params\":{\"outcomeIndex\":\"The index of the outcome.\"},\"returns\":{\"_0\":\"The total shares for the outcome.\"}},\"getPositionId(uint256,uint256)\":{\"params\":{\"_marketId\":\"The ID of the market.\",\"outcomeIndex\":\"The index of the outcome.\"},\"returns\":{\"_0\":\"The unique position ID.\"}},\"getPrice(uint256)\":{\"details\":\"Uses the LMSR formula to calculate the price based on current share quantities. The price is normalized to the precision defined by SHARES_DECIMALS.\",\"params\":{\"outcomeIndex\":\"The index of the selected outcome.\"},\"returns\":{\"_0\":\"The price of a single share (scaled to match SHARES_DECIMALS precision).\"}},\"getUserShares(address,uint256)\":{\"details\":\"Uses the PredictionMarketPositions contract to retrieve the balance.\",\"params\":{\"outcomeIndex\":\"The index of the outcome.\",\"user\":\"The address of the user.\"},\"returns\":{\"_0\":\"The user's share balance for the specified outcome.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Can only be called by the owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"sellShares(uint256,uint256)\":{\"details\":\"Burns the user's shares and transfers tokens back to the user. Emits a {SharesSold} event.\",\"params\":{\"numShares\":\"The number of shares to sell.\",\"outcomeIndex\":\"The index of the selected outcome.\"}},\"setOutcome(uint256)\":{\"details\":\"Can only be called by the oracle and after the market is closed. Emits an {OutcomeSet} event.\",\"params\":{\"_winningOutcome\":\"The index of the winning outcome.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Can only be called by the owner.\"},\"updateOracle(address)\":{\"details\":\"Can only be called by the owner.\",\"params\":{\"_newOracle\":\"The new oracle address.\"}},\"withdrawFees()\":{\"details\":\"Can only be called by the fee recipient. Emits a {FeesWithdrawn} event.\"},\"withdrawRemainingFunds()\":{\"details\":\"Can only be called by the owner and after the market is settled. Transfers all remaining funds in the market maker to the fee recipient. Emits no specific event; uses the token transfer to signal success.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"buyShares(uint256,uint256)\":{\"notice\":\"Purchases shares for a specific outcome.\"},\"claimPayout()\":{\"notice\":\"Claims the payout for a user holding shares of the winning outcome.\"},\"closeMarket()\":{\"notice\":\"Closes the market when the end time is reached.\"},\"depositInitialFunds(uint256)\":{\"notice\":\"Deposits additional funds into the market maker.\"},\"estimateCost(uint256,uint256)\":{\"notice\":\"Estimates the cost of purchasing a given number of shares.\"},\"estimatePayment(uint256,uint256)\":{\"notice\":\"Estimates the payment for selling a given number of shares.\"},\"getOutcomeCount()\":{\"notice\":\"Gets the total number of outcomes in the market.\"},\"getOutcomeTotalShares(uint256)\":{\"notice\":\"Gets the total shares for a specific outcome.\"},\"getPositionId(uint256,uint256)\":{\"notice\":\"Gets the unique position ID for a user in a specific outcome.\"},\"getPrice(uint256)\":{\"notice\":\"Gets the current price of shares for a specific outcome.\"},\"getUserShares(address,uint256)\":{\"notice\":\"Gets the user's share balance for a specific outcome.\"},\"pause()\":{\"notice\":\"Pauses the contract.\"},\"sellShares(uint256,uint256)\":{\"notice\":\"Sells shares for a specific outcome.\"},\"setOutcome(uint256)\":{\"notice\":\"Sets the winning outcome for the market.\"},\"unpause()\":{\"notice\":\"Unpauses the contract.\"},\"updateOracle(address)\":{\"notice\":\"Updates the oracle address.\"},\"withdrawFees()\":{\"notice\":\"Withdraws collected fees to the fee recipient.\"},\"withdrawRemainingFunds()\":{\"notice\":\"Withdraws any remaining funds from the market maker.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/core/LMSRPredictionMarket.sol\":\"LMSRPredictionMarket\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x22933f0f4897ff70a991c3baebfbc2574fd052dc4bae7fcafec45b07c1f23dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13674cffad18cec55f013056496d7d2e3a34bd7bdbe23d1ef0c7588088c73367\",\"dweb:/ipfs/QmcBkrwxNvCApG48Gyby2L6qCNtuhaFncGpbJt3zuukTmu\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"src/core/LMSRPredictionMarket.sol\":{\"keccak256\":\"0xd6f03b699f461b0e773cd986a3dc20cc3e898620da43dcecf540178308390a01\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd7fe011a123edd8105c4d74e60df5f9f16b78c6c617553a2f3ebd34b15ae409\",\"dweb:/ipfs/QmRef31x9EhL6GQtqWcbkJGWpD3SURS4kQ5vRSSMnePp4b\"]},\"src/core/PredictionMarketPositions.sol\":{\"keccak256\":\"0x9ebbbf377f038ef5f16a93dfa6c9e5a4197c32531d65fdb5ec5f592a7e20b50f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b00670f98fe8f76b446fbc203f5a9be83a9391510ae1ccb49113086161335405\",\"dweb:/ipfs/QmTX9DdzyrGXGume61E4xXLqGyQHuwe5Emm1f7WEYkPV6r\"]},\"src/utils/ABDKMath64x64.sol\":{\"keccak256\":\"0x7a0e725ae9f024d8666abb5f00f9f406745cb464a9165a26ff69fcec9ee28b67\",\"license\":\"BSD-4-Clause\",\"urls\":[\"bzz-raw://a4a24922e21ea082a0450f7860da4d234f0a9a8997f08262d2ea46413b9f613b\",\"dweb:/ipfs/QmVhkvPEFH722LDZqsyndj7M4zvnoNh5dHv3LwqVmQVePs\"]}},\"version\":1}"}},"src/core/MarketFactory.sol":{"MarketFactory":{"abi":[{"inputs":[{"internalType":"address","name":"_positionsAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"marketAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FundsTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"marketAddress","type":"address"},{"indexed":false,"internalType":"string","name":"title","type":"string"}],"name":"MarketCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"marketAddress","type":"address"}],"name":"MinterAuthorized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"marketAddress","type":"address"}],"name":"RolesGranted","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"activeMarkets","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string[]","name":"outcomes","type":"string[]"},{"internalType":"address","name":"oracle","type":"address"},{"internalType":"uint256","name":"b","type":"uint256"},{"internalType":"uint256","name":"duration","type":"uint256"},{"internalType":"uint256","name":"feePercent","type":"uint256"},{"internalType":"address","name":"feeRecipient","type":"address"},{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"uint256","name":"initialFunds","type":"uint256"}],"name":"createMarket","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getActiveMarkets","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"marketTitles","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"positions","outputs":[{"internalType":"contract PredictionMarketPositions","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080346100c657601f61537b38819003918201601f19168301916001600160401b038311848410176100cb578084926020946040528339810103126100c657516001600160a01b0390818116908190036100c65733156100ad5760005460018060a01b0319903382821617600055604051933391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3600254161760025561529990816100e28239f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060405260043610156200001357600080fd5b6000803560e01c80633adfe6d01462000b21578063715018a61462000ac35780638da5cb5b1462000a9a57806397271c141462000304578063a5e973c3146200023e578063ba5b79821462000213578063c3a811fe14620001175763f2fde38b146200007e57600080fd5b346200011457602036600319011262000114576200009b62000c62565b620000a562000cf8565b6001600160a01b03908116908115620000fb57600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b604051631e4fbdf760e01b815260048101849052602490fd5b80fd5b503462000114576020806003193601126200020f576001600160a01b036200013e62000c62565b1682526003815260408220604051838194908354906200015e8262000c79565b94858552600192878482169182600014620001e9575050600114620001a9575b5050506200018f9250038362000be3565b620001a560405192828493845283019062000cb6565b0390f35b869350819291528282205b858310620001d05750506200018f93508201013880806200017e565b80548389018501528794508693909201918101620001b4565b9350945050506200018f94915060ff191682840152151560051b8201013880806200017e565b5080fd5b503462000114578060031936011262000114576002546040516001600160a01b039091168152602090f35b503462000114578060031936011262000114576040518091600190815493848452602080940180958484527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf690845b818110620002e75750505081620002a691038262000be3565b6040519380850191818652518092526040850195925b828110620002ca5785870386f35b83516001600160a01b0316875295810195928101928401620002bc565b82546001600160a01b03168452928701929186019186016200028d565b50346200011457610140366003190112620001145760243567ffffffffffffffff81116200020f576200033c90369060040162000c06565b60443567ffffffffffffffff8111620008125736602382011215620008125780600401359267ffffffffffffffff841162000a86578360051b916040519462000389602085018762000be3565b85526020850192810160240183368211620008b75760248301905b82821062000a525750506064359150506001600160a01b03811681036200020f5760e435926001600160a01b0384168403620008125761010435936001600160a01b0385168503620008b75760018060a01b036002541690604051938461453e81011067ffffffffffffffff61453e8701111762000a3e5761453e62000d26863960043561453e8601908152610160602082018190526200044791018962000cb6565b9861453e86018a03604061453e8801015251808a5260208a019060208160051b8c0101959188905b82821062000a0e575050506001600160a01b0391821661453e87016060810191909152608435608082015260a43560a082015260c43560c082015292821660e08401525086166101008201526101243561012082015261014001528190039082f0801562000a015760018060a01b031660015468010000000000000000811015620009ed5780600162000506920160015562000b6a565b8154600391821b84811b6001600160a01b0390911b1990911617909155818352602052604082208451949067ffffffffffffffff8611620009d9576200054d815462000c79565b601f81116200098f575b508394958394506020601f8211600114620008ff5791817f89e2b56dfb4365b59dc3a37aaf819ce4937e48be6ab23686edcecacf0124ae039492620005c7948991620008f3575b508160011b916000199060031b1c19161790555b60405191829160208352602083019062000cb6565b0390a260025460405163d539139360e01b81526001600160a01b039091169390602081600481885afa90811562000846578491620008bb575b50843b15620008b757604051632f2ff15d60e01b80825260048201929092523060248201529484908690604490829084905af180156200084657620008a0575b83945060018060a01b03600254169060405163282c51f360e01b8152602081600481865afa9081156200089557869162000855575b50823b15620008515760405191825260048201523060248201529084908290604490829084905af1908115620008465784916200082a575b505060405190827f92199b96df436a113d14e9952bea656a2e2e7fbc271b2141f2c42002e0e2b85b8580a2610124356200073a575b5050803b15620007375781809160246040518094819363f2fde38b60e01b83523360048401525af180156200072c57620007195750f35b620007249062000bb8565b620001145780f35b6040513d84823e3d90fd5b50fd5b6323b872dd60e01b82523360048301526024820183905261012435604483015291929091602091839160649183916001600160a01b03165af19081156200081f578391620007d9575b5015620007945781908380620006e2565b60405162461bcd60e51b815260206004820152601c60248201527f496e697469616c2066756e64207472616e73666572206661696c6564000000006044820152606490fd5b90506020813d60201162000816575b81620007f76020938362000be3565b81010312620008125751801515810362000812578362000783565b8280fd5b3d9150620007e8565b6040513d85823e3d90fd5b620008359062000bb8565b62000842578285620006ad565b5050fd5b6040513d86823e3d90fd5b8580fd5b9550506020853d6020116200088c575b81620008746020938362000be3565b8101031262000887578594518762000675565b600080fd5b3d915062000865565b6040513d88823e3d90fd5b929093620008ae9062000bb8565b91839062000640565b8380fd5b90506020813d602011620008ea575b81620008d96020938362000be3565b81010312620008b757518562000600565b3d9150620008ca565b90508301518a6200059e565b8287526020872090601f198316885b81811062000973575092620005c79492600192827f89e2b56dfb4365b59dc3a37aaf819ce4937e48be6ab23686edcecacf0124ae0398961062000959575b5050811b019055620005b2565b85015160001960f88460031b161c191690558a806200094c565b828701518455889750600190930192602092830192016200090e565b81855260208520601f880160051c81019160208910620009ce575b601f0160051c01905b818110620009c2575062000557565b858155600101620009b3565b9091508190620009aa565b634e487b7160e01b84526041600452602484fd5b634e487b7160e01b83526041600452602483fd5b50604051903d90823e3d90fd5b9091929660208062000a2f8f93600194601f199082030186528b5162000cb6565b9901920192019092916200046f565b634e487b7160e01b86526041600452602486fd5b813567ffffffffffffffff8111620008515760209162000a7a83926024369189010162000c06565b815201910190620003a4565b634e487b7160e01b81526041600452602490fd5b50346200011457806003193601126200011457546040516001600160a01b039091168152602090f35b5034620001145780600319360112620001145762000ae062000cf8565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5034620001145760203660031901126200011457600435906001548210156200011457602062000b518362000b6a565b905460405160039290921b1c6001600160a01b03168152f35b60015481101562000ba25760016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60190600090565b634e487b7160e01b600052603260045260246000fd5b67ffffffffffffffff811162000bcd57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111762000bcd57604052565b81601f82011215620008875780359067ffffffffffffffff821162000bcd576040519262000c3f601f8401601f19166020018562000be3565b828452602083830101116200088757816000926020809301838601378301015290565b600435906001600160a01b03821682036200088757565b90600182811c9216801562000cab575b602083101462000c9557565b634e487b7160e01b600052602260045260246000fd5b91607f169162000c89565b919082519283825260005b84811062000ce3575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520162000cc1565b6000546001600160a01b0316330362000d0d57565b60405163118cdaa760e01b8152336004820152602490fdfe6101806040523462000dda5760006200453e908138038092620000258261018062000ddf565b61018039610160821262000dd757610180516101a0516001600160401b03811162000dd3576200005f908461018001906101800162000e03565b6101c0516001600160401b03811162000dcf57610180850161019f8201121562000dcf57610180810151946001600160401b03861162000dbb578560051b9060405196620000b1602084018962000ddf565b8752602087019061018081016101a0858501011162000db7576101a08401915b6101a085850101831062000d76575050505050620000f460606101800162000e7a565b610200516102205161024051916200010e61026062000e7a565b936200011c61028062000e7a565b6102a05197909690620001316102c062000e7a565b98331562000d5d578a54336001600160a01b0319821681178d55604051916001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08e80a3600180556002805460ff1916905560098c9055600a8c9055600b8c90556001600160a01b038a161562000d1b57506001600160a01b0388161562000cd6578b511562000c9157841562000c3457851562000bef578b51801515908162000be2575b501562000b9d57612710851162000b3e576064851062000ad3578b51600181111562000a8e5760016001603f1b03811162000a8a578b8160401b600f0b131562000a8a578b604082901b600f0b6801000000000000000081121562000a77575b80640100000000600292121562000a6a575b6201000081121562000a5d575b61010081121562000a50575b601081121562000a43575b600481121562000a37575b121562000a2e575b908c8792603f19810160401b9260401b600f0b90607f031b678000000000000000915b821362000a0c575050906fb17217f7d1cf79abc9e3b39803f2f6af620002d692600f0b0260801d62000ecb565b60405163313ce56760e01b81529091906020816004816001600160a01b038f165afa90811562000a01579062000315918e91620009dd575b5062000eaa565b91828102928184041490151715620009c957106200096d5760c0528051906001600160401b03821162000959576007548060011c9060018116156200094e575b60011660208210146200093a579081601f849311620008da575b50602090601f83116001146200085e578b9262000852575b50508160011b916000199060031b1c1916176007555b600880546001600160a01b0319166001600160a01b039290921691909117905560805242808201106200083e57420160049081556005805461ffff1916905560e091909152610100919091526001600160a01b0390911660a081905284516101605260405163313ce56760e01b8152929160209184919082905afa91821562000833579060ff92918492620007fb575b50610120829052600c80546001600160a01b0319166001600160a01b0392909216919091179055168015620007e557506200046e60ff610120511662000ebc565b600d555b806200048460ff610120511662000eaa565b91620007d157506101405260005b8151811015620006e957600581901b82016020015160408051919082016001600160401b03811183821017620006bd576040528152600060208201526003549068010000000000000000821015620006bd576001820180600355821015620006d3576003600052805180517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b92916001600160401b038211620006bd578460011b840154600181811c91168015620006b2575b60208210146200069c57601f81116200064e575b50602090601f8311600114620005d15791806001959492602094600092620005c5575b5050600019600383901b1c191690851b1785851b8401555b015192821b0101556000198114620005af5760010162000492565b634e487b7160e01b600052601160045260246000fd5b0151905038806200057c565b908560011b850160005260206000209160005b601f1985168110620006355750926001959492869260209583601f198116106200061b575b505050811b0185851b84015562000594565b015160001960f88460031b161c1916905538808062000609565b91926020600181928685015181550194019201620005e4565b8560011b85016000526020600020601f840160051c81016020851062000694575b601f830160051c820181106200068757505062000559565b600081556001016200066f565b50806200066f565b634e487b7160e01b600052602260045260246000fd5b90607f169062000545565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6040516135fd908162000f21823960805181818161096901528181611520015281816115f9015281816116600152612588015260a05181818161025c015281816103ac0152818161072701528181610dbf015281816112270152818161184e0152611d27015260c0518181816105b701528181610a6d01528181610e1b015281816114500152611b34015260e051818181610d2f01528181611373015281816115890152611c1c01526101005181818161036e015281816117d8015261193a01526101205181611abd015261014051818181610667015261090b01526101605181610bb90152f35b634e487b7160e01b81526011600452602490fd5b620007f290820362000ebc565b600d5562000472565b6200082391925060203d6020116200082b575b6200081a818362000ddf565b81019062000e8f565b90386200042d565b503d6200080e565b6040513d85823e3d90fd5b634e487b7160e01b86526011600452602486fd5b01519050388062000387565b60078c528b93506000805160206200451e83398151915291905b601f1984168510620008be576001945083601f19811610620008a4575b505050811b016007556200039d565b015160001960f88460031b161c1916905538808062000895565b8181015183556020948501946001909301929091019062000878565b60078c529091506000805160206200451e833981519152601f840160051c81016020851062000932575b90849392915b8d601f840160051c8301821062000924575050506200036f565b81558594506001016200090a565b508062000904565b634e487b7160e01b8b52602260045260248bfd5b90607f169062000355565b634e487b7160e01b8a52604160045260248afd5b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c2066756e6473206d757374206578636565642062202a206c6e60448201526d286e756d5f6f7574636f6d65732960901b6064820152608490fd5b634e487b7160e01b8c52601160045260248cfd5b620009fa915060203d6020116200082b576200081a818362000ddf565b386200030e565b6040513d8f823e3d90fd5b8091935002908160ff1c9182607f011c918302019160011d8792918e620002a9565b60010162000286565b91810191811d6200027e565b6004928301921d62000273565b6008928301921d62000268565b6010928301921d6200025c565b6020928301921d6200024f565b506040905081811b600f0b811d6200023d565b8b80fd5b60405162461bcd60e51b815260206004820152601e60248201527f4174206c656173742074776f206f7574636f6d657320726571756972656400006044820152606490fd5b60405162461bcd60e51b815260206004820152603460248201527f4c697175696469747920706172616d6574657220276227206d7573742062652060448201527f67726561746572207468616e206d696e696d756d0000000000000000000000006064820152608490fd5b60405162461bcd60e51b815260206004820152603160248201527f4c697175696469747920706172616d6574657220276227206578636565647320604482015270746865206c696d6974206d6178696d756d60781b6064820152608490fd5b60405162461bcd60e51b815260206004820152601a60248201527f496e76616c6964206e756d626572206f66206f7574636f6d65730000000000006044820152606490fd5b60059150111538620001dd565b60405162461bcd60e51b815260206004820152601960248201527f4475726174696f6e206d75737420626520706f736974697665000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152602f60248201527f4c697175696469747920706172616d657465722062206d75737420626520677260448201526e6561746572207468616e207a65726f60881b6064820152608490fd5b60405162461bcd60e51b815260206004820152601d60248201527f4174206c65617374206f6e65206f7574636f6d652072657175697265640000006044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f496e76616c69642066656520726563697069656e7420616464726573730000006044820152606490fd5b62461bcd60e51b815260206004820152601560248201527f496e76616c696420746f6b656e206164647265737300000000000000000000006044820152606490fd5b604051631e4fbdf760e01b8152600481018c9052602490fd5b82516001600160401b03811162000db3576020809262000da58293838761018001918b61018001010162000e03565b8152019301929050620000d1565b8880fd5b8680fd5b634e487b7160e01b85526041600452602485fd5b8380fd5b8280fd5b80fd5b600080fd5b601f909101601f19168101906001600160401b03821190821017620006bd57604052565b919080601f8401121562000dda578251906001600160401b038211620006bd576040519160209162000e3f601f8301601f191684018562000ddf565b81845282828701011162000dda5760005b81811062000e6657508260009394955001015290565b858101830151848201840152820162000e50565b51906001600160a01b038216820362000dda57565b9081602091031262000dda575160ff8116810362000dda5790565b60ff16604d8111620005af57600a0a90565b604d8111620005af57600a0a90565b811562000f1957600f0b60009081811262000f15576001600160801b038316810260401c9260801c026001600160c01b03811162000f155760401b908219821162000dd757500190565b5080fd5b505060009056fe6040608081526004908136101561001557600080fd5b600091823560e01c9081631cb44dfc14611efc5781632279a97014611ae15781633b97e85614611aa35781633f4ba83a14611a39578163416e517e146119695781634690484014611925578163474e19f21461190a578163476343ee146117bc57816348a5dec6146117985781634a79d50c146116835781634df7e3d014611648578163510f5116146115b557816353249a31146114dc5781635c975abb146114b857816369c41a741461149a5781636e77609e146114735781636ed71ede14611438578163715018a6146113de5781637dc0d1d0146113b55781637dc8f086146113965781637fd6f15c1461135b5781638456cb591461130057816389ff7069146111d85781638da5cb5b146111b05781638f512bf4146111915781638fbb4a821461056e5781639003adfe14611172578163905143201461115357816392b2849b1461113757816396211a97146110b35781639aaff766146110565781639b34ae03146110375781639e6c295914610c65578163a2d07d241461101b578163b03238f714610fe7578163ba5b798214610fbe578163beebc5da14610c6a578163c3883f1714610c65578163c511ed5e14610bdc578163ca3bd56914610ba1578163d55e725b14610b82578163ddd9d04514610a42578163e75722301461092e578163e8467af6146108f3578163e88499a914610573578163ed0c986f1461056e578163eed2a1471461045d578163ef86ce8e14610324578163f2fde38b1461028f575063fc0c546a1461024957600080fd5b3461028b578160031936011261028b57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fd5b905034610320576020366003190112610320576102aa611f88565b906102b36120c9565b6001600160a01b0391821692831561030a575050600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b9190503461032057826003193601126103205761033f6120c9565b61035060ff60055460081c1661238c565b6009805490849055815163a9059cbb60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016848201908152602081810193909352909190829081906040010381877f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1908115610453578491610425575b50156103ee578280f35b906020606492519162461bcd60e51b8352820152601160248201527015da5d1a191c985dd85b0819985a5b1959607a1b6044820152fd5b610446915060203d811161044c575b61043e8183611fde565b810190612221565b386103e4565b503d610434565b82513d86823e3d90fd5b82843461056b576020908160031936011261056b5783359060035482101561056b575061048990612079565b509282519360009181549260019380851c92858216908115610561575b878510821461054e5750838952889291879082156105315750506001146104f1575b6104d492500386611fde565b01546104e98351948486958652850190612000565b918301520390f35b505081600052858480600020856000915b8583106105185750506104d493508201016104c8565b80919294505483858c0101520191018590858993610502565b60ff1916848201526104d494151560051b84010191506104c89050565b634e487b7160e01b845260229052602483fd5b93607f16936104a6565b80fd5b612040565b9190503461032057826003193601126103205761058e61229b565b61059661227d565b6105a760ff60055460081c1661238c565b60018060a01b039081600c5416927f0000000000000000000000000000000000000000000000000000000000000000926006548351946318896f4d60e11b8652808487015281602487015260209586816044818b5afa80156108ba5787908a906108c4575b8751627eeac760e11b81523388820190815260208101929092529250829081906040015b03818b5afa9081156108ba578991610888575b50801561084e5780600161065685612079565b50015410610813579088929161068c7f0000000000000000000000000000000000000000000000000000000000000000826121e1565b986106a58a6009546106a0828210156122be565b612214565b600955803b1561080f578751636f3df85160e11b815233888201908152602081019490945260408401949094526060830191909152839183919082908490829060800103925af18015610805576107ed575b5050825163a9059cbb60e01b815233838201908152602081018790529091859183919082908a90829060400103927f0000000000000000000000000000000000000000000000000000000000000000165af19081156107e35786916107c6575b501561078f5750907fec68461f5d4cc45c89e914cb8826a966c73dd35e5f97815ece0a01ffa4a025a691519283523392a26001805580f35b82606492519162461bcd60e51b83528201526013602482015272151bdad95b881c185e5bdd5d0819985a5b1959606a1b6044820152fd5b6107dd9150843d861161044c5761043e8183611fde565b38610757565b83513d88823e3d90fd5b6107f690611fb4565b6108015785386106f7565b8580fd5b85513d84823e3d90fd5b8480fd5b855162461bcd60e51b81528086018890526015602482015274496e76616c696420736861726520616d6f756e747360581b6044820152606490fd5b855162461bcd60e51b815280860188905260146024820152734e6f2077696e6e696e677320746f20636c61696d60601b6044820152606490fd5b90508681813d83116108b3575b61089f8183611fde565b810103126108ae575138610643565b600080fd5b503d610895565b86513d8b823e3d90fd5b5081813d83116108ec575b6108d98183611fde565b810103126108ae5786610630915161060c565b503d6108cf565b50503461028b578160031936011261028b57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b905034610320576020366003190112610320573561095960035491610954838210612134565b612079565b506001809101549061099461098f7f00000000000000000000000000000000000000000000000000000000000000008094612755565b6129d6565b92859286925b828410610a0a5750505050600f0b908115610a0657821b60170b059160016001607f1b0319831215806109f5575b1561056b575067ffffffffffffffff6109ed6109e8602094600f0b6126e3565b61267f565b169051908152f35b5060016001607f1b038313156109c8565b8380fd5b90919293610a34610a3a91610a2e61098f8686610a268b612079565b500154612755565b9061269a565b94612504565b92919061099a565b83833461028b578060031936011261028b57610a5c611f88565b600c5482516318896f4d60e11b81527f000000000000000000000000000000000000000000000000000000000000000086820152602480359082015260209590916001600160a01b0316908683604481855afa928315610b785790879392918793610b43575b508551627eeac760e11b81526001600160a01b0390951690850190815260208101929092528391829081906040015b03915afa928315610b385792610b09575b5051908152f35b9091508281813d8311610b31575b610b218183611fde565b810103126108ae57519083610b02565b503d610b17565b8251903d90823e3d90fd5b8481959294503d8311610b71575b610b5b8183611fde565b810103126108ae57915186929091610af1610ac2565b503d610b51565b85513d88823e3d90fd5b50503461028b578160031936011261028b57602090600a549051908152f35b50503461028b578160031936011261028b57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b9190503461032057826003193601126103205781544210610c2c5782600160ff1960055416176005557f0b5f6bf058282d5cc003efc735b9ee453bbd7f9bef4c6db6300d095f3eefac288180a180f35b906020606492519162461bcd60e51b8352820152601360248201527213585c9ad95d081b9bdd081bdd995c881e595d606a1b6044820152fd5b61205d565b9190503461032057610c7b36611f9e565b610c8693919361229b565b610c8e61227d565b610c9d60ff60055416156120f5565b610caa6003548510612134565b8015610f7b57612710811015610f3857610d27610d146109e8610d00610cd6610cd1612513565b612579565b6001610ce18a612079565b5001610cee878254612172565b9055610cfb610cd1612513565b6126bf565b610d0f8982600f0b1215612195565b6126e3565b67ffffffffffffffff600d5491166121e1565b926064610d547f0000000000000000000000000000000000000000000000000000000000000000866121e1565b04936032850285810460321486151715610f2557606490049087610d82610d7b8489612214565b9783612172565b84516323b872dd60e01b8152338189019081523060208201526040810183905291979181906060016001600160a01b0392916020918391900381877f000000000000000000000000000000000000000000000000000000000000000087165af1908115610f1b5790610dfb918591610efd575b50612239565b600c5416803b15610320578551632991fa3b60e21b8152339281019283527f00000000000000000000000000000000000000000000000000000000000000006020840152604083018b905260608301889052918391839182908490829060800103925af1801561080557610edf575b50507f0ea2cc1a2a0fcfecef8b5ff9be41f8c0ca3770265a060b00de53118f88c91dfa95610eaa610ea2610ed59594610eb594612172565b600954612172565b600955600b54612172565b600b55519283923396846040919493926060820195825260208201520152565b0390a26001805580f35b610eeb90949394611fb4565b610ef9578738939293610e6a565b8780fd5b610f15915060203d811161044c5761043e8183611fde565b38610df5565b87513d86823e3d90fd5b634e487b7160e01b885260118552602488fd5b506020606492519162461bcd60e51b8352820152601a60248201527f5368617265207472616465206c696d69742065786365656465640000000000006044820152fd5b506020606492519162461bcd60e51b8352820152601b60248201527f4d75737420627579206174206c65617374206f6e6520736861726500000000006044820152fd5b50503461028b578160031936011261028b57600c5490516001600160a01b039091168152602090f35b82843461056b57602036600319011261056b575060016110116020933561095460035482106123d1565b5001549051908152f35b50503461028b578160031936011261028b576020905160328152f35b50503461028b578160031936011261028b576020906006549051908152f35b9050823461056b575061106836611f9e565b8351906020820192835284820152838152606081019281841067ffffffffffffffff85111761109e575082602094525190208152f35b604190634e487b7160e01b6000525260246000fd5b9050823461056b57506110c536611f9e565b909160018211156110f4576020846110ed856110e86110e387612667565b6128c5565b612708565b9051908152f35b606490602085519162461bcd60e51b8352820152601e60248201527f4174206c656173742074776f206f7574636f6d657320726571756972656400006044820152fd5b50503461028b578160031936011261028b576020905160058152f35b50503461028b578160031936011261028b576020906009549051908152f35b50503461028b578160031936011261028b57602090600b549051908152f35b50503461028b578160031936011261028b57602090600d549051908152f35b50503461028b578160031936011261028b57905490516001600160a01b039091168152602090f35b919050346103205760209081600319360112610a06578235926111f96120c9565b81516323b872dd60e01b815233828201908152306020820152604081018690528490829081906060010381897f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19081156107e35786916112e3575b50156112a25750907f543ba50a5eec5e6178218e364b1d0f396157b3c8fa278522c2cb7fd99407d4749161129584600954612172565b600955519283523392a280f35b82606492519162461bcd60e51b8352820152601c60248201527f496e697469616c2066756e64207472616e73666572206661696c6564000000006044820152fd5b6112fa9150843d861161044c5761043e8183611fde565b3861125f565b50503461028b578160031936011261028b5760207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589161133e6120c9565b61134661227d565b600160ff19600254161760025551338152a180f35b50503461028b578160031936011261028b57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b50503461028b578160031936011261028b576020906003549051908152f35b50503461028b578160031936011261028b5760085490516001600160a01b039091168152602090f35b833461056b578060031936011261056b576113f76120c9565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461028b578160031936011261028b57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b50503461028b578160031936011261028b5760209060ff60055460081c1690519015158152f35b90503461032057826003193601126103205760209250549051908152f35b50503461028b578160031936011261028b5760209060ff6002541690519015158152f35b50503461028b576020906110ed611582610d146109e8610d0f61157c61150136611f9e565b919061151060035482106123d1565b61151b831515612415565b6115467f00000000000000000000000000000000000000000000000000000000000000001515612474565b61154e612513565b9061157661156f61155e84612579565b9561156984866124d8565b51612214565b91836124d8565b52612579565b906126bf565b60646115ae7f0000000000000000000000000000000000000000000000000000000000000000836121e1565b0490612172565b50503461028b576020906110ed611582610d146109e8610d0f610cfb6115da36611f9e565b91906115e960035482106123d1565b6115f4831515612415565b61161f7f00000000000000000000000000000000000000000000000000000000000000001515612474565b611627612513565b9061157661156f61163784612579565b9561164284866124d8565b51612172565b50503461028b578160031936011261028b57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b82843461056b578060031936011261056b575080519060009060075491600183811c9080851694851561178e575b602095868410811461177b578388528794939291879082156117595750506001146116fc575b50506116f892916116e9910385611fde565b51928284938452830190612000565b0390f35b9085925060076000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688916000925b82841061174157505050820101816116e96116d7565b8054848a01860152889550879490930192810161172b565b60ff19168682015292151560051b850190920192508391506116e990506116d7565b634e487b7160e01b855260228952602485fd5b91607f16916116b1565b50503461028b578160031936011261028b5760209060ff6005541690519015158152f35b9050346103205782600319360112610320576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008181169391929061184a9060209061181033881461230a565b600b5495869189600b5589875180968195829463a9059cbb60e01b84528a840160209093929193604081019460018060a01b031681520152565b03927f0000000000000000000000000000000000000000000000000000000000000000165af19081156107e35786916118ec575b50156118b257507fc0819c13be868895eb93e40eaceb96de976442fa1d404e5c55f14bb65a8c489a9160209151908152a280f35b6020606492519162461bcd60e51b83528201526015602482015274119959481dda5d1a191c985dd85b0819985a5b1959605a1b6044820152fd5b611904915060203d811161044c5761043e8183611fde565b3861187e565b50503461028b578160031936011261028b5751908152602090f35b50503461028b578160031936011261028b57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b919050346103205760203660031901126103205781359161199560018060a01b0360085416331461230a565b6005549160ff831615611a02575050806119ce60ff6101009360081c16156119bc81612347565b6119c96003548610612134565b612347565b8260065561ff001916176005557fbdb6af8caa3a0b8c130fd2ab4c4930e3fd8987c9730340729078e256bbc4b5438280a280f35b906020606492519162461bcd60e51b8352820152601160248201527026b0b935b2ba1039ba34b6361037b832b760791b6044820152fd5b905034610320578260031936011261032057611a536120c9565b6002549060ff821615611a95575060ff1916600255513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b8251638dfc202b60e01b8152fd5b50503461028b578160031936011261028b576020905160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b83833461028b57611af136611f9e565b611af961229b565b611b0161227d565b611b1060ff60055416156120f5565b611b1d6003548310612134565b8015611eb957600c5483516318896f4d60e11b81527f0000000000000000000000000000000000000000000000000000000000000000878201819052602482018590526020926001600160a01b0392908316908481604481855afa908115611de9579085918a91611e84575b508851627eeac760e11b815233818d019081526020810192909252928391829081906040015b03915afa908115611e7a579085918991611e49575b5010611e0657611c15610d146109e8611c06611be1610cd1612513565b6001611bec8b612079565b5001611bf98a8254612214565b905561157c610cd1612513565b610d0f8b82600f0b1215612195565b6064611c417f0000000000000000000000000000000000000000000000000000000000000000836121e1565b046032810281810460321482151715611df35791610eaa611ca392611c7c6064611c9d9b9c9d9e97960491611c768382612214565b94612214565b9981611c97611c8f8d9460095495612172565b8410156122be565b8b612172565b90612214565b600b558883600c541691823b1561028b578951636f3df85160e11b8152338582019081526020810192909252604082018a90526060820188905292839182908490829060800103925af18015611de957611dce575b50865163a9059cbb60e01b8152339181019182526020820186905291839183919082908b9082906040015b03927f0000000000000000000000000000000000000000000000000000000000000000165af1918215611dc457610ed5927f019eed797248695407e185a0977fa0dba8bbaaba6c2f6f4a8bdf6fb32e62ba23969792611d8a928a92611da7575b5050612239565b519283923396846040919493926060820195825260208201520152565b611dbd9250803d1061044c5761043e8183611fde565b8980611d83565b86513d89823e3d90fd5b611d2392849299611ddf8893611fb4565b9992509250611cf8565b88513d8b823e3d90fd5b634e487b7160e01b8a5260118b5260248afd5b855162461bcd60e51b8152808901849052601960248201527f4e6f7420656e6f7567682073686172657320746f2073656c6c000000000000006044820152606490fd5b809250858092503d8311611e73575b611e628183611fde565b81010312610ef9578490518a611bc4565b503d611e58565b87513d8a823e3d90fd5b82819392503d8311611eb2575b611e9b8183611fde565b81010312611eae57518490611baf611b89565b8880fd5b503d611e91565b825162461bcd60e51b8152602081870152601c60248201527f4d7573742073656c6c206174206c65617374206f6e65207368617265000000006044820152606490fd5b90503461032057602036600319011261032057611f17611f88565b611f1f6120c9565b6001600160a01b0316918215611f4c5750506bffffffffffffffffffffffff60a01b600854161760085580f35b906020606492519162461bcd60e51b83528201526016602482015275496e76616c6964206f7261636c65206164647265737360501b6044820152fd5b600435906001600160a01b03821682036108ae57565b60409060031901126108ae576004359060243590565b67ffffffffffffffff8111611fc857604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117611fc857604052565b919082519283825260005b84811061202c575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161200b565b346108ae5760003660031901126108ae5760206040516127108152f35b346108ae5760003660031901126108ae57602060405160648152f35b6003548110156120b357600360005260011b7fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0190600090565b634e487b7160e01b600052603260045260246000fd5b6000546001600160a01b031633036120dd57565b60405163118cdaa760e01b8152336004820152602490fd5b156120fc57565b60405162461bcd60e51b815260206004820152601060248201526f13585c9ad95d081a5cc818db1bdcd95960821b6044820152606490fd5b1561213b57565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206f7574636f6d6560881b6044820152606490fd5b9190820180921161217f57565b634e487b7160e01b600052601160045260246000fd5b1561219c57565b60405162461bcd60e51b815260206004820152601b60248201527f436f737420646966666572656e6365206973206e6567617469766500000000006044820152606490fd5b8181029291811591840414171561217f57565b81156121fe570490565b634e487b7160e01b600052601260045260246000fd5b9190820391821161217f57565b908160209103126108ae575180151581036108ae5790565b1561224057565b60405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606490fd5b60ff6002541661228957565b60405163d93c066560e01b8152600490fd5b6002600154146122ac576002600155565b604051633ee5aeb560e01b8152600490fd5b156122c557565b60405162461bcd60e51b815260206004820152601f60248201527f496e73756666696369656e74206d61726b6574206d616b65722066756e6473006044820152606490fd5b1561231157565b60405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606490fd5b1561234e57565b60405162461bcd60e51b815260206004820152601660248201527513585c9ad95d08185b1c9958591e481cd95d1d1b195960521b6044820152606490fd5b1561239357565b60405162461bcd60e51b815260206004820152601660248201527513585c9ad95d081b9bdd081cd95d1d1b1959081e595d60521b6044820152606490fd5b156123d857565b60405162461bcd60e51b8152602060048201526015602482015274092dcecc2d8d2c840deeae8c6dedaca40d2dcc8caf605b1b6044820152606490fd5b1561241c57565b60405162461bcd60e51b815260206004820152602a60248201527f4e756d626572206f6620736861726573206d7573742062652067726561746572604482015269207468616e207a65726f60b01b6064820152608490fd5b1561247b57565b60405162461bcd60e51b815260206004820152602f60248201527f4c697175696469747920706172616d657465722062206d75737420626520677260448201526e6561746572207468616e207a65726f60881b6064820152608490fd5b80518210156120b35760209160051b010190565b67ffffffffffffffff8111611fc85760051b60200190565b600019811461217f5760010190565b60035461251f816124ec565b9061252d6040519283611fde565b808252601f1961253c826124ec565b0136602084013760005b81811061255257505090565b80600161256161257493612079565b50015461256e82866124d8565b52612504565b612546565b9081511561262a5790600080917f0000000000000000000000000000000000000000000000000000000000000000915b81518410156125dc576125d06125d691610a2e61098f866125ca89886124d8565b51612755565b93612504565b926125a9565b9250506125eb6125f191612667565b916128c5565b600f0b90600f0b0260401d60016001607f1b031981121580612619575b156108ae57600f0b90565b5060016001607f1b0381131561260e565b60405162461bcd60e51b81526020600482015260156024820152744e6f206f7574636f6d657320617661696c61626c6560581b6044820152606490fd5b677fffffffffffffff81116108ae5760401b600f0b90565b600f0b600081126108ae5760401d67ffffffffffffffff1690565b90600f0b90600f0b0160016001607f1b03198112158061261957156108ae57600f0b90565b600f91820b910b0360016001607f1b03198112158061261957156108ae57600f0b90565b60401b60170b60401d60016001607f1b03198112158061261957156108ae57600f0b90565b811561274e57600f0b60009081811261028b576001600160801b038316810260401c9260801c026001600160c01b03811161028b5760401b908219821161056b57500190565b5050600090565b9080156108ae5760006001600160c01b03831161279e57506127799160401b6121f4565b6001600160801b03908181116108ae571660016001607f1b0381116108ae57600f0b90565b9060c083811c93846401000000008110156128b8575b806201000060029210156128ac575b6101008110156128a0575b6010811015612894575b6004811015612889575b101561287f575b6128076000199282600185870160be1984011c019160ff031b6121f4565b946001600160801b0390818711610801578460801c870291851687029084819460401b91838310612875575b505003948160801b9384871061286b575b505060801c036128605761285892036121f4565b905b01612779565b50505060019061285a565b9092019138612844565b0193508438612833565b90600101906127e9565b92810192811c6127e2565b6004938401931c6127d8565b6008938401931c6127ce565b6010938401931c6127c3565b5060e0915080821c6127b4565b600f0b60008082131561056b578082680100000000000000008412156129c9575b8064010000000060029212156129bd575b620100008112156129b1575b6101008112156129a5575b6010811215612999575b600481121561298e575b1215612986575b6001603f1b92603f19820160401b9291607f919082031b5b828513612968575050506fb17217f7d1cf79abc9e3b39803f2f6af9150600f0b0260801d90565b600185901d9490800260ff81901c918202909401939082011c612941565b600101612929565b91810191811d612922565b6004928301921d612918565b6008928301921d61290e565b6010928301921d612903565b6020928301921d6128f7565b506040905082811d6128e6565b600f0b600160461b8112156108ae57683fffffffffffffffff198112612a1b57700171547652b82fe1777d0ffda0d23a7d12612a18910260801d600f0b612a21565b90565b50600090565b600f81810b600160461b8112156108ae57683fffffffffffffffff1981126135bf576001607f1b90600093846001603f1b8216850b136135a7575b846740000000000000008216850b1361358a575b846720000000000000008216850b1361356d575b846710000000000000008216850b13613550575b846708000000000000008216850b13613533575b846704000000000000008216850b13613516575b846702000000000000008216850b136134f9575b846701000000000000008216850b136134dc575b8466800000000000008216850b136134bf575b8466400000000000008216850b136134a2575b8466200000000000008216850b13613485575b8466100000000000008216850b13613468575b8466080000000000008216850b1361344b575b8466040000000000008216850b1361342e575b8466020000000000008216850b13613411575b8466010000000000008216850b136133f4575b84658000000000008216850b136133d7575b84654000000000008216850b136133ba575b84652000000000008216850b1361339d575b84651000000000008216850b13613380575b84650800000000008216850b13613363575b84650400000000008216850b13613346575b84650200000000008216850b13613329575b84650100000000008216850b1361330c575b846480000000008216850b136132ef575b846440000000008216850b136132d2575b846420000000008216850b136132b5575b846410000000008216850b13613298575b846408000000008216850b1361327b575b846404000000008216850b1361325e575b846402000000008216850b13613241575b846401000000008216850b13613224575b8463800000008216850b13613207575b8463400000008216850b136131ea575b8463200000008216850b136131cd575b8463100000008216850b136131b0575b8463080000008216850b13613193575b8463040000008216850b13613176575b8463020000008216850b13613159575b8463010000008216850b1361313c575b84628000008216850b1361311f575b84624000008216850b13613102575b84622000008216850b136130e5575b84621000008216850b136130c8575b84620800008216850b136130ab575b84620400008216850b1361308e575b84620200008216850b13613071575b84620100008216850b13613054575b846180008216850b13613037575b846140008216850b1361301a575b846120008216850b13612ffd575b846110008216850b13612fe0575b846108008216850b13612fc3575b846104008216850b13612fa6575b846102008216850b13612f89575b846101008216850b13612f6c575b8460809181838216870b13612f50575b8160408216870b13612f34575b8160208216870b13612f18575b8160108216870b13612efc575b8160088216870b13612ee0575b8160048216870b13612ec4575b8160028216870b13612ea7575b600116850b13612e89575b5060401d820b603f03820b1c9160016001607f1b03831161056b57500b90565b909170010000000000000000b17217f7d1cf79ab02901c9038612e69565b7001000000000000000162e42fefa39ef358909402821c93612e5e565b9370010000000000000002c5c85fdf473de6b202821c93612e51565b93700100000000000000058b90bfbe8e7bcd6d02821c93612e44565b937001000000000000000b17217f7d1cf79afa02821c93612e37565b93700100000000000000162e42fefa39ef366f02821c93612e2a565b937001000000000000002c5c85fdf473de6eca02821c93612e1d565b9370010000000000000058b90bfbe8e7bce54402821c93612e10565b91700100000000000000b17217f7d1cf79e9490260801c91612e00565b9170010000000000000162e42fefa39ef44d910260801c91612df2565b91700100000000000002c5c85fdf473dea871f0260801c91612de4565b917001000000000000058b90bfbe8e7bdcbe2e0260801c91612dd6565b9170010000000000000b17217f7d1cf7d83c1a0260801c91612dc8565b917001000000000000162e42fefa39f02b772c0260801c91612dba565b9170010000000000002c5c85fdf473e242ea380260801c91612dac565b91700100000000000058b90bfbe8e7cc35c3f00260801c91612d9e565b917001000000000000b17217f7d1cfb72b45e10260801c91612d90565b91700100000000000162e42fefa39fe95583c20260801c91612d81565b917001000000000002c5c85fdf4741bea6e77e0260801c91612d72565b9170010000000000058b90bfbe8e8b2d3d4ede0260801c91612d63565b91700100000000000b17217f7d1d351a389d400260801c91612d54565b9170010000000000162e42fefa3ae53369388c0260801c91612d45565b91700100000000002c5c85fdf477b662b269450260801c91612d36565b917001000000000058b90bfbe8f71cb4e4b33d0260801c91612d27565b9170010000000000b17217f7d20cf927c8e94c0260801c91612d18565b917001000000000162e42fefa494f1478fde050260801c91612d08565b9170010000000002c5c85fdf4b15de6f17eb0d0260801c91612cf8565b91700100000000058b90bfbe9ddbac5e109cce0260801c91612ce8565b917001000000000b17217f7d5a7716bba4a9ae0260801c91612cd8565b91700100000000162e42fefb2fed257559bdaa0260801c91612cc8565b917001000000002c5c85fdf84bd62ae30a74cc0260801c91612cb8565b9170010000000058b90bfbf8479bd5a81b51ad0260801c91612ca8565b91700100000000b17217f80f4ef5aadda455540260801c91612c98565b9170010000000162e42ff0999ce3541b9fffcf0260801c91612c87565b91700100000002c5c85fe31f35a6a30da1be500260801c91612c76565b917001000000058b90bfcdee5acd3c1cedc8230260801c91612c65565b9170010000000b17217fba9c739aa5819f44f90260801c91612c54565b917001000000162e42fff037df38aa2b219f060260801c91612c43565b9170010000002c5c8601cc6b9e94213c72737a0260801c91612c32565b91700100000058b90c0b48c6be5df846c5b2ef0260801c91612c21565b917001000000b1721835514b86e6d96efd1bfe0260801c91612c10565b91700100000162e430e5a18f6119e3c02282a50260801c91612bfe565b917001000002c5c863b73f016468f6bac5ca2b0260801c91612bec565b9170010000058b90cf1e6d97f9ca14dbcc16280260801c91612bda565b91700100000b1721bcfc99d9f890ea069117630260801c91612bc8565b9170010000162e43f4f831060e02d839a9d16d0260801c91612bb6565b91700100002c5c89d5ec6ca4d7c8acc017b7c90260801c91612ba4565b917001000058b91b5bc9ae2eed81e9b7d4cfab0260801c91612b92565b9170010000b17255775c040618bf4a4ade83fc0260801c91612b80565b917001000162e525ee054754457d59952920260260801c91612b6d565b9170010002c5cc37da9491d0985c348c68e7b30260801c91612b5a565b91700100058ba01fb9f96d6cacd4b180917c3d0260801c91612b47565b917001000b175effdc76ba38e31671ca9397250260801c91612b34565b91700100162f3904051fa128bca9c55c31e5df0260801c91612b21565b917001002c605e2e8cec506d21bfc89a23a00f0260801c91612b0e565b9170010058c86da1c09ea1ff19d294cf2f679b0260801c91612afb565b91700100b1afa5abcbed6129ab13ec11dc95430260801c91612ae8565b9170010163da9fb33356d84a66ae336dcdfa3f0260801c91612ad4565b91700102c9a3e778060ee6f7caca4f7a29bde80260801c91612ac0565b917001059b0d31585743ae7c548eb68ca417fd0260801c91612aac565b9170010b5586cf9890f6298b92b71842a983630260801c91612a98565b917001172b83c7d517adcdf7c8c50eb14a791f0260801c91612a84565b917001306fe0a31b7152de8d5a46305c85edec0260801c91612a70565b6fb504f333f9de6484597d89b3754abe9f9250612a5c565b50505060009056fea264697066735822122095fb40e7b7ee25ffc569bf0f8362d837e9c68f4837e3cb14f698a2e1f905f6ed64736f6c63430008140033a66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688a26469706673582212208a8be1c9e27f86553c81b3676415180bc23daf94626362db3cbb0ae3455b285d64736f6c63430008140033","opcodes":"PUSH1 0x80 CALLVALUE PUSH2 0xC6 JUMPI PUSH1 0x1F PUSH2 0x537B CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xCB JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xC6 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xC6 JUMPI CALLER ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP1 CALLER DUP3 DUP3 AND OR PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD SWAP4 CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH2 0x5299 SWAP1 DUP2 PUSH2 0xE2 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH3 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3ADFE6D0 EQ PUSH3 0xB21 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH3 0xAC3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0xA9A JUMPI DUP1 PUSH4 0x97271C14 EQ PUSH3 0x304 JUMPI DUP1 PUSH4 0xA5E973C3 EQ PUSH3 0x23E JUMPI DUP1 PUSH4 0xBA5B7982 EQ PUSH3 0x213 JUMPI DUP1 PUSH4 0xC3A811FE EQ PUSH3 0x117 JUMPI PUSH4 0xF2FDE38B EQ PUSH3 0x7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH3 0x114 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x114 JUMPI PUSH3 0x9B PUSH3 0xC62 JUMP JUMPDEST PUSH3 0xA5 PUSH3 0xCF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH3 0xFB JUMPI PUSH1 0x0 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH3 0x114 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x20F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH3 0x13E PUSH3 0xC62 JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x40 MLOAD DUP4 DUP2 SWAP5 SWAP1 DUP4 SLOAD SWAP1 PUSH3 0x15E DUP3 PUSH3 0xC79 JUMP JUMPDEST SWAP5 DUP6 DUP6 MSTORE PUSH1 0x1 SWAP3 DUP8 DUP5 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH3 0x1E9 JUMPI POP POP PUSH1 0x1 EQ PUSH3 0x1A9 JUMPI JUMPDEST POP POP POP PUSH3 0x18F SWAP3 POP SUB DUP4 PUSH3 0xBE3 JUMP JUMPDEST PUSH3 0x1A5 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH3 0xCB6 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP7 SWAP4 POP DUP2 SWAP3 SWAP2 MSTORE DUP3 DUP3 KECCAK256 JUMPDEST DUP6 DUP4 LT PUSH3 0x1D0 JUMPI POP POP PUSH3 0x18F SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH3 0x17E JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH3 0x1B4 JUMP JUMPDEST SWAP4 POP SWAP5 POP POP POP PUSH3 0x18F SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH3 0x17E JUMP JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH3 0x114 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x114 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH3 0x114 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x114 JUMPI PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x1 SWAP1 DUP2 SLOAD SWAP4 DUP5 DUP5 MSTORE PUSH1 0x20 DUP1 SWAP5 ADD DUP1 SWAP6 DUP5 DUP5 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT PUSH3 0x2E7 JUMPI POP POP POP DUP2 PUSH3 0x2A6 SWAP2 SUB DUP3 PUSH3 0xBE3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP1 DUP6 ADD SWAP2 DUP2 DUP7 MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP6 ADD SWAP6 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH3 0x2CA JUMPI DUP6 DUP8 SUB DUP7 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP2 ADD SWAP6 SWAP3 DUP2 ADD SWAP3 DUP5 ADD PUSH3 0x2BC JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP8 ADD SWAP3 SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH3 0x28D JUMP JUMPDEST POP CALLVALUE PUSH3 0x114 JUMPI PUSH2 0x140 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x114 JUMPI PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH3 0x20F JUMPI PUSH3 0x33C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0xC06 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH3 0x812 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH3 0x812 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH3 0xA86 JUMPI DUP4 PUSH1 0x5 SHL SWAP2 PUSH1 0x40 MLOAD SWAP5 PUSH3 0x389 PUSH1 0x20 DUP6 ADD DUP8 PUSH3 0xBE3 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP3 DUP2 ADD PUSH1 0x24 ADD DUP4 CALLDATASIZE DUP3 GT PUSH3 0x8B7 JUMPI PUSH1 0x24 DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH3 0xA52 JUMPI POP POP PUSH1 0x64 CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH3 0x20F JUMPI PUSH1 0xE4 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP5 SUB PUSH3 0x812 JUMPI PUSH2 0x104 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP6 SUB PUSH3 0x8B7 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND SWAP1 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x453E DUP2 ADD LT PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x453E DUP8 ADD GT OR PUSH3 0xA3E JUMPI PUSH2 0x453E PUSH3 0xD26 DUP7 CODECOPY PUSH1 0x4 CALLDATALOAD PUSH2 0x453E DUP7 ADD SWAP1 DUP2 MSTORE PUSH2 0x160 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH3 0x447 SWAP2 ADD DUP10 PUSH3 0xCB6 JUMP JUMPDEST SWAP9 PUSH2 0x453E DUP7 ADD DUP11 SUB PUSH1 0x40 PUSH2 0x453E DUP9 ADD ADD MSTORE MLOAD DUP1 DUP11 MSTORE PUSH1 0x20 DUP11 ADD SWAP1 PUSH1 0x20 DUP2 PUSH1 0x5 SHL DUP13 ADD ADD SWAP6 SWAP2 DUP9 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH3 0xA0E JUMPI POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH2 0x453E DUP8 ADD PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0xC0 DUP3 ADD MSTORE SWAP3 DUP3 AND PUSH1 0xE0 DUP5 ADD MSTORE POP DUP7 AND PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x124 CALLDATALOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH2 0x140 ADD MSTORE DUP2 SWAP1 SUB SWAP1 DUP3 CREATE DUP1 ISZERO PUSH3 0xA01 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH3 0x9ED JUMPI DUP1 PUSH1 0x1 PUSH3 0x506 SWAP3 ADD PUSH1 0x1 SSTORE PUSH3 0xB6A JUMP JUMPDEST DUP2 SLOAD PUSH1 0x3 SWAP2 DUP3 SHL DUP5 DUP2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SWAP2 SSTORE DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP5 MLOAD SWAP5 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP7 GT PUSH3 0x9D9 JUMPI PUSH3 0x54D DUP2 SLOAD PUSH3 0xC79 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x98F JUMPI JUMPDEST POP DUP4 SWAP5 SWAP6 DUP4 SWAP5 POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH3 0x8FF JUMPI SWAP2 DUP2 PUSH32 0x89E2B56DFB4365B59DC3A37AAF819CE4937E48BE6AB23686EDCECACF0124AE03 SWAP5 SWAP3 PUSH3 0x5C7 SWAP5 DUP10 SWAP2 PUSH3 0x8F3 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH3 0xCB6 JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD5391393 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP4 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP9 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH3 0x846 JUMPI DUP5 SWAP2 PUSH3 0x8BB JUMPI JUMPDEST POP DUP5 EXTCODESIZE ISZERO PUSH3 0x8B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2F2FF15D PUSH1 0xE0 SHL DUP1 DUP3 MSTORE PUSH1 0x4 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP5 DUP5 SWAP1 DUP7 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH3 0x846 JUMPI PUSH3 0x8A0 JUMPI JUMPDEST DUP4 SWAP5 POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND SWAP1 PUSH1 0x40 MLOAD PUSH4 0x282C51F3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH3 0x895 JUMPI DUP7 SWAP2 PUSH3 0x855 JUMPI JUMPDEST POP DUP3 EXTCODESIZE ISZERO PUSH3 0x851 JUMPI PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH3 0x846 JUMPI DUP5 SWAP2 PUSH3 0x82A JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP1 DUP3 PUSH32 0x92199B96DF436A113D14E9952BEA656A2E2E7FBC271B2141F2C42002E0E2B85B DUP6 DUP1 LOG2 PUSH2 0x124 CALLDATALOAD PUSH3 0x73A JUMPI JUMPDEST POP POP DUP1 EXTCODESIZE ISZERO PUSH3 0x737 JUMPI DUP2 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0xF2FDE38B PUSH1 0xE0 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH3 0x72C JUMPI PUSH3 0x719 JUMPI POP RETURN JUMPDEST PUSH3 0x724 SWAP1 PUSH3 0xBB8 JUMP JUMPDEST PUSH3 0x114 JUMPI DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP REVERT JUMPDEST PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x124 CALLDATALOAD PUSH1 0x44 DUP4 ADD MSTORE SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x64 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH3 0x81F JUMPI DUP4 SWAP2 PUSH3 0x7D9 JUMPI JUMPDEST POP ISZERO PUSH3 0x794 JUMPI DUP2 SWAP1 DUP4 DUP1 PUSH3 0x6E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C2066756E64207472616E73666572206661696C656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH3 0x816 JUMPI JUMPDEST DUP2 PUSH3 0x7F7 PUSH1 0x20 SWAP4 DUP4 PUSH3 0xBE3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x812 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH3 0x812 JUMPI DUP4 PUSH3 0x783 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH3 0x7E8 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH3 0x835 SWAP1 PUSH3 0xBB8 JUMP JUMPDEST PUSH3 0x842 JUMPI DUP3 DUP6 PUSH3 0x6AD JUMP JUMPDEST POP POP REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP6 RETURNDATASIZE PUSH1 0x20 GT PUSH3 0x88C JUMPI JUMPDEST DUP2 PUSH3 0x874 PUSH1 0x20 SWAP4 DUP4 PUSH3 0xBE3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x887 JUMPI DUP6 SWAP5 MLOAD DUP8 PUSH3 0x675 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH3 0x865 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP3 SWAP1 SWAP4 PUSH3 0x8AE SWAP1 PUSH3 0xBB8 JUMP JUMPDEST SWAP2 DUP4 SWAP1 PUSH3 0x640 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH3 0x8EA JUMPI JUMPDEST DUP2 PUSH3 0x8D9 PUSH1 0x20 SWAP4 DUP4 PUSH3 0xBE3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x8B7 JUMPI MLOAD DUP6 PUSH3 0x600 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH3 0x8CA JUMP JUMPDEST SWAP1 POP DUP4 ADD MLOAD DUP11 PUSH3 0x59E JUMP JUMPDEST DUP3 DUP8 MSTORE PUSH1 0x20 DUP8 KECCAK256 SWAP1 PUSH1 0x1F NOT DUP4 AND DUP9 JUMPDEST DUP2 DUP2 LT PUSH3 0x973 JUMPI POP SWAP3 PUSH3 0x5C7 SWAP5 SWAP3 PUSH1 0x1 SWAP3 DUP3 PUSH32 0x89E2B56DFB4365B59DC3A37AAF819CE4937E48BE6AB23686EDCECACF0124AE03 SWAP9 SWAP7 LT PUSH3 0x959 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0x5B2 JUMP JUMPDEST DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP11 DUP1 PUSH3 0x94C JUMP JUMPDEST DUP3 DUP8 ADD MLOAD DUP5 SSTORE DUP9 SWAP8 POP PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH3 0x90E JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP6 KECCAK256 PUSH1 0x1F DUP9 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP10 LT PUSH3 0x9CE JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0x9C2 JUMPI POP PUSH3 0x557 JUMP JUMPDEST DUP6 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x9B3 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH3 0x9AA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP7 PUSH1 0x20 DUP1 PUSH3 0xA2F DUP16 SWAP4 PUSH1 0x1 SWAP5 PUSH1 0x1F NOT SWAP1 DUP3 SUB ADD DUP7 MSTORE DUP12 MLOAD PUSH3 0xCB6 JUMP JUMPDEST SWAP10 ADD SWAP3 ADD SWAP3 ADD SWAP1 SWAP3 SWAP2 PUSH3 0x46F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH3 0x851 JUMPI PUSH1 0x20 SWAP2 PUSH3 0xA7A DUP4 SWAP3 PUSH1 0x24 CALLDATASIZE SWAP2 DUP10 ADD ADD PUSH3 0xC06 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH3 0x3A4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH3 0x114 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x114 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH3 0x114 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x114 JUMPI PUSH3 0xAE0 PUSH3 0xCF8 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH3 0x114 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x114 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 SLOAD DUP3 LT ISZERO PUSH3 0x114 JUMPI PUSH1 0x20 PUSH3 0xB51 DUP4 PUSH3 0xB6A JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0xBA2 JUMPI PUSH1 0x1 PUSH1 0x0 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH3 0xBCD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH3 0xBCD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH3 0x887 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH3 0xBCD JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH3 0xC3F PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH3 0xBE3 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH3 0x887 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x887 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0xCAB JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0xC95 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0xC89 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH3 0xCE3 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH3 0xCC1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH3 0xD0D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT INVALID PUSH2 0x180 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0xDDA JUMPI PUSH1 0x0 PUSH3 0x453E SWAP1 DUP2 CODESIZE SUB DUP1 SWAP3 PUSH3 0x25 DUP3 PUSH2 0x180 PUSH3 0xDDF JUMP JUMPDEST PUSH2 0x180 CODECOPY PUSH2 0x160 DUP3 SLT PUSH3 0xDD7 JUMPI PUSH2 0x180 MLOAD PUSH2 0x1A0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0xDD3 JUMPI PUSH3 0x5F SWAP1 DUP5 PUSH2 0x180 ADD SWAP1 PUSH2 0x180 ADD PUSH3 0xE03 JUMP JUMPDEST PUSH2 0x1C0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0xDCF JUMPI PUSH2 0x180 DUP6 ADD PUSH2 0x19F DUP3 ADD SLT ISZERO PUSH3 0xDCF JUMPI PUSH2 0x180 DUP2 ADD MLOAD SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 GT PUSH3 0xDBB JUMPI DUP6 PUSH1 0x5 SHL SWAP1 PUSH1 0x40 MLOAD SWAP7 PUSH3 0xB1 PUSH1 0x20 DUP5 ADD DUP10 PUSH3 0xDDF JUMP JUMPDEST DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP1 PUSH2 0x180 DUP2 ADD PUSH2 0x1A0 DUP6 DUP6 ADD ADD GT PUSH3 0xDB7 JUMPI PUSH2 0x1A0 DUP5 ADD SWAP2 JUMPDEST PUSH2 0x1A0 DUP6 DUP6 ADD ADD DUP4 LT PUSH3 0xD76 JUMPI POP POP POP POP POP PUSH3 0xF4 PUSH1 0x60 PUSH2 0x180 ADD PUSH3 0xE7A JUMP JUMPDEST PUSH2 0x200 MLOAD PUSH2 0x220 MLOAD PUSH2 0x240 MLOAD SWAP2 PUSH3 0x10E PUSH2 0x260 PUSH3 0xE7A JUMP JUMPDEST SWAP4 PUSH3 0x11C PUSH2 0x280 PUSH3 0xE7A JUMP JUMPDEST PUSH2 0x2A0 MLOAD SWAP8 SWAP1 SWAP7 SWAP1 PUSH3 0x131 PUSH2 0x2C0 PUSH3 0xE7A JUMP JUMPDEST SWAP9 CALLER ISZERO PUSH3 0xD5D JUMPI DUP11 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP14 SSTORE PUSH1 0x40 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP15 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x9 DUP13 SWAP1 SSTORE PUSH1 0xA DUP13 SWAP1 SSTORE PUSH1 0xB DUP13 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND ISZERO PUSH3 0xD1B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH3 0xCD6 JUMPI DUP12 MLOAD ISZERO PUSH3 0xC91 JUMPI DUP5 ISZERO PUSH3 0xC34 JUMPI DUP6 ISZERO PUSH3 0xBEF JUMPI DUP12 MLOAD DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH3 0xBE2 JUMPI JUMPDEST POP ISZERO PUSH3 0xB9D JUMPI PUSH2 0x2710 DUP6 GT PUSH3 0xB3E JUMPI PUSH1 0x64 DUP6 LT PUSH3 0xAD3 JUMPI DUP12 MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH3 0xA8E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x3F SHL SUB DUP2 GT PUSH3 0xA8A JUMPI DUP12 DUP2 PUSH1 0x40 SHL PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH3 0xA8A JUMPI DUP12 PUSH1 0x40 DUP3 SWAP1 SHL PUSH1 0xF SIGNEXTEND PUSH9 0x10000000000000000 DUP2 SLT ISZERO PUSH3 0xA77 JUMPI JUMPDEST DUP1 PUSH5 0x100000000 PUSH1 0x2 SWAP3 SLT ISZERO PUSH3 0xA6A JUMPI JUMPDEST PUSH3 0x10000 DUP2 SLT ISZERO PUSH3 0xA5D JUMPI JUMPDEST PUSH2 0x100 DUP2 SLT ISZERO PUSH3 0xA50 JUMPI JUMPDEST PUSH1 0x10 DUP2 SLT ISZERO PUSH3 0xA43 JUMPI JUMPDEST PUSH1 0x4 DUP2 SLT ISZERO PUSH3 0xA37 JUMPI JUMPDEST SLT ISZERO PUSH3 0xA2E JUMPI JUMPDEST SWAP1 DUP13 DUP8 SWAP3 PUSH1 0x3F NOT DUP2 ADD PUSH1 0x40 SHL SWAP3 PUSH1 0x40 SHL PUSH1 0xF SIGNEXTEND SWAP1 PUSH1 0x7F SUB SHL PUSH8 0x8000000000000000 SWAP2 JUMPDEST DUP3 SGT PUSH3 0xA0C JUMPI POP POP SWAP1 PUSH16 0xB17217F7D1CF79ABC9E3B39803F2F6AF PUSH3 0x2D6 SWAP3 PUSH1 0xF SIGNEXTEND MUL PUSH1 0x80 SAR PUSH3 0xECB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH3 0xA01 JUMPI SWAP1 PUSH3 0x315 SWAP2 DUP15 SWAP2 PUSH3 0x9DD JUMPI JUMPDEST POP PUSH3 0xEAA JUMP JUMPDEST SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH3 0x9C9 JUMPI LT PUSH3 0x96D JUMPI PUSH1 0xC0 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x959 JUMPI PUSH1 0x7 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND ISZERO PUSH3 0x94E JUMPI JUMPDEST PUSH1 0x1 AND PUSH1 0x20 DUP3 LT EQ PUSH3 0x93A JUMPI SWAP1 DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH3 0x8DA JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x85E JUMPI DUP12 SWAP3 PUSH3 0x852 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x7 SSTORE JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 MSTORE TIMESTAMP DUP1 DUP3 ADD LT PUSH3 0x83E JUMPI TIMESTAMP ADD PUSH1 0x4 SWAP1 DUP2 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH2 0xFFFF NOT AND SWAP1 SSTORE PUSH1 0xE0 SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0xA0 DUP2 SWAP1 MSTORE DUP5 MLOAD PUSH2 0x160 MSTORE PUSH1 0x40 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP2 PUSH1 0x20 SWAP2 DUP5 SWAP2 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH3 0x833 JUMPI SWAP1 PUSH1 0xFF SWAP3 SWAP2 DUP5 SWAP3 PUSH3 0x7FB JUMPI JUMPDEST POP PUSH2 0x120 DUP3 SWAP1 MSTORE PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE AND DUP1 ISZERO PUSH3 0x7E5 JUMPI POP PUSH3 0x46E PUSH1 0xFF PUSH2 0x120 MLOAD AND PUSH3 0xEBC JUMP JUMPDEST PUSH1 0xD SSTORE JUMPDEST DUP1 PUSH3 0x484 PUSH1 0xFF PUSH2 0x120 MLOAD AND PUSH3 0xEAA JUMP JUMPDEST SWAP2 PUSH3 0x7D1 JUMPI POP PUSH2 0x140 MSTORE PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH3 0x6E9 JUMPI PUSH1 0x5 DUP2 SWAP1 SHL DUP3 ADD PUSH1 0x20 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x6BD JUMPI PUSH1 0x40 MSTORE DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH3 0x6BD JUMPI PUSH1 0x1 DUP3 ADD DUP1 PUSH1 0x3 SSTORE DUP3 LT ISZERO PUSH3 0x6D3 JUMPI PUSH1 0x3 PUSH1 0x0 MSTORE DUP1 MLOAD DUP1 MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x6BD JUMPI DUP5 PUSH1 0x1 SHL DUP5 ADD SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x6B2 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH3 0x69C JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x64E JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x5D1 JUMPI SWAP2 DUP1 PUSH1 0x1 SWAP6 SWAP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x0 SWAP3 PUSH3 0x5C5 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP6 SHL OR DUP6 DUP6 SHL DUP5 ADD SSTORE JUMPDEST ADD MLOAD SWAP3 DUP3 SHL ADD ADD SSTORE PUSH1 0x0 NOT DUP2 EQ PUSH3 0x5AF JUMPI PUSH1 0x1 ADD PUSH3 0x492 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x57C JUMP JUMPDEST SWAP1 DUP6 PUSH1 0x1 SHL DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH3 0x635 JUMPI POP SWAP3 PUSH1 0x1 SWAP6 SWAP5 SWAP3 DUP7 SWAP3 PUSH1 0x20 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x61B JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP6 DUP6 SHL DUP5 ADD SSTORE PUSH3 0x594 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x609 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH3 0x5E4 JUMP JUMPDEST DUP6 PUSH1 0x1 SHL DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0x694 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0x687 JUMPI POP POP PUSH3 0x559 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x66F JUMP JUMPDEST POP DUP1 PUSH3 0x66F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x545 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35FD SWAP1 DUP2 PUSH3 0xF21 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x969 ADD MSTORE DUP2 DUP2 PUSH2 0x1520 ADD MSTORE DUP2 DUP2 PUSH2 0x15F9 ADD MSTORE DUP2 DUP2 PUSH2 0x1660 ADD MSTORE PUSH2 0x2588 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x25C ADD MSTORE DUP2 DUP2 PUSH2 0x3AC ADD MSTORE DUP2 DUP2 PUSH2 0x727 ADD MSTORE DUP2 DUP2 PUSH2 0xDBF ADD MSTORE DUP2 DUP2 PUSH2 0x1227 ADD MSTORE DUP2 DUP2 PUSH2 0x184E ADD MSTORE PUSH2 0x1D27 ADD MSTORE PUSH1 0xC0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x5B7 ADD MSTORE DUP2 DUP2 PUSH2 0xA6D ADD MSTORE DUP2 DUP2 PUSH2 0xE1B ADD MSTORE DUP2 DUP2 PUSH2 0x1450 ADD MSTORE PUSH2 0x1B34 ADD MSTORE PUSH1 0xE0 MLOAD DUP2 DUP2 DUP2 PUSH2 0xD2F ADD MSTORE DUP2 DUP2 PUSH2 0x1373 ADD MSTORE DUP2 DUP2 PUSH2 0x1589 ADD MSTORE PUSH2 0x1C1C ADD MSTORE PUSH2 0x100 MLOAD DUP2 DUP2 DUP2 PUSH2 0x36E ADD MSTORE DUP2 DUP2 PUSH2 0x17D8 ADD MSTORE PUSH2 0x193A ADD MSTORE PUSH2 0x120 MLOAD DUP2 PUSH2 0x1ABD ADD MSTORE PUSH2 0x140 MLOAD DUP2 DUP2 DUP2 PUSH2 0x667 ADD MSTORE PUSH2 0x90B ADD MSTORE PUSH2 0x160 MLOAD DUP2 PUSH2 0xBB9 ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH3 0x7F2 SWAP1 DUP3 SUB PUSH3 0xEBC JUMP JUMPDEST PUSH1 0xD SSTORE PUSH3 0x472 JUMP JUMPDEST PUSH3 0x823 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH3 0x82B JUMPI JUMPDEST PUSH3 0x81A DUP2 DUP4 PUSH3 0xDDF JUMP JUMPDEST DUP2 ADD SWAP1 PUSH3 0xE8F JUMP JUMPDEST SWAP1 CODESIZE PUSH3 0x42D JUMP JUMPDEST POP RETURNDATASIZE PUSH3 0x80E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x387 JUMP JUMPDEST PUSH1 0x7 DUP13 MSTORE DUP12 SWAP4 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x451E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH3 0x8BE JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x8A4 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x7 SSTORE PUSH3 0x39D JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x895 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x878 JUMP JUMPDEST PUSH1 0x7 DUP13 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x451E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0x932 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST DUP14 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD DUP3 LT PUSH3 0x924 JUMPI POP POP POP PUSH3 0x36F JUMP JUMPDEST DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH3 0x90A JUMP JUMPDEST POP DUP1 PUSH3 0x904 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x355 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C2066756E6473206D757374206578636565642062202A206C6E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x286E756D5F6F7574636F6D657329 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP13 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP13 REVERT JUMPDEST PUSH3 0x9FA SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH3 0x82B JUMPI PUSH3 0x81A DUP2 DUP4 PUSH3 0xDDF JUMP JUMPDEST CODESIZE PUSH3 0x30E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP16 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 SWAP2 SWAP4 POP MUL SWAP1 DUP2 PUSH1 0xFF SHR SWAP2 DUP3 PUSH1 0x7F ADD SHR SWAP2 DUP4 MUL ADD SWAP2 PUSH1 0x1 SAR DUP8 SWAP3 SWAP2 DUP15 PUSH3 0x2A9 JUMP JUMPDEST PUSH1 0x1 ADD PUSH3 0x286 JUMP JUMPDEST SWAP2 DUP2 ADD SWAP2 DUP2 SAR PUSH3 0x27E JUMP JUMPDEST PUSH1 0x4 SWAP3 DUP4 ADD SWAP3 SAR PUSH3 0x273 JUMP JUMPDEST PUSH1 0x8 SWAP3 DUP4 ADD SWAP3 SAR PUSH3 0x268 JUMP JUMPDEST PUSH1 0x10 SWAP3 DUP4 ADD SWAP3 SAR PUSH3 0x25C JUMP JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SAR PUSH3 0x24F JUMP JUMPDEST POP PUSH1 0x40 SWAP1 POP DUP2 DUP2 SHL PUSH1 0xF SIGNEXTEND DUP2 SAR PUSH3 0x23D JUMP JUMPDEST DUP12 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4174206C656173742074776F206F7574636F6D65732072657175697265640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C697175696469747920706172616D6574657220276227206D75737420626520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x67726561746572207468616E206D696E696D756D000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C697175696469747920706172616D6574657220276227206578636565647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x746865206C696D6974206D6178696D756D PUSH1 0x78 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206E756D626572206F66206F7574636F6D6573000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x5 SWAP2 POP GT ISZERO CODESIZE PUSH3 0x1DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4475726174696F6E206D75737420626520706F73697469766500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C697175696469747920706172616D657465722062206D757374206265206772 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x6561746572207468616E207A65726F PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4174206C65617374206F6E65206F7574636F6D65207265717569726564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642066656520726563697069656E742061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP13 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0xDB3 JUMPI PUSH1 0x20 DUP1 SWAP3 PUSH3 0xDA5 DUP3 SWAP4 DUP4 DUP8 PUSH2 0x180 ADD SWAP2 DUP12 PUSH2 0x180 ADD ADD ADD PUSH3 0xE03 JUMP JUMPDEST DUP2 MSTORE ADD SWAP4 ADD SWAP3 SWAP1 POP PUSH3 0xD1 JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH3 0x6BD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH3 0xDDA JUMPI DUP3 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x6BD JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 SWAP2 PUSH3 0xE3F PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND DUP5 ADD DUP6 PUSH3 0xDDF JUMP JUMPDEST DUP2 DUP5 MSTORE DUP3 DUP3 DUP8 ADD ADD GT PUSH3 0xDDA JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH3 0xE66 JUMPI POP DUP3 PUSH1 0x0 SWAP4 SWAP5 SWAP6 POP ADD ADD MSTORE SWAP1 JUMP JUMPDEST DUP6 DUP2 ADD DUP4 ADD MLOAD DUP5 DUP3 ADD DUP5 ADD MSTORE DUP3 ADD PUSH3 0xE50 JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0xDDA JUMPI JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH3 0xDDA JUMPI MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH3 0xDDA JUMPI SWAP1 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x4D DUP2 GT PUSH3 0x5AF JUMPI PUSH1 0xA EXP SWAP1 JUMP JUMPDEST PUSH1 0x4D DUP2 GT PUSH3 0x5AF JUMPI PUSH1 0xA EXP SWAP1 JUMP JUMPDEST DUP2 ISZERO PUSH3 0xF19 JUMPI PUSH1 0xF SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 DUP2 SLT PUSH3 0xF15 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND DUP2 MUL PUSH1 0x40 SHR SWAP3 PUSH1 0x80 SHR MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB DUP2 GT PUSH3 0xF15 JUMPI PUSH1 0x40 SHL SWAP1 DUP3 NOT DUP3 GT PUSH3 0xDD7 JUMPI POP ADD SWAP1 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1CB44DFC EQ PUSH2 0x1EFC JUMPI DUP2 PUSH4 0x2279A970 EQ PUSH2 0x1AE1 JUMPI DUP2 PUSH4 0x3B97E856 EQ PUSH2 0x1AA3 JUMPI DUP2 PUSH4 0x3F4BA83A EQ PUSH2 0x1A39 JUMPI DUP2 PUSH4 0x416E517E EQ PUSH2 0x1969 JUMPI DUP2 PUSH4 0x46904840 EQ PUSH2 0x1925 JUMPI DUP2 PUSH4 0x474E19F2 EQ PUSH2 0x190A JUMPI DUP2 PUSH4 0x476343EE EQ PUSH2 0x17BC JUMPI DUP2 PUSH4 0x48A5DEC6 EQ PUSH2 0x1798 JUMPI DUP2 PUSH4 0x4A79D50C EQ PUSH2 0x1683 JUMPI DUP2 PUSH4 0x4DF7E3D0 EQ PUSH2 0x1648 JUMPI DUP2 PUSH4 0x510F5116 EQ PUSH2 0x15B5 JUMPI DUP2 PUSH4 0x53249A31 EQ PUSH2 0x14DC JUMPI DUP2 PUSH4 0x5C975ABB EQ PUSH2 0x14B8 JUMPI DUP2 PUSH4 0x69C41A74 EQ PUSH2 0x149A JUMPI DUP2 PUSH4 0x6E77609E EQ PUSH2 0x1473 JUMPI DUP2 PUSH4 0x6ED71EDE EQ PUSH2 0x1438 JUMPI DUP2 PUSH4 0x715018A6 EQ PUSH2 0x13DE JUMPI DUP2 PUSH4 0x7DC0D1D0 EQ PUSH2 0x13B5 JUMPI DUP2 PUSH4 0x7DC8F086 EQ PUSH2 0x1396 JUMPI DUP2 PUSH4 0x7FD6F15C EQ PUSH2 0x135B JUMPI DUP2 PUSH4 0x8456CB59 EQ PUSH2 0x1300 JUMPI DUP2 PUSH4 0x89FF7069 EQ PUSH2 0x11D8 JUMPI DUP2 PUSH4 0x8DA5CB5B EQ PUSH2 0x11B0 JUMPI DUP2 PUSH4 0x8F512BF4 EQ PUSH2 0x1191 JUMPI DUP2 PUSH4 0x8FBB4A82 EQ PUSH2 0x56E JUMPI DUP2 PUSH4 0x9003ADFE EQ PUSH2 0x1172 JUMPI DUP2 PUSH4 0x90514320 EQ PUSH2 0x1153 JUMPI DUP2 PUSH4 0x92B2849B EQ PUSH2 0x1137 JUMPI DUP2 PUSH4 0x96211A97 EQ PUSH2 0x10B3 JUMPI DUP2 PUSH4 0x9AAFF766 EQ PUSH2 0x1056 JUMPI DUP2 PUSH4 0x9B34AE03 EQ PUSH2 0x1037 JUMPI DUP2 PUSH4 0x9E6C2959 EQ PUSH2 0xC65 JUMPI DUP2 PUSH4 0xA2D07D24 EQ PUSH2 0x101B JUMPI DUP2 PUSH4 0xB03238F7 EQ PUSH2 0xFE7 JUMPI DUP2 PUSH4 0xBA5B7982 EQ PUSH2 0xFBE JUMPI DUP2 PUSH4 0xBEEBC5DA EQ PUSH2 0xC6A JUMPI DUP2 PUSH4 0xC3883F17 EQ PUSH2 0xC65 JUMPI DUP2 PUSH4 0xC511ED5E EQ PUSH2 0xBDC JUMPI DUP2 PUSH4 0xCA3BD569 EQ PUSH2 0xBA1 JUMPI DUP2 PUSH4 0xD55E725B EQ PUSH2 0xB82 JUMPI DUP2 PUSH4 0xDDD9D045 EQ PUSH2 0xA42 JUMPI DUP2 PUSH4 0xE7572230 EQ PUSH2 0x92E JUMPI DUP2 PUSH4 0xE8467AF6 EQ PUSH2 0x8F3 JUMPI DUP2 PUSH4 0xE88499A9 EQ PUSH2 0x573 JUMPI DUP2 PUSH4 0xED0C986F EQ PUSH2 0x56E JUMPI DUP2 PUSH4 0xEED2A147 EQ PUSH2 0x45D JUMPI DUP2 PUSH4 0xEF86CE8E EQ PUSH2 0x324 JUMPI DUP2 PUSH4 0xF2FDE38B EQ PUSH2 0x28F JUMPI POP PUSH4 0xFC0C546A EQ PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x320 JUMPI PUSH2 0x2AA PUSH2 0x1F88 JUMP JUMPDEST SWAP1 PUSH2 0x2B3 PUSH2 0x20C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x30A JUMPI POP POP PUSH1 0x0 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x320 JUMPI PUSH2 0x33F PUSH2 0x20C9 JUMP JUMPDEST PUSH2 0x350 PUSH1 0xFF PUSH1 0x5 SLOAD PUSH1 0x8 SHR AND PUSH2 0x238C JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD SWAP1 DUP5 SWAP1 SSTORE DUP2 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP5 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD SUB DUP2 DUP8 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x453 JUMPI DUP5 SWAP2 PUSH2 0x425 JUMPI JUMPDEST POP ISZERO PUSH2 0x3EE JUMPI DUP3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x15DA5D1A191C985DD85B0819985A5B1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x446 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x44C JUMPI JUMPDEST PUSH2 0x43E DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2221 JUMP JUMPDEST CODESIZE PUSH2 0x3E4 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x434 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x56B JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x56B JUMPI DUP4 CALLDATALOAD SWAP1 PUSH1 0x3 SLOAD DUP3 LT ISZERO PUSH2 0x56B JUMPI POP PUSH2 0x489 SWAP1 PUSH2 0x2079 JUMP JUMPDEST POP SWAP3 DUP3 MLOAD SWAP4 PUSH1 0x0 SWAP2 DUP2 SLOAD SWAP3 PUSH1 0x1 SWAP4 DUP1 DUP6 SHR SWAP3 DUP6 DUP3 AND SWAP1 DUP2 ISZERO PUSH2 0x561 JUMPI JUMPDEST DUP8 DUP6 LT DUP3 EQ PUSH2 0x54E JUMPI POP DUP4 DUP10 MSTORE DUP9 SWAP3 SWAP2 DUP8 SWAP1 DUP3 ISZERO PUSH2 0x531 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x4F1 JUMPI JUMPDEST PUSH2 0x4D4 SWAP3 POP SUB DUP7 PUSH2 0x1FDE JUMP JUMPDEST ADD SLOAD PUSH2 0x4E9 DUP4 MLOAD SWAP5 DUP5 DUP7 SWAP6 DUP7 MSTORE DUP6 ADD SWAP1 PUSH2 0x2000 JUMP JUMPDEST SWAP2 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST POP POP DUP2 PUSH1 0x0 MSTORE DUP6 DUP5 DUP1 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x518 JUMPI POP POP PUSH2 0x4D4 SWAP4 POP DUP3 ADD ADD PUSH2 0x4C8 JUMP JUMPDEST DUP1 SWAP2 SWAP3 SWAP5 POP SLOAD DUP4 DUP6 DUP13 ADD ADD MSTORE ADD SWAP2 ADD DUP6 SWAP1 DUP6 DUP10 SWAP4 PUSH2 0x502 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP5 DUP3 ADD MSTORE PUSH2 0x4D4 SWAP5 ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD ADD SWAP2 POP PUSH2 0x4C8 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 SWAP1 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x4A6 JUMP JUMPDEST DUP1 REVERT JUMPDEST PUSH2 0x2040 JUMP JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x320 JUMPI PUSH2 0x58E PUSH2 0x229B JUMP JUMPDEST PUSH2 0x596 PUSH2 0x227D JUMP JUMPDEST PUSH2 0x5A7 PUSH1 0xFF PUSH1 0x5 SLOAD PUSH1 0x8 SHR AND PUSH2 0x238C JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH1 0xC SLOAD AND SWAP3 PUSH32 0x0 SWAP3 PUSH1 0x6 SLOAD DUP4 MLOAD SWAP5 PUSH4 0x18896F4D PUSH1 0xE1 SHL DUP7 MSTORE DUP1 DUP5 DUP8 ADD MSTORE DUP2 PUSH1 0x24 DUP8 ADD MSTORE PUSH1 0x20 SWAP6 DUP7 DUP2 PUSH1 0x44 DUP2 DUP12 GAS STATICCALL DUP1 ISZERO PUSH2 0x8BA JUMPI DUP8 SWAP1 DUP11 SWAP1 PUSH2 0x8C4 JUMPI JUMPDEST DUP8 MLOAD PUSH3 0x7EEAC7 PUSH1 0xE1 SHL DUP2 MSTORE CALLER DUP9 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 POP DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD JUMPDEST SUB DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x8BA JUMPI DUP10 SWAP2 PUSH2 0x888 JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0x84E JUMPI DUP1 PUSH1 0x1 PUSH2 0x656 DUP6 PUSH2 0x2079 JUMP JUMPDEST POP ADD SLOAD LT PUSH2 0x813 JUMPI SWAP1 DUP9 SWAP3 SWAP2 PUSH2 0x68C PUSH32 0x0 DUP3 PUSH2 0x21E1 JUMP JUMPDEST SWAP9 PUSH2 0x6A5 DUP11 PUSH1 0x9 SLOAD PUSH2 0x6A0 DUP3 DUP3 LT ISZERO PUSH2 0x22BE JUMP JUMPDEST PUSH2 0x2214 JUMP JUMPDEST PUSH1 0x9 SSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0x80F JUMPI DUP8 MLOAD PUSH4 0x6F3DF851 PUSH1 0xE1 SHL DUP2 MSTORE CALLER DUP9 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x80 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x805 JUMPI PUSH2 0x7ED JUMPI JUMPDEST POP POP DUP3 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP4 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 DUP6 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 DUP11 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 PUSH32 0x0 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x7E3 JUMPI DUP7 SWAP2 PUSH2 0x7C6 JUMPI JUMPDEST POP ISZERO PUSH2 0x78F JUMPI POP SWAP1 PUSH32 0xEC68461F5D4CC45C89E914CB8826A966C73DD35E5F97815ECE0A01FFA4A025A6 SWAP2 MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST DUP3 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x151BDAD95B881C185E5BDD5D0819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x7DD SWAP2 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x44C JUMPI PUSH2 0x43E DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST CODESIZE PUSH2 0x757 JUMP JUMPDEST DUP4 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x7F6 SWAP1 PUSH2 0x1FB4 JUMP JUMPDEST PUSH2 0x801 JUMPI DUP6 CODESIZE PUSH2 0x6F7 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP7 ADD DUP9 SWAP1 MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C696420736861726520616D6F756E7473 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP7 ADD DUP9 SWAP1 MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F2077696E6E696E677320746F20636C61696D PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x8B3 JUMPI JUMPDEST PUSH2 0x89F DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8AE JUMPI MLOAD CODESIZE PUSH2 0x643 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x895 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x8EC JUMPI JUMPDEST PUSH2 0x8D9 DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8AE JUMPI DUP7 PUSH2 0x630 SWAP2 MLOAD PUSH2 0x60C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x8CF JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x320 JUMPI CALLDATALOAD PUSH2 0x959 PUSH1 0x3 SLOAD SWAP2 PUSH2 0x954 DUP4 DUP3 LT PUSH2 0x2134 JUMP JUMPDEST PUSH2 0x2079 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SWAP2 ADD SLOAD SWAP1 PUSH2 0x994 PUSH2 0x98F PUSH32 0x0 DUP1 SWAP5 PUSH2 0x2755 JUMP JUMPDEST PUSH2 0x29D6 JUMP JUMPDEST SWAP3 DUP6 SWAP3 DUP7 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0xA0A JUMPI POP POP POP POP PUSH1 0xF SIGNEXTEND SWAP1 DUP2 ISZERO PUSH2 0xA06 JUMPI DUP3 SHL PUSH1 0x17 SIGNEXTEND SDIV SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB NOT DUP4 SLT ISZERO DUP1 PUSH2 0x9F5 JUMPI JUMPDEST ISZERO PUSH2 0x56B JUMPI POP PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x9ED PUSH2 0x9E8 PUSH1 0x20 SWAP5 PUSH1 0xF SIGNEXTEND PUSH2 0x26E3 JUMP JUMPDEST PUSH2 0x267F JUMP JUMPDEST AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB DUP4 SGT ISZERO PUSH2 0x9C8 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH2 0xA34 PUSH2 0xA3A SWAP2 PUSH2 0xA2E PUSH2 0x98F DUP7 DUP7 PUSH2 0xA26 DUP12 PUSH2 0x2079 JUMP JUMPDEST POP ADD SLOAD PUSH2 0x2755 JUMP JUMPDEST SWAP1 PUSH2 0x269A JUMP JUMPDEST SWAP5 PUSH2 0x2504 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x99A JUMP JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x28B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH2 0xA5C PUSH2 0x1F88 JUMP JUMPDEST PUSH1 0xC SLOAD DUP3 MLOAD PUSH4 0x18896F4D PUSH1 0xE1 SHL DUP2 MSTORE PUSH32 0x0 DUP7 DUP3 ADD MSTORE PUSH1 0x24 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x20 SWAP6 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP7 DUP4 PUSH1 0x44 DUP2 DUP6 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0xB78 JUMPI SWAP1 DUP8 SWAP4 SWAP3 SWAP2 DUP8 SWAP4 PUSH2 0xB43 JUMPI JUMPDEST POP DUP6 MLOAD PUSH3 0x7EEAC7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP1 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP4 SWAP2 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD JUMPDEST SUB SWAP2 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0xB38 JUMPI SWAP3 PUSH2 0xB09 JUMPI JUMPDEST POP MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xB31 JUMPI JUMPDEST PUSH2 0xB21 DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8AE JUMPI MLOAD SWAP1 DUP4 PUSH2 0xB02 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xB17 JUMP JUMPDEST DUP3 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP2 SWAP6 SWAP3 SWAP5 POP RETURNDATASIZE DUP4 GT PUSH2 0xB71 JUMPI JUMPDEST PUSH2 0xB5B DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8AE JUMPI SWAP2 MLOAD DUP7 SWAP3 SWAP1 SWAP2 PUSH2 0xAF1 PUSH2 0xAC2 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xB51 JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH1 0xA SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x320 JUMPI DUP2 SLOAD TIMESTAMP LT PUSH2 0xC2C JUMPI DUP3 PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE PUSH32 0xB5F6BF058282D5CC003EFC735B9EE453BBD7F9BEF4C6DB6300D095F3EEFAC28 DUP2 DUP1 LOG1 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13585C9AD95D081B9BDD081BDD995C881E595D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x205D JUMP JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI PUSH2 0xC7B CALLDATASIZE PUSH2 0x1F9E JUMP JUMPDEST PUSH2 0xC86 SWAP4 SWAP2 SWAP4 PUSH2 0x229B JUMP JUMPDEST PUSH2 0xC8E PUSH2 0x227D JUMP JUMPDEST PUSH2 0xC9D PUSH1 0xFF PUSH1 0x5 SLOAD AND ISZERO PUSH2 0x20F5 JUMP JUMPDEST PUSH2 0xCAA PUSH1 0x3 SLOAD DUP6 LT PUSH2 0x2134 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF7B JUMPI PUSH2 0x2710 DUP2 LT ISZERO PUSH2 0xF38 JUMPI PUSH2 0xD27 PUSH2 0xD14 PUSH2 0x9E8 PUSH2 0xD00 PUSH2 0xCD6 PUSH2 0xCD1 PUSH2 0x2513 JUMP JUMPDEST PUSH2 0x2579 JUMP JUMPDEST PUSH1 0x1 PUSH2 0xCE1 DUP11 PUSH2 0x2079 JUMP JUMPDEST POP ADD PUSH2 0xCEE DUP8 DUP3 SLOAD PUSH2 0x2172 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xCFB PUSH2 0xCD1 PUSH2 0x2513 JUMP JUMPDEST PUSH2 0x26BF JUMP JUMPDEST PUSH2 0xD0F DUP10 DUP3 PUSH1 0xF SIGNEXTEND SLT ISZERO PUSH2 0x2195 JUMP JUMPDEST PUSH2 0x26E3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0xD SLOAD SWAP2 AND PUSH2 0x21E1 JUMP JUMPDEST SWAP3 PUSH1 0x64 PUSH2 0xD54 PUSH32 0x0 DUP7 PUSH2 0x21E1 JUMP JUMPDEST DIV SWAP4 PUSH1 0x32 DUP6 MUL DUP6 DUP2 DIV PUSH1 0x32 EQ DUP7 ISZERO OR ISZERO PUSH2 0xF25 JUMPI PUSH1 0x64 SWAP1 DIV SWAP1 DUP8 PUSH2 0xD82 PUSH2 0xD7B DUP5 DUP10 PUSH2 0x2214 JUMP JUMPDEST SWAP8 DUP4 PUSH2 0x2172 JUMP JUMPDEST DUP5 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP2 DUP10 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP8 SWAP2 DUP2 SWAP1 PUSH1 0x60 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 SWAP1 SUB DUP2 DUP8 PUSH32 0x0 DUP8 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xF1B JUMPI SWAP1 PUSH2 0xDFB SWAP2 DUP6 SWAP2 PUSH2 0xEFD JUMPI JUMPDEST POP PUSH2 0x2239 JUMP JUMPDEST PUSH1 0xC SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x320 JUMPI DUP6 MLOAD PUSH4 0x2991FA3B PUSH1 0xE2 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 DUP4 MSTORE PUSH32 0x0 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0x60 DUP4 ADD DUP9 SWAP1 MSTORE SWAP2 DUP4 SWAP2 DUP4 SWAP2 DUP3 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x80 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x805 JUMPI PUSH2 0xEDF JUMPI JUMPDEST POP POP PUSH32 0xEA2CC1A2A0FCFECEF8B5FF9BE41F8C0CA3770265A060B00DE53118F88C91DFA SWAP6 PUSH2 0xEAA PUSH2 0xEA2 PUSH2 0xED5 SWAP6 SWAP5 PUSH2 0xEB5 SWAP5 PUSH2 0x2172 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x2172 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0xB SLOAD PUSH2 0x2172 JUMP JUMPDEST PUSH1 0xB SSTORE MLOAD SWAP3 DUP4 SWAP3 CALLER SWAP7 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST PUSH2 0xEEB SWAP1 SWAP5 SWAP4 SWAP5 PUSH2 0x1FB4 JUMP JUMPDEST PUSH2 0xEF9 JUMPI DUP8 CODESIZE SWAP4 SWAP3 SWAP4 PUSH2 0xE6A JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST PUSH2 0xF15 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x44C JUMPI PUSH2 0x43E DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST CODESIZE PUSH2 0xDF5 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 DUP6 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265207472616465206C696D6974206578636565646564000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D75737420627579206174206C65617374206F6E652073686172650000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0xC SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x56B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x56B JUMPI POP PUSH1 0x1 PUSH2 0x1011 PUSH1 0x20 SWAP4 CALLDATALOAD PUSH2 0x954 PUSH1 0x3 SLOAD DUP3 LT PUSH2 0x23D1 JUMP JUMPDEST POP ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x32 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH1 0x6 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x56B JUMPI POP PUSH2 0x1068 CALLDATASIZE PUSH2 0x1F9E JUMP JUMPDEST DUP4 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 DUP4 MSTORE DUP5 DUP3 ADD MSTORE DUP4 DUP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP3 DUP2 DUP5 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT OR PUSH2 0x109E JUMPI POP DUP3 PUSH1 0x20 SWAP5 MSTORE MLOAD SWAP1 KECCAK256 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x41 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x56B JUMPI POP PUSH2 0x10C5 CALLDATASIZE PUSH2 0x1F9E JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x1 DUP3 GT ISZERO PUSH2 0x10F4 JUMPI PUSH1 0x20 DUP5 PUSH2 0x10ED DUP6 PUSH2 0x10E8 PUSH2 0x10E3 DUP8 PUSH2 0x2667 JUMP JUMPDEST PUSH2 0x28C5 JUMP JUMPDEST PUSH2 0x2708 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4174206C656173742074776F206F7574636F6D65732072657175697265640000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x5 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH1 0x9 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH1 0xB SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH1 0xD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xA06 JUMPI DUP3 CALLDATALOAD SWAP3 PUSH2 0x11F9 PUSH2 0x20C9 JUMP JUMPDEST DUP2 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP3 DUP3 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP7 SWAP1 MSTORE DUP5 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD SUB DUP2 DUP10 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x7E3 JUMPI DUP7 SWAP2 PUSH2 0x12E3 JUMPI JUMPDEST POP ISZERO PUSH2 0x12A2 JUMPI POP SWAP1 PUSH32 0x543BA50A5EEC5E6178218E364B1D0F396157B3C8FA278522C2CB7FD99407D474 SWAP2 PUSH2 0x1295 DUP5 PUSH1 0x9 SLOAD PUSH2 0x2172 JUMP JUMPDEST PUSH1 0x9 SSTORE MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST DUP3 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C2066756E64207472616E73666572206661696C656400000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x12FA SWAP2 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x44C JUMPI PUSH2 0x43E DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST CODESIZE PUSH2 0x125F JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP2 PUSH2 0x133E PUSH2 0x20C9 JUMP JUMPDEST PUSH2 0x1346 PUSH2 0x227D JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH1 0x3 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x8 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x56B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x56B JUMPI PUSH2 0x13F7 PUSH2 0x20C9 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x5 SLOAD PUSH1 0x8 SHR AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x320 JUMPI PUSH1 0x20 SWAP3 POP SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x2 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH2 0x10ED PUSH2 0x1582 PUSH2 0xD14 PUSH2 0x9E8 PUSH2 0xD0F PUSH2 0x157C PUSH2 0x1501 CALLDATASIZE PUSH2 0x1F9E JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1510 PUSH1 0x3 SLOAD DUP3 LT PUSH2 0x23D1 JUMP JUMPDEST PUSH2 0x151B DUP4 ISZERO ISZERO PUSH2 0x2415 JUMP JUMPDEST PUSH2 0x1546 PUSH32 0x0 ISZERO ISZERO PUSH2 0x2474 JUMP JUMPDEST PUSH2 0x154E PUSH2 0x2513 JUMP JUMPDEST SWAP1 PUSH2 0x1576 PUSH2 0x156F PUSH2 0x155E DUP5 PUSH2 0x2579 JUMP JUMPDEST SWAP6 PUSH2 0x1569 DUP5 DUP7 PUSH2 0x24D8 JUMP JUMPDEST MLOAD PUSH2 0x2214 JUMP JUMPDEST SWAP2 DUP4 PUSH2 0x24D8 JUMP JUMPDEST MSTORE PUSH2 0x2579 JUMP JUMPDEST SWAP1 PUSH2 0x26BF JUMP JUMPDEST PUSH1 0x64 PUSH2 0x15AE PUSH32 0x0 DUP4 PUSH2 0x21E1 JUMP JUMPDEST DIV SWAP1 PUSH2 0x2172 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH2 0x10ED PUSH2 0x1582 PUSH2 0xD14 PUSH2 0x9E8 PUSH2 0xD0F PUSH2 0xCFB PUSH2 0x15DA CALLDATASIZE PUSH2 0x1F9E JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x15E9 PUSH1 0x3 SLOAD DUP3 LT PUSH2 0x23D1 JUMP JUMPDEST PUSH2 0x15F4 DUP4 ISZERO ISZERO PUSH2 0x2415 JUMP JUMPDEST PUSH2 0x161F PUSH32 0x0 ISZERO ISZERO PUSH2 0x2474 JUMP JUMPDEST PUSH2 0x1627 PUSH2 0x2513 JUMP JUMPDEST SWAP1 PUSH2 0x1576 PUSH2 0x156F PUSH2 0x1637 DUP5 PUSH2 0x2579 JUMP JUMPDEST SWAP6 PUSH2 0x1642 DUP5 DUP7 PUSH2 0x24D8 JUMP JUMPDEST MLOAD PUSH2 0x2172 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x56B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x56B JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x7 SLOAD SWAP2 PUSH1 0x1 DUP4 DUP2 SHR SWAP1 DUP1 DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0x178E JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP5 LT DUP2 EQ PUSH2 0x177B JUMPI DUP4 DUP9 MSTORE DUP8 SWAP5 SWAP4 SWAP3 SWAP2 DUP8 SWAP1 DUP3 ISZERO PUSH2 0x1759 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x16FC JUMPI JUMPDEST POP POP PUSH2 0x16F8 SWAP3 SWAP2 PUSH2 0x16E9 SWAP2 SUB DUP6 PUSH2 0x1FDE JUMP JUMPDEST MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x2000 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP1 DUP6 SWAP3 POP PUSH1 0x7 PUSH1 0x0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x1741 JUMPI POP POP POP DUP3 ADD ADD DUP2 PUSH2 0x16E9 PUSH2 0x16D7 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP11 ADD DUP7 ADD MSTORE DUP9 SWAP6 POP DUP8 SWAP5 SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x172B JUMP JUMPDEST PUSH1 0xFF NOT AND DUP7 DUP3 ADD MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP DUP4 SWAP2 POP PUSH2 0x16E9 SWAP1 POP PUSH2 0x16D7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x22 DUP10 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x16B1 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x5 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x320 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 DUP2 AND SWAP4 SWAP2 SWAP3 SWAP1 PUSH2 0x184A SWAP1 PUSH1 0x20 SWAP1 PUSH2 0x1810 CALLER DUP9 EQ PUSH2 0x230A JUMP JUMPDEST PUSH1 0xB SLOAD SWAP6 DUP7 SWAP2 DUP10 PUSH1 0xB SSTORE DUP10 DUP8 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 MSTORE DUP11 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x40 DUP2 ADD SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 PUSH32 0x0 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x7E3 JUMPI DUP7 SWAP2 PUSH2 0x18EC JUMPI JUMPDEST POP ISZERO PUSH2 0x18B2 JUMPI POP PUSH32 0xC0819C13BE868895EB93E40EACEB96DE976442FA1D404E5C55F14BB65A8C489A SWAP2 PUSH1 0x20 SWAP2 MLOAD SWAP1 DUP2 MSTORE LOG2 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x119959481DDA5D1A191C985DD85B0819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x1904 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x44C JUMPI PUSH2 0x43E DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST CODESIZE PUSH2 0x187E JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x320 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0x1995 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SLOAD AND CALLER EQ PUSH2 0x230A JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP2 PUSH1 0xFF DUP4 AND ISZERO PUSH2 0x1A02 JUMPI POP POP DUP1 PUSH2 0x19CE PUSH1 0xFF PUSH2 0x100 SWAP4 PUSH1 0x8 SHR AND ISZERO PUSH2 0x19BC DUP2 PUSH2 0x2347 JUMP JUMPDEST PUSH2 0x19C9 PUSH1 0x3 SLOAD DUP7 LT PUSH2 0x2134 JUMP JUMPDEST PUSH2 0x2347 JUMP JUMPDEST DUP3 PUSH1 0x6 SSTORE PUSH2 0xFF00 NOT AND OR PUSH1 0x5 SSTORE PUSH32 0xBDB6AF8CAA3A0B8C130FD2AB4C4930E3FD8987C9730340729078E256BBC4B543 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x26B0B935B2BA1039BA34B6361037B832B7 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x320 JUMPI PUSH2 0x1A53 PUSH2 0x20C9 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x1A95 JUMPI POP PUSH1 0xFF NOT AND PUSH1 0x2 SSTORE MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST DUP3 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0xFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x28B JUMPI PUSH2 0x1AF1 CALLDATASIZE PUSH2 0x1F9E JUMP JUMPDEST PUSH2 0x1AF9 PUSH2 0x229B JUMP JUMPDEST PUSH2 0x1B01 PUSH2 0x227D JUMP JUMPDEST PUSH2 0x1B10 PUSH1 0xFF PUSH1 0x5 SLOAD AND ISZERO PUSH2 0x20F5 JUMP JUMPDEST PUSH2 0x1B1D PUSH1 0x3 SLOAD DUP4 LT PUSH2 0x2134 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1EB9 JUMPI PUSH1 0xC SLOAD DUP4 MLOAD PUSH4 0x18896F4D PUSH1 0xE1 SHL DUP2 MSTORE PUSH32 0x0 DUP8 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 DUP4 AND SWAP1 DUP5 DUP2 PUSH1 0x44 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1DE9 JUMPI SWAP1 DUP6 SWAP2 DUP11 SWAP2 PUSH2 0x1E84 JUMPI JUMPDEST POP DUP9 MLOAD PUSH3 0x7EEAC7 PUSH1 0xE1 SHL DUP2 MSTORE CALLER DUP2 DUP14 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 DUP4 SWAP2 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1E7A JUMPI SWAP1 DUP6 SWAP2 DUP10 SWAP2 PUSH2 0x1E49 JUMPI JUMPDEST POP LT PUSH2 0x1E06 JUMPI PUSH2 0x1C15 PUSH2 0xD14 PUSH2 0x9E8 PUSH2 0x1C06 PUSH2 0x1BE1 PUSH2 0xCD1 PUSH2 0x2513 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1BEC DUP12 PUSH2 0x2079 JUMP JUMPDEST POP ADD PUSH2 0x1BF9 DUP11 DUP3 SLOAD PUSH2 0x2214 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x157C PUSH2 0xCD1 PUSH2 0x2513 JUMP JUMPDEST PUSH2 0xD0F DUP12 DUP3 PUSH1 0xF SIGNEXTEND SLT ISZERO PUSH2 0x2195 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x1C41 PUSH32 0x0 DUP4 PUSH2 0x21E1 JUMP JUMPDEST DIV PUSH1 0x32 DUP2 MUL DUP2 DUP2 DIV PUSH1 0x32 EQ DUP3 ISZERO OR ISZERO PUSH2 0x1DF3 JUMPI SWAP2 PUSH2 0xEAA PUSH2 0x1CA3 SWAP3 PUSH2 0x1C7C PUSH1 0x64 PUSH2 0x1C9D SWAP12 SWAP13 SWAP14 SWAP15 SWAP8 SWAP7 DIV SWAP2 PUSH2 0x1C76 DUP4 DUP3 PUSH2 0x2214 JUMP JUMPDEST SWAP5 PUSH2 0x2214 JUMP JUMPDEST SWAP10 DUP2 PUSH2 0x1C97 PUSH2 0x1C8F DUP14 SWAP5 PUSH1 0x9 SLOAD SWAP6 PUSH2 0x2172 JUMP JUMPDEST DUP5 LT ISZERO PUSH2 0x22BE JUMP JUMPDEST DUP12 PUSH2 0x2172 JUMP JUMPDEST SWAP1 PUSH2 0x2214 JUMP JUMPDEST PUSH1 0xB SSTORE DUP9 DUP4 PUSH1 0xC SLOAD AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH2 0x28B JUMPI DUP10 MLOAD PUSH4 0x6F3DF851 PUSH1 0xE1 SHL DUP2 MSTORE CALLER DUP6 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 ADD DUP11 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP9 SWAP1 MSTORE SWAP3 DUP4 SWAP2 DUP3 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x80 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1DE9 JUMPI PUSH2 0x1DCE JUMPI JUMPDEST POP DUP7 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 DUP4 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 DUP12 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD JUMPDEST SUB SWAP3 PUSH32 0x0 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x1DC4 JUMPI PUSH2 0xED5 SWAP3 PUSH32 0x19EED797248695407E185A0977FA0DBA8BBAABA6C2F6F4A8BDF6FB32E62BA23 SWAP7 SWAP8 SWAP3 PUSH2 0x1D8A SWAP3 DUP11 SWAP3 PUSH2 0x1DA7 JUMPI JUMPDEST POP POP PUSH2 0x2239 JUMP JUMPDEST MLOAD SWAP3 DUP4 SWAP3 CALLER SWAP7 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH2 0x1DBD SWAP3 POP DUP1 RETURNDATASIZE LT PUSH2 0x44C JUMPI PUSH2 0x43E DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST DUP10 DUP1 PUSH2 0x1D83 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x1D23 SWAP3 DUP5 SWAP3 SWAP10 PUSH2 0x1DDF DUP9 SWAP4 PUSH2 0x1FB4 JUMP JUMPDEST SWAP10 SWAP3 POP SWAP3 POP PUSH2 0x1CF8 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x11 DUP12 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP5 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682073686172657320746F2073656C6C00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP6 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x1E73 JUMPI JUMPDEST PUSH2 0x1E62 DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xEF9 JUMPI DUP5 SWAP1 MLOAD DUP11 PUSH2 0x1BC4 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1E58 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP2 SWAP4 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x1EB2 JUMPI JUMPDEST PUSH2 0x1E9B DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1EAE JUMPI MLOAD DUP5 SWAP1 PUSH2 0x1BAF PUSH2 0x1B89 JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x1E91 JUMP JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP8 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742073656C6C206174206C65617374206F6E6520736861726500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x320 JUMPI PUSH2 0x1F17 PUSH2 0x1F88 JUMP JUMPDEST PUSH2 0x1F1F PUSH2 0x20C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x1F4C JUMPI POP POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C6964206F7261636C652061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x8AE JUMPI JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x8AE JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1FC8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1FC8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x202C JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x200B JUMP JUMPDEST CALLVALUE PUSH2 0x8AE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x8AE JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x2710 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x8AE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x8AE JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x64 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x20B3 JUMPI PUSH1 0x3 PUSH1 0x0 MSTORE PUSH1 0x1 SHL PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x20DD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x20FC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x13585C9AD95D081A5CC818DB1BDCD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x213B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C6964206F7574636F6D65 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x217F JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x219C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F737420646966666572656E6365206973206E656761746976650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x217F JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x21FE JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x217F JUMPI JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x8AE JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x8AE JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2240 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH2 0x2289 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x22AC JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x22C5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206D61726B6574206D616B65722066756E647300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2311 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x234E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x13585C9AD95D08185B1C9958591E481CD95D1D1B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2393 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x13585C9AD95D081B9BDD081CD95D1D1B1959081E595D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x23D8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x92DCECC2D8D2C840DEEAE8C6DEDACA40D2DCC8CAF PUSH1 0x5B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x241C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E756D626572206F6620736861726573206D7573742062652067726561746572 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x207468616E207A65726F PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x247B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C697175696469747920706172616D657465722062206D757374206265206772 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x6561746572207468616E207A65726F PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x20B3 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1FC8 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x217F JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x251F DUP2 PUSH2 0x24EC JUMP JUMPDEST SWAP1 PUSH2 0x252D PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1FDE JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x1F NOT PUSH2 0x253C DUP3 PUSH2 0x24EC JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2552 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH2 0x2561 PUSH2 0x2574 SWAP4 PUSH2 0x2079 JUMP JUMPDEST POP ADD SLOAD PUSH2 0x256E DUP3 DUP7 PUSH2 0x24D8 JUMP JUMPDEST MSTORE PUSH2 0x2504 JUMP JUMPDEST PUSH2 0x2546 JUMP JUMPDEST SWAP1 DUP2 MLOAD ISZERO PUSH2 0x262A JUMPI SWAP1 PUSH1 0x0 DUP1 SWAP2 PUSH32 0x0 SWAP2 JUMPDEST DUP2 MLOAD DUP5 LT ISZERO PUSH2 0x25DC JUMPI PUSH2 0x25D0 PUSH2 0x25D6 SWAP2 PUSH2 0xA2E PUSH2 0x98F DUP7 PUSH2 0x25CA DUP10 DUP9 PUSH2 0x24D8 JUMP JUMPDEST MLOAD PUSH2 0x2755 JUMP JUMPDEST SWAP4 PUSH2 0x2504 JUMP JUMPDEST SWAP3 PUSH2 0x25A9 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x25EB PUSH2 0x25F1 SWAP2 PUSH2 0x2667 JUMP JUMPDEST SWAP2 PUSH2 0x28C5 JUMP JUMPDEST PUSH1 0xF SIGNEXTEND SWAP1 PUSH1 0xF SIGNEXTEND MUL PUSH1 0x40 SAR PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB NOT DUP2 SLT ISZERO DUP1 PUSH2 0x2619 JUMPI JUMPDEST ISZERO PUSH2 0x8AE JUMPI PUSH1 0xF SIGNEXTEND SWAP1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB DUP2 SGT ISZERO PUSH2 0x260E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6F206F7574636F6D657320617661696C61626C65 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH8 0x7FFFFFFFFFFFFFFF DUP2 GT PUSH2 0x8AE JUMPI PUSH1 0x40 SHL PUSH1 0xF SIGNEXTEND SWAP1 JUMP JUMPDEST PUSH1 0xF SIGNEXTEND PUSH1 0x0 DUP2 SLT PUSH2 0x8AE JUMPI PUSH1 0x40 SAR PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xF SIGNEXTEND SWAP1 PUSH1 0xF SIGNEXTEND ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB NOT DUP2 SLT ISZERO DUP1 PUSH2 0x2619 JUMPI ISZERO PUSH2 0x8AE JUMPI PUSH1 0xF SIGNEXTEND SWAP1 JUMP JUMPDEST PUSH1 0xF SWAP2 DUP3 SIGNEXTEND SWAP2 SIGNEXTEND SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB NOT DUP2 SLT ISZERO DUP1 PUSH2 0x2619 JUMPI ISZERO PUSH2 0x8AE JUMPI PUSH1 0xF SIGNEXTEND SWAP1 JUMP JUMPDEST PUSH1 0x40 SHL PUSH1 0x17 SIGNEXTEND PUSH1 0x40 SAR PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB NOT DUP2 SLT ISZERO DUP1 PUSH2 0x2619 JUMPI ISZERO PUSH2 0x8AE JUMPI PUSH1 0xF SIGNEXTEND SWAP1 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x274E JUMPI PUSH1 0xF SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 DUP2 SLT PUSH2 0x28B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND DUP2 MUL PUSH1 0x40 SHR SWAP3 PUSH1 0x80 SHR MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB DUP2 GT PUSH2 0x28B JUMPI PUSH1 0x40 SHL SWAP1 DUP3 NOT DUP3 GT PUSH2 0x56B JUMPI POP ADD SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 DUP1 ISZERO PUSH2 0x8AE JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB DUP4 GT PUSH2 0x279E JUMPI POP PUSH2 0x2779 SWAP2 PUSH1 0x40 SHL PUSH2 0x21F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 DUP2 GT PUSH2 0x8AE JUMPI AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB DUP2 GT PUSH2 0x8AE JUMPI PUSH1 0xF SIGNEXTEND SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xC0 DUP4 DUP2 SHR SWAP4 DUP5 PUSH5 0x100000000 DUP2 LT ISZERO PUSH2 0x28B8 JUMPI JUMPDEST DUP1 PUSH3 0x10000 PUSH1 0x2 SWAP3 LT ISZERO PUSH2 0x28AC JUMPI JUMPDEST PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x28A0 JUMPI JUMPDEST PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x2894 JUMPI JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x2889 JUMPI JUMPDEST LT ISZERO PUSH2 0x287F JUMPI JUMPDEST PUSH2 0x2807 PUSH1 0x0 NOT SWAP3 DUP3 PUSH1 0x1 DUP6 DUP8 ADD PUSH1 0xBE NOT DUP5 ADD SHR ADD SWAP2 PUSH1 0xFF SUB SHL PUSH2 0x21F4 JUMP JUMPDEST SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 DUP8 GT PUSH2 0x801 JUMPI DUP5 PUSH1 0x80 SHR DUP8 MUL SWAP2 DUP6 AND DUP8 MUL SWAP1 DUP5 DUP2 SWAP5 PUSH1 0x40 SHL SWAP2 DUP4 DUP4 LT PUSH2 0x2875 JUMPI JUMPDEST POP POP SUB SWAP5 DUP2 PUSH1 0x80 SHL SWAP4 DUP5 DUP8 LT PUSH2 0x286B JUMPI JUMPDEST POP POP PUSH1 0x80 SHR SUB PUSH2 0x2860 JUMPI PUSH2 0x2858 SWAP3 SUB PUSH2 0x21F4 JUMP JUMPDEST SWAP1 JUMPDEST ADD PUSH2 0x2779 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 PUSH2 0x285A JUMP JUMPDEST SWAP1 SWAP3 ADD SWAP2 CODESIZE PUSH2 0x2844 JUMP JUMPDEST ADD SWAP4 POP DUP5 CODESIZE PUSH2 0x2833 JUMP JUMPDEST SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x27E9 JUMP JUMPDEST SWAP3 DUP2 ADD SWAP3 DUP2 SHR PUSH2 0x27E2 JUMP JUMPDEST PUSH1 0x4 SWAP4 DUP5 ADD SWAP4 SHR PUSH2 0x27D8 JUMP JUMPDEST PUSH1 0x8 SWAP4 DUP5 ADD SWAP4 SHR PUSH2 0x27CE JUMP JUMPDEST PUSH1 0x10 SWAP4 DUP5 ADD SWAP4 SHR PUSH2 0x27C3 JUMP JUMPDEST POP PUSH1 0xE0 SWAP2 POP DUP1 DUP3 SHR PUSH2 0x27B4 JUMP JUMPDEST PUSH1 0xF SIGNEXTEND PUSH1 0x0 DUP1 DUP3 SGT ISZERO PUSH2 0x56B JUMPI DUP1 DUP3 PUSH9 0x10000000000000000 DUP5 SLT ISZERO PUSH2 0x29C9 JUMPI JUMPDEST DUP1 PUSH5 0x100000000 PUSH1 0x2 SWAP3 SLT ISZERO PUSH2 0x29BD JUMPI JUMPDEST PUSH3 0x10000 DUP2 SLT ISZERO PUSH2 0x29B1 JUMPI JUMPDEST PUSH2 0x100 DUP2 SLT ISZERO PUSH2 0x29A5 JUMPI JUMPDEST PUSH1 0x10 DUP2 SLT ISZERO PUSH2 0x2999 JUMPI JUMPDEST PUSH1 0x4 DUP2 SLT ISZERO PUSH2 0x298E JUMPI JUMPDEST SLT ISZERO PUSH2 0x2986 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x3F SHL SWAP3 PUSH1 0x3F NOT DUP3 ADD PUSH1 0x40 SHL SWAP3 SWAP2 PUSH1 0x7F SWAP2 SWAP1 DUP3 SUB SHL JUMPDEST DUP3 DUP6 SGT PUSH2 0x2968 JUMPI POP POP POP PUSH16 0xB17217F7D1CF79ABC9E3B39803F2F6AF SWAP2 POP PUSH1 0xF SIGNEXTEND MUL PUSH1 0x80 SAR SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP6 SWAP1 SAR SWAP5 SWAP1 DUP1 MUL PUSH1 0xFF DUP2 SWAP1 SHR SWAP2 DUP3 MUL SWAP1 SWAP5 ADD SWAP4 SWAP1 DUP3 ADD SHR PUSH2 0x2941 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2929 JUMP JUMPDEST SWAP2 DUP2 ADD SWAP2 DUP2 SAR PUSH2 0x2922 JUMP JUMPDEST PUSH1 0x4 SWAP3 DUP4 ADD SWAP3 SAR PUSH2 0x2918 JUMP JUMPDEST PUSH1 0x8 SWAP3 DUP4 ADD SWAP3 SAR PUSH2 0x290E JUMP JUMPDEST PUSH1 0x10 SWAP3 DUP4 ADD SWAP3 SAR PUSH2 0x2903 JUMP JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SAR PUSH2 0x28F7 JUMP JUMPDEST POP PUSH1 0x40 SWAP1 POP DUP3 DUP2 SAR PUSH2 0x28E6 JUMP JUMPDEST PUSH1 0xF SIGNEXTEND PUSH1 0x1 PUSH1 0x46 SHL DUP2 SLT ISZERO PUSH2 0x8AE JUMPI PUSH9 0x3FFFFFFFFFFFFFFFFF NOT DUP2 SLT PUSH2 0x2A1B JUMPI PUSH17 0x171547652B82FE1777D0FFDA0D23A7D12 PUSH2 0x2A18 SWAP2 MUL PUSH1 0x80 SAR PUSH1 0xF SIGNEXTEND PUSH2 0x2A21 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x46 SHL DUP2 SLT ISZERO PUSH2 0x8AE JUMPI PUSH9 0x3FFFFFFFFFFFFFFFFF NOT DUP2 SLT PUSH2 0x35BF JUMPI PUSH1 0x1 PUSH1 0x7F SHL SWAP1 PUSH1 0x0 SWAP4 DUP5 PUSH1 0x1 PUSH1 0x3F SHL DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x35A7 JUMPI JUMPDEST DUP5 PUSH8 0x4000000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x358A JUMPI JUMPDEST DUP5 PUSH8 0x2000000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x356D JUMPI JUMPDEST DUP5 PUSH8 0x1000000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3550 JUMPI JUMPDEST DUP5 PUSH8 0x800000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3533 JUMPI JUMPDEST DUP5 PUSH8 0x400000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3516 JUMPI JUMPDEST DUP5 PUSH8 0x200000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x34F9 JUMPI JUMPDEST DUP5 PUSH8 0x100000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x34DC JUMPI JUMPDEST DUP5 PUSH7 0x80000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x34BF JUMPI JUMPDEST DUP5 PUSH7 0x40000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x34A2 JUMPI JUMPDEST DUP5 PUSH7 0x20000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3485 JUMPI JUMPDEST DUP5 PUSH7 0x10000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3468 JUMPI JUMPDEST DUP5 PUSH7 0x8000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x344B JUMPI JUMPDEST DUP5 PUSH7 0x4000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x342E JUMPI JUMPDEST DUP5 PUSH7 0x2000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3411 JUMPI JUMPDEST DUP5 PUSH7 0x1000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x33F4 JUMPI JUMPDEST DUP5 PUSH6 0x800000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x33D7 JUMPI JUMPDEST DUP5 PUSH6 0x400000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x33BA JUMPI JUMPDEST DUP5 PUSH6 0x200000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x339D JUMPI JUMPDEST DUP5 PUSH6 0x100000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3380 JUMPI JUMPDEST DUP5 PUSH6 0x80000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3363 JUMPI JUMPDEST DUP5 PUSH6 0x40000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3346 JUMPI JUMPDEST DUP5 PUSH6 0x20000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3329 JUMPI JUMPDEST DUP5 PUSH6 0x10000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x330C JUMPI JUMPDEST DUP5 PUSH5 0x8000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x32EF JUMPI JUMPDEST DUP5 PUSH5 0x4000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x32D2 JUMPI JUMPDEST DUP5 PUSH5 0x2000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x32B5 JUMPI JUMPDEST DUP5 PUSH5 0x1000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3298 JUMPI JUMPDEST DUP5 PUSH5 0x800000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x327B JUMPI JUMPDEST DUP5 PUSH5 0x400000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x325E JUMPI JUMPDEST DUP5 PUSH5 0x200000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3241 JUMPI JUMPDEST DUP5 PUSH5 0x100000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3224 JUMPI JUMPDEST DUP5 PUSH4 0x80000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3207 JUMPI JUMPDEST DUP5 PUSH4 0x40000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x31EA JUMPI JUMPDEST DUP5 PUSH4 0x20000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x31CD JUMPI JUMPDEST DUP5 PUSH4 0x10000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x31B0 JUMPI JUMPDEST DUP5 PUSH4 0x8000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3193 JUMPI JUMPDEST DUP5 PUSH4 0x4000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3176 JUMPI JUMPDEST DUP5 PUSH4 0x2000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3159 JUMPI JUMPDEST DUP5 PUSH4 0x1000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x313C JUMPI JUMPDEST DUP5 PUSH3 0x800000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x311F JUMPI JUMPDEST DUP5 PUSH3 0x400000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3102 JUMPI JUMPDEST DUP5 PUSH3 0x200000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x30E5 JUMPI JUMPDEST DUP5 PUSH3 0x100000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x30C8 JUMPI JUMPDEST DUP5 PUSH3 0x80000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x30AB JUMPI JUMPDEST DUP5 PUSH3 0x40000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x308E JUMPI JUMPDEST DUP5 PUSH3 0x20000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3071 JUMPI JUMPDEST DUP5 PUSH3 0x10000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3054 JUMPI JUMPDEST DUP5 PUSH2 0x8000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3037 JUMPI JUMPDEST DUP5 PUSH2 0x4000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x301A JUMPI JUMPDEST DUP5 PUSH2 0x2000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x2FFD JUMPI JUMPDEST DUP5 PUSH2 0x1000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x2FE0 JUMPI JUMPDEST DUP5 PUSH2 0x800 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x2FC3 JUMPI JUMPDEST DUP5 PUSH2 0x400 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x2FA6 JUMPI JUMPDEST DUP5 PUSH2 0x200 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x2F89 JUMPI JUMPDEST DUP5 PUSH2 0x100 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x2F6C JUMPI JUMPDEST DUP5 PUSH1 0x80 SWAP2 DUP2 DUP4 DUP3 AND DUP8 SIGNEXTEND SGT PUSH2 0x2F50 JUMPI JUMPDEST DUP2 PUSH1 0x40 DUP3 AND DUP8 SIGNEXTEND SGT PUSH2 0x2F34 JUMPI JUMPDEST DUP2 PUSH1 0x20 DUP3 AND DUP8 SIGNEXTEND SGT PUSH2 0x2F18 JUMPI JUMPDEST DUP2 PUSH1 0x10 DUP3 AND DUP8 SIGNEXTEND SGT PUSH2 0x2EFC JUMPI JUMPDEST DUP2 PUSH1 0x8 DUP3 AND DUP8 SIGNEXTEND SGT PUSH2 0x2EE0 JUMPI JUMPDEST DUP2 PUSH1 0x4 DUP3 AND DUP8 SIGNEXTEND SGT PUSH2 0x2EC4 JUMPI JUMPDEST DUP2 PUSH1 0x2 DUP3 AND DUP8 SIGNEXTEND SGT PUSH2 0x2EA7 JUMPI JUMPDEST PUSH1 0x1 AND DUP6 SIGNEXTEND SGT PUSH2 0x2E89 JUMPI JUMPDEST POP PUSH1 0x40 SAR DUP3 SIGNEXTEND PUSH1 0x3F SUB DUP3 SIGNEXTEND SHR SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB DUP4 GT PUSH2 0x56B JUMPI POP SIGNEXTEND SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH17 0x10000000000000000B17217F7D1CF79AB MUL SWAP1 SHR SWAP1 CODESIZE PUSH2 0x2E69 JUMP JUMPDEST PUSH17 0x1000000000000000162E42FEFA39EF358 SWAP1 SWAP5 MUL DUP3 SHR SWAP4 PUSH2 0x2E5E JUMP JUMPDEST SWAP4 PUSH17 0x10000000000000002C5C85FDF473DE6B2 MUL DUP3 SHR SWAP4 PUSH2 0x2E51 JUMP JUMPDEST SWAP4 PUSH17 0x100000000000000058B90BFBE8E7BCD6D MUL DUP3 SHR SWAP4 PUSH2 0x2E44 JUMP JUMPDEST SWAP4 PUSH17 0x1000000000000000B17217F7D1CF79AFA MUL DUP3 SHR SWAP4 PUSH2 0x2E37 JUMP JUMPDEST SWAP4 PUSH17 0x100000000000000162E42FEFA39EF366F MUL DUP3 SHR SWAP4 PUSH2 0x2E2A JUMP JUMPDEST SWAP4 PUSH17 0x1000000000000002C5C85FDF473DE6ECA MUL DUP3 SHR SWAP4 PUSH2 0x2E1D JUMP JUMPDEST SWAP4 PUSH17 0x10000000000000058B90BFBE8E7BCE544 MUL DUP3 SHR SWAP4 PUSH2 0x2E10 JUMP JUMPDEST SWAP2 PUSH17 0x100000000000000B17217F7D1CF79E949 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2E00 JUMP JUMPDEST SWAP2 PUSH17 0x10000000000000162E42FEFA39EF44D91 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2DF2 JUMP JUMPDEST SWAP2 PUSH17 0x100000000000002C5C85FDF473DEA871F MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2DE4 JUMP JUMPDEST SWAP2 PUSH17 0x1000000000000058B90BFBE8E7BDCBE2E MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2DD6 JUMP JUMPDEST SWAP2 PUSH17 0x10000000000000B17217F7D1CF7D83C1A MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2DC8 JUMP JUMPDEST SWAP2 PUSH17 0x1000000000000162E42FEFA39F02B772C MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2DBA JUMP JUMPDEST SWAP2 PUSH17 0x10000000000002C5C85FDF473E242EA38 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2DAC JUMP JUMPDEST SWAP2 PUSH17 0x100000000000058B90BFBE8E7CC35C3F0 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D9E JUMP JUMPDEST SWAP2 PUSH17 0x1000000000000B17217F7D1CFB72B45E1 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D90 JUMP JUMPDEST SWAP2 PUSH17 0x100000000000162E42FEFA39FE95583C2 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D81 JUMP JUMPDEST SWAP2 PUSH17 0x1000000000002C5C85FDF4741BEA6E77E MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D72 JUMP JUMPDEST SWAP2 PUSH17 0x10000000000058B90BFBE8E8B2D3D4EDE MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D63 JUMP JUMPDEST SWAP2 PUSH17 0x100000000000B17217F7D1D351A389D40 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D54 JUMP JUMPDEST SWAP2 PUSH17 0x10000000000162E42FEFA3AE53369388C MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D45 JUMP JUMPDEST SWAP2 PUSH17 0x100000000002C5C85FDF477B662B26945 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D36 JUMP JUMPDEST SWAP2 PUSH17 0x1000000000058B90BFBE8F71CB4E4B33D MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D27 JUMP JUMPDEST SWAP2 PUSH17 0x10000000000B17217F7D20CF927C8E94C MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D18 JUMP JUMPDEST SWAP2 PUSH17 0x1000000000162E42FEFA494F1478FDE05 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D08 JUMP JUMPDEST SWAP2 PUSH17 0x10000000002C5C85FDF4B15DE6F17EB0D MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2CF8 JUMP JUMPDEST SWAP2 PUSH17 0x100000000058B90BFBE9DDBAC5E109CCE MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2CE8 JUMP JUMPDEST SWAP2 PUSH17 0x1000000000B17217F7D5A7716BBA4A9AE MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2CD8 JUMP JUMPDEST SWAP2 PUSH17 0x100000000162E42FEFB2FED257559BDAA MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2CC8 JUMP JUMPDEST SWAP2 PUSH17 0x1000000002C5C85FDF84BD62AE30A74CC MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2CB8 JUMP JUMPDEST SWAP2 PUSH17 0x10000000058B90BFBF8479BD5A81B51AD MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2CA8 JUMP JUMPDEST SWAP2 PUSH17 0x100000000B17217F80F4EF5AADDA45554 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2C98 JUMP JUMPDEST SWAP2 PUSH17 0x10000000162E42FF0999CE3541B9FFFCF MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2C87 JUMP JUMPDEST SWAP2 PUSH17 0x100000002C5C85FE31F35A6A30DA1BE50 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2C76 JUMP JUMPDEST SWAP2 PUSH17 0x1000000058B90BFCDEE5ACD3C1CEDC823 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2C65 JUMP JUMPDEST SWAP2 PUSH17 0x10000000B17217FBA9C739AA5819F44F9 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2C54 JUMP JUMPDEST SWAP2 PUSH17 0x1000000162E42FFF037DF38AA2B219F06 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2C43 JUMP JUMPDEST SWAP2 PUSH17 0x10000002C5C8601CC6B9E94213C72737A MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2C32 JUMP JUMPDEST SWAP2 PUSH17 0x100000058B90C0B48C6BE5DF846C5B2EF MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2C21 JUMP JUMPDEST SWAP2 PUSH17 0x1000000B1721835514B86E6D96EFD1BFE MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2C10 JUMP JUMPDEST SWAP2 PUSH17 0x100000162E430E5A18F6119E3C02282A5 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2BFE JUMP JUMPDEST SWAP2 PUSH17 0x1000002C5C863B73F016468F6BAC5CA2B MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2BEC JUMP JUMPDEST SWAP2 PUSH17 0x10000058B90CF1E6D97F9CA14DBCC1628 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2BDA JUMP JUMPDEST SWAP2 PUSH17 0x100000B1721BCFC99D9F890EA06911763 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2BC8 JUMP JUMPDEST SWAP2 PUSH17 0x10000162E43F4F831060E02D839A9D16D MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2BB6 JUMP JUMPDEST SWAP2 PUSH17 0x100002C5C89D5EC6CA4D7C8ACC017B7C9 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2BA4 JUMP JUMPDEST SWAP2 PUSH17 0x1000058B91B5BC9AE2EED81E9B7D4CFAB MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2B92 JUMP JUMPDEST SWAP2 PUSH17 0x10000B17255775C040618BF4A4ADE83FC MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2B80 JUMP JUMPDEST SWAP2 PUSH17 0x1000162E525EE054754457D5995292026 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2B6D JUMP JUMPDEST SWAP2 PUSH17 0x10002C5CC37DA9491D0985C348C68E7B3 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2B5A JUMP JUMPDEST SWAP2 PUSH17 0x100058BA01FB9F96D6CACD4B180917C3D MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2B47 JUMP JUMPDEST SWAP2 PUSH17 0x1000B175EFFDC76BA38E31671CA939725 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2B34 JUMP JUMPDEST SWAP2 PUSH17 0x100162F3904051FA128BCA9C55C31E5DF MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2B21 JUMP JUMPDEST SWAP2 PUSH17 0x1002C605E2E8CEC506D21BFC89A23A00F MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2B0E JUMP JUMPDEST SWAP2 PUSH17 0x10058C86DA1C09EA1FF19D294CF2F679B MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2AFB JUMP JUMPDEST SWAP2 PUSH17 0x100B1AFA5ABCBED6129AB13EC11DC9543 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2AE8 JUMP JUMPDEST SWAP2 PUSH17 0x10163DA9FB33356D84A66AE336DCDFA3F MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2AD4 JUMP JUMPDEST SWAP2 PUSH17 0x102C9A3E778060EE6F7CACA4F7A29BDE8 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2AC0 JUMP JUMPDEST SWAP2 PUSH17 0x1059B0D31585743AE7C548EB68CA417FD MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2AAC JUMP JUMPDEST SWAP2 PUSH17 0x10B5586CF9890F6298B92B71842A98363 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2A98 JUMP JUMPDEST SWAP2 PUSH17 0x1172B83C7D517ADCDF7C8C50EB14A791F MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2A84 JUMP JUMPDEST SWAP2 PUSH17 0x1306FE0A31B7152DE8D5A46305C85EDEC MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2A70 JUMP JUMPDEST PUSH16 0xB504F333F9DE6484597D89B3754ABE9F SWAP3 POP PUSH2 0x2A5C JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0xFB BLOCKHASH 0xE7 0xB7 0xEE 0x25 SELFDESTRUCT 0xC5 PUSH10 0xBF0F8362D837E9C68F48 CALLDATACOPY 0xE3 0xCB EQ 0xF6 SWAP9 LOG2 0xE1 0xF9 SDIV 0xF6 0xED PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER 0xA6 PUSH13 0xC928B5EDB82AF9BD4992295415 GAS 0xB7 0xB0 SWAP5 0x26 SWAP5 0xBE LOG4 0xCE PREVRANDAO PUSH7 0x1D9A8736C688A2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 DUP12 0xE1 0xC9 0xE2 PUSH32 0x86553C81B3676415180BC23DAF94626362DB3CBB0AE3455B285D64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"222:2544:27:-:0;;;;;;;;;;;;;-1:-1:-1;;222:2544:27;;;;-1:-1:-1;;;;;222:2544:27;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;222:2544:27;;;;;;;;;;939:10;1273:26:2;1269:95;;-1:-1:-1;222:2544:27;;;;;;;939:10;;222:2544;;;;-1:-1:-1;222:2544:27;;;939:10;;222:2544;;3052:40:2;-1:-1:-1;3052:40:2;;961:56:27;222:2544;;;961:56;222:2544;;;;;;;;1269:95:2;222:2544:27;;-1:-1:-1;;;1322:31:2;;-1:-1:-1;1322:31:2;;;222:2544:27;;;1322:31:2;222:2544:27;-1:-1:-1;222:2544:27;;;;;;-1:-1:-1;222:2544:27;;;;;-1:-1:-1;222:2544:27"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":3170,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_string":{"entryPoint":3078,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes32_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string":{"entryPoint":3254,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":3193,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":3043,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_8357":{"entryPoint":3000,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":3320,"id":463,"parameterSlots":0,"returnSlots":0},"storage_array_index_access_address_dyn":{"entryPoint":2922,"id":null,"parameterSlots":1,"returnSlots":2}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608060405260043610156200001357600080fd5b6000803560e01c80633adfe6d01462000b21578063715018a61462000ac35780638da5cb5b1462000a9a57806397271c141462000304578063a5e973c3146200023e578063ba5b79821462000213578063c3a811fe14620001175763f2fde38b146200007e57600080fd5b346200011457602036600319011262000114576200009b62000c62565b620000a562000cf8565b6001600160a01b03908116908115620000fb57600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b604051631e4fbdf760e01b815260048101849052602490fd5b80fd5b503462000114576020806003193601126200020f576001600160a01b036200013e62000c62565b1682526003815260408220604051838194908354906200015e8262000c79565b94858552600192878482169182600014620001e9575050600114620001a9575b5050506200018f9250038362000be3565b620001a560405192828493845283019062000cb6565b0390f35b869350819291528282205b858310620001d05750506200018f93508201013880806200017e565b80548389018501528794508693909201918101620001b4565b9350945050506200018f94915060ff191682840152151560051b8201013880806200017e565b5080fd5b503462000114578060031936011262000114576002546040516001600160a01b039091168152602090f35b503462000114578060031936011262000114576040518091600190815493848452602080940180958484527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf690845b818110620002e75750505081620002a691038262000be3565b6040519380850191818652518092526040850195925b828110620002ca5785870386f35b83516001600160a01b0316875295810195928101928401620002bc565b82546001600160a01b03168452928701929186019186016200028d565b50346200011457610140366003190112620001145760243567ffffffffffffffff81116200020f576200033c90369060040162000c06565b60443567ffffffffffffffff8111620008125736602382011215620008125780600401359267ffffffffffffffff841162000a86578360051b916040519462000389602085018762000be3565b85526020850192810160240183368211620008b75760248301905b82821062000a525750506064359150506001600160a01b03811681036200020f5760e435926001600160a01b0384168403620008125761010435936001600160a01b0385168503620008b75760018060a01b036002541690604051938461453e81011067ffffffffffffffff61453e8701111762000a3e5761453e62000d26863960043561453e8601908152610160602082018190526200044791018962000cb6565b9861453e86018a03604061453e8801015251808a5260208a019060208160051b8c0101959188905b82821062000a0e575050506001600160a01b0391821661453e87016060810191909152608435608082015260a43560a082015260c43560c082015292821660e08401525086166101008201526101243561012082015261014001528190039082f0801562000a015760018060a01b031660015468010000000000000000811015620009ed5780600162000506920160015562000b6a565b8154600391821b84811b6001600160a01b0390911b1990911617909155818352602052604082208451949067ffffffffffffffff8611620009d9576200054d815462000c79565b601f81116200098f575b508394958394506020601f8211600114620008ff5791817f89e2b56dfb4365b59dc3a37aaf819ce4937e48be6ab23686edcecacf0124ae039492620005c7948991620008f3575b508160011b916000199060031b1c19161790555b60405191829160208352602083019062000cb6565b0390a260025460405163d539139360e01b81526001600160a01b039091169390602081600481885afa90811562000846578491620008bb575b50843b15620008b757604051632f2ff15d60e01b80825260048201929092523060248201529484908690604490829084905af180156200084657620008a0575b83945060018060a01b03600254169060405163282c51f360e01b8152602081600481865afa9081156200089557869162000855575b50823b15620008515760405191825260048201523060248201529084908290604490829084905af1908115620008465784916200082a575b505060405190827f92199b96df436a113d14e9952bea656a2e2e7fbc271b2141f2c42002e0e2b85b8580a2610124356200073a575b5050803b15620007375781809160246040518094819363f2fde38b60e01b83523360048401525af180156200072c57620007195750f35b620007249062000bb8565b620001145780f35b6040513d84823e3d90fd5b50fd5b6323b872dd60e01b82523360048301526024820183905261012435604483015291929091602091839160649183916001600160a01b03165af19081156200081f578391620007d9575b5015620007945781908380620006e2565b60405162461bcd60e51b815260206004820152601c60248201527f496e697469616c2066756e64207472616e73666572206661696c6564000000006044820152606490fd5b90506020813d60201162000816575b81620007f76020938362000be3565b81010312620008125751801515810362000812578362000783565b8280fd5b3d9150620007e8565b6040513d85823e3d90fd5b620008359062000bb8565b62000842578285620006ad565b5050fd5b6040513d86823e3d90fd5b8580fd5b9550506020853d6020116200088c575b81620008746020938362000be3565b8101031262000887578594518762000675565b600080fd5b3d915062000865565b6040513d88823e3d90fd5b929093620008ae9062000bb8565b91839062000640565b8380fd5b90506020813d602011620008ea575b81620008d96020938362000be3565b81010312620008b757518562000600565b3d9150620008ca565b90508301518a6200059e565b8287526020872090601f198316885b81811062000973575092620005c79492600192827f89e2b56dfb4365b59dc3a37aaf819ce4937e48be6ab23686edcecacf0124ae0398961062000959575b5050811b019055620005b2565b85015160001960f88460031b161c191690558a806200094c565b828701518455889750600190930192602092830192016200090e565b81855260208520601f880160051c81019160208910620009ce575b601f0160051c01905b818110620009c2575062000557565b858155600101620009b3565b9091508190620009aa565b634e487b7160e01b84526041600452602484fd5b634e487b7160e01b83526041600452602483fd5b50604051903d90823e3d90fd5b9091929660208062000a2f8f93600194601f199082030186528b5162000cb6565b9901920192019092916200046f565b634e487b7160e01b86526041600452602486fd5b813567ffffffffffffffff8111620008515760209162000a7a83926024369189010162000c06565b815201910190620003a4565b634e487b7160e01b81526041600452602490fd5b50346200011457806003193601126200011457546040516001600160a01b039091168152602090f35b5034620001145780600319360112620001145762000ae062000cf8565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5034620001145760203660031901126200011457600435906001548210156200011457602062000b518362000b6a565b905460405160039290921b1c6001600160a01b03168152f35b60015481101562000ba25760016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60190600090565b634e487b7160e01b600052603260045260246000fd5b67ffffffffffffffff811162000bcd57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111762000bcd57604052565b81601f82011215620008875780359067ffffffffffffffff821162000bcd576040519262000c3f601f8401601f19166020018562000be3565b828452602083830101116200088757816000926020809301838601378301015290565b600435906001600160a01b03821682036200088757565b90600182811c9216801562000cab575b602083101462000c9557565b634e487b7160e01b600052602260045260246000fd5b91607f169162000c89565b919082519283825260005b84811062000ce3575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520162000cc1565b6000546001600160a01b0316330362000d0d57565b60405163118cdaa760e01b8152336004820152602490fdfe6101806040523462000dda5760006200453e908138038092620000258261018062000ddf565b61018039610160821262000dd757610180516101a0516001600160401b03811162000dd3576200005f908461018001906101800162000e03565b6101c0516001600160401b03811162000dcf57610180850161019f8201121562000dcf57610180810151946001600160401b03861162000dbb578560051b9060405196620000b1602084018962000ddf565b8752602087019061018081016101a0858501011162000db7576101a08401915b6101a085850101831062000d76575050505050620000f460606101800162000e7a565b610200516102205161024051916200010e61026062000e7a565b936200011c61028062000e7a565b6102a05197909690620001316102c062000e7a565b98331562000d5d578a54336001600160a01b0319821681178d55604051916001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08e80a3600180556002805460ff1916905560098c9055600a8c9055600b8c90556001600160a01b038a161562000d1b57506001600160a01b0388161562000cd6578b511562000c9157841562000c3457851562000bef578b51801515908162000be2575b501562000b9d57612710851162000b3e576064851062000ad3578b51600181111562000a8e5760016001603f1b03811162000a8a578b8160401b600f0b131562000a8a578b604082901b600f0b6801000000000000000081121562000a77575b80640100000000600292121562000a6a575b6201000081121562000a5d575b61010081121562000a50575b601081121562000a43575b600481121562000a37575b121562000a2e575b908c8792603f19810160401b9260401b600f0b90607f031b678000000000000000915b821362000a0c575050906fb17217f7d1cf79abc9e3b39803f2f6af620002d692600f0b0260801d62000ecb565b60405163313ce56760e01b81529091906020816004816001600160a01b038f165afa90811562000a01579062000315918e91620009dd575b5062000eaa565b91828102928184041490151715620009c957106200096d5760c0528051906001600160401b03821162000959576007548060011c9060018116156200094e575b60011660208210146200093a579081601f849311620008da575b50602090601f83116001146200085e578b9262000852575b50508160011b916000199060031b1c1916176007555b600880546001600160a01b0319166001600160a01b039290921691909117905560805242808201106200083e57420160049081556005805461ffff1916905560e091909152610100919091526001600160a01b0390911660a081905284516101605260405163313ce56760e01b8152929160209184919082905afa91821562000833579060ff92918492620007fb575b50610120829052600c80546001600160a01b0319166001600160a01b0392909216919091179055168015620007e557506200046e60ff610120511662000ebc565b600d555b806200048460ff610120511662000eaa565b91620007d157506101405260005b8151811015620006e957600581901b82016020015160408051919082016001600160401b03811183821017620006bd576040528152600060208201526003549068010000000000000000821015620006bd576001820180600355821015620006d3576003600052805180517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b92916001600160401b038211620006bd578460011b840154600181811c91168015620006b2575b60208210146200069c57601f81116200064e575b50602090601f8311600114620005d15791806001959492602094600092620005c5575b5050600019600383901b1c191690851b1785851b8401555b015192821b0101556000198114620005af5760010162000492565b634e487b7160e01b600052601160045260246000fd5b0151905038806200057c565b908560011b850160005260206000209160005b601f1985168110620006355750926001959492869260209583601f198116106200061b575b505050811b0185851b84015562000594565b015160001960f88460031b161c1916905538808062000609565b91926020600181928685015181550194019201620005e4565b8560011b85016000526020600020601f840160051c81016020851062000694575b601f830160051c820181106200068757505062000559565b600081556001016200066f565b50806200066f565b634e487b7160e01b600052602260045260246000fd5b90607f169062000545565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6040516135fd908162000f21823960805181818161096901528181611520015281816115f9015281816116600152612588015260a05181818161025c015281816103ac0152818161072701528181610dbf015281816112270152818161184e0152611d27015260c0518181816105b701528181610a6d01528181610e1b015281816114500152611b34015260e051818181610d2f01528181611373015281816115890152611c1c01526101005181818161036e015281816117d8015261193a01526101205181611abd015261014051818181610667015261090b01526101605181610bb90152f35b634e487b7160e01b81526011600452602490fd5b620007f290820362000ebc565b600d5562000472565b6200082391925060203d6020116200082b575b6200081a818362000ddf565b81019062000e8f565b90386200042d565b503d6200080e565b6040513d85823e3d90fd5b634e487b7160e01b86526011600452602486fd5b01519050388062000387565b60078c528b93506000805160206200451e83398151915291905b601f1984168510620008be576001945083601f19811610620008a4575b505050811b016007556200039d565b015160001960f88460031b161c1916905538808062000895565b8181015183556020948501946001909301929091019062000878565b60078c529091506000805160206200451e833981519152601f840160051c81016020851062000932575b90849392915b8d601f840160051c8301821062000924575050506200036f565b81558594506001016200090a565b508062000904565b634e487b7160e01b8b52602260045260248bfd5b90607f169062000355565b634e487b7160e01b8a52604160045260248afd5b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c2066756e6473206d757374206578636565642062202a206c6e60448201526d286e756d5f6f7574636f6d65732960901b6064820152608490fd5b634e487b7160e01b8c52601160045260248cfd5b620009fa915060203d6020116200082b576200081a818362000ddf565b386200030e565b6040513d8f823e3d90fd5b8091935002908160ff1c9182607f011c918302019160011d8792918e620002a9565b60010162000286565b91810191811d6200027e565b6004928301921d62000273565b6008928301921d62000268565b6010928301921d6200025c565b6020928301921d6200024f565b506040905081811b600f0b811d6200023d565b8b80fd5b60405162461bcd60e51b815260206004820152601e60248201527f4174206c656173742074776f206f7574636f6d657320726571756972656400006044820152606490fd5b60405162461bcd60e51b815260206004820152603460248201527f4c697175696469747920706172616d6574657220276227206d7573742062652060448201527f67726561746572207468616e206d696e696d756d0000000000000000000000006064820152608490fd5b60405162461bcd60e51b815260206004820152603160248201527f4c697175696469747920706172616d6574657220276227206578636565647320604482015270746865206c696d6974206d6178696d756d60781b6064820152608490fd5b60405162461bcd60e51b815260206004820152601a60248201527f496e76616c6964206e756d626572206f66206f7574636f6d65730000000000006044820152606490fd5b60059150111538620001dd565b60405162461bcd60e51b815260206004820152601960248201527f4475726174696f6e206d75737420626520706f736974697665000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152602f60248201527f4c697175696469747920706172616d657465722062206d75737420626520677260448201526e6561746572207468616e207a65726f60881b6064820152608490fd5b60405162461bcd60e51b815260206004820152601d60248201527f4174206c65617374206f6e65206f7574636f6d652072657175697265640000006044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f496e76616c69642066656520726563697069656e7420616464726573730000006044820152606490fd5b62461bcd60e51b815260206004820152601560248201527f496e76616c696420746f6b656e206164647265737300000000000000000000006044820152606490fd5b604051631e4fbdf760e01b8152600481018c9052602490fd5b82516001600160401b03811162000db3576020809262000da58293838761018001918b61018001010162000e03565b8152019301929050620000d1565b8880fd5b8680fd5b634e487b7160e01b85526041600452602485fd5b8380fd5b8280fd5b80fd5b600080fd5b601f909101601f19168101906001600160401b03821190821017620006bd57604052565b919080601f8401121562000dda578251906001600160401b038211620006bd576040519160209162000e3f601f8301601f191684018562000ddf565b81845282828701011162000dda5760005b81811062000e6657508260009394955001015290565b858101830151848201840152820162000e50565b51906001600160a01b038216820362000dda57565b9081602091031262000dda575160ff8116810362000dda5790565b60ff16604d8111620005af57600a0a90565b604d8111620005af57600a0a90565b811562000f1957600f0b60009081811262000f15576001600160801b038316810260401c9260801c026001600160c01b03811162000f155760401b908219821162000dd757500190565b5080fd5b505060009056fe6040608081526004908136101561001557600080fd5b600091823560e01c9081631cb44dfc14611efc5781632279a97014611ae15781633b97e85614611aa35781633f4ba83a14611a39578163416e517e146119695781634690484014611925578163474e19f21461190a578163476343ee146117bc57816348a5dec6146117985781634a79d50c146116835781634df7e3d014611648578163510f5116146115b557816353249a31146114dc5781635c975abb146114b857816369c41a741461149a5781636e77609e146114735781636ed71ede14611438578163715018a6146113de5781637dc0d1d0146113b55781637dc8f086146113965781637fd6f15c1461135b5781638456cb591461130057816389ff7069146111d85781638da5cb5b146111b05781638f512bf4146111915781638fbb4a821461056e5781639003adfe14611172578163905143201461115357816392b2849b1461113757816396211a97146110b35781639aaff766146110565781639b34ae03146110375781639e6c295914610c65578163a2d07d241461101b578163b03238f714610fe7578163ba5b798214610fbe578163beebc5da14610c6a578163c3883f1714610c65578163c511ed5e14610bdc578163ca3bd56914610ba1578163d55e725b14610b82578163ddd9d04514610a42578163e75722301461092e578163e8467af6146108f3578163e88499a914610573578163ed0c986f1461056e578163eed2a1471461045d578163ef86ce8e14610324578163f2fde38b1461028f575063fc0c546a1461024957600080fd5b3461028b578160031936011261028b57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fd5b905034610320576020366003190112610320576102aa611f88565b906102b36120c9565b6001600160a01b0391821692831561030a575050600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b9190503461032057826003193601126103205761033f6120c9565b61035060ff60055460081c1661238c565b6009805490849055815163a9059cbb60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016848201908152602081810193909352909190829081906040010381877f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1908115610453578491610425575b50156103ee578280f35b906020606492519162461bcd60e51b8352820152601160248201527015da5d1a191c985dd85b0819985a5b1959607a1b6044820152fd5b610446915060203d811161044c575b61043e8183611fde565b810190612221565b386103e4565b503d610434565b82513d86823e3d90fd5b82843461056b576020908160031936011261056b5783359060035482101561056b575061048990612079565b509282519360009181549260019380851c92858216908115610561575b878510821461054e5750838952889291879082156105315750506001146104f1575b6104d492500386611fde565b01546104e98351948486958652850190612000565b918301520390f35b505081600052858480600020856000915b8583106105185750506104d493508201016104c8565b80919294505483858c0101520191018590858993610502565b60ff1916848201526104d494151560051b84010191506104c89050565b634e487b7160e01b845260229052602483fd5b93607f16936104a6565b80fd5b612040565b9190503461032057826003193601126103205761058e61229b565b61059661227d565b6105a760ff60055460081c1661238c565b60018060a01b039081600c5416927f0000000000000000000000000000000000000000000000000000000000000000926006548351946318896f4d60e11b8652808487015281602487015260209586816044818b5afa80156108ba5787908a906108c4575b8751627eeac760e11b81523388820190815260208101929092529250829081906040015b03818b5afa9081156108ba578991610888575b50801561084e5780600161065685612079565b50015410610813579088929161068c7f0000000000000000000000000000000000000000000000000000000000000000826121e1565b986106a58a6009546106a0828210156122be565b612214565b600955803b1561080f578751636f3df85160e11b815233888201908152602081019490945260408401949094526060830191909152839183919082908490829060800103925af18015610805576107ed575b5050825163a9059cbb60e01b815233838201908152602081018790529091859183919082908a90829060400103927f0000000000000000000000000000000000000000000000000000000000000000165af19081156107e35786916107c6575b501561078f5750907fec68461f5d4cc45c89e914cb8826a966c73dd35e5f97815ece0a01ffa4a025a691519283523392a26001805580f35b82606492519162461bcd60e51b83528201526013602482015272151bdad95b881c185e5bdd5d0819985a5b1959606a1b6044820152fd5b6107dd9150843d861161044c5761043e8183611fde565b38610757565b83513d88823e3d90fd5b6107f690611fb4565b6108015785386106f7565b8580fd5b85513d84823e3d90fd5b8480fd5b855162461bcd60e51b81528086018890526015602482015274496e76616c696420736861726520616d6f756e747360581b6044820152606490fd5b855162461bcd60e51b815280860188905260146024820152734e6f2077696e6e696e677320746f20636c61696d60601b6044820152606490fd5b90508681813d83116108b3575b61089f8183611fde565b810103126108ae575138610643565b600080fd5b503d610895565b86513d8b823e3d90fd5b5081813d83116108ec575b6108d98183611fde565b810103126108ae5786610630915161060c565b503d6108cf565b50503461028b578160031936011261028b57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b905034610320576020366003190112610320573561095960035491610954838210612134565b612079565b506001809101549061099461098f7f00000000000000000000000000000000000000000000000000000000000000008094612755565b6129d6565b92859286925b828410610a0a5750505050600f0b908115610a0657821b60170b059160016001607f1b0319831215806109f5575b1561056b575067ffffffffffffffff6109ed6109e8602094600f0b6126e3565b61267f565b169051908152f35b5060016001607f1b038313156109c8565b8380fd5b90919293610a34610a3a91610a2e61098f8686610a268b612079565b500154612755565b9061269a565b94612504565b92919061099a565b83833461028b578060031936011261028b57610a5c611f88565b600c5482516318896f4d60e11b81527f000000000000000000000000000000000000000000000000000000000000000086820152602480359082015260209590916001600160a01b0316908683604481855afa928315610b785790879392918793610b43575b508551627eeac760e11b81526001600160a01b0390951690850190815260208101929092528391829081906040015b03915afa928315610b385792610b09575b5051908152f35b9091508281813d8311610b31575b610b218183611fde565b810103126108ae57519083610b02565b503d610b17565b8251903d90823e3d90fd5b8481959294503d8311610b71575b610b5b8183611fde565b810103126108ae57915186929091610af1610ac2565b503d610b51565b85513d88823e3d90fd5b50503461028b578160031936011261028b57602090600a549051908152f35b50503461028b578160031936011261028b57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b9190503461032057826003193601126103205781544210610c2c5782600160ff1960055416176005557f0b5f6bf058282d5cc003efc735b9ee453bbd7f9bef4c6db6300d095f3eefac288180a180f35b906020606492519162461bcd60e51b8352820152601360248201527213585c9ad95d081b9bdd081bdd995c881e595d606a1b6044820152fd5b61205d565b9190503461032057610c7b36611f9e565b610c8693919361229b565b610c8e61227d565b610c9d60ff60055416156120f5565b610caa6003548510612134565b8015610f7b57612710811015610f3857610d27610d146109e8610d00610cd6610cd1612513565b612579565b6001610ce18a612079565b5001610cee878254612172565b9055610cfb610cd1612513565b6126bf565b610d0f8982600f0b1215612195565b6126e3565b67ffffffffffffffff600d5491166121e1565b926064610d547f0000000000000000000000000000000000000000000000000000000000000000866121e1565b04936032850285810460321486151715610f2557606490049087610d82610d7b8489612214565b9783612172565b84516323b872dd60e01b8152338189019081523060208201526040810183905291979181906060016001600160a01b0392916020918391900381877f000000000000000000000000000000000000000000000000000000000000000087165af1908115610f1b5790610dfb918591610efd575b50612239565b600c5416803b15610320578551632991fa3b60e21b8152339281019283527f00000000000000000000000000000000000000000000000000000000000000006020840152604083018b905260608301889052918391839182908490829060800103925af1801561080557610edf575b50507f0ea2cc1a2a0fcfecef8b5ff9be41f8c0ca3770265a060b00de53118f88c91dfa95610eaa610ea2610ed59594610eb594612172565b600954612172565b600955600b54612172565b600b55519283923396846040919493926060820195825260208201520152565b0390a26001805580f35b610eeb90949394611fb4565b610ef9578738939293610e6a565b8780fd5b610f15915060203d811161044c5761043e8183611fde565b38610df5565b87513d86823e3d90fd5b634e487b7160e01b885260118552602488fd5b506020606492519162461bcd60e51b8352820152601a60248201527f5368617265207472616465206c696d69742065786365656465640000000000006044820152fd5b506020606492519162461bcd60e51b8352820152601b60248201527f4d75737420627579206174206c65617374206f6e6520736861726500000000006044820152fd5b50503461028b578160031936011261028b57600c5490516001600160a01b039091168152602090f35b82843461056b57602036600319011261056b575060016110116020933561095460035482106123d1565b5001549051908152f35b50503461028b578160031936011261028b576020905160328152f35b50503461028b578160031936011261028b576020906006549051908152f35b9050823461056b575061106836611f9e565b8351906020820192835284820152838152606081019281841067ffffffffffffffff85111761109e575082602094525190208152f35b604190634e487b7160e01b6000525260246000fd5b9050823461056b57506110c536611f9e565b909160018211156110f4576020846110ed856110e86110e387612667565b6128c5565b612708565b9051908152f35b606490602085519162461bcd60e51b8352820152601e60248201527f4174206c656173742074776f206f7574636f6d657320726571756972656400006044820152fd5b50503461028b578160031936011261028b576020905160058152f35b50503461028b578160031936011261028b576020906009549051908152f35b50503461028b578160031936011261028b57602090600b549051908152f35b50503461028b578160031936011261028b57602090600d549051908152f35b50503461028b578160031936011261028b57905490516001600160a01b039091168152602090f35b919050346103205760209081600319360112610a06578235926111f96120c9565b81516323b872dd60e01b815233828201908152306020820152604081018690528490829081906060010381897f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19081156107e35786916112e3575b50156112a25750907f543ba50a5eec5e6178218e364b1d0f396157b3c8fa278522c2cb7fd99407d4749161129584600954612172565b600955519283523392a280f35b82606492519162461bcd60e51b8352820152601c60248201527f496e697469616c2066756e64207472616e73666572206661696c6564000000006044820152fd5b6112fa9150843d861161044c5761043e8183611fde565b3861125f565b50503461028b578160031936011261028b5760207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589161133e6120c9565b61134661227d565b600160ff19600254161760025551338152a180f35b50503461028b578160031936011261028b57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b50503461028b578160031936011261028b576020906003549051908152f35b50503461028b578160031936011261028b5760085490516001600160a01b039091168152602090f35b833461056b578060031936011261056b576113f76120c9565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461028b578160031936011261028b57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b50503461028b578160031936011261028b5760209060ff60055460081c1690519015158152f35b90503461032057826003193601126103205760209250549051908152f35b50503461028b578160031936011261028b5760209060ff6002541690519015158152f35b50503461028b576020906110ed611582610d146109e8610d0f61157c61150136611f9e565b919061151060035482106123d1565b61151b831515612415565b6115467f00000000000000000000000000000000000000000000000000000000000000001515612474565b61154e612513565b9061157661156f61155e84612579565b9561156984866124d8565b51612214565b91836124d8565b52612579565b906126bf565b60646115ae7f0000000000000000000000000000000000000000000000000000000000000000836121e1565b0490612172565b50503461028b576020906110ed611582610d146109e8610d0f610cfb6115da36611f9e565b91906115e960035482106123d1565b6115f4831515612415565b61161f7f00000000000000000000000000000000000000000000000000000000000000001515612474565b611627612513565b9061157661156f61163784612579565b9561164284866124d8565b51612172565b50503461028b578160031936011261028b57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b82843461056b578060031936011261056b575080519060009060075491600183811c9080851694851561178e575b602095868410811461177b578388528794939291879082156117595750506001146116fc575b50506116f892916116e9910385611fde565b51928284938452830190612000565b0390f35b9085925060076000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688916000925b82841061174157505050820101816116e96116d7565b8054848a01860152889550879490930192810161172b565b60ff19168682015292151560051b850190920192508391506116e990506116d7565b634e487b7160e01b855260228952602485fd5b91607f16916116b1565b50503461028b578160031936011261028b5760209060ff6005541690519015158152f35b9050346103205782600319360112610320576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008181169391929061184a9060209061181033881461230a565b600b5495869189600b5589875180968195829463a9059cbb60e01b84528a840160209093929193604081019460018060a01b031681520152565b03927f0000000000000000000000000000000000000000000000000000000000000000165af19081156107e35786916118ec575b50156118b257507fc0819c13be868895eb93e40eaceb96de976442fa1d404e5c55f14bb65a8c489a9160209151908152a280f35b6020606492519162461bcd60e51b83528201526015602482015274119959481dda5d1a191c985dd85b0819985a5b1959605a1b6044820152fd5b611904915060203d811161044c5761043e8183611fde565b3861187e565b50503461028b578160031936011261028b5751908152602090f35b50503461028b578160031936011261028b57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b919050346103205760203660031901126103205781359161199560018060a01b0360085416331461230a565b6005549160ff831615611a02575050806119ce60ff6101009360081c16156119bc81612347565b6119c96003548610612134565b612347565b8260065561ff001916176005557fbdb6af8caa3a0b8c130fd2ab4c4930e3fd8987c9730340729078e256bbc4b5438280a280f35b906020606492519162461bcd60e51b8352820152601160248201527026b0b935b2ba1039ba34b6361037b832b760791b6044820152fd5b905034610320578260031936011261032057611a536120c9565b6002549060ff821615611a95575060ff1916600255513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b8251638dfc202b60e01b8152fd5b50503461028b578160031936011261028b576020905160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b83833461028b57611af136611f9e565b611af961229b565b611b0161227d565b611b1060ff60055416156120f5565b611b1d6003548310612134565b8015611eb957600c5483516318896f4d60e11b81527f0000000000000000000000000000000000000000000000000000000000000000878201819052602482018590526020926001600160a01b0392908316908481604481855afa908115611de9579085918a91611e84575b508851627eeac760e11b815233818d019081526020810192909252928391829081906040015b03915afa908115611e7a579085918991611e49575b5010611e0657611c15610d146109e8611c06611be1610cd1612513565b6001611bec8b612079565b5001611bf98a8254612214565b905561157c610cd1612513565b610d0f8b82600f0b1215612195565b6064611c417f0000000000000000000000000000000000000000000000000000000000000000836121e1565b046032810281810460321482151715611df35791610eaa611ca392611c7c6064611c9d9b9c9d9e97960491611c768382612214565b94612214565b9981611c97611c8f8d9460095495612172565b8410156122be565b8b612172565b90612214565b600b558883600c541691823b1561028b578951636f3df85160e11b8152338582019081526020810192909252604082018a90526060820188905292839182908490829060800103925af18015611de957611dce575b50865163a9059cbb60e01b8152339181019182526020820186905291839183919082908b9082906040015b03927f0000000000000000000000000000000000000000000000000000000000000000165af1918215611dc457610ed5927f019eed797248695407e185a0977fa0dba8bbaaba6c2f6f4a8bdf6fb32e62ba23969792611d8a928a92611da7575b5050612239565b519283923396846040919493926060820195825260208201520152565b611dbd9250803d1061044c5761043e8183611fde565b8980611d83565b86513d89823e3d90fd5b611d2392849299611ddf8893611fb4565b9992509250611cf8565b88513d8b823e3d90fd5b634e487b7160e01b8a5260118b5260248afd5b855162461bcd60e51b8152808901849052601960248201527f4e6f7420656e6f7567682073686172657320746f2073656c6c000000000000006044820152606490fd5b809250858092503d8311611e73575b611e628183611fde565b81010312610ef9578490518a611bc4565b503d611e58565b87513d8a823e3d90fd5b82819392503d8311611eb2575b611e9b8183611fde565b81010312611eae57518490611baf611b89565b8880fd5b503d611e91565b825162461bcd60e51b8152602081870152601c60248201527f4d7573742073656c6c206174206c65617374206f6e65207368617265000000006044820152606490fd5b90503461032057602036600319011261032057611f17611f88565b611f1f6120c9565b6001600160a01b0316918215611f4c5750506bffffffffffffffffffffffff60a01b600854161760085580f35b906020606492519162461bcd60e51b83528201526016602482015275496e76616c6964206f7261636c65206164647265737360501b6044820152fd5b600435906001600160a01b03821682036108ae57565b60409060031901126108ae576004359060243590565b67ffffffffffffffff8111611fc857604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117611fc857604052565b919082519283825260005b84811061202c575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161200b565b346108ae5760003660031901126108ae5760206040516127108152f35b346108ae5760003660031901126108ae57602060405160648152f35b6003548110156120b357600360005260011b7fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0190600090565b634e487b7160e01b600052603260045260246000fd5b6000546001600160a01b031633036120dd57565b60405163118cdaa760e01b8152336004820152602490fd5b156120fc57565b60405162461bcd60e51b815260206004820152601060248201526f13585c9ad95d081a5cc818db1bdcd95960821b6044820152606490fd5b1561213b57565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206f7574636f6d6560881b6044820152606490fd5b9190820180921161217f57565b634e487b7160e01b600052601160045260246000fd5b1561219c57565b60405162461bcd60e51b815260206004820152601b60248201527f436f737420646966666572656e6365206973206e6567617469766500000000006044820152606490fd5b8181029291811591840414171561217f57565b81156121fe570490565b634e487b7160e01b600052601260045260246000fd5b9190820391821161217f57565b908160209103126108ae575180151581036108ae5790565b1561224057565b60405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606490fd5b60ff6002541661228957565b60405163d93c066560e01b8152600490fd5b6002600154146122ac576002600155565b604051633ee5aeb560e01b8152600490fd5b156122c557565b60405162461bcd60e51b815260206004820152601f60248201527f496e73756666696369656e74206d61726b6574206d616b65722066756e6473006044820152606490fd5b1561231157565b60405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606490fd5b1561234e57565b60405162461bcd60e51b815260206004820152601660248201527513585c9ad95d08185b1c9958591e481cd95d1d1b195960521b6044820152606490fd5b1561239357565b60405162461bcd60e51b815260206004820152601660248201527513585c9ad95d081b9bdd081cd95d1d1b1959081e595d60521b6044820152606490fd5b156123d857565b60405162461bcd60e51b8152602060048201526015602482015274092dcecc2d8d2c840deeae8c6dedaca40d2dcc8caf605b1b6044820152606490fd5b1561241c57565b60405162461bcd60e51b815260206004820152602a60248201527f4e756d626572206f6620736861726573206d7573742062652067726561746572604482015269207468616e207a65726f60b01b6064820152608490fd5b1561247b57565b60405162461bcd60e51b815260206004820152602f60248201527f4c697175696469747920706172616d657465722062206d75737420626520677260448201526e6561746572207468616e207a65726f60881b6064820152608490fd5b80518210156120b35760209160051b010190565b67ffffffffffffffff8111611fc85760051b60200190565b600019811461217f5760010190565b60035461251f816124ec565b9061252d6040519283611fde565b808252601f1961253c826124ec565b0136602084013760005b81811061255257505090565b80600161256161257493612079565b50015461256e82866124d8565b52612504565b612546565b9081511561262a5790600080917f0000000000000000000000000000000000000000000000000000000000000000915b81518410156125dc576125d06125d691610a2e61098f866125ca89886124d8565b51612755565b93612504565b926125a9565b9250506125eb6125f191612667565b916128c5565b600f0b90600f0b0260401d60016001607f1b031981121580612619575b156108ae57600f0b90565b5060016001607f1b0381131561260e565b60405162461bcd60e51b81526020600482015260156024820152744e6f206f7574636f6d657320617661696c61626c6560581b6044820152606490fd5b677fffffffffffffff81116108ae5760401b600f0b90565b600f0b600081126108ae5760401d67ffffffffffffffff1690565b90600f0b90600f0b0160016001607f1b03198112158061261957156108ae57600f0b90565b600f91820b910b0360016001607f1b03198112158061261957156108ae57600f0b90565b60401b60170b60401d60016001607f1b03198112158061261957156108ae57600f0b90565b811561274e57600f0b60009081811261028b576001600160801b038316810260401c9260801c026001600160c01b03811161028b5760401b908219821161056b57500190565b5050600090565b9080156108ae5760006001600160c01b03831161279e57506127799160401b6121f4565b6001600160801b03908181116108ae571660016001607f1b0381116108ae57600f0b90565b9060c083811c93846401000000008110156128b8575b806201000060029210156128ac575b6101008110156128a0575b6010811015612894575b6004811015612889575b101561287f575b6128076000199282600185870160be1984011c019160ff031b6121f4565b946001600160801b0390818711610801578460801c870291851687029084819460401b91838310612875575b505003948160801b9384871061286b575b505060801c036128605761285892036121f4565b905b01612779565b50505060019061285a565b9092019138612844565b0193508438612833565b90600101906127e9565b92810192811c6127e2565b6004938401931c6127d8565b6008938401931c6127ce565b6010938401931c6127c3565b5060e0915080821c6127b4565b600f0b60008082131561056b578082680100000000000000008412156129c9575b8064010000000060029212156129bd575b620100008112156129b1575b6101008112156129a5575b6010811215612999575b600481121561298e575b1215612986575b6001603f1b92603f19820160401b9291607f919082031b5b828513612968575050506fb17217f7d1cf79abc9e3b39803f2f6af9150600f0b0260801d90565b600185901d9490800260ff81901c918202909401939082011c612941565b600101612929565b91810191811d612922565b6004928301921d612918565b6008928301921d61290e565b6010928301921d612903565b6020928301921d6128f7565b506040905082811d6128e6565b600f0b600160461b8112156108ae57683fffffffffffffffff198112612a1b57700171547652b82fe1777d0ffda0d23a7d12612a18910260801d600f0b612a21565b90565b50600090565b600f81810b600160461b8112156108ae57683fffffffffffffffff1981126135bf576001607f1b90600093846001603f1b8216850b136135a7575b846740000000000000008216850b1361358a575b846720000000000000008216850b1361356d575b846710000000000000008216850b13613550575b846708000000000000008216850b13613533575b846704000000000000008216850b13613516575b846702000000000000008216850b136134f9575b846701000000000000008216850b136134dc575b8466800000000000008216850b136134bf575b8466400000000000008216850b136134a2575b8466200000000000008216850b13613485575b8466100000000000008216850b13613468575b8466080000000000008216850b1361344b575b8466040000000000008216850b1361342e575b8466020000000000008216850b13613411575b8466010000000000008216850b136133f4575b84658000000000008216850b136133d7575b84654000000000008216850b136133ba575b84652000000000008216850b1361339d575b84651000000000008216850b13613380575b84650800000000008216850b13613363575b84650400000000008216850b13613346575b84650200000000008216850b13613329575b84650100000000008216850b1361330c575b846480000000008216850b136132ef575b846440000000008216850b136132d2575b846420000000008216850b136132b5575b846410000000008216850b13613298575b846408000000008216850b1361327b575b846404000000008216850b1361325e575b846402000000008216850b13613241575b846401000000008216850b13613224575b8463800000008216850b13613207575b8463400000008216850b136131ea575b8463200000008216850b136131cd575b8463100000008216850b136131b0575b8463080000008216850b13613193575b8463040000008216850b13613176575b8463020000008216850b13613159575b8463010000008216850b1361313c575b84628000008216850b1361311f575b84624000008216850b13613102575b84622000008216850b136130e5575b84621000008216850b136130c8575b84620800008216850b136130ab575b84620400008216850b1361308e575b84620200008216850b13613071575b84620100008216850b13613054575b846180008216850b13613037575b846140008216850b1361301a575b846120008216850b13612ffd575b846110008216850b13612fe0575b846108008216850b13612fc3575b846104008216850b13612fa6575b846102008216850b13612f89575b846101008216850b13612f6c575b8460809181838216870b13612f50575b8160408216870b13612f34575b8160208216870b13612f18575b8160108216870b13612efc575b8160088216870b13612ee0575b8160048216870b13612ec4575b8160028216870b13612ea7575b600116850b13612e89575b5060401d820b603f03820b1c9160016001607f1b03831161056b57500b90565b909170010000000000000000b17217f7d1cf79ab02901c9038612e69565b7001000000000000000162e42fefa39ef358909402821c93612e5e565b9370010000000000000002c5c85fdf473de6b202821c93612e51565b93700100000000000000058b90bfbe8e7bcd6d02821c93612e44565b937001000000000000000b17217f7d1cf79afa02821c93612e37565b93700100000000000000162e42fefa39ef366f02821c93612e2a565b937001000000000000002c5c85fdf473de6eca02821c93612e1d565b9370010000000000000058b90bfbe8e7bce54402821c93612e10565b91700100000000000000b17217f7d1cf79e9490260801c91612e00565b9170010000000000000162e42fefa39ef44d910260801c91612df2565b91700100000000000002c5c85fdf473dea871f0260801c91612de4565b917001000000000000058b90bfbe8e7bdcbe2e0260801c91612dd6565b9170010000000000000b17217f7d1cf7d83c1a0260801c91612dc8565b917001000000000000162e42fefa39f02b772c0260801c91612dba565b9170010000000000002c5c85fdf473e242ea380260801c91612dac565b91700100000000000058b90bfbe8e7cc35c3f00260801c91612d9e565b917001000000000000b17217f7d1cfb72b45e10260801c91612d90565b91700100000000000162e42fefa39fe95583c20260801c91612d81565b917001000000000002c5c85fdf4741bea6e77e0260801c91612d72565b9170010000000000058b90bfbe8e8b2d3d4ede0260801c91612d63565b91700100000000000b17217f7d1d351a389d400260801c91612d54565b9170010000000000162e42fefa3ae53369388c0260801c91612d45565b91700100000000002c5c85fdf477b662b269450260801c91612d36565b917001000000000058b90bfbe8f71cb4e4b33d0260801c91612d27565b9170010000000000b17217f7d20cf927c8e94c0260801c91612d18565b917001000000000162e42fefa494f1478fde050260801c91612d08565b9170010000000002c5c85fdf4b15de6f17eb0d0260801c91612cf8565b91700100000000058b90bfbe9ddbac5e109cce0260801c91612ce8565b917001000000000b17217f7d5a7716bba4a9ae0260801c91612cd8565b91700100000000162e42fefb2fed257559bdaa0260801c91612cc8565b917001000000002c5c85fdf84bd62ae30a74cc0260801c91612cb8565b9170010000000058b90bfbf8479bd5a81b51ad0260801c91612ca8565b91700100000000b17217f80f4ef5aadda455540260801c91612c98565b9170010000000162e42ff0999ce3541b9fffcf0260801c91612c87565b91700100000002c5c85fe31f35a6a30da1be500260801c91612c76565b917001000000058b90bfcdee5acd3c1cedc8230260801c91612c65565b9170010000000b17217fba9c739aa5819f44f90260801c91612c54565b917001000000162e42fff037df38aa2b219f060260801c91612c43565b9170010000002c5c8601cc6b9e94213c72737a0260801c91612c32565b91700100000058b90c0b48c6be5df846c5b2ef0260801c91612c21565b917001000000b1721835514b86e6d96efd1bfe0260801c91612c10565b91700100000162e430e5a18f6119e3c02282a50260801c91612bfe565b917001000002c5c863b73f016468f6bac5ca2b0260801c91612bec565b9170010000058b90cf1e6d97f9ca14dbcc16280260801c91612bda565b91700100000b1721bcfc99d9f890ea069117630260801c91612bc8565b9170010000162e43f4f831060e02d839a9d16d0260801c91612bb6565b91700100002c5c89d5ec6ca4d7c8acc017b7c90260801c91612ba4565b917001000058b91b5bc9ae2eed81e9b7d4cfab0260801c91612b92565b9170010000b17255775c040618bf4a4ade83fc0260801c91612b80565b917001000162e525ee054754457d59952920260260801c91612b6d565b9170010002c5cc37da9491d0985c348c68e7b30260801c91612b5a565b91700100058ba01fb9f96d6cacd4b180917c3d0260801c91612b47565b917001000b175effdc76ba38e31671ca9397250260801c91612b34565b91700100162f3904051fa128bca9c55c31e5df0260801c91612b21565b917001002c605e2e8cec506d21bfc89a23a00f0260801c91612b0e565b9170010058c86da1c09ea1ff19d294cf2f679b0260801c91612afb565b91700100b1afa5abcbed6129ab13ec11dc95430260801c91612ae8565b9170010163da9fb33356d84a66ae336dcdfa3f0260801c91612ad4565b91700102c9a3e778060ee6f7caca4f7a29bde80260801c91612ac0565b917001059b0d31585743ae7c548eb68ca417fd0260801c91612aac565b9170010b5586cf9890f6298b92b71842a983630260801c91612a98565b917001172b83c7d517adcdf7c8c50eb14a791f0260801c91612a84565b917001306fe0a31b7152de8d5a46305c85edec0260801c91612a70565b6fb504f333f9de6484597d89b3754abe9f9250612a5c565b50505060009056fea264697066735822122095fb40e7b7ee25ffc569bf0f8362d837e9c68f4837e3cb14f698a2e1f905f6ed64736f6c63430008140033a66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688a26469706673582212208a8be1c9e27f86553c81b3676415180bc23daf94626362db3cbb0ae3455b285d64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH3 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3ADFE6D0 EQ PUSH3 0xB21 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH3 0xAC3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0xA9A JUMPI DUP1 PUSH4 0x97271C14 EQ PUSH3 0x304 JUMPI DUP1 PUSH4 0xA5E973C3 EQ PUSH3 0x23E JUMPI DUP1 PUSH4 0xBA5B7982 EQ PUSH3 0x213 JUMPI DUP1 PUSH4 0xC3A811FE EQ PUSH3 0x117 JUMPI PUSH4 0xF2FDE38B EQ PUSH3 0x7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH3 0x114 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x114 JUMPI PUSH3 0x9B PUSH3 0xC62 JUMP JUMPDEST PUSH3 0xA5 PUSH3 0xCF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH3 0xFB JUMPI PUSH1 0x0 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH3 0x114 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x20F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH3 0x13E PUSH3 0xC62 JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x40 MLOAD DUP4 DUP2 SWAP5 SWAP1 DUP4 SLOAD SWAP1 PUSH3 0x15E DUP3 PUSH3 0xC79 JUMP JUMPDEST SWAP5 DUP6 DUP6 MSTORE PUSH1 0x1 SWAP3 DUP8 DUP5 DUP3 AND SWAP2 DUP3 PUSH1 0x0 EQ PUSH3 0x1E9 JUMPI POP POP PUSH1 0x1 EQ PUSH3 0x1A9 JUMPI JUMPDEST POP POP POP PUSH3 0x18F SWAP3 POP SUB DUP4 PUSH3 0xBE3 JUMP JUMPDEST PUSH3 0x1A5 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH3 0xCB6 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP7 SWAP4 POP DUP2 SWAP3 SWAP2 MSTORE DUP3 DUP3 KECCAK256 JUMPDEST DUP6 DUP4 LT PUSH3 0x1D0 JUMPI POP POP PUSH3 0x18F SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH3 0x17E JUMP JUMPDEST DUP1 SLOAD DUP4 DUP10 ADD DUP6 ADD MSTORE DUP8 SWAP5 POP DUP7 SWAP4 SWAP1 SWAP3 ADD SWAP2 DUP2 ADD PUSH3 0x1B4 JUMP JUMPDEST SWAP4 POP SWAP5 POP POP POP PUSH3 0x18F SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH3 0x17E JUMP JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH3 0x114 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x114 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH3 0x114 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x114 JUMPI PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x1 SWAP1 DUP2 SLOAD SWAP4 DUP5 DUP5 MSTORE PUSH1 0x20 DUP1 SWAP5 ADD DUP1 SWAP6 DUP5 DUP5 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT PUSH3 0x2E7 JUMPI POP POP POP DUP2 PUSH3 0x2A6 SWAP2 SUB DUP3 PUSH3 0xBE3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP1 DUP6 ADD SWAP2 DUP2 DUP7 MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP6 ADD SWAP6 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH3 0x2CA JUMPI DUP6 DUP8 SUB DUP7 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP2 ADD SWAP6 SWAP3 DUP2 ADD SWAP3 DUP5 ADD PUSH3 0x2BC JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP8 ADD SWAP3 SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH3 0x28D JUMP JUMPDEST POP CALLVALUE PUSH3 0x114 JUMPI PUSH2 0x140 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x114 JUMPI PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH3 0x20F JUMPI PUSH3 0x33C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0xC06 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH3 0x812 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH3 0x812 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH3 0xA86 JUMPI DUP4 PUSH1 0x5 SHL SWAP2 PUSH1 0x40 MLOAD SWAP5 PUSH3 0x389 PUSH1 0x20 DUP6 ADD DUP8 PUSH3 0xBE3 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP3 DUP2 ADD PUSH1 0x24 ADD DUP4 CALLDATASIZE DUP3 GT PUSH3 0x8B7 JUMPI PUSH1 0x24 DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH3 0xA52 JUMPI POP POP PUSH1 0x64 CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH3 0x20F JUMPI PUSH1 0xE4 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP5 SUB PUSH3 0x812 JUMPI PUSH2 0x104 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP6 SUB PUSH3 0x8B7 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND SWAP1 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x453E DUP2 ADD LT PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x453E DUP8 ADD GT OR PUSH3 0xA3E JUMPI PUSH2 0x453E PUSH3 0xD26 DUP7 CODECOPY PUSH1 0x4 CALLDATALOAD PUSH2 0x453E DUP7 ADD SWAP1 DUP2 MSTORE PUSH2 0x160 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH3 0x447 SWAP2 ADD DUP10 PUSH3 0xCB6 JUMP JUMPDEST SWAP9 PUSH2 0x453E DUP7 ADD DUP11 SUB PUSH1 0x40 PUSH2 0x453E DUP9 ADD ADD MSTORE MLOAD DUP1 DUP11 MSTORE PUSH1 0x20 DUP11 ADD SWAP1 PUSH1 0x20 DUP2 PUSH1 0x5 SHL DUP13 ADD ADD SWAP6 SWAP2 DUP9 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH3 0xA0E JUMPI POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH2 0x453E DUP8 ADD PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0xC0 DUP3 ADD MSTORE SWAP3 DUP3 AND PUSH1 0xE0 DUP5 ADD MSTORE POP DUP7 AND PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x124 CALLDATALOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH2 0x140 ADD MSTORE DUP2 SWAP1 SUB SWAP1 DUP3 CREATE DUP1 ISZERO PUSH3 0xA01 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH3 0x9ED JUMPI DUP1 PUSH1 0x1 PUSH3 0x506 SWAP3 ADD PUSH1 0x1 SSTORE PUSH3 0xB6A JUMP JUMPDEST DUP2 SLOAD PUSH1 0x3 SWAP2 DUP3 SHL DUP5 DUP2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SWAP2 SSTORE DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP5 MLOAD SWAP5 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP7 GT PUSH3 0x9D9 JUMPI PUSH3 0x54D DUP2 SLOAD PUSH3 0xC79 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x98F JUMPI JUMPDEST POP DUP4 SWAP5 SWAP6 DUP4 SWAP5 POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH3 0x8FF JUMPI SWAP2 DUP2 PUSH32 0x89E2B56DFB4365B59DC3A37AAF819CE4937E48BE6AB23686EDCECACF0124AE03 SWAP5 SWAP3 PUSH3 0x5C7 SWAP5 DUP10 SWAP2 PUSH3 0x8F3 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH3 0xCB6 JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD5391393 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP4 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP9 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH3 0x846 JUMPI DUP5 SWAP2 PUSH3 0x8BB JUMPI JUMPDEST POP DUP5 EXTCODESIZE ISZERO PUSH3 0x8B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2F2FF15D PUSH1 0xE0 SHL DUP1 DUP3 MSTORE PUSH1 0x4 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP5 DUP5 SWAP1 DUP7 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH3 0x846 JUMPI PUSH3 0x8A0 JUMPI JUMPDEST DUP4 SWAP5 POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND SWAP1 PUSH1 0x40 MLOAD PUSH4 0x282C51F3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH3 0x895 JUMPI DUP7 SWAP2 PUSH3 0x855 JUMPI JUMPDEST POP DUP3 EXTCODESIZE ISZERO PUSH3 0x851 JUMPI PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH3 0x846 JUMPI DUP5 SWAP2 PUSH3 0x82A JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP1 DUP3 PUSH32 0x92199B96DF436A113D14E9952BEA656A2E2E7FBC271B2141F2C42002E0E2B85B DUP6 DUP1 LOG2 PUSH2 0x124 CALLDATALOAD PUSH3 0x73A JUMPI JUMPDEST POP POP DUP1 EXTCODESIZE ISZERO PUSH3 0x737 JUMPI DUP2 DUP1 SWAP2 PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0xF2FDE38B PUSH1 0xE0 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH3 0x72C JUMPI PUSH3 0x719 JUMPI POP RETURN JUMPDEST PUSH3 0x724 SWAP1 PUSH3 0xBB8 JUMP JUMPDEST PUSH3 0x114 JUMPI DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP REVERT JUMPDEST PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x124 CALLDATALOAD PUSH1 0x44 DUP4 ADD MSTORE SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x64 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH3 0x81F JUMPI DUP4 SWAP2 PUSH3 0x7D9 JUMPI JUMPDEST POP ISZERO PUSH3 0x794 JUMPI DUP2 SWAP1 DUP4 DUP1 PUSH3 0x6E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C2066756E64207472616E73666572206661696C656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH3 0x816 JUMPI JUMPDEST DUP2 PUSH3 0x7F7 PUSH1 0x20 SWAP4 DUP4 PUSH3 0xBE3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x812 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH3 0x812 JUMPI DUP4 PUSH3 0x783 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH3 0x7E8 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH3 0x835 SWAP1 PUSH3 0xBB8 JUMP JUMPDEST PUSH3 0x842 JUMPI DUP3 DUP6 PUSH3 0x6AD JUMP JUMPDEST POP POP REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP6 RETURNDATASIZE PUSH1 0x20 GT PUSH3 0x88C JUMPI JUMPDEST DUP2 PUSH3 0x874 PUSH1 0x20 SWAP4 DUP4 PUSH3 0xBE3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x887 JUMPI DUP6 SWAP5 MLOAD DUP8 PUSH3 0x675 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH3 0x865 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP3 SWAP1 SWAP4 PUSH3 0x8AE SWAP1 PUSH3 0xBB8 JUMP JUMPDEST SWAP2 DUP4 SWAP1 PUSH3 0x640 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH3 0x8EA JUMPI JUMPDEST DUP2 PUSH3 0x8D9 PUSH1 0x20 SWAP4 DUP4 PUSH3 0xBE3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x8B7 JUMPI MLOAD DUP6 PUSH3 0x600 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH3 0x8CA JUMP JUMPDEST SWAP1 POP DUP4 ADD MLOAD DUP11 PUSH3 0x59E JUMP JUMPDEST DUP3 DUP8 MSTORE PUSH1 0x20 DUP8 KECCAK256 SWAP1 PUSH1 0x1F NOT DUP4 AND DUP9 JUMPDEST DUP2 DUP2 LT PUSH3 0x973 JUMPI POP SWAP3 PUSH3 0x5C7 SWAP5 SWAP3 PUSH1 0x1 SWAP3 DUP3 PUSH32 0x89E2B56DFB4365B59DC3A37AAF819CE4937E48BE6AB23686EDCECACF0124AE03 SWAP9 SWAP7 LT PUSH3 0x959 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0x5B2 JUMP JUMPDEST DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP11 DUP1 PUSH3 0x94C JUMP JUMPDEST DUP3 DUP8 ADD MLOAD DUP5 SSTORE DUP9 SWAP8 POP PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH3 0x90E JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP6 KECCAK256 PUSH1 0x1F DUP9 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP10 LT PUSH3 0x9CE JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0x9C2 JUMPI POP PUSH3 0x557 JUMP JUMPDEST DUP6 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x9B3 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH3 0x9AA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP7 PUSH1 0x20 DUP1 PUSH3 0xA2F DUP16 SWAP4 PUSH1 0x1 SWAP5 PUSH1 0x1F NOT SWAP1 DUP3 SUB ADD DUP7 MSTORE DUP12 MLOAD PUSH3 0xCB6 JUMP JUMPDEST SWAP10 ADD SWAP3 ADD SWAP3 ADD SWAP1 SWAP3 SWAP2 PUSH3 0x46F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH3 0x851 JUMPI PUSH1 0x20 SWAP2 PUSH3 0xA7A DUP4 SWAP3 PUSH1 0x24 CALLDATASIZE SWAP2 DUP10 ADD ADD PUSH3 0xC06 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH3 0x3A4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH3 0x114 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x114 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH3 0x114 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x114 JUMPI PUSH3 0xAE0 PUSH3 0xCF8 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH3 0x114 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x114 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 SLOAD DUP3 LT ISZERO PUSH3 0x114 JUMPI PUSH1 0x20 PUSH3 0xB51 DUP4 PUSH3 0xB6A JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0xBA2 JUMPI PUSH1 0x1 PUSH1 0x0 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH3 0xBCD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH3 0xBCD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH3 0x887 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH3 0xBCD JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH3 0xC3F PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH3 0xBE3 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH3 0x887 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x887 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0xCAB JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0xC95 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0xC89 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH3 0xCE3 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH3 0xCC1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH3 0xD0D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT INVALID PUSH2 0x180 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0xDDA JUMPI PUSH1 0x0 PUSH3 0x453E SWAP1 DUP2 CODESIZE SUB DUP1 SWAP3 PUSH3 0x25 DUP3 PUSH2 0x180 PUSH3 0xDDF JUMP JUMPDEST PUSH2 0x180 CODECOPY PUSH2 0x160 DUP3 SLT PUSH3 0xDD7 JUMPI PUSH2 0x180 MLOAD PUSH2 0x1A0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0xDD3 JUMPI PUSH3 0x5F SWAP1 DUP5 PUSH2 0x180 ADD SWAP1 PUSH2 0x180 ADD PUSH3 0xE03 JUMP JUMPDEST PUSH2 0x1C0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0xDCF JUMPI PUSH2 0x180 DUP6 ADD PUSH2 0x19F DUP3 ADD SLT ISZERO PUSH3 0xDCF JUMPI PUSH2 0x180 DUP2 ADD MLOAD SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 GT PUSH3 0xDBB JUMPI DUP6 PUSH1 0x5 SHL SWAP1 PUSH1 0x40 MLOAD SWAP7 PUSH3 0xB1 PUSH1 0x20 DUP5 ADD DUP10 PUSH3 0xDDF JUMP JUMPDEST DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP1 PUSH2 0x180 DUP2 ADD PUSH2 0x1A0 DUP6 DUP6 ADD ADD GT PUSH3 0xDB7 JUMPI PUSH2 0x1A0 DUP5 ADD SWAP2 JUMPDEST PUSH2 0x1A0 DUP6 DUP6 ADD ADD DUP4 LT PUSH3 0xD76 JUMPI POP POP POP POP POP PUSH3 0xF4 PUSH1 0x60 PUSH2 0x180 ADD PUSH3 0xE7A JUMP JUMPDEST PUSH2 0x200 MLOAD PUSH2 0x220 MLOAD PUSH2 0x240 MLOAD SWAP2 PUSH3 0x10E PUSH2 0x260 PUSH3 0xE7A JUMP JUMPDEST SWAP4 PUSH3 0x11C PUSH2 0x280 PUSH3 0xE7A JUMP JUMPDEST PUSH2 0x2A0 MLOAD SWAP8 SWAP1 SWAP7 SWAP1 PUSH3 0x131 PUSH2 0x2C0 PUSH3 0xE7A JUMP JUMPDEST SWAP9 CALLER ISZERO PUSH3 0xD5D JUMPI DUP11 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP14 SSTORE PUSH1 0x40 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP15 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x9 DUP13 SWAP1 SSTORE PUSH1 0xA DUP13 SWAP1 SSTORE PUSH1 0xB DUP13 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND ISZERO PUSH3 0xD1B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH3 0xCD6 JUMPI DUP12 MLOAD ISZERO PUSH3 0xC91 JUMPI DUP5 ISZERO PUSH3 0xC34 JUMPI DUP6 ISZERO PUSH3 0xBEF JUMPI DUP12 MLOAD DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH3 0xBE2 JUMPI JUMPDEST POP ISZERO PUSH3 0xB9D JUMPI PUSH2 0x2710 DUP6 GT PUSH3 0xB3E JUMPI PUSH1 0x64 DUP6 LT PUSH3 0xAD3 JUMPI DUP12 MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH3 0xA8E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x3F SHL SUB DUP2 GT PUSH3 0xA8A JUMPI DUP12 DUP2 PUSH1 0x40 SHL PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH3 0xA8A JUMPI DUP12 PUSH1 0x40 DUP3 SWAP1 SHL PUSH1 0xF SIGNEXTEND PUSH9 0x10000000000000000 DUP2 SLT ISZERO PUSH3 0xA77 JUMPI JUMPDEST DUP1 PUSH5 0x100000000 PUSH1 0x2 SWAP3 SLT ISZERO PUSH3 0xA6A JUMPI JUMPDEST PUSH3 0x10000 DUP2 SLT ISZERO PUSH3 0xA5D JUMPI JUMPDEST PUSH2 0x100 DUP2 SLT ISZERO PUSH3 0xA50 JUMPI JUMPDEST PUSH1 0x10 DUP2 SLT ISZERO PUSH3 0xA43 JUMPI JUMPDEST PUSH1 0x4 DUP2 SLT ISZERO PUSH3 0xA37 JUMPI JUMPDEST SLT ISZERO PUSH3 0xA2E JUMPI JUMPDEST SWAP1 DUP13 DUP8 SWAP3 PUSH1 0x3F NOT DUP2 ADD PUSH1 0x40 SHL SWAP3 PUSH1 0x40 SHL PUSH1 0xF SIGNEXTEND SWAP1 PUSH1 0x7F SUB SHL PUSH8 0x8000000000000000 SWAP2 JUMPDEST DUP3 SGT PUSH3 0xA0C JUMPI POP POP SWAP1 PUSH16 0xB17217F7D1CF79ABC9E3B39803F2F6AF PUSH3 0x2D6 SWAP3 PUSH1 0xF SIGNEXTEND MUL PUSH1 0x80 SAR PUSH3 0xECB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH3 0xA01 JUMPI SWAP1 PUSH3 0x315 SWAP2 DUP15 SWAP2 PUSH3 0x9DD JUMPI JUMPDEST POP PUSH3 0xEAA JUMP JUMPDEST SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH3 0x9C9 JUMPI LT PUSH3 0x96D JUMPI PUSH1 0xC0 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x959 JUMPI PUSH1 0x7 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND ISZERO PUSH3 0x94E JUMPI JUMPDEST PUSH1 0x1 AND PUSH1 0x20 DUP3 LT EQ PUSH3 0x93A JUMPI SWAP1 DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH3 0x8DA JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x85E JUMPI DUP12 SWAP3 PUSH3 0x852 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x7 SSTORE JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 MSTORE TIMESTAMP DUP1 DUP3 ADD LT PUSH3 0x83E JUMPI TIMESTAMP ADD PUSH1 0x4 SWAP1 DUP2 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH2 0xFFFF NOT AND SWAP1 SSTORE PUSH1 0xE0 SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0xA0 DUP2 SWAP1 MSTORE DUP5 MLOAD PUSH2 0x160 MSTORE PUSH1 0x40 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP2 PUSH1 0x20 SWAP2 DUP5 SWAP2 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH3 0x833 JUMPI SWAP1 PUSH1 0xFF SWAP3 SWAP2 DUP5 SWAP3 PUSH3 0x7FB JUMPI JUMPDEST POP PUSH2 0x120 DUP3 SWAP1 MSTORE PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE AND DUP1 ISZERO PUSH3 0x7E5 JUMPI POP PUSH3 0x46E PUSH1 0xFF PUSH2 0x120 MLOAD AND PUSH3 0xEBC JUMP JUMPDEST PUSH1 0xD SSTORE JUMPDEST DUP1 PUSH3 0x484 PUSH1 0xFF PUSH2 0x120 MLOAD AND PUSH3 0xEAA JUMP JUMPDEST SWAP2 PUSH3 0x7D1 JUMPI POP PUSH2 0x140 MSTORE PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH3 0x6E9 JUMPI PUSH1 0x5 DUP2 SWAP1 SHL DUP3 ADD PUSH1 0x20 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x6BD JUMPI PUSH1 0x40 MSTORE DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH3 0x6BD JUMPI PUSH1 0x1 DUP3 ADD DUP1 PUSH1 0x3 SSTORE DUP3 LT ISZERO PUSH3 0x6D3 JUMPI PUSH1 0x3 PUSH1 0x0 MSTORE DUP1 MLOAD DUP1 MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x6BD JUMPI DUP5 PUSH1 0x1 SHL DUP5 ADD SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x6B2 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH3 0x69C JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x64E JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x5D1 JUMPI SWAP2 DUP1 PUSH1 0x1 SWAP6 SWAP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x0 SWAP3 PUSH3 0x5C5 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP6 SHL OR DUP6 DUP6 SHL DUP5 ADD SSTORE JUMPDEST ADD MLOAD SWAP3 DUP3 SHL ADD ADD SSTORE PUSH1 0x0 NOT DUP2 EQ PUSH3 0x5AF JUMPI PUSH1 0x1 ADD PUSH3 0x492 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x57C JUMP JUMPDEST SWAP1 DUP6 PUSH1 0x1 SHL DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH3 0x635 JUMPI POP SWAP3 PUSH1 0x1 SWAP6 SWAP5 SWAP3 DUP7 SWAP3 PUSH1 0x20 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x61B JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP6 DUP6 SHL DUP5 ADD SSTORE PUSH3 0x594 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x609 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH3 0x5E4 JUMP JUMPDEST DUP6 PUSH1 0x1 SHL DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0x694 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0x687 JUMPI POP POP PUSH3 0x559 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x66F JUMP JUMPDEST POP DUP1 PUSH3 0x66F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x545 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35FD SWAP1 DUP2 PUSH3 0xF21 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x969 ADD MSTORE DUP2 DUP2 PUSH2 0x1520 ADD MSTORE DUP2 DUP2 PUSH2 0x15F9 ADD MSTORE DUP2 DUP2 PUSH2 0x1660 ADD MSTORE PUSH2 0x2588 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x25C ADD MSTORE DUP2 DUP2 PUSH2 0x3AC ADD MSTORE DUP2 DUP2 PUSH2 0x727 ADD MSTORE DUP2 DUP2 PUSH2 0xDBF ADD MSTORE DUP2 DUP2 PUSH2 0x1227 ADD MSTORE DUP2 DUP2 PUSH2 0x184E ADD MSTORE PUSH2 0x1D27 ADD MSTORE PUSH1 0xC0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x5B7 ADD MSTORE DUP2 DUP2 PUSH2 0xA6D ADD MSTORE DUP2 DUP2 PUSH2 0xE1B ADD MSTORE DUP2 DUP2 PUSH2 0x1450 ADD MSTORE PUSH2 0x1B34 ADD MSTORE PUSH1 0xE0 MLOAD DUP2 DUP2 DUP2 PUSH2 0xD2F ADD MSTORE DUP2 DUP2 PUSH2 0x1373 ADD MSTORE DUP2 DUP2 PUSH2 0x1589 ADD MSTORE PUSH2 0x1C1C ADD MSTORE PUSH2 0x100 MLOAD DUP2 DUP2 DUP2 PUSH2 0x36E ADD MSTORE DUP2 DUP2 PUSH2 0x17D8 ADD MSTORE PUSH2 0x193A ADD MSTORE PUSH2 0x120 MLOAD DUP2 PUSH2 0x1ABD ADD MSTORE PUSH2 0x140 MLOAD DUP2 DUP2 DUP2 PUSH2 0x667 ADD MSTORE PUSH2 0x90B ADD MSTORE PUSH2 0x160 MLOAD DUP2 PUSH2 0xBB9 ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH3 0x7F2 SWAP1 DUP3 SUB PUSH3 0xEBC JUMP JUMPDEST PUSH1 0xD SSTORE PUSH3 0x472 JUMP JUMPDEST PUSH3 0x823 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH3 0x82B JUMPI JUMPDEST PUSH3 0x81A DUP2 DUP4 PUSH3 0xDDF JUMP JUMPDEST DUP2 ADD SWAP1 PUSH3 0xE8F JUMP JUMPDEST SWAP1 CODESIZE PUSH3 0x42D JUMP JUMPDEST POP RETURNDATASIZE PUSH3 0x80E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x387 JUMP JUMPDEST PUSH1 0x7 DUP13 MSTORE DUP12 SWAP4 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x451E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH3 0x8BE JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x8A4 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x7 SSTORE PUSH3 0x39D JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x895 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x878 JUMP JUMPDEST PUSH1 0x7 DUP13 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x451E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0x932 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST DUP14 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD DUP3 LT PUSH3 0x924 JUMPI POP POP POP PUSH3 0x36F JUMP JUMPDEST DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH3 0x90A JUMP JUMPDEST POP DUP1 PUSH3 0x904 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x355 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C2066756E6473206D757374206578636565642062202A206C6E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x286E756D5F6F7574636F6D657329 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP13 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP13 REVERT JUMPDEST PUSH3 0x9FA SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH3 0x82B JUMPI PUSH3 0x81A DUP2 DUP4 PUSH3 0xDDF JUMP JUMPDEST CODESIZE PUSH3 0x30E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP16 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 SWAP2 SWAP4 POP MUL SWAP1 DUP2 PUSH1 0xFF SHR SWAP2 DUP3 PUSH1 0x7F ADD SHR SWAP2 DUP4 MUL ADD SWAP2 PUSH1 0x1 SAR DUP8 SWAP3 SWAP2 DUP15 PUSH3 0x2A9 JUMP JUMPDEST PUSH1 0x1 ADD PUSH3 0x286 JUMP JUMPDEST SWAP2 DUP2 ADD SWAP2 DUP2 SAR PUSH3 0x27E JUMP JUMPDEST PUSH1 0x4 SWAP3 DUP4 ADD SWAP3 SAR PUSH3 0x273 JUMP JUMPDEST PUSH1 0x8 SWAP3 DUP4 ADD SWAP3 SAR PUSH3 0x268 JUMP JUMPDEST PUSH1 0x10 SWAP3 DUP4 ADD SWAP3 SAR PUSH3 0x25C JUMP JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SAR PUSH3 0x24F JUMP JUMPDEST POP PUSH1 0x40 SWAP1 POP DUP2 DUP2 SHL PUSH1 0xF SIGNEXTEND DUP2 SAR PUSH3 0x23D JUMP JUMPDEST DUP12 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4174206C656173742074776F206F7574636F6D65732072657175697265640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C697175696469747920706172616D6574657220276227206D75737420626520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x67726561746572207468616E206D696E696D756D000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C697175696469747920706172616D6574657220276227206578636565647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x746865206C696D6974206D6178696D756D PUSH1 0x78 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206E756D626572206F66206F7574636F6D6573000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x5 SWAP2 POP GT ISZERO CODESIZE PUSH3 0x1DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4475726174696F6E206D75737420626520706F73697469766500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C697175696469747920706172616D657465722062206D757374206265206772 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x6561746572207468616E207A65726F PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4174206C65617374206F6E65206F7574636F6D65207265717569726564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642066656520726563697069656E742061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP13 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0xDB3 JUMPI PUSH1 0x20 DUP1 SWAP3 PUSH3 0xDA5 DUP3 SWAP4 DUP4 DUP8 PUSH2 0x180 ADD SWAP2 DUP12 PUSH2 0x180 ADD ADD ADD PUSH3 0xE03 JUMP JUMPDEST DUP2 MSTORE ADD SWAP4 ADD SWAP3 SWAP1 POP PUSH3 0xD1 JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH3 0x6BD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH3 0xDDA JUMPI DUP3 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x6BD JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 SWAP2 PUSH3 0xE3F PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND DUP5 ADD DUP6 PUSH3 0xDDF JUMP JUMPDEST DUP2 DUP5 MSTORE DUP3 DUP3 DUP8 ADD ADD GT PUSH3 0xDDA JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH3 0xE66 JUMPI POP DUP3 PUSH1 0x0 SWAP4 SWAP5 SWAP6 POP ADD ADD MSTORE SWAP1 JUMP JUMPDEST DUP6 DUP2 ADD DUP4 ADD MLOAD DUP5 DUP3 ADD DUP5 ADD MSTORE DUP3 ADD PUSH3 0xE50 JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0xDDA JUMPI JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH3 0xDDA JUMPI MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH3 0xDDA JUMPI SWAP1 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x4D DUP2 GT PUSH3 0x5AF JUMPI PUSH1 0xA EXP SWAP1 JUMP JUMPDEST PUSH1 0x4D DUP2 GT PUSH3 0x5AF JUMPI PUSH1 0xA EXP SWAP1 JUMP JUMPDEST DUP2 ISZERO PUSH3 0xF19 JUMPI PUSH1 0xF SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 DUP2 SLT PUSH3 0xF15 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND DUP2 MUL PUSH1 0x40 SHR SWAP3 PUSH1 0x80 SHR MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB DUP2 GT PUSH3 0xF15 JUMPI PUSH1 0x40 SHL SWAP1 DUP3 NOT DUP3 GT PUSH3 0xDD7 JUMPI POP ADD SWAP1 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1CB44DFC EQ PUSH2 0x1EFC JUMPI DUP2 PUSH4 0x2279A970 EQ PUSH2 0x1AE1 JUMPI DUP2 PUSH4 0x3B97E856 EQ PUSH2 0x1AA3 JUMPI DUP2 PUSH4 0x3F4BA83A EQ PUSH2 0x1A39 JUMPI DUP2 PUSH4 0x416E517E EQ PUSH2 0x1969 JUMPI DUP2 PUSH4 0x46904840 EQ PUSH2 0x1925 JUMPI DUP2 PUSH4 0x474E19F2 EQ PUSH2 0x190A JUMPI DUP2 PUSH4 0x476343EE EQ PUSH2 0x17BC JUMPI DUP2 PUSH4 0x48A5DEC6 EQ PUSH2 0x1798 JUMPI DUP2 PUSH4 0x4A79D50C EQ PUSH2 0x1683 JUMPI DUP2 PUSH4 0x4DF7E3D0 EQ PUSH2 0x1648 JUMPI DUP2 PUSH4 0x510F5116 EQ PUSH2 0x15B5 JUMPI DUP2 PUSH4 0x53249A31 EQ PUSH2 0x14DC JUMPI DUP2 PUSH4 0x5C975ABB EQ PUSH2 0x14B8 JUMPI DUP2 PUSH4 0x69C41A74 EQ PUSH2 0x149A JUMPI DUP2 PUSH4 0x6E77609E EQ PUSH2 0x1473 JUMPI DUP2 PUSH4 0x6ED71EDE EQ PUSH2 0x1438 JUMPI DUP2 PUSH4 0x715018A6 EQ PUSH2 0x13DE JUMPI DUP2 PUSH4 0x7DC0D1D0 EQ PUSH2 0x13B5 JUMPI DUP2 PUSH4 0x7DC8F086 EQ PUSH2 0x1396 JUMPI DUP2 PUSH4 0x7FD6F15C EQ PUSH2 0x135B JUMPI DUP2 PUSH4 0x8456CB59 EQ PUSH2 0x1300 JUMPI DUP2 PUSH4 0x89FF7069 EQ PUSH2 0x11D8 JUMPI DUP2 PUSH4 0x8DA5CB5B EQ PUSH2 0x11B0 JUMPI DUP2 PUSH4 0x8F512BF4 EQ PUSH2 0x1191 JUMPI DUP2 PUSH4 0x8FBB4A82 EQ PUSH2 0x56E JUMPI DUP2 PUSH4 0x9003ADFE EQ PUSH2 0x1172 JUMPI DUP2 PUSH4 0x90514320 EQ PUSH2 0x1153 JUMPI DUP2 PUSH4 0x92B2849B EQ PUSH2 0x1137 JUMPI DUP2 PUSH4 0x96211A97 EQ PUSH2 0x10B3 JUMPI DUP2 PUSH4 0x9AAFF766 EQ PUSH2 0x1056 JUMPI DUP2 PUSH4 0x9B34AE03 EQ PUSH2 0x1037 JUMPI DUP2 PUSH4 0x9E6C2959 EQ PUSH2 0xC65 JUMPI DUP2 PUSH4 0xA2D07D24 EQ PUSH2 0x101B JUMPI DUP2 PUSH4 0xB03238F7 EQ PUSH2 0xFE7 JUMPI DUP2 PUSH4 0xBA5B7982 EQ PUSH2 0xFBE JUMPI DUP2 PUSH4 0xBEEBC5DA EQ PUSH2 0xC6A JUMPI DUP2 PUSH4 0xC3883F17 EQ PUSH2 0xC65 JUMPI DUP2 PUSH4 0xC511ED5E EQ PUSH2 0xBDC JUMPI DUP2 PUSH4 0xCA3BD569 EQ PUSH2 0xBA1 JUMPI DUP2 PUSH4 0xD55E725B EQ PUSH2 0xB82 JUMPI DUP2 PUSH4 0xDDD9D045 EQ PUSH2 0xA42 JUMPI DUP2 PUSH4 0xE7572230 EQ PUSH2 0x92E JUMPI DUP2 PUSH4 0xE8467AF6 EQ PUSH2 0x8F3 JUMPI DUP2 PUSH4 0xE88499A9 EQ PUSH2 0x573 JUMPI DUP2 PUSH4 0xED0C986F EQ PUSH2 0x56E JUMPI DUP2 PUSH4 0xEED2A147 EQ PUSH2 0x45D JUMPI DUP2 PUSH4 0xEF86CE8E EQ PUSH2 0x324 JUMPI DUP2 PUSH4 0xF2FDE38B EQ PUSH2 0x28F JUMPI POP PUSH4 0xFC0C546A EQ PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x320 JUMPI PUSH2 0x2AA PUSH2 0x1F88 JUMP JUMPDEST SWAP1 PUSH2 0x2B3 PUSH2 0x20C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x30A JUMPI POP POP PUSH1 0x0 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x320 JUMPI PUSH2 0x33F PUSH2 0x20C9 JUMP JUMPDEST PUSH2 0x350 PUSH1 0xFF PUSH1 0x5 SLOAD PUSH1 0x8 SHR AND PUSH2 0x238C JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD SWAP1 DUP5 SWAP1 SSTORE DUP2 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP5 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD SUB DUP2 DUP8 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x453 JUMPI DUP5 SWAP2 PUSH2 0x425 JUMPI JUMPDEST POP ISZERO PUSH2 0x3EE JUMPI DUP3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x15DA5D1A191C985DD85B0819985A5B1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x446 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x44C JUMPI JUMPDEST PUSH2 0x43E DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2221 JUMP JUMPDEST CODESIZE PUSH2 0x3E4 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x434 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x56B JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x56B JUMPI DUP4 CALLDATALOAD SWAP1 PUSH1 0x3 SLOAD DUP3 LT ISZERO PUSH2 0x56B JUMPI POP PUSH2 0x489 SWAP1 PUSH2 0x2079 JUMP JUMPDEST POP SWAP3 DUP3 MLOAD SWAP4 PUSH1 0x0 SWAP2 DUP2 SLOAD SWAP3 PUSH1 0x1 SWAP4 DUP1 DUP6 SHR SWAP3 DUP6 DUP3 AND SWAP1 DUP2 ISZERO PUSH2 0x561 JUMPI JUMPDEST DUP8 DUP6 LT DUP3 EQ PUSH2 0x54E JUMPI POP DUP4 DUP10 MSTORE DUP9 SWAP3 SWAP2 DUP8 SWAP1 DUP3 ISZERO PUSH2 0x531 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x4F1 JUMPI JUMPDEST PUSH2 0x4D4 SWAP3 POP SUB DUP7 PUSH2 0x1FDE JUMP JUMPDEST ADD SLOAD PUSH2 0x4E9 DUP4 MLOAD SWAP5 DUP5 DUP7 SWAP6 DUP7 MSTORE DUP6 ADD SWAP1 PUSH2 0x2000 JUMP JUMPDEST SWAP2 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST POP POP DUP2 PUSH1 0x0 MSTORE DUP6 DUP5 DUP1 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x518 JUMPI POP POP PUSH2 0x4D4 SWAP4 POP DUP3 ADD ADD PUSH2 0x4C8 JUMP JUMPDEST DUP1 SWAP2 SWAP3 SWAP5 POP SLOAD DUP4 DUP6 DUP13 ADD ADD MSTORE ADD SWAP2 ADD DUP6 SWAP1 DUP6 DUP10 SWAP4 PUSH2 0x502 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP5 DUP3 ADD MSTORE PUSH2 0x4D4 SWAP5 ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD ADD SWAP2 POP PUSH2 0x4C8 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 SWAP1 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x4A6 JUMP JUMPDEST DUP1 REVERT JUMPDEST PUSH2 0x2040 JUMP JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x320 JUMPI PUSH2 0x58E PUSH2 0x229B JUMP JUMPDEST PUSH2 0x596 PUSH2 0x227D JUMP JUMPDEST PUSH2 0x5A7 PUSH1 0xFF PUSH1 0x5 SLOAD PUSH1 0x8 SHR AND PUSH2 0x238C JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH1 0xC SLOAD AND SWAP3 PUSH32 0x0 SWAP3 PUSH1 0x6 SLOAD DUP4 MLOAD SWAP5 PUSH4 0x18896F4D PUSH1 0xE1 SHL DUP7 MSTORE DUP1 DUP5 DUP8 ADD MSTORE DUP2 PUSH1 0x24 DUP8 ADD MSTORE PUSH1 0x20 SWAP6 DUP7 DUP2 PUSH1 0x44 DUP2 DUP12 GAS STATICCALL DUP1 ISZERO PUSH2 0x8BA JUMPI DUP8 SWAP1 DUP11 SWAP1 PUSH2 0x8C4 JUMPI JUMPDEST DUP8 MLOAD PUSH3 0x7EEAC7 PUSH1 0xE1 SHL DUP2 MSTORE CALLER DUP9 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 POP DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD JUMPDEST SUB DUP2 DUP12 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x8BA JUMPI DUP10 SWAP2 PUSH2 0x888 JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0x84E JUMPI DUP1 PUSH1 0x1 PUSH2 0x656 DUP6 PUSH2 0x2079 JUMP JUMPDEST POP ADD SLOAD LT PUSH2 0x813 JUMPI SWAP1 DUP9 SWAP3 SWAP2 PUSH2 0x68C PUSH32 0x0 DUP3 PUSH2 0x21E1 JUMP JUMPDEST SWAP9 PUSH2 0x6A5 DUP11 PUSH1 0x9 SLOAD PUSH2 0x6A0 DUP3 DUP3 LT ISZERO PUSH2 0x22BE JUMP JUMPDEST PUSH2 0x2214 JUMP JUMPDEST PUSH1 0x9 SSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0x80F JUMPI DUP8 MLOAD PUSH4 0x6F3DF851 PUSH1 0xE1 SHL DUP2 MSTORE CALLER DUP9 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x80 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x805 JUMPI PUSH2 0x7ED JUMPI JUMPDEST POP POP DUP3 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP4 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 DUP6 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 DUP11 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 PUSH32 0x0 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x7E3 JUMPI DUP7 SWAP2 PUSH2 0x7C6 JUMPI JUMPDEST POP ISZERO PUSH2 0x78F JUMPI POP SWAP1 PUSH32 0xEC68461F5D4CC45C89E914CB8826A966C73DD35E5F97815ECE0A01FFA4A025A6 SWAP2 MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST DUP3 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x151BDAD95B881C185E5BDD5D0819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x7DD SWAP2 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x44C JUMPI PUSH2 0x43E DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST CODESIZE PUSH2 0x757 JUMP JUMPDEST DUP4 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x7F6 SWAP1 PUSH2 0x1FB4 JUMP JUMPDEST PUSH2 0x801 JUMPI DUP6 CODESIZE PUSH2 0x6F7 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP7 ADD DUP9 SWAP1 MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C696420736861726520616D6F756E7473 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP7 ADD DUP9 SWAP1 MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F2077696E6E696E677320746F20636C61696D PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x8B3 JUMPI JUMPDEST PUSH2 0x89F DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8AE JUMPI MLOAD CODESIZE PUSH2 0x643 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x895 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x8EC JUMPI JUMPDEST PUSH2 0x8D9 DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8AE JUMPI DUP7 PUSH2 0x630 SWAP2 MLOAD PUSH2 0x60C JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x8CF JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x320 JUMPI CALLDATALOAD PUSH2 0x959 PUSH1 0x3 SLOAD SWAP2 PUSH2 0x954 DUP4 DUP3 LT PUSH2 0x2134 JUMP JUMPDEST PUSH2 0x2079 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SWAP2 ADD SLOAD SWAP1 PUSH2 0x994 PUSH2 0x98F PUSH32 0x0 DUP1 SWAP5 PUSH2 0x2755 JUMP JUMPDEST PUSH2 0x29D6 JUMP JUMPDEST SWAP3 DUP6 SWAP3 DUP7 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0xA0A JUMPI POP POP POP POP PUSH1 0xF SIGNEXTEND SWAP1 DUP2 ISZERO PUSH2 0xA06 JUMPI DUP3 SHL PUSH1 0x17 SIGNEXTEND SDIV SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB NOT DUP4 SLT ISZERO DUP1 PUSH2 0x9F5 JUMPI JUMPDEST ISZERO PUSH2 0x56B JUMPI POP PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x9ED PUSH2 0x9E8 PUSH1 0x20 SWAP5 PUSH1 0xF SIGNEXTEND PUSH2 0x26E3 JUMP JUMPDEST PUSH2 0x267F JUMP JUMPDEST AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB DUP4 SGT ISZERO PUSH2 0x9C8 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH2 0xA34 PUSH2 0xA3A SWAP2 PUSH2 0xA2E PUSH2 0x98F DUP7 DUP7 PUSH2 0xA26 DUP12 PUSH2 0x2079 JUMP JUMPDEST POP ADD SLOAD PUSH2 0x2755 JUMP JUMPDEST SWAP1 PUSH2 0x269A JUMP JUMPDEST SWAP5 PUSH2 0x2504 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x99A JUMP JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x28B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH2 0xA5C PUSH2 0x1F88 JUMP JUMPDEST PUSH1 0xC SLOAD DUP3 MLOAD PUSH4 0x18896F4D PUSH1 0xE1 SHL DUP2 MSTORE PUSH32 0x0 DUP7 DUP3 ADD MSTORE PUSH1 0x24 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x20 SWAP6 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP7 DUP4 PUSH1 0x44 DUP2 DUP6 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0xB78 JUMPI SWAP1 DUP8 SWAP4 SWAP3 SWAP2 DUP8 SWAP4 PUSH2 0xB43 JUMPI JUMPDEST POP DUP6 MLOAD PUSH3 0x7EEAC7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP1 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP4 SWAP2 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD JUMPDEST SUB SWAP2 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0xB38 JUMPI SWAP3 PUSH2 0xB09 JUMPI JUMPDEST POP MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xB31 JUMPI JUMPDEST PUSH2 0xB21 DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8AE JUMPI MLOAD SWAP1 DUP4 PUSH2 0xB02 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xB17 JUMP JUMPDEST DUP3 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP2 SWAP6 SWAP3 SWAP5 POP RETURNDATASIZE DUP4 GT PUSH2 0xB71 JUMPI JUMPDEST PUSH2 0xB5B DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x8AE JUMPI SWAP2 MLOAD DUP7 SWAP3 SWAP1 SWAP2 PUSH2 0xAF1 PUSH2 0xAC2 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xB51 JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH1 0xA SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x320 JUMPI DUP2 SLOAD TIMESTAMP LT PUSH2 0xC2C JUMPI DUP3 PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE PUSH32 0xB5F6BF058282D5CC003EFC735B9EE453BBD7F9BEF4C6DB6300D095F3EEFAC28 DUP2 DUP1 LOG1 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13585C9AD95D081B9BDD081BDD995C881E595D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x205D JUMP JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI PUSH2 0xC7B CALLDATASIZE PUSH2 0x1F9E JUMP JUMPDEST PUSH2 0xC86 SWAP4 SWAP2 SWAP4 PUSH2 0x229B JUMP JUMPDEST PUSH2 0xC8E PUSH2 0x227D JUMP JUMPDEST PUSH2 0xC9D PUSH1 0xFF PUSH1 0x5 SLOAD AND ISZERO PUSH2 0x20F5 JUMP JUMPDEST PUSH2 0xCAA PUSH1 0x3 SLOAD DUP6 LT PUSH2 0x2134 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF7B JUMPI PUSH2 0x2710 DUP2 LT ISZERO PUSH2 0xF38 JUMPI PUSH2 0xD27 PUSH2 0xD14 PUSH2 0x9E8 PUSH2 0xD00 PUSH2 0xCD6 PUSH2 0xCD1 PUSH2 0x2513 JUMP JUMPDEST PUSH2 0x2579 JUMP JUMPDEST PUSH1 0x1 PUSH2 0xCE1 DUP11 PUSH2 0x2079 JUMP JUMPDEST POP ADD PUSH2 0xCEE DUP8 DUP3 SLOAD PUSH2 0x2172 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xCFB PUSH2 0xCD1 PUSH2 0x2513 JUMP JUMPDEST PUSH2 0x26BF JUMP JUMPDEST PUSH2 0xD0F DUP10 DUP3 PUSH1 0xF SIGNEXTEND SLT ISZERO PUSH2 0x2195 JUMP JUMPDEST PUSH2 0x26E3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0xD SLOAD SWAP2 AND PUSH2 0x21E1 JUMP JUMPDEST SWAP3 PUSH1 0x64 PUSH2 0xD54 PUSH32 0x0 DUP7 PUSH2 0x21E1 JUMP JUMPDEST DIV SWAP4 PUSH1 0x32 DUP6 MUL DUP6 DUP2 DIV PUSH1 0x32 EQ DUP7 ISZERO OR ISZERO PUSH2 0xF25 JUMPI PUSH1 0x64 SWAP1 DIV SWAP1 DUP8 PUSH2 0xD82 PUSH2 0xD7B DUP5 DUP10 PUSH2 0x2214 JUMP JUMPDEST SWAP8 DUP4 PUSH2 0x2172 JUMP JUMPDEST DUP5 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP2 DUP10 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP8 SWAP2 DUP2 SWAP1 PUSH1 0x60 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 SWAP1 SUB DUP2 DUP8 PUSH32 0x0 DUP8 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xF1B JUMPI SWAP1 PUSH2 0xDFB SWAP2 DUP6 SWAP2 PUSH2 0xEFD JUMPI JUMPDEST POP PUSH2 0x2239 JUMP JUMPDEST PUSH1 0xC SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH2 0x320 JUMPI DUP6 MLOAD PUSH4 0x2991FA3B PUSH1 0xE2 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 DUP4 MSTORE PUSH32 0x0 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0x60 DUP4 ADD DUP9 SWAP1 MSTORE SWAP2 DUP4 SWAP2 DUP4 SWAP2 DUP3 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x80 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x805 JUMPI PUSH2 0xEDF JUMPI JUMPDEST POP POP PUSH32 0xEA2CC1A2A0FCFECEF8B5FF9BE41F8C0CA3770265A060B00DE53118F88C91DFA SWAP6 PUSH2 0xEAA PUSH2 0xEA2 PUSH2 0xED5 SWAP6 SWAP5 PUSH2 0xEB5 SWAP5 PUSH2 0x2172 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x2172 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0xB SLOAD PUSH2 0x2172 JUMP JUMPDEST PUSH1 0xB SSTORE MLOAD SWAP3 DUP4 SWAP3 CALLER SWAP7 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x1 DUP1 SSTORE DUP1 RETURN JUMPDEST PUSH2 0xEEB SWAP1 SWAP5 SWAP4 SWAP5 PUSH2 0x1FB4 JUMP JUMPDEST PUSH2 0xEF9 JUMPI DUP8 CODESIZE SWAP4 SWAP3 SWAP4 PUSH2 0xE6A JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST PUSH2 0xF15 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x44C JUMPI PUSH2 0x43E DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST CODESIZE PUSH2 0xDF5 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 DUP6 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265207472616465206C696D6974206578636565646564000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D75737420627579206174206C65617374206F6E652073686172650000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0xC SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x56B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x56B JUMPI POP PUSH1 0x1 PUSH2 0x1011 PUSH1 0x20 SWAP4 CALLDATALOAD PUSH2 0x954 PUSH1 0x3 SLOAD DUP3 LT PUSH2 0x23D1 JUMP JUMPDEST POP ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x32 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH1 0x6 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x56B JUMPI POP PUSH2 0x1068 CALLDATASIZE PUSH2 0x1F9E JUMP JUMPDEST DUP4 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 DUP4 MSTORE DUP5 DUP3 ADD MSTORE DUP4 DUP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP3 DUP2 DUP5 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT OR PUSH2 0x109E JUMPI POP DUP3 PUSH1 0x20 SWAP5 MSTORE MLOAD SWAP1 KECCAK256 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x41 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x56B JUMPI POP PUSH2 0x10C5 CALLDATASIZE PUSH2 0x1F9E JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x1 DUP3 GT ISZERO PUSH2 0x10F4 JUMPI PUSH1 0x20 DUP5 PUSH2 0x10ED DUP6 PUSH2 0x10E8 PUSH2 0x10E3 DUP8 PUSH2 0x2667 JUMP JUMPDEST PUSH2 0x28C5 JUMP JUMPDEST PUSH2 0x2708 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4174206C656173742074776F206F7574636F6D65732072657175697265640000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x5 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH1 0x9 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH1 0xB SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH1 0xD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xA06 JUMPI DUP3 CALLDATALOAD SWAP3 PUSH2 0x11F9 PUSH2 0x20C9 JUMP JUMPDEST DUP2 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP3 DUP3 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP7 SWAP1 MSTORE DUP5 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD SUB DUP2 DUP10 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x7E3 JUMPI DUP7 SWAP2 PUSH2 0x12E3 JUMPI JUMPDEST POP ISZERO PUSH2 0x12A2 JUMPI POP SWAP1 PUSH32 0x543BA50A5EEC5E6178218E364B1D0F396157B3C8FA278522C2CB7FD99407D474 SWAP2 PUSH2 0x1295 DUP5 PUSH1 0x9 SLOAD PUSH2 0x2172 JUMP JUMPDEST PUSH1 0x9 SSTORE MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST DUP3 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C2066756E64207472616E73666572206661696C656400000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x12FA SWAP2 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x44C JUMPI PUSH2 0x43E DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST CODESIZE PUSH2 0x125F JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP2 PUSH2 0x133E PUSH2 0x20C9 JUMP JUMPDEST PUSH2 0x1346 PUSH2 0x227D JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH1 0x3 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x8 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x56B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x56B JUMPI PUSH2 0x13F7 PUSH2 0x20C9 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x5 SLOAD PUSH1 0x8 SHR AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x320 JUMPI PUSH1 0x20 SWAP3 POP SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x2 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH2 0x10ED PUSH2 0x1582 PUSH2 0xD14 PUSH2 0x9E8 PUSH2 0xD0F PUSH2 0x157C PUSH2 0x1501 CALLDATASIZE PUSH2 0x1F9E JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1510 PUSH1 0x3 SLOAD DUP3 LT PUSH2 0x23D1 JUMP JUMPDEST PUSH2 0x151B DUP4 ISZERO ISZERO PUSH2 0x2415 JUMP JUMPDEST PUSH2 0x1546 PUSH32 0x0 ISZERO ISZERO PUSH2 0x2474 JUMP JUMPDEST PUSH2 0x154E PUSH2 0x2513 JUMP JUMPDEST SWAP1 PUSH2 0x1576 PUSH2 0x156F PUSH2 0x155E DUP5 PUSH2 0x2579 JUMP JUMPDEST SWAP6 PUSH2 0x1569 DUP5 DUP7 PUSH2 0x24D8 JUMP JUMPDEST MLOAD PUSH2 0x2214 JUMP JUMPDEST SWAP2 DUP4 PUSH2 0x24D8 JUMP JUMPDEST MSTORE PUSH2 0x2579 JUMP JUMPDEST SWAP1 PUSH2 0x26BF JUMP JUMPDEST PUSH1 0x64 PUSH2 0x15AE PUSH32 0x0 DUP4 PUSH2 0x21E1 JUMP JUMPDEST DIV SWAP1 PUSH2 0x2172 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH2 0x10ED PUSH2 0x1582 PUSH2 0xD14 PUSH2 0x9E8 PUSH2 0xD0F PUSH2 0xCFB PUSH2 0x15DA CALLDATASIZE PUSH2 0x1F9E JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x15E9 PUSH1 0x3 SLOAD DUP3 LT PUSH2 0x23D1 JUMP JUMPDEST PUSH2 0x15F4 DUP4 ISZERO ISZERO PUSH2 0x2415 JUMP JUMPDEST PUSH2 0x161F PUSH32 0x0 ISZERO ISZERO PUSH2 0x2474 JUMP JUMPDEST PUSH2 0x1627 PUSH2 0x2513 JUMP JUMPDEST SWAP1 PUSH2 0x1576 PUSH2 0x156F PUSH2 0x1637 DUP5 PUSH2 0x2579 JUMP JUMPDEST SWAP6 PUSH2 0x1642 DUP5 DUP7 PUSH2 0x24D8 JUMP JUMPDEST MLOAD PUSH2 0x2172 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x56B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x56B JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x7 SLOAD SWAP2 PUSH1 0x1 DUP4 DUP2 SHR SWAP1 DUP1 DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0x178E JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP5 LT DUP2 EQ PUSH2 0x177B JUMPI DUP4 DUP9 MSTORE DUP8 SWAP5 SWAP4 SWAP3 SWAP2 DUP8 SWAP1 DUP3 ISZERO PUSH2 0x1759 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x16FC JUMPI JUMPDEST POP POP PUSH2 0x16F8 SWAP3 SWAP2 PUSH2 0x16E9 SWAP2 SUB DUP6 PUSH2 0x1FDE JUMP JUMPDEST MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x2000 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP1 DUP6 SWAP3 POP PUSH1 0x7 PUSH1 0x0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x1741 JUMPI POP POP POP DUP3 ADD ADD DUP2 PUSH2 0x16E9 PUSH2 0x16D7 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP11 ADD DUP7 ADD MSTORE DUP9 SWAP6 POP DUP8 SWAP5 SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x172B JUMP JUMPDEST PUSH1 0xFF NOT AND DUP7 DUP3 ADD MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP DUP4 SWAP2 POP PUSH2 0x16E9 SWAP1 POP PUSH2 0x16D7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x22 DUP10 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x16B1 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x5 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x320 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 DUP2 AND SWAP4 SWAP2 SWAP3 SWAP1 PUSH2 0x184A SWAP1 PUSH1 0x20 SWAP1 PUSH2 0x1810 CALLER DUP9 EQ PUSH2 0x230A JUMP JUMPDEST PUSH1 0xB SLOAD SWAP6 DUP7 SWAP2 DUP10 PUSH1 0xB SSTORE DUP10 DUP8 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 MSTORE DUP11 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x40 DUP2 ADD SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 PUSH32 0x0 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x7E3 JUMPI DUP7 SWAP2 PUSH2 0x18EC JUMPI JUMPDEST POP ISZERO PUSH2 0x18B2 JUMPI POP PUSH32 0xC0819C13BE868895EB93E40EACEB96DE976442FA1D404E5C55F14BB65A8C489A SWAP2 PUSH1 0x20 SWAP2 MLOAD SWAP1 DUP2 MSTORE LOG2 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x119959481DDA5D1A191C985DD85B0819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x1904 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x44C JUMPI PUSH2 0x43E DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST CODESIZE PUSH2 0x187E JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x320 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0x1995 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x8 SLOAD AND CALLER EQ PUSH2 0x230A JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP2 PUSH1 0xFF DUP4 AND ISZERO PUSH2 0x1A02 JUMPI POP POP DUP1 PUSH2 0x19CE PUSH1 0xFF PUSH2 0x100 SWAP4 PUSH1 0x8 SHR AND ISZERO PUSH2 0x19BC DUP2 PUSH2 0x2347 JUMP JUMPDEST PUSH2 0x19C9 PUSH1 0x3 SLOAD DUP7 LT PUSH2 0x2134 JUMP JUMPDEST PUSH2 0x2347 JUMP JUMPDEST DUP3 PUSH1 0x6 SSTORE PUSH2 0xFF00 NOT AND OR PUSH1 0x5 SSTORE PUSH32 0xBDB6AF8CAA3A0B8C130FD2AB4C4930E3FD8987C9730340729078E256BBC4B543 DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x26B0B935B2BA1039BA34B6361037B832B7 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x320 JUMPI PUSH2 0x1A53 PUSH2 0x20C9 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x1A95 JUMPI POP PUSH1 0xFF NOT AND PUSH1 0x2 SSTORE MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST DUP3 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x28B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x28B JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0xFF PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x28B JUMPI PUSH2 0x1AF1 CALLDATASIZE PUSH2 0x1F9E JUMP JUMPDEST PUSH2 0x1AF9 PUSH2 0x229B JUMP JUMPDEST PUSH2 0x1B01 PUSH2 0x227D JUMP JUMPDEST PUSH2 0x1B10 PUSH1 0xFF PUSH1 0x5 SLOAD AND ISZERO PUSH2 0x20F5 JUMP JUMPDEST PUSH2 0x1B1D PUSH1 0x3 SLOAD DUP4 LT PUSH2 0x2134 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1EB9 JUMPI PUSH1 0xC SLOAD DUP4 MLOAD PUSH4 0x18896F4D PUSH1 0xE1 SHL DUP2 MSTORE PUSH32 0x0 DUP8 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 DUP4 AND SWAP1 DUP5 DUP2 PUSH1 0x44 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1DE9 JUMPI SWAP1 DUP6 SWAP2 DUP11 SWAP2 PUSH2 0x1E84 JUMPI JUMPDEST POP DUP9 MLOAD PUSH3 0x7EEAC7 PUSH1 0xE1 SHL DUP2 MSTORE CALLER DUP2 DUP14 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 DUP4 SWAP2 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1E7A JUMPI SWAP1 DUP6 SWAP2 DUP10 SWAP2 PUSH2 0x1E49 JUMPI JUMPDEST POP LT PUSH2 0x1E06 JUMPI PUSH2 0x1C15 PUSH2 0xD14 PUSH2 0x9E8 PUSH2 0x1C06 PUSH2 0x1BE1 PUSH2 0xCD1 PUSH2 0x2513 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1BEC DUP12 PUSH2 0x2079 JUMP JUMPDEST POP ADD PUSH2 0x1BF9 DUP11 DUP3 SLOAD PUSH2 0x2214 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x157C PUSH2 0xCD1 PUSH2 0x2513 JUMP JUMPDEST PUSH2 0xD0F DUP12 DUP3 PUSH1 0xF SIGNEXTEND SLT ISZERO PUSH2 0x2195 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x1C41 PUSH32 0x0 DUP4 PUSH2 0x21E1 JUMP JUMPDEST DIV PUSH1 0x32 DUP2 MUL DUP2 DUP2 DIV PUSH1 0x32 EQ DUP3 ISZERO OR ISZERO PUSH2 0x1DF3 JUMPI SWAP2 PUSH2 0xEAA PUSH2 0x1CA3 SWAP3 PUSH2 0x1C7C PUSH1 0x64 PUSH2 0x1C9D SWAP12 SWAP13 SWAP14 SWAP15 SWAP8 SWAP7 DIV SWAP2 PUSH2 0x1C76 DUP4 DUP3 PUSH2 0x2214 JUMP JUMPDEST SWAP5 PUSH2 0x2214 JUMP JUMPDEST SWAP10 DUP2 PUSH2 0x1C97 PUSH2 0x1C8F DUP14 SWAP5 PUSH1 0x9 SLOAD SWAP6 PUSH2 0x2172 JUMP JUMPDEST DUP5 LT ISZERO PUSH2 0x22BE JUMP JUMPDEST DUP12 PUSH2 0x2172 JUMP JUMPDEST SWAP1 PUSH2 0x2214 JUMP JUMPDEST PUSH1 0xB SSTORE DUP9 DUP4 PUSH1 0xC SLOAD AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH2 0x28B JUMPI DUP10 MLOAD PUSH4 0x6F3DF851 PUSH1 0xE1 SHL DUP2 MSTORE CALLER DUP6 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 ADD DUP11 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP9 SWAP1 MSTORE SWAP3 DUP4 SWAP2 DUP3 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x80 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1DE9 JUMPI PUSH2 0x1DCE JUMPI JUMPDEST POP DUP7 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 DUP4 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 DUP12 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD JUMPDEST SUB SWAP3 PUSH32 0x0 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x1DC4 JUMPI PUSH2 0xED5 SWAP3 PUSH32 0x19EED797248695407E185A0977FA0DBA8BBAABA6C2F6F4A8BDF6FB32E62BA23 SWAP7 SWAP8 SWAP3 PUSH2 0x1D8A SWAP3 DUP11 SWAP3 PUSH2 0x1DA7 JUMPI JUMPDEST POP POP PUSH2 0x2239 JUMP JUMPDEST MLOAD SWAP3 DUP4 SWAP3 CALLER SWAP7 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH2 0x1DBD SWAP3 POP DUP1 RETURNDATASIZE LT PUSH2 0x44C JUMPI PUSH2 0x43E DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST DUP10 DUP1 PUSH2 0x1D83 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x1D23 SWAP3 DUP5 SWAP3 SWAP10 PUSH2 0x1DDF DUP9 SWAP4 PUSH2 0x1FB4 JUMP JUMPDEST SWAP10 SWAP3 POP SWAP3 POP PUSH2 0x1CF8 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x11 DUP12 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP5 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682073686172657320746F2073656C6C00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP6 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x1E73 JUMPI JUMPDEST PUSH2 0x1E62 DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xEF9 JUMPI DUP5 SWAP1 MLOAD DUP11 PUSH2 0x1BC4 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1E58 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP2 SWAP4 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x1EB2 JUMPI JUMPDEST PUSH2 0x1E9B DUP2 DUP4 PUSH2 0x1FDE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1EAE JUMPI MLOAD DUP5 SWAP1 PUSH2 0x1BAF PUSH2 0x1B89 JUMP JUMPDEST DUP9 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x1E91 JUMP JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP8 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742073656C6C206174206C65617374206F6E6520736861726500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x320 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x320 JUMPI PUSH2 0x1F17 PUSH2 0x1F88 JUMP JUMPDEST PUSH2 0x1F1F PUSH2 0x20C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x1F4C JUMPI POP POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C6964206F7261636C652061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x8AE JUMPI JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x8AE JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1FC8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1FC8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x202C JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x200B JUMP JUMPDEST CALLVALUE PUSH2 0x8AE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x8AE JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x2710 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x8AE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x8AE JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x64 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x20B3 JUMPI PUSH1 0x3 PUSH1 0x0 MSTORE PUSH1 0x1 SHL PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x20DD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x20FC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x13585C9AD95D081A5CC818DB1BDCD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x213B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C6964206F7574636F6D65 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x217F JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x219C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F737420646966666572656E6365206973206E656761746976650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x217F JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x21FE JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x217F JUMPI JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x8AE JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x8AE JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2240 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH2 0x2289 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x22AC JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x22C5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206D61726B6574206D616B65722066756E647300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2311 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x234E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x13585C9AD95D08185B1C9958591E481CD95D1D1B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2393 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x13585C9AD95D081B9BDD081CD95D1D1B1959081E595D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x23D8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x92DCECC2D8D2C840DEEAE8C6DEDACA40D2DCC8CAF PUSH1 0x5B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x241C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E756D626572206F6620736861726573206D7573742062652067726561746572 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x207468616E207A65726F PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x247B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C697175696469747920706172616D657465722062206D757374206265206772 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x6561746572207468616E207A65726F PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x20B3 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1FC8 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x217F JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x251F DUP2 PUSH2 0x24EC JUMP JUMPDEST SWAP1 PUSH2 0x252D PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1FDE JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x1F NOT PUSH2 0x253C DUP3 PUSH2 0x24EC JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2552 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH2 0x2561 PUSH2 0x2574 SWAP4 PUSH2 0x2079 JUMP JUMPDEST POP ADD SLOAD PUSH2 0x256E DUP3 DUP7 PUSH2 0x24D8 JUMP JUMPDEST MSTORE PUSH2 0x2504 JUMP JUMPDEST PUSH2 0x2546 JUMP JUMPDEST SWAP1 DUP2 MLOAD ISZERO PUSH2 0x262A JUMPI SWAP1 PUSH1 0x0 DUP1 SWAP2 PUSH32 0x0 SWAP2 JUMPDEST DUP2 MLOAD DUP5 LT ISZERO PUSH2 0x25DC JUMPI PUSH2 0x25D0 PUSH2 0x25D6 SWAP2 PUSH2 0xA2E PUSH2 0x98F DUP7 PUSH2 0x25CA DUP10 DUP9 PUSH2 0x24D8 JUMP JUMPDEST MLOAD PUSH2 0x2755 JUMP JUMPDEST SWAP4 PUSH2 0x2504 JUMP JUMPDEST SWAP3 PUSH2 0x25A9 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x25EB PUSH2 0x25F1 SWAP2 PUSH2 0x2667 JUMP JUMPDEST SWAP2 PUSH2 0x28C5 JUMP JUMPDEST PUSH1 0xF SIGNEXTEND SWAP1 PUSH1 0xF SIGNEXTEND MUL PUSH1 0x40 SAR PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB NOT DUP2 SLT ISZERO DUP1 PUSH2 0x2619 JUMPI JUMPDEST ISZERO PUSH2 0x8AE JUMPI PUSH1 0xF SIGNEXTEND SWAP1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB DUP2 SGT ISZERO PUSH2 0x260E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6F206F7574636F6D657320617661696C61626C65 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH8 0x7FFFFFFFFFFFFFFF DUP2 GT PUSH2 0x8AE JUMPI PUSH1 0x40 SHL PUSH1 0xF SIGNEXTEND SWAP1 JUMP JUMPDEST PUSH1 0xF SIGNEXTEND PUSH1 0x0 DUP2 SLT PUSH2 0x8AE JUMPI PUSH1 0x40 SAR PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xF SIGNEXTEND SWAP1 PUSH1 0xF SIGNEXTEND ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB NOT DUP2 SLT ISZERO DUP1 PUSH2 0x2619 JUMPI ISZERO PUSH2 0x8AE JUMPI PUSH1 0xF SIGNEXTEND SWAP1 JUMP JUMPDEST PUSH1 0xF SWAP2 DUP3 SIGNEXTEND SWAP2 SIGNEXTEND SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB NOT DUP2 SLT ISZERO DUP1 PUSH2 0x2619 JUMPI ISZERO PUSH2 0x8AE JUMPI PUSH1 0xF SIGNEXTEND SWAP1 JUMP JUMPDEST PUSH1 0x40 SHL PUSH1 0x17 SIGNEXTEND PUSH1 0x40 SAR PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB NOT DUP2 SLT ISZERO DUP1 PUSH2 0x2619 JUMPI ISZERO PUSH2 0x8AE JUMPI PUSH1 0xF SIGNEXTEND SWAP1 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x274E JUMPI PUSH1 0xF SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 DUP2 SLT PUSH2 0x28B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND DUP2 MUL PUSH1 0x40 SHR SWAP3 PUSH1 0x80 SHR MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB DUP2 GT PUSH2 0x28B JUMPI PUSH1 0x40 SHL SWAP1 DUP3 NOT DUP3 GT PUSH2 0x56B JUMPI POP ADD SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 DUP1 ISZERO PUSH2 0x8AE JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB DUP4 GT PUSH2 0x279E JUMPI POP PUSH2 0x2779 SWAP2 PUSH1 0x40 SHL PUSH2 0x21F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 DUP2 GT PUSH2 0x8AE JUMPI AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB DUP2 GT PUSH2 0x8AE JUMPI PUSH1 0xF SIGNEXTEND SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xC0 DUP4 DUP2 SHR SWAP4 DUP5 PUSH5 0x100000000 DUP2 LT ISZERO PUSH2 0x28B8 JUMPI JUMPDEST DUP1 PUSH3 0x10000 PUSH1 0x2 SWAP3 LT ISZERO PUSH2 0x28AC JUMPI JUMPDEST PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x28A0 JUMPI JUMPDEST PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x2894 JUMPI JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x2889 JUMPI JUMPDEST LT ISZERO PUSH2 0x287F JUMPI JUMPDEST PUSH2 0x2807 PUSH1 0x0 NOT SWAP3 DUP3 PUSH1 0x1 DUP6 DUP8 ADD PUSH1 0xBE NOT DUP5 ADD SHR ADD SWAP2 PUSH1 0xFF SUB SHL PUSH2 0x21F4 JUMP JUMPDEST SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 DUP8 GT PUSH2 0x801 JUMPI DUP5 PUSH1 0x80 SHR DUP8 MUL SWAP2 DUP6 AND DUP8 MUL SWAP1 DUP5 DUP2 SWAP5 PUSH1 0x40 SHL SWAP2 DUP4 DUP4 LT PUSH2 0x2875 JUMPI JUMPDEST POP POP SUB SWAP5 DUP2 PUSH1 0x80 SHL SWAP4 DUP5 DUP8 LT PUSH2 0x286B JUMPI JUMPDEST POP POP PUSH1 0x80 SHR SUB PUSH2 0x2860 JUMPI PUSH2 0x2858 SWAP3 SUB PUSH2 0x21F4 JUMP JUMPDEST SWAP1 JUMPDEST ADD PUSH2 0x2779 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 PUSH2 0x285A JUMP JUMPDEST SWAP1 SWAP3 ADD SWAP2 CODESIZE PUSH2 0x2844 JUMP JUMPDEST ADD SWAP4 POP DUP5 CODESIZE PUSH2 0x2833 JUMP JUMPDEST SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x27E9 JUMP JUMPDEST SWAP3 DUP2 ADD SWAP3 DUP2 SHR PUSH2 0x27E2 JUMP JUMPDEST PUSH1 0x4 SWAP4 DUP5 ADD SWAP4 SHR PUSH2 0x27D8 JUMP JUMPDEST PUSH1 0x8 SWAP4 DUP5 ADD SWAP4 SHR PUSH2 0x27CE JUMP JUMPDEST PUSH1 0x10 SWAP4 DUP5 ADD SWAP4 SHR PUSH2 0x27C3 JUMP JUMPDEST POP PUSH1 0xE0 SWAP2 POP DUP1 DUP3 SHR PUSH2 0x27B4 JUMP JUMPDEST PUSH1 0xF SIGNEXTEND PUSH1 0x0 DUP1 DUP3 SGT ISZERO PUSH2 0x56B JUMPI DUP1 DUP3 PUSH9 0x10000000000000000 DUP5 SLT ISZERO PUSH2 0x29C9 JUMPI JUMPDEST DUP1 PUSH5 0x100000000 PUSH1 0x2 SWAP3 SLT ISZERO PUSH2 0x29BD JUMPI JUMPDEST PUSH3 0x10000 DUP2 SLT ISZERO PUSH2 0x29B1 JUMPI JUMPDEST PUSH2 0x100 DUP2 SLT ISZERO PUSH2 0x29A5 JUMPI JUMPDEST PUSH1 0x10 DUP2 SLT ISZERO PUSH2 0x2999 JUMPI JUMPDEST PUSH1 0x4 DUP2 SLT ISZERO PUSH2 0x298E JUMPI JUMPDEST SLT ISZERO PUSH2 0x2986 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x3F SHL SWAP3 PUSH1 0x3F NOT DUP3 ADD PUSH1 0x40 SHL SWAP3 SWAP2 PUSH1 0x7F SWAP2 SWAP1 DUP3 SUB SHL JUMPDEST DUP3 DUP6 SGT PUSH2 0x2968 JUMPI POP POP POP PUSH16 0xB17217F7D1CF79ABC9E3B39803F2F6AF SWAP2 POP PUSH1 0xF SIGNEXTEND MUL PUSH1 0x80 SAR SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP6 SWAP1 SAR SWAP5 SWAP1 DUP1 MUL PUSH1 0xFF DUP2 SWAP1 SHR SWAP2 DUP3 MUL SWAP1 SWAP5 ADD SWAP4 SWAP1 DUP3 ADD SHR PUSH2 0x2941 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2929 JUMP JUMPDEST SWAP2 DUP2 ADD SWAP2 DUP2 SAR PUSH2 0x2922 JUMP JUMPDEST PUSH1 0x4 SWAP3 DUP4 ADD SWAP3 SAR PUSH2 0x2918 JUMP JUMPDEST PUSH1 0x8 SWAP3 DUP4 ADD SWAP3 SAR PUSH2 0x290E JUMP JUMPDEST PUSH1 0x10 SWAP3 DUP4 ADD SWAP3 SAR PUSH2 0x2903 JUMP JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SAR PUSH2 0x28F7 JUMP JUMPDEST POP PUSH1 0x40 SWAP1 POP DUP3 DUP2 SAR PUSH2 0x28E6 JUMP JUMPDEST PUSH1 0xF SIGNEXTEND PUSH1 0x1 PUSH1 0x46 SHL DUP2 SLT ISZERO PUSH2 0x8AE JUMPI PUSH9 0x3FFFFFFFFFFFFFFFFF NOT DUP2 SLT PUSH2 0x2A1B JUMPI PUSH17 0x171547652B82FE1777D0FFDA0D23A7D12 PUSH2 0x2A18 SWAP2 MUL PUSH1 0x80 SAR PUSH1 0xF SIGNEXTEND PUSH2 0x2A21 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x46 SHL DUP2 SLT ISZERO PUSH2 0x8AE JUMPI PUSH9 0x3FFFFFFFFFFFFFFFFF NOT DUP2 SLT PUSH2 0x35BF JUMPI PUSH1 0x1 PUSH1 0x7F SHL SWAP1 PUSH1 0x0 SWAP4 DUP5 PUSH1 0x1 PUSH1 0x3F SHL DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x35A7 JUMPI JUMPDEST DUP5 PUSH8 0x4000000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x358A JUMPI JUMPDEST DUP5 PUSH8 0x2000000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x356D JUMPI JUMPDEST DUP5 PUSH8 0x1000000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3550 JUMPI JUMPDEST DUP5 PUSH8 0x800000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3533 JUMPI JUMPDEST DUP5 PUSH8 0x400000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3516 JUMPI JUMPDEST DUP5 PUSH8 0x200000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x34F9 JUMPI JUMPDEST DUP5 PUSH8 0x100000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x34DC JUMPI JUMPDEST DUP5 PUSH7 0x80000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x34BF JUMPI JUMPDEST DUP5 PUSH7 0x40000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x34A2 JUMPI JUMPDEST DUP5 PUSH7 0x20000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3485 JUMPI JUMPDEST DUP5 PUSH7 0x10000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3468 JUMPI JUMPDEST DUP5 PUSH7 0x8000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x344B JUMPI JUMPDEST DUP5 PUSH7 0x4000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x342E JUMPI JUMPDEST DUP5 PUSH7 0x2000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3411 JUMPI JUMPDEST DUP5 PUSH7 0x1000000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x33F4 JUMPI JUMPDEST DUP5 PUSH6 0x800000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x33D7 JUMPI JUMPDEST DUP5 PUSH6 0x400000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x33BA JUMPI JUMPDEST DUP5 PUSH6 0x200000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x339D JUMPI JUMPDEST DUP5 PUSH6 0x100000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3380 JUMPI JUMPDEST DUP5 PUSH6 0x80000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3363 JUMPI JUMPDEST DUP5 PUSH6 0x40000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3346 JUMPI JUMPDEST DUP5 PUSH6 0x20000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3329 JUMPI JUMPDEST DUP5 PUSH6 0x10000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x330C JUMPI JUMPDEST DUP5 PUSH5 0x8000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x32EF JUMPI JUMPDEST DUP5 PUSH5 0x4000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x32D2 JUMPI JUMPDEST DUP5 PUSH5 0x2000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x32B5 JUMPI JUMPDEST DUP5 PUSH5 0x1000000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3298 JUMPI JUMPDEST DUP5 PUSH5 0x800000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x327B JUMPI JUMPDEST DUP5 PUSH5 0x400000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x325E JUMPI JUMPDEST DUP5 PUSH5 0x200000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3241 JUMPI JUMPDEST DUP5 PUSH5 0x100000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3224 JUMPI JUMPDEST DUP5 PUSH4 0x80000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3207 JUMPI JUMPDEST DUP5 PUSH4 0x40000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x31EA JUMPI JUMPDEST DUP5 PUSH4 0x20000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x31CD JUMPI JUMPDEST DUP5 PUSH4 0x10000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x31B0 JUMPI JUMPDEST DUP5 PUSH4 0x8000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3193 JUMPI JUMPDEST DUP5 PUSH4 0x4000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3176 JUMPI JUMPDEST DUP5 PUSH4 0x2000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3159 JUMPI JUMPDEST DUP5 PUSH4 0x1000000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x313C JUMPI JUMPDEST DUP5 PUSH3 0x800000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x311F JUMPI JUMPDEST DUP5 PUSH3 0x400000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3102 JUMPI JUMPDEST DUP5 PUSH3 0x200000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x30E5 JUMPI JUMPDEST DUP5 PUSH3 0x100000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x30C8 JUMPI JUMPDEST DUP5 PUSH3 0x80000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x30AB JUMPI JUMPDEST DUP5 PUSH3 0x40000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x308E JUMPI JUMPDEST DUP5 PUSH3 0x20000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3071 JUMPI JUMPDEST DUP5 PUSH3 0x10000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3054 JUMPI JUMPDEST DUP5 PUSH2 0x8000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x3037 JUMPI JUMPDEST DUP5 PUSH2 0x4000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x301A JUMPI JUMPDEST DUP5 PUSH2 0x2000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x2FFD JUMPI JUMPDEST DUP5 PUSH2 0x1000 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x2FE0 JUMPI JUMPDEST DUP5 PUSH2 0x800 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x2FC3 JUMPI JUMPDEST DUP5 PUSH2 0x400 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x2FA6 JUMPI JUMPDEST DUP5 PUSH2 0x200 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x2F89 JUMPI JUMPDEST DUP5 PUSH2 0x100 DUP3 AND DUP6 SIGNEXTEND SGT PUSH2 0x2F6C JUMPI JUMPDEST DUP5 PUSH1 0x80 SWAP2 DUP2 DUP4 DUP3 AND DUP8 SIGNEXTEND SGT PUSH2 0x2F50 JUMPI JUMPDEST DUP2 PUSH1 0x40 DUP3 AND DUP8 SIGNEXTEND SGT PUSH2 0x2F34 JUMPI JUMPDEST DUP2 PUSH1 0x20 DUP3 AND DUP8 SIGNEXTEND SGT PUSH2 0x2F18 JUMPI JUMPDEST DUP2 PUSH1 0x10 DUP3 AND DUP8 SIGNEXTEND SGT PUSH2 0x2EFC JUMPI JUMPDEST DUP2 PUSH1 0x8 DUP3 AND DUP8 SIGNEXTEND SGT PUSH2 0x2EE0 JUMPI JUMPDEST DUP2 PUSH1 0x4 DUP3 AND DUP8 SIGNEXTEND SGT PUSH2 0x2EC4 JUMPI JUMPDEST DUP2 PUSH1 0x2 DUP3 AND DUP8 SIGNEXTEND SGT PUSH2 0x2EA7 JUMPI JUMPDEST PUSH1 0x1 AND DUP6 SIGNEXTEND SGT PUSH2 0x2E89 JUMPI JUMPDEST POP PUSH1 0x40 SAR DUP3 SIGNEXTEND PUSH1 0x3F SUB DUP3 SIGNEXTEND SHR SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB DUP4 GT PUSH2 0x56B JUMPI POP SIGNEXTEND SWAP1 JUMP JUMPDEST SWAP1 SWAP2 PUSH17 0x10000000000000000B17217F7D1CF79AB MUL SWAP1 SHR SWAP1 CODESIZE PUSH2 0x2E69 JUMP JUMPDEST PUSH17 0x1000000000000000162E42FEFA39EF358 SWAP1 SWAP5 MUL DUP3 SHR SWAP4 PUSH2 0x2E5E JUMP JUMPDEST SWAP4 PUSH17 0x10000000000000002C5C85FDF473DE6B2 MUL DUP3 SHR SWAP4 PUSH2 0x2E51 JUMP JUMPDEST SWAP4 PUSH17 0x100000000000000058B90BFBE8E7BCD6D MUL DUP3 SHR SWAP4 PUSH2 0x2E44 JUMP JUMPDEST SWAP4 PUSH17 0x1000000000000000B17217F7D1CF79AFA MUL DUP3 SHR SWAP4 PUSH2 0x2E37 JUMP JUMPDEST SWAP4 PUSH17 0x100000000000000162E42FEFA39EF366F MUL DUP3 SHR SWAP4 PUSH2 0x2E2A JUMP JUMPDEST SWAP4 PUSH17 0x1000000000000002C5C85FDF473DE6ECA MUL DUP3 SHR SWAP4 PUSH2 0x2E1D JUMP JUMPDEST SWAP4 PUSH17 0x10000000000000058B90BFBE8E7BCE544 MUL DUP3 SHR SWAP4 PUSH2 0x2E10 JUMP JUMPDEST SWAP2 PUSH17 0x100000000000000B17217F7D1CF79E949 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2E00 JUMP JUMPDEST SWAP2 PUSH17 0x10000000000000162E42FEFA39EF44D91 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2DF2 JUMP JUMPDEST SWAP2 PUSH17 0x100000000000002C5C85FDF473DEA871F MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2DE4 JUMP JUMPDEST SWAP2 PUSH17 0x1000000000000058B90BFBE8E7BDCBE2E MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2DD6 JUMP JUMPDEST SWAP2 PUSH17 0x10000000000000B17217F7D1CF7D83C1A MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2DC8 JUMP JUMPDEST SWAP2 PUSH17 0x1000000000000162E42FEFA39F02B772C MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2DBA JUMP JUMPDEST SWAP2 PUSH17 0x10000000000002C5C85FDF473E242EA38 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2DAC JUMP JUMPDEST SWAP2 PUSH17 0x100000000000058B90BFBE8E7CC35C3F0 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D9E JUMP JUMPDEST SWAP2 PUSH17 0x1000000000000B17217F7D1CFB72B45E1 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D90 JUMP JUMPDEST SWAP2 PUSH17 0x100000000000162E42FEFA39FE95583C2 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D81 JUMP JUMPDEST SWAP2 PUSH17 0x1000000000002C5C85FDF4741BEA6E77E MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D72 JUMP JUMPDEST SWAP2 PUSH17 0x10000000000058B90BFBE8E8B2D3D4EDE MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D63 JUMP JUMPDEST SWAP2 PUSH17 0x100000000000B17217F7D1D351A389D40 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D54 JUMP JUMPDEST SWAP2 PUSH17 0x10000000000162E42FEFA3AE53369388C MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D45 JUMP JUMPDEST SWAP2 PUSH17 0x100000000002C5C85FDF477B662B26945 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D36 JUMP JUMPDEST SWAP2 PUSH17 0x1000000000058B90BFBE8F71CB4E4B33D MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D27 JUMP JUMPDEST SWAP2 PUSH17 0x10000000000B17217F7D20CF927C8E94C MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D18 JUMP JUMPDEST SWAP2 PUSH17 0x1000000000162E42FEFA494F1478FDE05 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2D08 JUMP JUMPDEST SWAP2 PUSH17 0x10000000002C5C85FDF4B15DE6F17EB0D MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2CF8 JUMP JUMPDEST SWAP2 PUSH17 0x100000000058B90BFBE9DDBAC5E109CCE MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2CE8 JUMP JUMPDEST SWAP2 PUSH17 0x1000000000B17217F7D5A7716BBA4A9AE MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2CD8 JUMP JUMPDEST SWAP2 PUSH17 0x100000000162E42FEFB2FED257559BDAA MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2CC8 JUMP JUMPDEST SWAP2 PUSH17 0x1000000002C5C85FDF84BD62AE30A74CC MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2CB8 JUMP JUMPDEST SWAP2 PUSH17 0x10000000058B90BFBF8479BD5A81B51AD MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2CA8 JUMP JUMPDEST SWAP2 PUSH17 0x100000000B17217F80F4EF5AADDA45554 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2C98 JUMP JUMPDEST SWAP2 PUSH17 0x10000000162E42FF0999CE3541B9FFFCF MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2C87 JUMP JUMPDEST SWAP2 PUSH17 0x100000002C5C85FE31F35A6A30DA1BE50 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2C76 JUMP JUMPDEST SWAP2 PUSH17 0x1000000058B90BFCDEE5ACD3C1CEDC823 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2C65 JUMP JUMPDEST SWAP2 PUSH17 0x10000000B17217FBA9C739AA5819F44F9 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2C54 JUMP JUMPDEST SWAP2 PUSH17 0x1000000162E42FFF037DF38AA2B219F06 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2C43 JUMP JUMPDEST SWAP2 PUSH17 0x10000002C5C8601CC6B9E94213C72737A MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2C32 JUMP JUMPDEST SWAP2 PUSH17 0x100000058B90C0B48C6BE5DF846C5B2EF MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2C21 JUMP JUMPDEST SWAP2 PUSH17 0x1000000B1721835514B86E6D96EFD1BFE MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2C10 JUMP JUMPDEST SWAP2 PUSH17 0x100000162E430E5A18F6119E3C02282A5 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2BFE JUMP JUMPDEST SWAP2 PUSH17 0x1000002C5C863B73F016468F6BAC5CA2B MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2BEC JUMP JUMPDEST SWAP2 PUSH17 0x10000058B90CF1E6D97F9CA14DBCC1628 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2BDA JUMP JUMPDEST SWAP2 PUSH17 0x100000B1721BCFC99D9F890EA06911763 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2BC8 JUMP JUMPDEST SWAP2 PUSH17 0x10000162E43F4F831060E02D839A9D16D MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2BB6 JUMP JUMPDEST SWAP2 PUSH17 0x100002C5C89D5EC6CA4D7C8ACC017B7C9 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2BA4 JUMP JUMPDEST SWAP2 PUSH17 0x1000058B91B5BC9AE2EED81E9B7D4CFAB MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2B92 JUMP JUMPDEST SWAP2 PUSH17 0x10000B17255775C040618BF4A4ADE83FC MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2B80 JUMP JUMPDEST SWAP2 PUSH17 0x1000162E525EE054754457D5995292026 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2B6D JUMP JUMPDEST SWAP2 PUSH17 0x10002C5CC37DA9491D0985C348C68E7B3 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2B5A JUMP JUMPDEST SWAP2 PUSH17 0x100058BA01FB9F96D6CACD4B180917C3D MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2B47 JUMP JUMPDEST SWAP2 PUSH17 0x1000B175EFFDC76BA38E31671CA939725 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2B34 JUMP JUMPDEST SWAP2 PUSH17 0x100162F3904051FA128BCA9C55C31E5DF MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2B21 JUMP JUMPDEST SWAP2 PUSH17 0x1002C605E2E8CEC506D21BFC89A23A00F MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2B0E JUMP JUMPDEST SWAP2 PUSH17 0x10058C86DA1C09EA1FF19D294CF2F679B MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2AFB JUMP JUMPDEST SWAP2 PUSH17 0x100B1AFA5ABCBED6129AB13EC11DC9543 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2AE8 JUMP JUMPDEST SWAP2 PUSH17 0x10163DA9FB33356D84A66AE336DCDFA3F MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2AD4 JUMP JUMPDEST SWAP2 PUSH17 0x102C9A3E778060EE6F7CACA4F7A29BDE8 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2AC0 JUMP JUMPDEST SWAP2 PUSH17 0x1059B0D31585743AE7C548EB68CA417FD MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2AAC JUMP JUMPDEST SWAP2 PUSH17 0x10B5586CF9890F6298B92B71842A98363 MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2A98 JUMP JUMPDEST SWAP2 PUSH17 0x1172B83C7D517ADCDF7C8C50EB14A791F MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2A84 JUMP JUMPDEST SWAP2 PUSH17 0x1306FE0A31B7152DE8D5A46305C85EDEC MUL PUSH1 0x80 SHR SWAP2 PUSH2 0x2A70 JUMP JUMPDEST PUSH16 0xB504F333F9DE6484597D89B3754ABE9F SWAP3 POP PUSH2 0x2A5C JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0xFB BLOCKHASH 0xE7 0xB7 0xEE 0x25 SELFDESTRUCT 0xC5 PUSH10 0xBF0F8362D837E9C68F48 CALLDATACOPY 0xE3 0xCB EQ 0xF6 SWAP9 LOG2 0xE1 0xF9 SDIV 0xF6 0xED PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER 0xA6 PUSH13 0xC928B5EDB82AF9BD4992295415 GAS 0xB7 0xB0 SWAP5 0x26 SWAP5 0xBE LOG4 0xCE PREVRANDAO PUSH7 0x1D9A8736C688A2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 DUP12 0xE1 0xC9 0xE2 PUSH32 0x86553C81B3676415180BC23DAF94626362DB3CBB0AE3455B285D64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"222:2544:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;222:2544:27;;;;;;:::i;:::-;1500:62:2;;:::i;:::-;-1:-1:-1;;;;;222:2544:27;;;;2627:22:2;;2623:91;;222:2544:27;;;;;;;;;;;;3052:40:2;222:2544:27;3052:40:2;;222:2544:27;;2623:91:2;222:2544:27;;-1:-1:-1;;;2672:31:2;;222:2544:27;2672:31:2;;222:2544:27;;;;;2672:31:2;222:2544:27;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;222:2544:27;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;222:2544:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;298:42;222:2544;;;-1:-1:-1;;;;;222:2544:27;;;;;;;;;;;;;;;;;;;;;;;;2744:13;;222:2544;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;222:2544:27;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;222:2544:27;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;222:2544:27;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;222:2544:27;;;-1:-1:-1;;;;;;;222:2544:27;;;;;;;;;-1:-1:-1;;;;;222:2544:27;;;;;;;;;-1:-1:-1;;;;;222:2544:27;;;;;;;;;;;1705:9;222:2544;;;;;1437:288;;;;;;222:2544;1437:288;;;;;;;;;;;222:2544;;1437:288;;;222:2544;;;;;;;;;;;;;;;:::i;:::-;1437:288;;;;222:2544;;;1437:288;;;222:2544;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;222:2544:27;;;1437:288;;;222:2544;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;222:2544:27;;;;;;;;;;;;;;;1437:288;;;;;;;;;;222:2544;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;222:2544:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1900:40;222:2544;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1900:40;;;1705:9;222:2544;;;-1:-1:-1;;;2011:23:27;;-1:-1:-1;;;;;222:2544:27;;;;;;;;;;2011:23;;;;;;;;;;;222:2544;1991:59;;;;;;222:2544;;-1:-1:-1;;;1991:59:27;;;222:2544;1991:59;;222:2544;;;;2044:4;222:2544;;;;;;;;;;;;;;;1991:59;;;;;;;;222:2544;;;;;;;;;1705:9;222:2544;;;;;;;;2080:23;;222:2544;2080:23;222:2544;2080:23;;;;;;;;;;;;;222:2544;2060:59;;;;;;222:2544;;2060:59;;;222:2544;2060:59;;222:2544;2044:4;222:2544;;;;;;;;;;;;;;;2060:59;;;;;;;;;;;222:2544;;;;;2134:32;;;;;;222:2544;;2177:291;;222:2544;2541:39;;;;;;;222:2544;;;;;;;;;;;;;2541:39;;2569:10;222:2544;2541:39;;222:2544;2541:39;;;;;;;;222:2544;;2541:39;;;;:::i;:::-;222:2544;;2541:39;222:2544;2541:39;222:2544;;;;;;;;;2541:39;222:2544;;2177:291;-1:-1:-1;;;2238:157:27;;2293:10;222:2544;2238:157;;222:2544;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;222:2544:27;2238:157;;;;;;;;;;;2177:291;222:2544;;;;2177:291;;;;;;222:2544;;;-1:-1:-1;;;222:2544:27;;;;;;;;;;;;;;;;;;;;2238:157;;;222:2544;2238:157;;222:2544;2238:157;;;;;;222:2544;2238:157;;;:::i;:::-;;;222:2544;;;;;;;;;;;;2238:157;;;222:2544;;;;2238:157;;;-1:-1:-1;2238:157:27;;;222:2544;;;;;;;;;2060:59;;;;:::i;:::-;222:2544;;2060:59;;;;222:2544;;;;2060:59;222:2544;;;;;;;;;2060:59;222:2544;;;2080:23;;;;222:2544;2080:23;;222:2544;2080:23;;;;;;222:2544;2080:23;;;:::i;:::-;;;222:2544;;;;;;;2080:23;;;222:2544;;;;2080:23;;;-1:-1:-1;2080:23:27;;;222:2544;;;;;;;;;1991:59;;;;;;;:::i;:::-;;;;;;;222:2544;;;2011:23;;;222:2544;2011:23;;222:2544;2011:23;;;;;;222:2544;2011:23;;;:::i;:::-;;;222:2544;;;;;2011:23;;;;;;-1:-1:-1;2011:23:27;;222:2544;;;;;;;;;;;;;;;;;-1:-1:-1;;222:2544:27;;;;;;;;;;;;;;;;;1900:40;222:2544;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;222:2544:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;222:2544:27;;;;;-1:-1:-1;;;222:2544:27;;;;;;;;;-1:-1:-1;;;222:2544:27;;;;;;;;1437:288;222:2544;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;1437:288;-1:-1:-1;;;222:2544:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;222:2544:27;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;222:2544:27;;;;;;;;;;;;;;;;;;;;;1500:62:2;;:::i;:::-;222:2544:27;;-1:-1:-1;;;;;;222:2544:27;;;;;;-1:-1:-1;;;;;222:2544:27;3052:40:2;222:2544:27;;3052:40:2;222:2544:27;;;;;;;;;-1:-1:-1;;222:2544:27;;;;;;;;;262:30;;;;;222:2544;262:30;;;:::i;:::-;222:2544;;;;;;;;;;-1:-1:-1;;;;;222:2544:27;;;;;262:30;222:2544;;;;;;262:30;-1:-1:-1;222:2544:27;;;;-1:-1:-1;222:2544:27;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;222:2544:27;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;222:2544:27;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;222:2544:27;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;1796:162:2;1710:6;222:2544:27;-1:-1:-1;;;;;222:2544:27;735:10:14;1855:23:2;1851:101;;1796:162::o;1851:101::-;222:2544:27;;-1:-1:-1;;;1901:40:2;;735:10:14;1901:40:2;;;222:2544:27;;;1901:40:2"},"methodIdentifiers":{"activeMarkets(uint256)":"3adfe6d0","createMarket(uint256,string,string[],address,uint256,uint256,uint256,address,address,uint256)":"97271c14","getActiveMarkets()":"a5e973c3","marketTitles(address)":"c3a811fe","owner()":"8da5cb5b","positions()":"ba5b7982","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_positionsAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"name\":\"MarketCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketAddress\",\"type\":\"address\"}],\"name\":\"MinterAuthorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketAddress\",\"type\":\"address\"}],\"name\":\"RolesGranted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeMarkets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"marketId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"outcomes\",\"type\":\"string[]\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feePercent\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialFunds\",\"type\":\"uint256\"}],\"name\":\"createMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveMarkets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"marketTitles\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"contract PredictionMarketPositions\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor to initialize the factory with the ERC-1155 positions contract\",\"params\":{\"_positionsAddress\":\"Address of the deployed PredictionMarketPositions contract\"}},\"getActiveMarkets()\":{\"details\":\"Returns the list of all active markets\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/core/MarketFactory.sol\":\"MarketFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x22933f0f4897ff70a991c3baebfbc2574fd052dc4bae7fcafec45b07c1f23dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13674cffad18cec55f013056496d7d2e3a34bd7bdbe23d1ef0c7588088c73367\",\"dweb:/ipfs/QmcBkrwxNvCApG48Gyby2L6qCNtuhaFncGpbJt3zuukTmu\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"src/core/LMSRPredictionMarket.sol\":{\"keccak256\":\"0xd6f03b699f461b0e773cd986a3dc20cc3e898620da43dcecf540178308390a01\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd7fe011a123edd8105c4d74e60df5f9f16b78c6c617553a2f3ebd34b15ae409\",\"dweb:/ipfs/QmRef31x9EhL6GQtqWcbkJGWpD3SURS4kQ5vRSSMnePp4b\"]},\"src/core/MarketFactory.sol\":{\"keccak256\":\"0x6d3c9d1d2eb24e14be88308925282d0ada36b7752baf185ace86d2cdda10cfb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5854eb43099cb39e82b102910fd7c1713c4e657335116736ca551b30473d2c4e\",\"dweb:/ipfs/QmNvgXdXxG7bQ1FsCvQkPXxD8adeyBUGiQ3P7Df2YNuEt6\"]},\"src/core/PredictionMarketPositions.sol\":{\"keccak256\":\"0x9ebbbf377f038ef5f16a93dfa6c9e5a4197c32531d65fdb5ec5f592a7e20b50f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b00670f98fe8f76b446fbc203f5a9be83a9391510ae1ccb49113086161335405\",\"dweb:/ipfs/QmTX9DdzyrGXGume61E4xXLqGyQHuwe5Emm1f7WEYkPV6r\"]},\"src/utils/ABDKMath64x64.sol\":{\"keccak256\":\"0x7a0e725ae9f024d8666abb5f00f9f406745cb464a9165a26ff69fcec9ee28b67\",\"license\":\"BSD-4-Clause\",\"urls\":[\"bzz-raw://a4a24922e21ea082a0450f7860da4d234f0a9a8997f08262d2ea46413b9f613b\",\"dweb:/ipfs/QmVhkvPEFH722LDZqsyndj7M4zvnoNh5dHv3LwqVmQVePs\"]}},\"version\":1}"}},"src/core/PredictionMarketPositions.sol":{"PredictionMarketPositions":{"abi":[{"inputs":[{"internalType":"string","name":"_uri","type":"string"},{"internalType":"address","name":"_initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokensBurned","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokensMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[],"name":"BURNER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"outcomeIndex","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"outcomeIndex","type":"uint256"}],"name":"getTokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"outcomeIndex","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"allocate_memory":{"entryPoint":980,"id":null,"parameterSlots":1,"returnSlots":1},"fun_grantRole":{"entryPoint":1310,"id":256,"parameterSlots":1,"returnSlots":1},"fun_grantRole_4017":{"entryPoint":1018,"id":256,"parameterSlots":1,"returnSlots":1},"fun_grantRole_4018":{"entryPoint":1147,"id":256,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"608060405234620003ba5762002278803803806200001d81620003d4565b9283398101604082820312620003ba5781516001600160401b039290838111620003ba57810190601f838184011215620003ba57825191858311620002c457602092601f19946200007485878685011601620003d4565b96828852858383010111620003ba579084929160005b828110620003bf57505060009087018301520151936001600160a01b0392838616808703620003ba57825194888611620002c457600254956001968781811c91168015620003af575b85821014620002a35786811162000363575b508084878211600114620002ff57600091620002f3575b50600019600383901b1c191690871b176002555b8115620002da57600380546001600160a01b031981168417909155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a38151968711620002c45760059485548581811c91168015620002b9575b83821014620002a3578481116200025a575b5081938811600114620001ef5750509480928192620001d297600094620001e3575b50501b916000199060031b1c19161790555b620001bf81620003fa565b50620001cb816200047b565b506200051e565b50604051611c9b9081620005bd8239f35b015192503880620001a2565b879391929716968560005282600020926000905b8982106200024257505083620001d2981062000228575b505050811b019055620001b4565b015160001960f88460031b161c191690553880806200021a565b80878596829496860151815501950193019062000203565b866000528260002085808b01891c820192858c1062000299575b01881c019086905b8281106200028c57505062000180565b600081550186906200027c565b9250819262000274565b634e487b7160e01b600052602260045260246000fd5b90607f16906200016e565b634e487b7160e01b600052604160045260246000fd5b604051631e4fbdf760e01b815260006004820152602490fd5b905085015138620000fc565b89899316906002600052866000209160005b888282106200034c575050831162000332575b5050811b0160025562000110565b87015160001960f88460031b161c19169055388062000324565b838b015185558c9690940193928301920162000311565b6002600052846000208780840160051c820192878510620003a5575b0160051c019088905b82811062000398575050620000e5565b6000815501889062000388565b925081926200037f565b90607f1690620000d3565b600080fd5b8181018501518982018601528694016200008a565b6040519190601f01601f191682016001600160401b03811183821017620002c457604052565b6001600160a01b031660008181527f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec602052604081205490919060ff16620004775781805260046020526040822081835260205260408220600160ff198254161790553391600080516020620022588339815191528180a4600190565b5090565b6001600160a01b031660008181527fc8a67ff93cd072913f31c50776e9da9e00867535cbaa98368a69dafa551e553460205260408120549091907f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a69060ff16620005195780835260046020526040832082845260205260408320600160ff1982541617905560008051602062002258833981519152339380a4600190565b505090565b6001600160a01b031660008181527f0b82c046ead5c152b204781fecb4d5f82ef023694e7cda46a44bf9a793e5fbd760205260408120549091907f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8489060ff16620005195780835260046020526040832082845260205260408320600160ff1982541617905560008051602062002258833981519152339380a460019056fe6080604052600436101561001257600080fd5b60003560e01c8062fdd58e1461017657806301ffc9a7146101715780630e89341c1461016c578063248a9ca314610167578063282c51f3146101625780632eb2c2d61461015d5780632f2ff15d146101585780633112de9a1461015357806336568abe1461014e5780634e1273f414610149578063715018a6146101445780638da5cb5b1461013f57806391d148541461013a578063a217fddf14610135578063a22cb46514610130578063a647e8ec1461012b578063d539139314610126578063d547741f14610121578063de7bf0a21461011c578063e985e9c514610117578063f242432a146101125763f2fde38b1461010d57600080fd5b610f2d565b610e0f565b610dbe565b610ca9565b610c6a565b610c2f565b610afa565b610a10565b6109f4565b6109a2565b610979565b610918565b61085e565b6107d2565b6107a9565b61076a565b610641565b6104d4565b6104a5565b610303565b61021f565b6101c0565b600435906001600160a01b038216820361019157565b600080fd5b602435906001600160a01b038216820361019157565b35906001600160a01b038216820361019157565b346101915760403660031901126101915760206102046101de61017b565b6024356000526000835260406000209060018060a01b0316600052602052604060002090565b54604051908152f35b6001600160e01b031981160361019157565b3461019157602036600319011261019157602060043561023e8161020d565b63ffffffff60e01b16637965db0b60e01b8114908115610264575b506040519015158152f35b636cdb3d1360e11b811491508115610296575b8115610285575b5038610259565b6301ffc9a760e01b1490503861027e565b6303a24d0760e21b81149150610277565b60005b8381106102ba5750506000910152565b81810151838201526020016102aa565b906020916102e3815180928185528580860191016102a7565b601f01601f1916010190565b9060206103009281815201906102ca565b90565b34610191576020366003190112610191576000600435807a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000080821015610497575b506d04ee2d6d415b85acef810000000080831015610488575b50662386f26fc1000080831015610479575b506305f5e1008083101561046a575b506127108083101561045b575b50606482101561044b575b600a80921015610441575b6001908160216103ad828701611c33565b95860101905b61040b575b604051610407906103fb816103ed6103dc8a6103d660208501611b49565b90611c1c565b64173539b7b760d91b815260050190565b03601f198101835282610546565b604051918291826102ef565b0390f35b600019019083906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a83530491821561043c579190826103b3565b6103b8565b916001019161039c565b9190606460029104910191610391565b60049193920491019138610386565b60089193920491019138610379565b6010919392049101913861036a565b60209193920491019138610358565b60409350810491503861033f565b346101915760203660031901126101915760043560005260046020526020600160406000200154604051908152f35b346101915760003660031901126101915760206040517f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8488152f35b634e487b7160e01b600052604160045260246000fd5b6020810190811067ffffffffffffffff82111761054157604052565b61050f565b90601f8019910116810190811067ffffffffffffffff82111761054157604052565b67ffffffffffffffff81116105415760051b60200190565b81601f820112156101915780359161059783610568565b926105a56040519485610546565b808452602092838086019260051b820101928311610191578301905b8282106105cf575050505090565b813581529083019083016105c1565b67ffffffffffffffff811161054157601f01601f191660200190565b81601f8201121561019157803590610611826105de565b9261061f6040519485610546565b8284526020838301011161019157816000926020809301838601378301015290565b346101915760a03660031901126101915761065a61017b565b610662610196565b906044359167ffffffffffffffff908184116101915761068760049436908601610580565b906064358381116101915761069f9036908701610580565b92608435908111610191576106b790369087016105fa565b936001600160a01b03808216903382141580610746575b6107195783161561070157156106ea576106e8955061142b565b005b604051626a0d4560e21b8152600081880152602490fd5b604051632bfa23e760e11b8152600081890152602490fd5b6040805163711bec9160e11b815233818b019081526001600160a01b038616602082015290918291010390fd5b50600082815260016020908152604080832033845290915290205460ff16156106ce565b34610191576040366003190112610191576106e8600435610789610196565b908060005260046020526107a4600160406000200154611019565b61103a565b346101915760403660031901126101915760206107ca602435600435611b23565b604051908152f35b34610191576040366003190112610191576107eb610196565b336001600160a01b03821603610807576106e8906004356110d4565b60405163334bd91960e11b8152600490fd5b90815180825260208080930193019160005b828110610839575050505090565b83518552938101939281019260010161082b565b906020610300928181520190610819565b346101915760403660031901126101915760043567ffffffffffffffff808211610191573660238301121561019157816004013561089b81610568565b926108a96040519485610546565b81845260209160248386019160051b8301019136831161019157602401905b828210610901578560243586811161019157610407916108ef6108f5923690600401610580565b906111e6565b6040519182918261084d565b83809161090d846101ac565b8152019101906108c8565b346101915760008060031936011261097657610932611166565b600380546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b34610191576000366003190112610191576003546040516001600160a01b039091168152602090f35b3461019157604036600319011261019157602060ff6109e86109c2610196565b6004356000526004845260406000209060018060a01b0316600052602052604060002090565b54166040519015158152f35b3461019157600036600319011261019157602060405160008152f35b3461019157604036600319011261019157610a2961017b565b6024359081151590818303610191576001600160a01b038116928315610ab457610a75610a869233600052600160205260406000209060018060a01b0316600052602052604060002090565b9060ff801983541691151516179055565b6040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b60405162ced3e160e81b815260006004820152602490fd5b6080906003190112610191576004356001600160a01b03811681036101915790602435906044359060643590565b3461019157610b0836610acc565b3360009081527fc8a67ff93cd072913f31c50776e9da9e00867535cbaa98368a69dafa551e5534602052604081205490949193919291907f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a69060ff1615610c11575090610b7491611b23565b91604051610b8181610525565b8481526001600160a01b038316928315610bf85791610bee6020927f2e8ac5177a616f2aec08c3048f5021e4e9743ece034e8d83ba5caf76688bb47594610be884899160405192600184526020840152604083019160018352606084015260808301604052565b916112ab565b604051908152a380f35b604051632bfa23e760e11b815260048101879052602490fd5b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b346101915760003660031901126101915760206040517f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68152f35b34610191576040366003190112610191576106e8600435610c89610196565b90806000526004602052610ca4600160406000200154611019565b6110d4565b3461019157610cb736610acc565b9190610cc1610fbb565b6001600160a01b038416928315610d79578015610d2657610d1181610d0a610d21947fccbea4088a3b7ae9ca2d15fab9a9742a4075b4d7247768a1eecea917565aba0096611b23565b8097611981565b6040519081529081906020820190565b0390a3005b60405162461bcd60e51b815260206004820152602560248201527f4275726e20616d6f756e74206d7573742062652067726561746572207468616e604482015264207a65726f60d81b6064820152608490fd5b60405162461bcd60e51b815260206004820152601d60248201527f43616e6e6f74206275726e2066726f6d207a65726f20616464726573730000006044820152606490fd5b3461019157604036600319011261019157602060ff6109e8610dde61017b565b610de6610196565b6001600160a01b0391821660009081526001865260408082209290931681526020919091522090565b346101915760a036600319011261019157610e2861017b565b610e30610196565b60843567ffffffffffffffff811161019157610e509036906004016105fa565b906001600160a01b03838116903382141580610f09575b610ee257821615610ec95715610eb1576106e892610ea96064356044359160405192600184526020840152604083019160018352606084015260808301604052565b92909161142b565b604051626a0d4560e21b815260006004820152602490fd5b604051632bfa23e760e11b815260006004820152602490fd5b60405163711bec9160e11b81523360048201526001600160a01b0386166024820152604490fd5b50600082815260016020908152604080832033845290915290205460ff1615610e67565b3461019157602036600319011261019157610f4661017b565b610f4e611166565b6001600160a01b03908116908115610fa257600354826bffffffffffffffffffffffff60a01b821617600355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b3360009081527f0b82c046ead5c152b204781fecb4d5f82ef023694e7cda46a44bf9a793e5fbd7602052604090207f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8489060ff905b541615610c115750565b6000818152600460209081526040808320338452909152902060ff9061100f565b600090808252600460205260ff61106684604085209060018060a01b0316600052602052604060002090565b54166110ce578082526004602090815260408084206001600160a01b038616600090815292529020805460ff1916600117905533926001600160a01b0316917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b50905090565b600090808252600460205260ff61110084604085209060018060a01b0316600052602052604060002090565b5416156110ce578082526004602090815260408084206001600160a01b038616600090815292529020805460ff1916905533926001600160a01b0316917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a4600190565b6003546001600160a01b0316330361117a57565b60405163118cdaa760e01b8152336004820152602490fd5b634e487b7160e01b600052601160045260246000fd5b60001981146111b75760010190565b611192565b80518210156111d05760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b9190918051835180820361128957505080519061120282610568565b916112106040519384610546565b80835261121f601f1991610568565b0190602091368385013760005b815181101561128157600581901b8281018401519087018401516000908152602081815260408083206001600160a01b039094168352929052205461127c919061127682876111bc565b526111a8565b61122c565b509193505050565b604051635b05999160e01b815260048101919091526024810191909152604490fd5b90805183519081810361128957505060005b815181101561134057600581901b82810160209081015191860101516112f7929185906001600160a01b0382166112fc575b5050506111a8565b6112bd565b6113369161131761132e926000526000602052604060002090565b9060018060a01b0316600052602052604060002090565b918254611629565b90553884816112ef565b508051919392916001036113e2576020818101518382015160408051928352928201526001600160a01b0386169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291a45b6001600160a01b0384166113ac575b50505050565b80516001036113d357906020806113ca959301519101519133611704565b388080806113a6565b6113dd9333611915565b6113ca565b6040516001600160a01b0385169060009033907f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb9080611423888883611636565b0390a4611397565b94919091815184519081810361128957505060005b825181101561153357600581901b83810160209081015191870101516001600160a01b03929186908a85166114ac575b611482948216611487575050506111a8565b611440565b6114a29161131761132e926000526000602052604060002090565b90553885816112ef565b91929390506114c98a611317846000526000602052604060002090565b548381106114fc5791879184611482969594036114f48d611317856000526000602052604060002090565b559450611470565b6040516303dee4c560e01b81526001600160a01b038c16600482015260248101919091526044810184905260648101839052608490fd5b5094919392909360018551146000146115de576020858101518382015160408051928352928201526001600160a01b03838116929086169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291a45b6001600160a01b0381166115a7575b5050505050565b84516001036115cd576020806115c396015192015192336117fe565b38808080806115a0565b6115d99491923361194a565b6115c3565b6040516001600160a01b03828116919085169033907f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb9080611621888c83611636565b0390a4611591565b919082018092116111b757565b909161164d61030093604084526040840190610819565b916020818403910152610819565b9081602091031261019157516103008161020d565b909260a0926103009594600180861b03168352600060208401526040830152606082015281608082015201906102ca565b919261030095949160a094600180871b0380921685521660208401526040830152606082015281608082015201906102ca565b3d156116ff573d906116e5826105de565b916116f36040519384610546565b82523d6000602084013e565b606090565b9293919093843b611716575050505050565b602091611739604051948593849363f23a6e6160e01b9889865260048601611670565b038160006001600160a01b0388165af1600091816117ce575b5061179157826117606116d4565b805191908261178a57604051632bfa23e760e11b81526001600160a01b0383166004820152602490fd5b9050602001fd5b6001600160e01b031916036117ab575038808080806115a0565b604051632bfa23e760e11b81526001600160a01b03919091166004820152602490fd5b6117f091925060203d81116117f7575b6117e88183610546565b81019061165b565b9038611752565b503d6117de565b939290949194853b611813575b505050505050565b611836602093604051958694859463f23a6e6160e01b998a8752600487016116a1565b038160006001600160a01b0388165af160009181611878575b5061185d57826117606116d4565b6001600160e01b031916036117ab575038808080808061180b565b61189191925060203d81116117f7576117e88183610546565b903861184f565b926118c761030095936118d59360018060a01b031686526000602087015260a0604087015260a0860190610819565b908482036060860152610819565b9160808184039101526102ca565b939061030095936118c7916118d59460018060a01b03809216885216602087015260a0604087015260a0860190610819565b9293919093843b611927575050505050565b602091611739604051948593849363bc197c8160e01b9889865260048601611898565b939290949194853b61195e57505050505050565b611836602093604051958694859463bc197c8160e01b998a8752600487016118e3565b6001600160a01b038116929091908315610eb1576119bc60405192600184526020840152604083019160018352606084015260808301604052565b9190604094600086516119ce81610525565b528151845190818103611b0257505060005b8251811015611a7b578060051b60208082860101519187010151611a1286611317846000526000602052604060002090565b54818110611a455786611317611a40959493611a3a9303936000526000602052604060002090565b556111a8565b6119e0565b89516303dee4c560e01b81526001600160a01b038816600482015260248101919091526044810182905260648101839052608490fd5b50949060009493925060018151148514611ad05760209081015192810151915192835282015233907fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629080604081015b0390a4565b905133927f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb928291611acb9183611636565b8751635b05999160e01b815260048101919091526024810191909152604490fd5b60408051602081019283529081019290925290611b4381606081016103ed565b51902090565b60055460009291600182811c9281811691908215611c12575b6020928386108114611bfc57908115611be15750600114611b835750505050565b909192939450611bb560056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db090565b906000915b858310611bd057505050500190388080806113a6565b805485840152918301918101611bba565b60ff19168452505050811515909102019150388080806113a6565b634e487b7160e01b600052602260045260246000fd5b93607f1693611b62565b90611c2f602092828151948592016102a7565b0190565b90611c3d826105de565b611c4a6040519182610546565b8281528092611c5b601f19916105de565b019060203691013756fea2646970667358221220be7a6065cbc14cb73f55b612318cdcd697201f353681a064f3d262f7ebb9003c64736f6c634300081400332f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x3BA JUMPI PUSH3 0x2278 DUP1 CODESIZE SUB DUP1 PUSH3 0x1D DUP2 PUSH3 0x3D4 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP3 DUP3 SUB SLT PUSH3 0x3BA JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 SWAP1 DUP4 DUP2 GT PUSH3 0x3BA JUMPI DUP2 ADD SWAP1 PUSH1 0x1F DUP4 DUP2 DUP5 ADD SLT ISZERO PUSH3 0x3BA JUMPI DUP3 MLOAD SWAP2 DUP6 DUP4 GT PUSH3 0x2C4 JUMPI PUSH1 0x20 SWAP3 PUSH1 0x1F NOT SWAP5 PUSH3 0x74 DUP6 DUP8 DUP7 DUP6 ADD AND ADD PUSH3 0x3D4 JUMP JUMPDEST SWAP7 DUP3 DUP9 MSTORE DUP6 DUP4 DUP4 ADD ADD GT PUSH3 0x3BA JUMPI SWAP1 DUP5 SWAP3 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH3 0x3BF JUMPI POP POP PUSH1 0x0 SWAP1 DUP8 ADD DUP4 ADD MSTORE ADD MLOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 DUP7 AND DUP1 DUP8 SUB PUSH3 0x3BA JUMPI DUP3 MLOAD SWAP5 DUP9 DUP7 GT PUSH3 0x2C4 JUMPI PUSH1 0x2 SLOAD SWAP6 PUSH1 0x1 SWAP7 DUP8 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x3AF JUMPI JUMPDEST DUP6 DUP3 LT EQ PUSH3 0x2A3 JUMPI DUP7 DUP2 GT PUSH3 0x363 JUMPI JUMPDEST POP DUP1 DUP5 DUP8 DUP3 GT PUSH1 0x1 EQ PUSH3 0x2FF JUMPI PUSH1 0x0 SWAP2 PUSH3 0x2F3 JUMPI JUMPDEST POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP8 SHL OR PUSH1 0x2 SSTORE JUMPDEST DUP2 ISZERO PUSH3 0x2DA JUMPI PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP2 MLOAD SWAP7 DUP8 GT PUSH3 0x2C4 JUMPI PUSH1 0x5 SWAP5 DUP6 SLOAD DUP6 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x2B9 JUMPI JUMPDEST DUP4 DUP3 LT EQ PUSH3 0x2A3 JUMPI DUP5 DUP2 GT PUSH3 0x25A JUMPI JUMPDEST POP DUP2 SWAP4 DUP9 GT PUSH1 0x1 EQ PUSH3 0x1EF JUMPI POP POP SWAP5 DUP1 SWAP3 DUP2 SWAP3 PUSH3 0x1D2 SWAP8 PUSH1 0x0 SWAP5 PUSH3 0x1E3 JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH3 0x1BF DUP2 PUSH3 0x3FA JUMP JUMPDEST POP PUSH3 0x1CB DUP2 PUSH3 0x47B JUMP JUMPDEST POP PUSH3 0x51E JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1C9B SWAP1 DUP2 PUSH3 0x5BD DUP3 CODECOPY RETURN JUMPDEST ADD MLOAD SWAP3 POP CODESIZE DUP1 PUSH3 0x1A2 JUMP JUMPDEST DUP8 SWAP4 SWAP2 SWAP3 SWAP8 AND SWAP7 DUP6 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP10 DUP3 LT PUSH3 0x242 JUMPI POP POP DUP4 PUSH3 0x1D2 SWAP9 LT PUSH3 0x228 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0x1B4 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x21A JUMP JUMPDEST DUP1 DUP8 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH3 0x203 JUMP JUMPDEST DUP7 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 DUP6 DUP1 DUP12 ADD DUP10 SHR DUP3 ADD SWAP3 DUP6 DUP13 LT PUSH3 0x299 JUMPI JUMPDEST ADD DUP9 SHR ADD SWAP1 DUP7 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH3 0x28C JUMPI POP POP PUSH3 0x180 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP7 SWAP1 PUSH3 0x27C JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x274 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x16E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 POP DUP6 ADD MLOAD CODESIZE PUSH3 0xFC JUMP JUMPDEST DUP10 DUP10 SWAP4 AND SWAP1 PUSH1 0x2 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP9 DUP3 DUP3 LT PUSH3 0x34C JUMPI POP POP DUP4 GT PUSH3 0x332 JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x2 SSTORE PUSH3 0x110 JUMP JUMPDEST DUP8 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH3 0x324 JUMP JUMPDEST DUP4 DUP12 ADD MLOAD DUP6 SSTORE DUP13 SWAP7 SWAP1 SWAP5 ADD SWAP4 SWAP3 DUP4 ADD SWAP3 ADD PUSH3 0x311 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 DUP8 DUP1 DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP8 DUP6 LT PUSH3 0x3A5 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP9 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH3 0x398 JUMPI POP POP PUSH3 0xE5 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP9 SWAP1 PUSH3 0x388 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x37F JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0xD3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 ADD DUP6 ADD MLOAD DUP10 DUP3 ADD DUP7 ADD MSTORE DUP7 SWAP5 ADD PUSH3 0x8A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x2C4 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x17EF568E3E12AB5B9C7254A8D58478811DE00F9E6EB34345ACD53BF8FD09D3EC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH3 0x477 JUMPI DUP2 DUP1 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2258 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xC8A67FF93CD072913F31C50776E9DA9E00867535CBAA98368A69DAFA551E5534 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 SWAP1 PUSH1 0xFF AND PUSH3 0x519 JUMPI DUP1 DUP4 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2258 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xB82C046EAD5C152B204781FECB4D5F82EF023694E7CDA46A44BF9A793E5FBD7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 SWAP1 PUSH1 0xFF AND PUSH3 0x519 JUMPI DUP1 DUP4 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2258 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xFDD58E EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x282C51F3 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x3112DE9A EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0xA647E8EC EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0xDE7BF0A2 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x112 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x10D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF2D JUMP JUMPDEST PUSH2 0xE0F JUMP JUMPDEST PUSH2 0xDBE JUMP JUMPDEST PUSH2 0xCA9 JUMP JUMPDEST PUSH2 0xC6A JUMP JUMPDEST PUSH2 0xC2F JUMP JUMPDEST PUSH2 0xAFA JUMP JUMPDEST PUSH2 0xA10 JUMP JUMPDEST PUSH2 0x9F4 JUMP JUMPDEST PUSH2 0x9A2 JUMP JUMPDEST PUSH2 0x979 JUMP JUMPDEST PUSH2 0x918 JUMP JUMPDEST PUSH2 0x85E JUMP JUMPDEST PUSH2 0x7D2 JUMP JUMPDEST PUSH2 0x7A9 JUMP JUMPDEST PUSH2 0x76A JUMP JUMPDEST PUSH2 0x641 JUMP JUMPDEST PUSH2 0x4D4 JUMP JUMPDEST PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x303 JUMP JUMPDEST PUSH2 0x21F JUMP JUMPDEST PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x191 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x191 JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x191 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH1 0x20 PUSH2 0x204 PUSH2 0x1DE PUSH2 0x17B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND SUB PUSH2 0x191 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x23E DUP2 PUSH2 0x20D JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x264 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x296 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x285 JUMPI JUMPDEST POP CODESIZE PUSH2 0x259 JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x27E JUMP JUMPDEST PUSH4 0x3A24D07 PUSH1 0xE2 SHL DUP2 EQ SWAP2 POP PUSH2 0x277 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x2BA JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2AA JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x2E3 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x2A7 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x300 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x2CA JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH1 0x0 PUSH1 0x4 CALLDATALOAD DUP1 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP1 DUP3 LT ISZERO PUSH2 0x497 JUMPI JUMPDEST POP PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP1 DUP4 LT ISZERO PUSH2 0x488 JUMPI JUMPDEST POP PUSH7 0x2386F26FC10000 DUP1 DUP4 LT ISZERO PUSH2 0x479 JUMPI JUMPDEST POP PUSH4 0x5F5E100 DUP1 DUP4 LT ISZERO PUSH2 0x46A JUMPI JUMPDEST POP PUSH2 0x2710 DUP1 DUP4 LT ISZERO PUSH2 0x45B JUMPI JUMPDEST POP PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x44B JUMPI JUMPDEST PUSH1 0xA DUP1 SWAP3 LT ISZERO PUSH2 0x441 JUMPI JUMPDEST PUSH1 0x1 SWAP1 DUP2 PUSH1 0x21 PUSH2 0x3AD DUP3 DUP8 ADD PUSH2 0x1C33 JUMP JUMPDEST SWAP6 DUP7 ADD ADD SWAP1 JUMPDEST PUSH2 0x40B JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x407 SWAP1 PUSH2 0x3FB DUP2 PUSH2 0x3ED PUSH2 0x3DC DUP11 PUSH2 0x3D6 PUSH1 0x20 DUP6 ADD PUSH2 0x1B49 JUMP JUMPDEST SWAP1 PUSH2 0x1C1C JUMP JUMPDEST PUSH5 0x173539B7B7 PUSH1 0xD9 SHL DUP2 MSTORE PUSH1 0x5 ADD SWAP1 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x546 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2EF JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 NOT ADD SWAP1 DUP4 SWAP1 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP3 DUP3 MOD BYTE DUP4 MSTORE8 DIV SWAP2 DUP3 ISZERO PUSH2 0x43C JUMPI SWAP2 SWAP1 DUP3 PUSH2 0x3B3 JUMP JUMPDEST PUSH2 0x3B8 JUMP JUMPDEST SWAP2 PUSH1 0x1 ADD SWAP2 PUSH2 0x39C JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x64 PUSH1 0x2 SWAP2 DIV SWAP2 ADD SWAP2 PUSH2 0x391 JUMP JUMPDEST PUSH1 0x4 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x386 JUMP JUMPDEST PUSH1 0x8 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x379 JUMP JUMPDEST PUSH1 0x10 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x36A JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x358 JUMP JUMPDEST PUSH1 0x40 SWAP4 POP DUP2 DIV SWAP2 POP CODESIZE PUSH2 0x33F JUMP JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x541 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x50F JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x541 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x541 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x191 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0x597 DUP4 PUSH2 0x568 JUMP JUMPDEST SWAP3 PUSH2 0x5A5 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x546 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x191 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x5CF JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x5C1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x541 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x191 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x611 DUP3 PUSH2 0x5DE JUMP JUMPDEST SWAP3 PUSH2 0x61F PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x546 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x191 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH2 0x65A PUSH2 0x17B JUMP JUMPDEST PUSH2 0x662 PUSH2 0x196 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP5 GT PUSH2 0x191 JUMPI PUSH2 0x687 PUSH1 0x4 SWAP5 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0x580 JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x191 JUMPI PUSH2 0x69F SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x580 JUMP JUMPDEST SWAP3 PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x191 JUMPI PUSH2 0x6B7 SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x5FA JUMP JUMPDEST SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP1 CALLER DUP3 EQ ISZERO DUP1 PUSH2 0x746 JUMPI JUMPDEST PUSH2 0x719 JUMPI DUP4 AND ISZERO PUSH2 0x701 JUMPI ISZERO PUSH2 0x6EA JUMPI PUSH2 0x6E8 SWAP6 POP PUSH2 0x142B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP2 DUP9 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 DUP2 DUP10 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE CALLER DUP2 DUP12 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 SWAP2 DUP3 SWAP2 ADD SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x6CE JUMP JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH2 0x6E8 PUSH1 0x4 CALLDATALOAD PUSH2 0x789 PUSH2 0x196 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x7A4 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x1019 JUMP JUMPDEST PUSH2 0x103A JUMP JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH1 0x20 PUSH2 0x7CA PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x1B23 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH2 0x7EB PUSH2 0x196 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x807 JUMPI PUSH2 0x6E8 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x839 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x82B JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x300 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x819 JUMP JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH2 0x191 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x191 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x89B DUP2 PUSH2 0x568 JUMP JUMPDEST SWAP3 PUSH2 0x8A9 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x546 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x24 DUP4 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x191 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x901 JUMPI DUP6 PUSH1 0x24 CALLDATALOAD DUP7 DUP2 GT PUSH2 0x191 JUMPI PUSH2 0x407 SWAP2 PUSH2 0x8EF PUSH2 0x8F5 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x580 JUMP JUMPDEST SWAP1 PUSH2 0x11E6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x84D JUMP JUMPDEST DUP4 DUP1 SWAP2 PUSH2 0x90D DUP5 PUSH2 0x1AC JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x8C8 JUMP JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x976 JUMPI PUSH2 0x932 PUSH2 0x1166 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x9E8 PUSH2 0x9C2 PUSH2 0x196 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH2 0xA29 PUSH2 0x17B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO SWAP1 DUP2 DUP4 SUB PUSH2 0x191 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 DUP4 ISZERO PUSH2 0xAB4 JUMPI PUSH2 0xA75 PUSH2 0xA86 SWAP3 CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xCED3E1 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x80 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x191 JUMPI SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH2 0xB08 CALLDATASIZE PUSH2 0xACC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xC8A67FF93CD072913F31C50776E9DA9E00867535CBAA98368A69DAFA551E5534 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 SWAP2 SWAP1 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xC11 JUMPI POP SWAP1 PUSH2 0xB74 SWAP2 PUSH2 0x1B23 JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD PUSH2 0xB81 DUP2 PUSH2 0x525 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0xBF8 JUMPI SWAP2 PUSH2 0xBEE PUSH1 0x20 SWAP3 PUSH32 0x2E8AC5177A616F2AEC08C3048F5021E4E9743ECE034E8D83BA5CAF76688BB475 SWAP5 PUSH2 0xBE8 DUP5 DUP10 SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 PUSH2 0x12AB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH2 0x6E8 PUSH1 0x4 CALLDATALOAD PUSH2 0xC89 PUSH2 0x196 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0xCA4 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x1019 JUMP JUMPDEST PUSH2 0x10D4 JUMP JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH2 0xCB7 CALLDATASIZE PUSH2 0xACC JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xCC1 PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0xD79 JUMPI DUP1 ISZERO PUSH2 0xD26 JUMPI PUSH2 0xD11 DUP2 PUSH2 0xD0A PUSH2 0xD21 SWAP5 PUSH32 0xCCBEA4088A3B7AE9CA2D15FAB9A9742A4075B4D7247768A1EECEA917565ABA00 SWAP7 PUSH2 0x1B23 JUMP JUMPDEST DUP1 SWAP8 PUSH2 0x1981 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4275726E20616D6F756E74206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206275726E2066726F6D207A65726F2061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x9E8 PUSH2 0xDDE PUSH2 0x17B JUMP JUMPDEST PUSH2 0xDE6 PUSH2 0x196 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP7 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP4 AND DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH2 0xE28 PUSH2 0x17B JUMP JUMPDEST PUSH2 0xE30 PUSH2 0x196 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x191 JUMPI PUSH2 0xE50 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x5FA JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP1 CALLER DUP3 EQ ISZERO DUP1 PUSH2 0xF09 JUMPI JUMPDEST PUSH2 0xEE2 JUMPI DUP3 AND ISZERO PUSH2 0xEC9 JUMPI ISZERO PUSH2 0xEB1 JUMPI PUSH2 0x6E8 SWAP3 PUSH2 0xEA9 PUSH1 0x64 CALLDATALOAD PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH2 0x142B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE67 JUMP JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH2 0xF46 PUSH2 0x17B JUMP JUMPDEST PUSH2 0xF4E PUSH2 0x1166 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xFA2 JUMPI PUSH1 0x3 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x3 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xB82C046EAD5C152B204781FECB4D5F82EF023694E7CDA46A44BF9A793E5FBD7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 SWAP1 PUSH1 0xFF SWAP1 JUMPDEST SLOAD AND ISZERO PUSH2 0xC11 JUMPI POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0xFF SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x1066 DUP5 PUSH1 0x40 DUP6 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH2 0x10CE JUMPI DUP1 DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x1100 DUP5 PUSH1 0x40 DUP6 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND ISZERO PUSH2 0x10CE JUMPI DUP1 DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x117A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x11B7 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1192 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x11D0 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 MLOAD DUP4 MLOAD DUP1 DUP3 SUB PUSH2 0x1289 JUMPI POP POP DUP1 MLOAD SWAP1 PUSH2 0x1202 DUP3 PUSH2 0x568 JUMP JUMPDEST SWAP2 PUSH2 0x1210 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x546 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH2 0x121F PUSH1 0x1F NOT SWAP2 PUSH2 0x568 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 SWAP2 CALLDATASIZE DUP4 DUP6 ADD CALLDATACOPY PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1281 JUMPI PUSH1 0x5 DUP2 SWAP1 SHL DUP3 DUP2 ADD DUP5 ADD MLOAD SWAP1 DUP8 ADD DUP5 ADD MLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x127C SWAP2 SWAP1 PUSH2 0x1276 DUP3 DUP8 PUSH2 0x11BC JUMP JUMPDEST MSTORE PUSH2 0x11A8 JUMP JUMPDEST PUSH2 0x122C JUMP JUMPDEST POP SWAP2 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST SWAP1 DUP1 MLOAD DUP4 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x1289 JUMPI POP POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1340 JUMPI PUSH1 0x5 DUP2 SWAP1 SHL DUP3 DUP2 ADD PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP2 DUP7 ADD ADD MLOAD PUSH2 0x12F7 SWAP3 SWAP2 DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x12FC JUMPI JUMPDEST POP POP POP PUSH2 0x11A8 JUMP JUMPDEST PUSH2 0x12BD JUMP JUMPDEST PUSH2 0x1336 SWAP2 PUSH2 0x1317 PUSH2 0x132E SWAP3 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 DUP3 SLOAD PUSH2 0x1629 JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP5 DUP2 PUSH2 0x12EF JUMP JUMPDEST POP DUP1 MLOAD SWAP2 SWAP4 SWAP3 SWAP2 PUSH1 0x1 SUB PUSH2 0x13E2 JUMPI PUSH1 0x20 DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP3 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH1 0x0 SWAP2 CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 LOG4 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x13AC JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 SUB PUSH2 0x13D3 JUMPI SWAP1 PUSH1 0x20 DUP1 PUSH2 0x13CA SWAP6 SWAP4 ADD MLOAD SWAP2 ADD MLOAD SWAP2 CALLER PUSH2 0x1704 JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 PUSH2 0x13A6 JUMP JUMPDEST PUSH2 0x13DD SWAP4 CALLER PUSH2 0x1915 JUMP JUMPDEST PUSH2 0x13CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH1 0x0 SWAP1 CALLER SWAP1 PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB SWAP1 DUP1 PUSH2 0x1423 DUP9 DUP9 DUP4 PUSH2 0x1636 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x1397 JUMP JUMPDEST SWAP5 SWAP2 SWAP1 SWAP2 DUP2 MLOAD DUP5 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x1289 JUMPI POP POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1533 JUMPI PUSH1 0x5 DUP2 SWAP1 SHL DUP4 DUP2 ADD PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP2 DUP8 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP2 DUP7 SWAP1 DUP11 DUP6 AND PUSH2 0x14AC JUMPI JUMPDEST PUSH2 0x1482 SWAP5 DUP3 AND PUSH2 0x1487 JUMPI POP POP POP PUSH2 0x11A8 JUMP JUMPDEST PUSH2 0x1440 JUMP JUMPDEST PUSH2 0x14A2 SWAP2 PUSH2 0x1317 PUSH2 0x132E SWAP3 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP6 DUP2 PUSH2 0x12EF JUMP JUMPDEST SWAP2 SWAP3 SWAP4 SWAP1 POP PUSH2 0x14C9 DUP11 PUSH2 0x1317 DUP5 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD DUP4 DUP2 LT PUSH2 0x14FC JUMPI SWAP2 DUP8 SWAP2 DUP5 PUSH2 0x1482 SWAP7 SWAP6 SWAP5 SUB PUSH2 0x14F4 DUP14 PUSH2 0x1317 DUP6 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE SWAP5 POP PUSH2 0x1470 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP SWAP5 SWAP2 SWAP4 SWAP3 SWAP1 SWAP4 PUSH1 0x1 DUP6 MLOAD EQ PUSH1 0x0 EQ PUSH2 0x15DE JUMPI PUSH1 0x20 DUP6 DUP2 ADD MLOAD DUP4 DUP3 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP3 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP3 SWAP1 DUP7 AND SWAP2 CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 LOG4 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x15A7 JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP5 MLOAD PUSH1 0x1 SUB PUSH2 0x15CD JUMPI PUSH1 0x20 DUP1 PUSH2 0x15C3 SWAP7 ADD MLOAD SWAP3 ADD MLOAD SWAP3 CALLER PUSH2 0x17FE JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x15A0 JUMP JUMPDEST PUSH2 0x15D9 SWAP5 SWAP2 SWAP3 CALLER PUSH2 0x194A JUMP JUMPDEST PUSH2 0x15C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 SWAP1 DUP6 AND SWAP1 CALLER SWAP1 PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB SWAP1 DUP1 PUSH2 0x1621 DUP9 DUP13 DUP4 PUSH2 0x1636 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x1591 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x11B7 JUMPI JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x164D PUSH2 0x300 SWAP4 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x819 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x819 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x191 JUMPI MLOAD PUSH2 0x300 DUP2 PUSH2 0x20D JUMP JUMPDEST SWAP1 SWAP3 PUSH1 0xA0 SWAP3 PUSH2 0x300 SWAP6 SWAP5 PUSH1 0x1 DUP1 DUP7 SHL SUB AND DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP2 PUSH1 0x80 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x2CA JUMP JUMPDEST SWAP2 SWAP3 PUSH2 0x300 SWAP6 SWAP5 SWAP2 PUSH1 0xA0 SWAP5 PUSH1 0x1 DUP1 DUP8 SHL SUB DUP1 SWAP3 AND DUP6 MSTORE AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP2 PUSH1 0x80 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x2CA JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x16FF JUMPI RETURNDATASIZE SWAP1 PUSH2 0x16E5 DUP3 PUSH2 0x5DE JUMP JUMPDEST SWAP2 PUSH2 0x16F3 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x546 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP3 SWAP4 SWAP2 SWAP1 SWAP4 DUP5 EXTCODESIZE PUSH2 0x1716 JUMPI POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP2 PUSH2 0x1739 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP9 DUP10 DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x1670 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x17CE JUMPI JUMPDEST POP PUSH2 0x1791 JUMPI DUP3 PUSH2 0x1760 PUSH2 0x16D4 JUMP JUMPDEST DUP1 MLOAD SWAP2 SWAP1 DUP3 PUSH2 0x178A JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x17AB JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x15A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x17F0 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x17F7 JUMPI JUMPDEST PUSH2 0x17E8 DUP2 DUP4 PUSH2 0x546 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x165B JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x1752 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x17DE JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP5 SWAP2 SWAP5 DUP6 EXTCODESIZE PUSH2 0x1813 JUMPI JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1836 PUSH1 0x20 SWAP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP10 DUP11 DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x16A1 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x1878 JUMPI JUMPDEST POP PUSH2 0x185D JUMPI DUP3 PUSH2 0x1760 PUSH2 0x16D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x17AB JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x180B JUMP JUMPDEST PUSH2 0x1891 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x17F7 JUMPI PUSH2 0x17E8 DUP2 DUP4 PUSH2 0x546 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x184F JUMP JUMPDEST SWAP3 PUSH2 0x18C7 PUSH2 0x300 SWAP6 SWAP4 PUSH2 0x18D5 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE PUSH1 0x0 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0x819 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x819 JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x2CA JUMP JUMPDEST SWAP4 SWAP1 PUSH2 0x300 SWAP6 SWAP4 PUSH2 0x18C7 SWAP2 PUSH2 0x18D5 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND DUP9 MSTORE AND PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0x819 JUMP JUMPDEST SWAP3 SWAP4 SWAP2 SWAP1 SWAP4 DUP5 EXTCODESIZE PUSH2 0x1927 JUMPI POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP2 PUSH2 0x1739 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP9 DUP10 DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x1898 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP5 SWAP2 SWAP5 DUP6 EXTCODESIZE PUSH2 0x195E JUMPI POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1836 PUSH1 0x20 SWAP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP10 DUP11 DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 SWAP1 SWAP2 SWAP1 DUP4 ISZERO PUSH2 0xEB1 JUMPI PUSH2 0x19BC PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 SWAP5 PUSH1 0x0 DUP7 MLOAD PUSH2 0x19CE DUP2 PUSH2 0x525 JUMP JUMPDEST MSTORE DUP2 MLOAD DUP5 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x1B02 JUMPI POP POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1A7B JUMPI DUP1 PUSH1 0x5 SHL PUSH1 0x20 DUP1 DUP3 DUP7 ADD ADD MLOAD SWAP2 DUP8 ADD ADD MLOAD PUSH2 0x1A12 DUP7 PUSH2 0x1317 DUP5 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD DUP2 DUP2 LT PUSH2 0x1A45 JUMPI DUP7 PUSH2 0x1317 PUSH2 0x1A40 SWAP6 SWAP5 SWAP4 PUSH2 0x1A3A SWAP4 SUB SWAP4 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH2 0x11A8 JUMP JUMPDEST PUSH2 0x19E0 JUMP JUMPDEST DUP10 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP SWAP5 SWAP1 PUSH1 0x0 SWAP5 SWAP4 SWAP3 POP PUSH1 0x1 DUP2 MLOAD EQ DUP6 EQ PUSH2 0x1AD0 JUMPI PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP3 DUP2 ADD MLOAD SWAP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD MSTORE CALLER SWAP1 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP1 DUP1 PUSH1 0x40 DUP2 ADD JUMPDEST SUB SWAP1 LOG4 JUMP JUMPDEST SWAP1 MLOAD CALLER SWAP3 PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB SWAP3 DUP3 SWAP2 PUSH2 0x1ACB SWAP2 DUP4 PUSH2 0x1636 JUMP JUMPDEST DUP8 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP3 DUP4 MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x1B43 DUP2 PUSH1 0x60 DUP2 ADD PUSH2 0x3ED JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 DUP2 DUP2 AND SWAP2 SWAP1 DUP3 ISZERO PUSH2 0x1C12 JUMPI JUMPDEST PUSH1 0x20 SWAP3 DUP4 DUP7 LT DUP2 EQ PUSH2 0x1BFC JUMPI SWAP1 DUP2 ISZERO PUSH2 0x1BE1 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1B83 JUMPI POP POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH2 0x1BB5 PUSH1 0x5 PUSH1 0x0 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x1BD0 JUMPI POP POP POP POP ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x13A6 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP5 ADD MSTORE SWAP2 DUP4 ADD SWAP2 DUP2 ADD PUSH2 0x1BBA JUMP JUMPDEST PUSH1 0xFF NOT AND DUP5 MSTORE POP POP POP DUP2 ISZERO ISZERO SWAP1 SWAP2 MUL ADD SWAP2 POP CODESIZE DUP1 DUP1 DUP1 PUSH2 0x13A6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x1B62 JUMP JUMPDEST SWAP1 PUSH2 0x1C2F PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x2A7 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1C3D DUP3 PUSH2 0x5DE JUMP JUMPDEST PUSH2 0x1C4A PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x546 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1C5B PUSH1 0x1F NOT SWAP2 PUSH2 0x5DE JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE PUSH27 0x6065CBC14CB73F55B612318CDCD697201F353681A064F3D262F7EB 0xB9 STOP EXTCODECOPY PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER 0x2F DUP8 DUP9 GT PUSH31 0x7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D00000000 ","sourceMap":"282:3020:28:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;282:3020:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;282:3020:28;;;;;;-1:-1:-1;;;282:3020:28;;;;;;;;;-1:-1:-1;;;;;282:3020:28;;;;;;;;;;;;;;;;;10356:13:4;282:3020:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;282:3020:28;;;;-1:-1:-1;;;282:3020:28;;;;;;;;;;;10356:13:4;282:3020:28;;1273:26:2;;1269:95;;3004:6;282:3020:28;;-1:-1:-1;;;;;;282:3020:28;;;;;;;;3052:40:2;-1:-1:-1;;3052:40:2;282:3020:28;;;;;;;719:14;282:3020;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;890:38;282:3020;-1:-1:-1;282:3020:28;;;;;;;;;;;3004:6:2;282:3020:28;;;;;;;;787:45;;;:::i;:::-;;842:38;;;:::i;:::-;;890;:::i;:::-;;282:3020;;;;;;;;;;;;;-1:-1:-1;282:3020:28;;;;;;;;;;;;;-1:-1:-1;282:3020:28;;-1:-1:-1;282:3020:28;;-1:-1:-1;282:3020:28;;;;;;;;;;890:38;282:3020;;;;;;;;;;;;;;;;;;;;;;3004:6:2;282:3020:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;282:3020:28;;-1:-1:-1;282:3020:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;282:3020:28;;;;;;;;;;;;;;;;;;-1:-1:-1;282:3020:28;;;;;-1:-1:-1;282:3020:28;;;;;;;;;;;;-1:-1:-1;282:3020:28;;;;;-1:-1:-1;282:3020:28;1269:95:2;282:3020:28;;-1:-1:-1;;;1322:31:2;;-1:-1:-1;1322:31:2;;;282:3020:28;;;1322:31:2;282:3020:28;;;;;;;;;;;;;;;10356:13:4;-1:-1:-1;282:3020:28;;-1:-1:-1;282:3020:28;;-1:-1:-1;282:3020:28;;;;;;;;;;-1:-1:-1;282:3020:28;;;;;;;;10356:13:4;282:3020:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10356:13:4;-1:-1:-1;282:3020:28;;-1:-1:-1;282:3020:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;282:3020:28;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;282:3020:28;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;282:3020:28;;;-1:-1:-1;;;;;282:3020:28;;;;;;;;;;:::o;6179:316:0:-;-1:-1:-1;;;;;282:3020:28;;;;;;;;;;;;;;;;;;;;;;2954:6:0;282:3020:28;;;;;;;;;;;;;;;;;;;;;;735:10:14;6370:40:0;-1:-1:-1;;;;;;;;;;;6370:40:0;;;282:3020:28;6424:11:0;:::o;6272:217::-;6466:12;;:::o;6179:316::-;-1:-1:-1;;;;;282:3020:28;-1:-1:-1;282:3020:28;;;;;;;;;;-1:-1:-1;;282:3020:28;479:24;;282:3020;;;;;;;2954:6:0;282:3020:28;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:14;6370:40:0;;;282:3020:28;6424:11:0;:::o;6272:217::-;6466:12;;;:::o;6179:316::-;-1:-1:-1;;;;;282:3020:28;-1:-1:-1;282:3020:28;;;;;;;;;;-1:-1:-1;;282:3020:28;547:24;;282:3020;;;;;;;2954:6:0;282:3020:28;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:14;6370:40:0;;;282:3020:28;6424:11:0;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":428,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_address_8073":{"entryPoint":379,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_8086":{"entryPoint":406,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_addresst_uint256t_uint256t_uint256":{"entryPoint":2764,"id":null,"parameterSlots":1,"returnSlots":4},"abi_decode_array_uint256_dyn":{"entryPoint":1408,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":1530,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes4_fromMemory":{"entryPoint":5723,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_address_array_uint256_dyn_array_uint256_dyn_bytes":{"entryPoint":6371,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_address_address_array_uint256_dyn_array_uint256_dyn_bytes_16888":{"entryPoint":6296,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_address_address_uint256_uint256_bytes":{"entryPoint":5793,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_address_address_uint256_uint256_bytes_16887":{"entryPoint":5744,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_address_uint256_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":2125,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn_array_uint256_dyn":{"entryPoint":5686,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_array_uint256_dyn_memory_ptr":{"entryPoint":2073,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":751,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_memory_ptr":{"entryPoint":7196,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":6985,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_string_to_string":{"entryPoint":714,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_and_zero_memory_array_string":{"entryPoint":7219,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":1384,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":1502,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"checked_add_uint256":{"entryPoint":5673,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":679,"id":null,"parameterSlots":3,"returnSlots":0},"external_fun_BURNER_ROLE":{"entryPoint":1236,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_DEFAULT_ADMIN_ROLE":{"entryPoint":2548,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_MINTER_ROLE":{"entryPoint":3119,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_balanceOf":{"entryPoint":448,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_balanceOfBatch":{"entryPoint":2142,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_burn":{"entryPoint":3241,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getRoleAdmin":{"entryPoint":1189,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getTokenId":{"entryPoint":1961,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_grantRole":{"entryPoint":1898,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_hasRole":{"entryPoint":2466,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isApprovedForAll":{"entryPoint":3518,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_mint":{"entryPoint":2810,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_owner":{"entryPoint":2425,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_renounceOwnership":{"entryPoint":2328,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_renounceRole":{"entryPoint":2002,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_revokeRole":{"entryPoint":3178,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_safeBatchTransferFrom":{"entryPoint":1601,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_safeTransferFrom":{"entryPoint":3599,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setApprovalForAll":{"entryPoint":2576,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_supportsInterface":{"entryPoint":543,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferOwnership":{"entryPoint":3885,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_uri":{"entryPoint":771,"id":null,"parameterSlots":0,"returnSlots":0},"extract_returndata":{"entryPoint":5844,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":1350,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_14212":{"entryPoint":1317,"id":null,"parameterSlots":1,"returnSlots":0},"fun_asSingletonArrays":{"entryPoint":null,"id":1579,"parameterSlots":2,"returnSlots":2},"fun_balanceOf":{"entryPoint":null,"id":783,"parameterSlots":2,"returnSlots":1},"fun_balanceOfBatch":{"entryPoint":4582,"id":853,"parameterSlots":2,"returnSlots":1},"fun_burn":{"entryPoint":6529,"id":1484,"parameterSlots":3,"returnSlots":0},"fun_checkOnERC1155BatchReceived":{"entryPoint":6474,"id":1914,"parameterSlots":6,"returnSlots":0},"fun_checkOnERC1155BatchReceived_14213":{"entryPoint":6421,"id":1914,"parameterSlots":5,"returnSlots":0},"fun_checkOnERC1155Received":{"entryPoint":6142,"id":1840,"parameterSlots":6,"returnSlots":0},"fun_checkOnERC1155Received_14214":{"entryPoint":5892,"id":1840,"parameterSlots":5,"returnSlots":0},"fun_checkOwner":{"entryPoint":4454,"id":463,"parameterSlots":0,"returnSlots":0},"fun_checkRole":{"entryPoint":4121,"id":93,"parameterSlots":1,"returnSlots":0},"fun_checkRole_8104":{"entryPoint":4027,"id":93,"parameterSlots":0,"returnSlots":0},"fun_getTokenId":{"entryPoint":6947,"id":9841,"parameterSlots":2,"returnSlots":1},"fun_grantRole":{"entryPoint":4154,"id":256,"parameterSlots":2,"returnSlots":1},"fun_revokeRole":{"entryPoint":4308,"id":294,"parameterSlots":2,"returnSlots":1},"fun_updateWithAcceptanceCheck":{"entryPoint":5163,"id":1209,"parameterSlots":5,"returnSlots":0},"fun_updateWithAcceptanceCheck_8100":{"entryPoint":4779,"id":1209,"parameterSlots":4,"returnSlots":0},"increment_uint256":{"entryPoint":4520,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_bool_of_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_bytes32_struct_RoleData_storage_of_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_uint256_dyn":{"entryPoint":4540,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":4498,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1295,"id":null,"parameterSlots":0,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":525,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c8062fdd58e1461017657806301ffc9a7146101715780630e89341c1461016c578063248a9ca314610167578063282c51f3146101625780632eb2c2d61461015d5780632f2ff15d146101585780633112de9a1461015357806336568abe1461014e5780634e1273f414610149578063715018a6146101445780638da5cb5b1461013f57806391d148541461013a578063a217fddf14610135578063a22cb46514610130578063a647e8ec1461012b578063d539139314610126578063d547741f14610121578063de7bf0a21461011c578063e985e9c514610117578063f242432a146101125763f2fde38b1461010d57600080fd5b610f2d565b610e0f565b610dbe565b610ca9565b610c6a565b610c2f565b610afa565b610a10565b6109f4565b6109a2565b610979565b610918565b61085e565b6107d2565b6107a9565b61076a565b610641565b6104d4565b6104a5565b610303565b61021f565b6101c0565b600435906001600160a01b038216820361019157565b600080fd5b602435906001600160a01b038216820361019157565b35906001600160a01b038216820361019157565b346101915760403660031901126101915760206102046101de61017b565b6024356000526000835260406000209060018060a01b0316600052602052604060002090565b54604051908152f35b6001600160e01b031981160361019157565b3461019157602036600319011261019157602060043561023e8161020d565b63ffffffff60e01b16637965db0b60e01b8114908115610264575b506040519015158152f35b636cdb3d1360e11b811491508115610296575b8115610285575b5038610259565b6301ffc9a760e01b1490503861027e565b6303a24d0760e21b81149150610277565b60005b8381106102ba5750506000910152565b81810151838201526020016102aa565b906020916102e3815180928185528580860191016102a7565b601f01601f1916010190565b9060206103009281815201906102ca565b90565b34610191576020366003190112610191576000600435807a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000080821015610497575b506d04ee2d6d415b85acef810000000080831015610488575b50662386f26fc1000080831015610479575b506305f5e1008083101561046a575b506127108083101561045b575b50606482101561044b575b600a80921015610441575b6001908160216103ad828701611c33565b95860101905b61040b575b604051610407906103fb816103ed6103dc8a6103d660208501611b49565b90611c1c565b64173539b7b760d91b815260050190565b03601f198101835282610546565b604051918291826102ef565b0390f35b600019019083906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a83530491821561043c579190826103b3565b6103b8565b916001019161039c565b9190606460029104910191610391565b60049193920491019138610386565b60089193920491019138610379565b6010919392049101913861036a565b60209193920491019138610358565b60409350810491503861033f565b346101915760203660031901126101915760043560005260046020526020600160406000200154604051908152f35b346101915760003660031901126101915760206040517f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8488152f35b634e487b7160e01b600052604160045260246000fd5b6020810190811067ffffffffffffffff82111761054157604052565b61050f565b90601f8019910116810190811067ffffffffffffffff82111761054157604052565b67ffffffffffffffff81116105415760051b60200190565b81601f820112156101915780359161059783610568565b926105a56040519485610546565b808452602092838086019260051b820101928311610191578301905b8282106105cf575050505090565b813581529083019083016105c1565b67ffffffffffffffff811161054157601f01601f191660200190565b81601f8201121561019157803590610611826105de565b9261061f6040519485610546565b8284526020838301011161019157816000926020809301838601378301015290565b346101915760a03660031901126101915761065a61017b565b610662610196565b906044359167ffffffffffffffff908184116101915761068760049436908601610580565b906064358381116101915761069f9036908701610580565b92608435908111610191576106b790369087016105fa565b936001600160a01b03808216903382141580610746575b6107195783161561070157156106ea576106e8955061142b565b005b604051626a0d4560e21b8152600081880152602490fd5b604051632bfa23e760e11b8152600081890152602490fd5b6040805163711bec9160e11b815233818b019081526001600160a01b038616602082015290918291010390fd5b50600082815260016020908152604080832033845290915290205460ff16156106ce565b34610191576040366003190112610191576106e8600435610789610196565b908060005260046020526107a4600160406000200154611019565b61103a565b346101915760403660031901126101915760206107ca602435600435611b23565b604051908152f35b34610191576040366003190112610191576107eb610196565b336001600160a01b03821603610807576106e8906004356110d4565b60405163334bd91960e11b8152600490fd5b90815180825260208080930193019160005b828110610839575050505090565b83518552938101939281019260010161082b565b906020610300928181520190610819565b346101915760403660031901126101915760043567ffffffffffffffff808211610191573660238301121561019157816004013561089b81610568565b926108a96040519485610546565b81845260209160248386019160051b8301019136831161019157602401905b828210610901578560243586811161019157610407916108ef6108f5923690600401610580565b906111e6565b6040519182918261084d565b83809161090d846101ac565b8152019101906108c8565b346101915760008060031936011261097657610932611166565b600380546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b34610191576000366003190112610191576003546040516001600160a01b039091168152602090f35b3461019157604036600319011261019157602060ff6109e86109c2610196565b6004356000526004845260406000209060018060a01b0316600052602052604060002090565b54166040519015158152f35b3461019157600036600319011261019157602060405160008152f35b3461019157604036600319011261019157610a2961017b565b6024359081151590818303610191576001600160a01b038116928315610ab457610a75610a869233600052600160205260406000209060018060a01b0316600052602052604060002090565b9060ff801983541691151516179055565b6040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b60405162ced3e160e81b815260006004820152602490fd5b6080906003190112610191576004356001600160a01b03811681036101915790602435906044359060643590565b3461019157610b0836610acc565b3360009081527fc8a67ff93cd072913f31c50776e9da9e00867535cbaa98368a69dafa551e5534602052604081205490949193919291907f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a69060ff1615610c11575090610b7491611b23565b91604051610b8181610525565b8481526001600160a01b038316928315610bf85791610bee6020927f2e8ac5177a616f2aec08c3048f5021e4e9743ece034e8d83ba5caf76688bb47594610be884899160405192600184526020840152604083019160018352606084015260808301604052565b916112ab565b604051908152a380f35b604051632bfa23e760e11b815260048101879052602490fd5b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b346101915760003660031901126101915760206040517f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68152f35b34610191576040366003190112610191576106e8600435610c89610196565b90806000526004602052610ca4600160406000200154611019565b6110d4565b3461019157610cb736610acc565b9190610cc1610fbb565b6001600160a01b038416928315610d79578015610d2657610d1181610d0a610d21947fccbea4088a3b7ae9ca2d15fab9a9742a4075b4d7247768a1eecea917565aba0096611b23565b8097611981565b6040519081529081906020820190565b0390a3005b60405162461bcd60e51b815260206004820152602560248201527f4275726e20616d6f756e74206d7573742062652067726561746572207468616e604482015264207a65726f60d81b6064820152608490fd5b60405162461bcd60e51b815260206004820152601d60248201527f43616e6e6f74206275726e2066726f6d207a65726f20616464726573730000006044820152606490fd5b3461019157604036600319011261019157602060ff6109e8610dde61017b565b610de6610196565b6001600160a01b0391821660009081526001865260408082209290931681526020919091522090565b346101915760a036600319011261019157610e2861017b565b610e30610196565b60843567ffffffffffffffff811161019157610e509036906004016105fa565b906001600160a01b03838116903382141580610f09575b610ee257821615610ec95715610eb1576106e892610ea96064356044359160405192600184526020840152604083019160018352606084015260808301604052565b92909161142b565b604051626a0d4560e21b815260006004820152602490fd5b604051632bfa23e760e11b815260006004820152602490fd5b60405163711bec9160e11b81523360048201526001600160a01b0386166024820152604490fd5b50600082815260016020908152604080832033845290915290205460ff1615610e67565b3461019157602036600319011261019157610f4661017b565b610f4e611166565b6001600160a01b03908116908115610fa257600354826bffffffffffffffffffffffff60a01b821617600355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b3360009081527f0b82c046ead5c152b204781fecb4d5f82ef023694e7cda46a44bf9a793e5fbd7602052604090207f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8489060ff905b541615610c115750565b6000818152600460209081526040808320338452909152902060ff9061100f565b600090808252600460205260ff61106684604085209060018060a01b0316600052602052604060002090565b54166110ce578082526004602090815260408084206001600160a01b038616600090815292529020805460ff1916600117905533926001600160a01b0316917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b50905090565b600090808252600460205260ff61110084604085209060018060a01b0316600052602052604060002090565b5416156110ce578082526004602090815260408084206001600160a01b038616600090815292529020805460ff1916905533926001600160a01b0316917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a4600190565b6003546001600160a01b0316330361117a57565b60405163118cdaa760e01b8152336004820152602490fd5b634e487b7160e01b600052601160045260246000fd5b60001981146111b75760010190565b611192565b80518210156111d05760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b9190918051835180820361128957505080519061120282610568565b916112106040519384610546565b80835261121f601f1991610568565b0190602091368385013760005b815181101561128157600581901b8281018401519087018401516000908152602081815260408083206001600160a01b039094168352929052205461127c919061127682876111bc565b526111a8565b61122c565b509193505050565b604051635b05999160e01b815260048101919091526024810191909152604490fd5b90805183519081810361128957505060005b815181101561134057600581901b82810160209081015191860101516112f7929185906001600160a01b0382166112fc575b5050506111a8565b6112bd565b6113369161131761132e926000526000602052604060002090565b9060018060a01b0316600052602052604060002090565b918254611629565b90553884816112ef565b508051919392916001036113e2576020818101518382015160408051928352928201526001600160a01b0386169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291a45b6001600160a01b0384166113ac575b50505050565b80516001036113d357906020806113ca959301519101519133611704565b388080806113a6565b6113dd9333611915565b6113ca565b6040516001600160a01b0385169060009033907f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb9080611423888883611636565b0390a4611397565b94919091815184519081810361128957505060005b825181101561153357600581901b83810160209081015191870101516001600160a01b03929186908a85166114ac575b611482948216611487575050506111a8565b611440565b6114a29161131761132e926000526000602052604060002090565b90553885816112ef565b91929390506114c98a611317846000526000602052604060002090565b548381106114fc5791879184611482969594036114f48d611317856000526000602052604060002090565b559450611470565b6040516303dee4c560e01b81526001600160a01b038c16600482015260248101919091526044810184905260648101839052608490fd5b5094919392909360018551146000146115de576020858101518382015160408051928352928201526001600160a01b03838116929086169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291a45b6001600160a01b0381166115a7575b5050505050565b84516001036115cd576020806115c396015192015192336117fe565b38808080806115a0565b6115d99491923361194a565b6115c3565b6040516001600160a01b03828116919085169033907f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb9080611621888c83611636565b0390a4611591565b919082018092116111b757565b909161164d61030093604084526040840190610819565b916020818403910152610819565b9081602091031261019157516103008161020d565b909260a0926103009594600180861b03168352600060208401526040830152606082015281608082015201906102ca565b919261030095949160a094600180871b0380921685521660208401526040830152606082015281608082015201906102ca565b3d156116ff573d906116e5826105de565b916116f36040519384610546565b82523d6000602084013e565b606090565b9293919093843b611716575050505050565b602091611739604051948593849363f23a6e6160e01b9889865260048601611670565b038160006001600160a01b0388165af1600091816117ce575b5061179157826117606116d4565b805191908261178a57604051632bfa23e760e11b81526001600160a01b0383166004820152602490fd5b9050602001fd5b6001600160e01b031916036117ab575038808080806115a0565b604051632bfa23e760e11b81526001600160a01b03919091166004820152602490fd5b6117f091925060203d81116117f7575b6117e88183610546565b81019061165b565b9038611752565b503d6117de565b939290949194853b611813575b505050505050565b611836602093604051958694859463f23a6e6160e01b998a8752600487016116a1565b038160006001600160a01b0388165af160009181611878575b5061185d57826117606116d4565b6001600160e01b031916036117ab575038808080808061180b565b61189191925060203d81116117f7576117e88183610546565b903861184f565b926118c761030095936118d59360018060a01b031686526000602087015260a0604087015260a0860190610819565b908482036060860152610819565b9160808184039101526102ca565b939061030095936118c7916118d59460018060a01b03809216885216602087015260a0604087015260a0860190610819565b9293919093843b611927575050505050565b602091611739604051948593849363bc197c8160e01b9889865260048601611898565b939290949194853b61195e57505050505050565b611836602093604051958694859463bc197c8160e01b998a8752600487016118e3565b6001600160a01b038116929091908315610eb1576119bc60405192600184526020840152604083019160018352606084015260808301604052565b9190604094600086516119ce81610525565b528151845190818103611b0257505060005b8251811015611a7b578060051b60208082860101519187010151611a1286611317846000526000602052604060002090565b54818110611a455786611317611a40959493611a3a9303936000526000602052604060002090565b556111a8565b6119e0565b89516303dee4c560e01b81526001600160a01b038816600482015260248101919091526044810182905260648101839052608490fd5b50949060009493925060018151148514611ad05760209081015192810151915192835282015233907fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629080604081015b0390a4565b905133927f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb928291611acb9183611636565b8751635b05999160e01b815260048101919091526024810191909152604490fd5b60408051602081019283529081019290925290611b4381606081016103ed565b51902090565b60055460009291600182811c9281811691908215611c12575b6020928386108114611bfc57908115611be15750600114611b835750505050565b909192939450611bb560056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db090565b906000915b858310611bd057505050500190388080806113a6565b805485840152918301918101611bba565b60ff19168452505050811515909102019150388080806113a6565b634e487b7160e01b600052602260045260246000fd5b93607f1693611b62565b90611c2f602092828151948592016102a7565b0190565b90611c3d826105de565b611c4a6040519182610546565b8281528092611c5b601f19916105de565b019060203691013756fea2646970667358221220be7a6065cbc14cb73f55b612318cdcd697201f353681a064f3d262f7ebb9003c64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xFDD58E EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x282C51F3 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x3112DE9A EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0xA647E8EC EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0xDE7BF0A2 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x112 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x10D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF2D JUMP JUMPDEST PUSH2 0xE0F JUMP JUMPDEST PUSH2 0xDBE JUMP JUMPDEST PUSH2 0xCA9 JUMP JUMPDEST PUSH2 0xC6A JUMP JUMPDEST PUSH2 0xC2F JUMP JUMPDEST PUSH2 0xAFA JUMP JUMPDEST PUSH2 0xA10 JUMP JUMPDEST PUSH2 0x9F4 JUMP JUMPDEST PUSH2 0x9A2 JUMP JUMPDEST PUSH2 0x979 JUMP JUMPDEST PUSH2 0x918 JUMP JUMPDEST PUSH2 0x85E JUMP JUMPDEST PUSH2 0x7D2 JUMP JUMPDEST PUSH2 0x7A9 JUMP JUMPDEST PUSH2 0x76A JUMP JUMPDEST PUSH2 0x641 JUMP JUMPDEST PUSH2 0x4D4 JUMP JUMPDEST PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x303 JUMP JUMPDEST PUSH2 0x21F JUMP JUMPDEST PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x191 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x191 JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x191 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH1 0x20 PUSH2 0x204 PUSH2 0x1DE PUSH2 0x17B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND SUB PUSH2 0x191 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x23E DUP2 PUSH2 0x20D JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x264 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x296 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x285 JUMPI JUMPDEST POP CODESIZE PUSH2 0x259 JUMP JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x27E JUMP JUMPDEST PUSH4 0x3A24D07 PUSH1 0xE2 SHL DUP2 EQ SWAP2 POP PUSH2 0x277 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x2BA JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2AA JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x2E3 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x2A7 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x300 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x2CA JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH1 0x0 PUSH1 0x4 CALLDATALOAD DUP1 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP1 DUP3 LT ISZERO PUSH2 0x497 JUMPI JUMPDEST POP PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP1 DUP4 LT ISZERO PUSH2 0x488 JUMPI JUMPDEST POP PUSH7 0x2386F26FC10000 DUP1 DUP4 LT ISZERO PUSH2 0x479 JUMPI JUMPDEST POP PUSH4 0x5F5E100 DUP1 DUP4 LT ISZERO PUSH2 0x46A JUMPI JUMPDEST POP PUSH2 0x2710 DUP1 DUP4 LT ISZERO PUSH2 0x45B JUMPI JUMPDEST POP PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x44B JUMPI JUMPDEST PUSH1 0xA DUP1 SWAP3 LT ISZERO PUSH2 0x441 JUMPI JUMPDEST PUSH1 0x1 SWAP1 DUP2 PUSH1 0x21 PUSH2 0x3AD DUP3 DUP8 ADD PUSH2 0x1C33 JUMP JUMPDEST SWAP6 DUP7 ADD ADD SWAP1 JUMPDEST PUSH2 0x40B JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x407 SWAP1 PUSH2 0x3FB DUP2 PUSH2 0x3ED PUSH2 0x3DC DUP11 PUSH2 0x3D6 PUSH1 0x20 DUP6 ADD PUSH2 0x1B49 JUMP JUMPDEST SWAP1 PUSH2 0x1C1C JUMP JUMPDEST PUSH5 0x173539B7B7 PUSH1 0xD9 SHL DUP2 MSTORE PUSH1 0x5 ADD SWAP1 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x546 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2EF JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 NOT ADD SWAP1 DUP4 SWAP1 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP3 DUP3 MOD BYTE DUP4 MSTORE8 DIV SWAP2 DUP3 ISZERO PUSH2 0x43C JUMPI SWAP2 SWAP1 DUP3 PUSH2 0x3B3 JUMP JUMPDEST PUSH2 0x3B8 JUMP JUMPDEST SWAP2 PUSH1 0x1 ADD SWAP2 PUSH2 0x39C JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x64 PUSH1 0x2 SWAP2 DIV SWAP2 ADD SWAP2 PUSH2 0x391 JUMP JUMPDEST PUSH1 0x4 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x386 JUMP JUMPDEST PUSH1 0x8 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x379 JUMP JUMPDEST PUSH1 0x10 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x36A JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x358 JUMP JUMPDEST PUSH1 0x40 SWAP4 POP DUP2 DIV SWAP2 POP CODESIZE PUSH2 0x33F JUMP JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x541 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x50F JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x541 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x541 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x191 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0x597 DUP4 PUSH2 0x568 JUMP JUMPDEST SWAP3 PUSH2 0x5A5 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x546 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x191 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x5CF JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x5C1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x541 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x191 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x611 DUP3 PUSH2 0x5DE JUMP JUMPDEST SWAP3 PUSH2 0x61F PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x546 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x191 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH2 0x65A PUSH2 0x17B JUMP JUMPDEST PUSH2 0x662 PUSH2 0x196 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP5 GT PUSH2 0x191 JUMPI PUSH2 0x687 PUSH1 0x4 SWAP5 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0x580 JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x191 JUMPI PUSH2 0x69F SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x580 JUMP JUMPDEST SWAP3 PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x191 JUMPI PUSH2 0x6B7 SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x5FA JUMP JUMPDEST SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP1 CALLER DUP3 EQ ISZERO DUP1 PUSH2 0x746 JUMPI JUMPDEST PUSH2 0x719 JUMPI DUP4 AND ISZERO PUSH2 0x701 JUMPI ISZERO PUSH2 0x6EA JUMPI PUSH2 0x6E8 SWAP6 POP PUSH2 0x142B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP2 DUP9 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 DUP2 DUP10 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE CALLER DUP2 DUP12 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 SWAP2 DUP3 SWAP2 ADD SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x6CE JUMP JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH2 0x6E8 PUSH1 0x4 CALLDATALOAD PUSH2 0x789 PUSH2 0x196 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x7A4 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x1019 JUMP JUMPDEST PUSH2 0x103A JUMP JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH1 0x20 PUSH2 0x7CA PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x1B23 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH2 0x7EB PUSH2 0x196 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x807 JUMPI PUSH2 0x6E8 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x839 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x82B JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x300 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x819 JUMP JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH2 0x191 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x191 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x89B DUP2 PUSH2 0x568 JUMP JUMPDEST SWAP3 PUSH2 0x8A9 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x546 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x24 DUP4 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x191 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x901 JUMPI DUP6 PUSH1 0x24 CALLDATALOAD DUP7 DUP2 GT PUSH2 0x191 JUMPI PUSH2 0x407 SWAP2 PUSH2 0x8EF PUSH2 0x8F5 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x580 JUMP JUMPDEST SWAP1 PUSH2 0x11E6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x84D JUMP JUMPDEST DUP4 DUP1 SWAP2 PUSH2 0x90D DUP5 PUSH2 0x1AC JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x8C8 JUMP JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x976 JUMPI PUSH2 0x932 PUSH2 0x1166 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x9E8 PUSH2 0x9C2 PUSH2 0x196 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH2 0xA29 PUSH2 0x17B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO SWAP1 DUP2 DUP4 SUB PUSH2 0x191 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 DUP4 ISZERO PUSH2 0xAB4 JUMPI PUSH2 0xA75 PUSH2 0xA86 SWAP3 CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xCED3E1 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x80 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x191 JUMPI SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH2 0xB08 CALLDATASIZE PUSH2 0xACC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xC8A67FF93CD072913F31C50776E9DA9E00867535CBAA98368A69DAFA551E5534 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 SWAP2 SWAP1 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xC11 JUMPI POP SWAP1 PUSH2 0xB74 SWAP2 PUSH2 0x1B23 JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD PUSH2 0xB81 DUP2 PUSH2 0x525 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0xBF8 JUMPI SWAP2 PUSH2 0xBEE PUSH1 0x20 SWAP3 PUSH32 0x2E8AC5177A616F2AEC08C3048F5021E4E9743ECE034E8D83BA5CAF76688BB475 SWAP5 PUSH2 0xBE8 DUP5 DUP10 SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 PUSH2 0x12AB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH2 0x6E8 PUSH1 0x4 CALLDATALOAD PUSH2 0xC89 PUSH2 0x196 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0xCA4 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x1019 JUMP JUMPDEST PUSH2 0x10D4 JUMP JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH2 0xCB7 CALLDATASIZE PUSH2 0xACC JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xCC1 PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0xD79 JUMPI DUP1 ISZERO PUSH2 0xD26 JUMPI PUSH2 0xD11 DUP2 PUSH2 0xD0A PUSH2 0xD21 SWAP5 PUSH32 0xCCBEA4088A3B7AE9CA2D15FAB9A9742A4075B4D7247768A1EECEA917565ABA00 SWAP7 PUSH2 0x1B23 JUMP JUMPDEST DUP1 SWAP8 PUSH2 0x1981 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4275726E20616D6F756E74206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206275726E2066726F6D207A65726F2061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x9E8 PUSH2 0xDDE PUSH2 0x17B JUMP JUMPDEST PUSH2 0xDE6 PUSH2 0x196 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP7 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP4 AND DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH2 0xE28 PUSH2 0x17B JUMP JUMPDEST PUSH2 0xE30 PUSH2 0x196 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x191 JUMPI PUSH2 0xE50 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x5FA JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP1 CALLER DUP3 EQ ISZERO DUP1 PUSH2 0xF09 JUMPI JUMPDEST PUSH2 0xEE2 JUMPI DUP3 AND ISZERO PUSH2 0xEC9 JUMPI ISZERO PUSH2 0xEB1 JUMPI PUSH2 0x6E8 SWAP3 PUSH2 0xEA9 PUSH1 0x64 CALLDATALOAD PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH2 0x142B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE67 JUMP JUMPDEST CALLVALUE PUSH2 0x191 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x191 JUMPI PUSH2 0xF46 PUSH2 0x17B JUMP JUMPDEST PUSH2 0xF4E PUSH2 0x1166 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xFA2 JUMPI PUSH1 0x3 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x3 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xB82C046EAD5C152B204781FECB4D5F82EF023694E7CDA46A44BF9A793E5FBD7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 SWAP1 PUSH1 0xFF SWAP1 JUMPDEST SLOAD AND ISZERO PUSH2 0xC11 JUMPI POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0xFF SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x1066 DUP5 PUSH1 0x40 DUP6 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH2 0x10CE JUMPI DUP1 DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x1100 DUP5 PUSH1 0x40 DUP6 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND ISZERO PUSH2 0x10CE JUMPI DUP1 DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x117A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x11B7 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1192 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x11D0 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 MLOAD DUP4 MLOAD DUP1 DUP3 SUB PUSH2 0x1289 JUMPI POP POP DUP1 MLOAD SWAP1 PUSH2 0x1202 DUP3 PUSH2 0x568 JUMP JUMPDEST SWAP2 PUSH2 0x1210 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x546 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH2 0x121F PUSH1 0x1F NOT SWAP2 PUSH2 0x568 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 SWAP2 CALLDATASIZE DUP4 DUP6 ADD CALLDATACOPY PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1281 JUMPI PUSH1 0x5 DUP2 SWAP1 SHL DUP3 DUP2 ADD DUP5 ADD MLOAD SWAP1 DUP8 ADD DUP5 ADD MLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x127C SWAP2 SWAP1 PUSH2 0x1276 DUP3 DUP8 PUSH2 0x11BC JUMP JUMPDEST MSTORE PUSH2 0x11A8 JUMP JUMPDEST PUSH2 0x122C JUMP JUMPDEST POP SWAP2 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST SWAP1 DUP1 MLOAD DUP4 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x1289 JUMPI POP POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1340 JUMPI PUSH1 0x5 DUP2 SWAP1 SHL DUP3 DUP2 ADD PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP2 DUP7 ADD ADD MLOAD PUSH2 0x12F7 SWAP3 SWAP2 DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x12FC JUMPI JUMPDEST POP POP POP PUSH2 0x11A8 JUMP JUMPDEST PUSH2 0x12BD JUMP JUMPDEST PUSH2 0x1336 SWAP2 PUSH2 0x1317 PUSH2 0x132E SWAP3 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 DUP3 SLOAD PUSH2 0x1629 JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP5 DUP2 PUSH2 0x12EF JUMP JUMPDEST POP DUP1 MLOAD SWAP2 SWAP4 SWAP3 SWAP2 PUSH1 0x1 SUB PUSH2 0x13E2 JUMPI PUSH1 0x20 DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP3 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH1 0x0 SWAP2 CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 LOG4 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x13AC JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 SUB PUSH2 0x13D3 JUMPI SWAP1 PUSH1 0x20 DUP1 PUSH2 0x13CA SWAP6 SWAP4 ADD MLOAD SWAP2 ADD MLOAD SWAP2 CALLER PUSH2 0x1704 JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 PUSH2 0x13A6 JUMP JUMPDEST PUSH2 0x13DD SWAP4 CALLER PUSH2 0x1915 JUMP JUMPDEST PUSH2 0x13CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH1 0x0 SWAP1 CALLER SWAP1 PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB SWAP1 DUP1 PUSH2 0x1423 DUP9 DUP9 DUP4 PUSH2 0x1636 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x1397 JUMP JUMPDEST SWAP5 SWAP2 SWAP1 SWAP2 DUP2 MLOAD DUP5 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x1289 JUMPI POP POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1533 JUMPI PUSH1 0x5 DUP2 SWAP1 SHL DUP4 DUP2 ADD PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP2 DUP8 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP2 DUP7 SWAP1 DUP11 DUP6 AND PUSH2 0x14AC JUMPI JUMPDEST PUSH2 0x1482 SWAP5 DUP3 AND PUSH2 0x1487 JUMPI POP POP POP PUSH2 0x11A8 JUMP JUMPDEST PUSH2 0x1440 JUMP JUMPDEST PUSH2 0x14A2 SWAP2 PUSH2 0x1317 PUSH2 0x132E SWAP3 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP6 DUP2 PUSH2 0x12EF JUMP JUMPDEST SWAP2 SWAP3 SWAP4 SWAP1 POP PUSH2 0x14C9 DUP11 PUSH2 0x1317 DUP5 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD DUP4 DUP2 LT PUSH2 0x14FC JUMPI SWAP2 DUP8 SWAP2 DUP5 PUSH2 0x1482 SWAP7 SWAP6 SWAP5 SUB PUSH2 0x14F4 DUP14 PUSH2 0x1317 DUP6 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE SWAP5 POP PUSH2 0x1470 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP SWAP5 SWAP2 SWAP4 SWAP3 SWAP1 SWAP4 PUSH1 0x1 DUP6 MLOAD EQ PUSH1 0x0 EQ PUSH2 0x15DE JUMPI PUSH1 0x20 DUP6 DUP2 ADD MLOAD DUP4 DUP3 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP3 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP3 SWAP1 DUP7 AND SWAP2 CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 LOG4 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x15A7 JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP5 MLOAD PUSH1 0x1 SUB PUSH2 0x15CD JUMPI PUSH1 0x20 DUP1 PUSH2 0x15C3 SWAP7 ADD MLOAD SWAP3 ADD MLOAD SWAP3 CALLER PUSH2 0x17FE JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x15A0 JUMP JUMPDEST PUSH2 0x15D9 SWAP5 SWAP2 SWAP3 CALLER PUSH2 0x194A JUMP JUMPDEST PUSH2 0x15C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 SWAP1 DUP6 AND SWAP1 CALLER SWAP1 PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB SWAP1 DUP1 PUSH2 0x1621 DUP9 DUP13 DUP4 PUSH2 0x1636 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x1591 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x11B7 JUMPI JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x164D PUSH2 0x300 SWAP4 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x819 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x819 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x191 JUMPI MLOAD PUSH2 0x300 DUP2 PUSH2 0x20D JUMP JUMPDEST SWAP1 SWAP3 PUSH1 0xA0 SWAP3 PUSH2 0x300 SWAP6 SWAP5 PUSH1 0x1 DUP1 DUP7 SHL SUB AND DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP2 PUSH1 0x80 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x2CA JUMP JUMPDEST SWAP2 SWAP3 PUSH2 0x300 SWAP6 SWAP5 SWAP2 PUSH1 0xA0 SWAP5 PUSH1 0x1 DUP1 DUP8 SHL SUB DUP1 SWAP3 AND DUP6 MSTORE AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP2 PUSH1 0x80 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x2CA JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x16FF JUMPI RETURNDATASIZE SWAP1 PUSH2 0x16E5 DUP3 PUSH2 0x5DE JUMP JUMPDEST SWAP2 PUSH2 0x16F3 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x546 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP3 SWAP4 SWAP2 SWAP1 SWAP4 DUP5 EXTCODESIZE PUSH2 0x1716 JUMPI POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP2 PUSH2 0x1739 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP9 DUP10 DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x1670 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x17CE JUMPI JUMPDEST POP PUSH2 0x1791 JUMPI DUP3 PUSH2 0x1760 PUSH2 0x16D4 JUMP JUMPDEST DUP1 MLOAD SWAP2 SWAP1 DUP3 PUSH2 0x178A JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x17AB JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x15A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x17F0 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x17F7 JUMPI JUMPDEST PUSH2 0x17E8 DUP2 DUP4 PUSH2 0x546 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x165B JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x1752 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x17DE JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP5 SWAP2 SWAP5 DUP6 EXTCODESIZE PUSH2 0x1813 JUMPI JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1836 PUSH1 0x20 SWAP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP10 DUP11 DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x16A1 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x1878 JUMPI JUMPDEST POP PUSH2 0x185D JUMPI DUP3 PUSH2 0x1760 PUSH2 0x16D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x17AB JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x180B JUMP JUMPDEST PUSH2 0x1891 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x17F7 JUMPI PUSH2 0x17E8 DUP2 DUP4 PUSH2 0x546 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x184F JUMP JUMPDEST SWAP3 PUSH2 0x18C7 PUSH2 0x300 SWAP6 SWAP4 PUSH2 0x18D5 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE PUSH1 0x0 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0x819 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x819 JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x2CA JUMP JUMPDEST SWAP4 SWAP1 PUSH2 0x300 SWAP6 SWAP4 PUSH2 0x18C7 SWAP2 PUSH2 0x18D5 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND DUP9 MSTORE AND PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0x819 JUMP JUMPDEST SWAP3 SWAP4 SWAP2 SWAP1 SWAP4 DUP5 EXTCODESIZE PUSH2 0x1927 JUMPI POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP2 PUSH2 0x1739 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP9 DUP10 DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x1898 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP5 SWAP2 SWAP5 DUP6 EXTCODESIZE PUSH2 0x195E JUMPI POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1836 PUSH1 0x20 SWAP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP10 DUP11 DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 SWAP1 SWAP2 SWAP1 DUP4 ISZERO PUSH2 0xEB1 JUMPI PUSH2 0x19BC PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x40 SWAP5 PUSH1 0x0 DUP7 MLOAD PUSH2 0x19CE DUP2 PUSH2 0x525 JUMP JUMPDEST MSTORE DUP2 MLOAD DUP5 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x1B02 JUMPI POP POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1A7B JUMPI DUP1 PUSH1 0x5 SHL PUSH1 0x20 DUP1 DUP3 DUP7 ADD ADD MLOAD SWAP2 DUP8 ADD ADD MLOAD PUSH2 0x1A12 DUP7 PUSH2 0x1317 DUP5 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD DUP2 DUP2 LT PUSH2 0x1A45 JUMPI DUP7 PUSH2 0x1317 PUSH2 0x1A40 SWAP6 SWAP5 SWAP4 PUSH2 0x1A3A SWAP4 SUB SWAP4 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH2 0x11A8 JUMP JUMPDEST PUSH2 0x19E0 JUMP JUMPDEST DUP10 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP SWAP5 SWAP1 PUSH1 0x0 SWAP5 SWAP4 SWAP3 POP PUSH1 0x1 DUP2 MLOAD EQ DUP6 EQ PUSH2 0x1AD0 JUMPI PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP3 DUP2 ADD MLOAD SWAP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD MSTORE CALLER SWAP1 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP1 DUP1 PUSH1 0x40 DUP2 ADD JUMPDEST SUB SWAP1 LOG4 JUMP JUMPDEST SWAP1 MLOAD CALLER SWAP3 PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB SWAP3 DUP3 SWAP2 PUSH2 0x1ACB SWAP2 DUP4 PUSH2 0x1636 JUMP JUMPDEST DUP8 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP3 DUP4 MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x1B43 DUP2 PUSH1 0x60 DUP2 ADD PUSH2 0x3ED JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 DUP2 DUP2 AND SWAP2 SWAP1 DUP3 ISZERO PUSH2 0x1C12 JUMPI JUMPDEST PUSH1 0x20 SWAP3 DUP4 DUP7 LT DUP2 EQ PUSH2 0x1BFC JUMPI SWAP1 DUP2 ISZERO PUSH2 0x1BE1 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1B83 JUMPI POP POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH2 0x1BB5 PUSH1 0x5 PUSH1 0x0 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x1BD0 JUMPI POP POP POP POP ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x13A6 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP5 ADD MSTORE SWAP2 DUP4 ADD SWAP2 DUP2 ADD PUSH2 0x1BBA JUMP JUMPDEST PUSH1 0xFF NOT AND DUP5 MSTORE POP POP POP DUP2 ISZERO ISZERO SWAP1 SWAP2 MUL ADD SWAP2 POP CODESIZE DUP1 DUP1 DUP1 PUSH2 0x13A6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x1B62 JUMP JUMPDEST SWAP1 PUSH2 0x1C2F PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x2A7 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1C3D DUP3 PUSH2 0x5DE JUMP JUMPDEST PUSH2 0x1C4A PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x546 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1C5B PUSH1 0x1F NOT SWAP2 PUSH2 0x5DE JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE PUSH27 0x6065CBC14CB73F55B612318CDCD697201F353681A064F3D262F7EB 0xB9 STOP EXTCODECOPY PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"282:3020:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;282:3020:28;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;282:3020:28;;;;;;:::o;:::-;;;-1:-1:-1;;;;;282:3020:28;;;;;;:::o;:::-;;;;;;-1:-1:-1;;282:3020:28;;;;;2348:22:4;282:3020:28;;:::i;:::-;;;-1:-1:-1;282:3020:28;-1:-1:-1;282:3020:28;;;-1:-1:-1;282:3020:28;;;;;;;;;;;;;;;;;2348:22:4;282:3020:28;;;;;;;;-1:-1:-1;;;;;;282:3020:28;;;;;:::o;:::-;;;;;;-1:-1:-1;;282:3020:28;;;;;;;;;;:::i;:::-;;;;;2688:32:0;;;2673:47;;:87;;;;;282:3020:28;;;;;;;;;;2673:87:0;-1:-1:-1;;;1515:41:4;;;-1:-1:-1;1515:109:4;;;;2673:87:0;1515:161:4;;;;2673:87:0;;;;;1515:161:4;-1:-1:-1;;;862:40:21;;-1:-1:-1;1515:161:4;;;:109;-1:-1:-1;;;1572:52:4;;;-1:-1:-1;1515:109:4;;282:3020:28;;;;;;;;-1:-1:-1;;282:3020:28;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;282:3020:28;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;-1:-1:-1;;282:3020:28;;;;-1:-1:-1;282:3020:28;;;25453:8:23;25444:17;;;;25440:103;;282:3020:28;25569:8:23;;25560:17;;;;25556:103;;282:3020:28;25685:8:23;;25676:17;;;;25672:103;;282:3020:28;25801:7:23;;25792:16;;;;25788:100;;282:3020:28;25914:7:23;;25905:16;;;;25901:100;;282:3020:28;26018:16:23;26027:7;26018:16;;;26014:100;;282:3020:28;26140:7:23;26131:16;;;;26127:66;;282:3020:28;779:1:20;282:3020:28;;874:92:20;817:18;282:3020:28;;;817:18:20;:::i;:::-;849:11;874:92;;;979:247;779:1;;;979:247;282:3020:28;;;;3058:61;282:3020;;;;;;3058:61;;282:3020;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;282:3020:28;;;;;;;3058:61;282:3020;;3058:61;;;;;;:::i;:::-;282:3020;;;;;;;:::i;:::-;;;;979:247:20;-1:-1:-1;;282:3020:28;;;;-1:-1:-1;;;1033:111:20;;;;282:3020:28;1033:111:20;282:3020:28;1194:10:20;;;1190:21;;979:247;;;;;1190:21;1206:5;;26127:66:23;282:3020:28;26177:1:23;282:3020:28;26127:66:23;;;26014:100;282:3020:28;;26027:7:23;26098:1;282:3020:28;;;;26014:100:23;;;25901;282:3020:28;;;;;;;25901:100:23;;;;25788;25872:1;282:3020:28;;;;;;25788:100:23;;;;25672:103;25758:2;282:3020:28;;;;;;25672:103:23;;;;25556;282:3020:28;;;;;;;25556:103:23;;;;25440;25526:2;;-1:-1:-1;282:3020:28;;;-1:-1:-1;25440:103:23;;;282:3020:28;;;;;;-1:-1:-1;;282:3020:28;;;;;;-1:-1:-1;282:3020:28;;;;;3901:22:0;282:3020:28;-1:-1:-1;282:3020:28;3901:22:0;282:3020:28;;;;;;;;;;;;;-1:-1:-1;;282:3020:28;;;;;;;547:24;282:3020;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;282:3020:28;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;282:3020:28;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;282:3020:28;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;282:3020:28;;;;735:10:14;4249:14:4;;;;:49;;282:3020:28;4245:129:4;;282:3020:28;;9216:16:4;9212:88;;9313:18;9309:88;;9456:4;;;;:::i;:::-;282:3020:28;9309:88:4;282:3020:28;;-1:-1:-1;;;9354:32:4;;9230:1;9354:32;;;282:3020:28;;;9354:32:4;9212:88;282:3020:28;;-1:-1:-1;;;9255:34:4;;9230:1;9255:34;;;282:3020:28;;;9255:34:4;4245:129;282:3020:28;;;-1:-1:-1;;;4321:42:4;;735:10:14;4321:42:4;;;282:3020:28;;;-1:-1:-1;;;;;282:3020:28;;;;;;;;;;;4321:42:4;;;4249:49;-1:-1:-1;;282:3020:28;;;;;;;;;;;;735:10:14;282:3020:28;;;;;;;;;;4267:31:4;4249:49;;282:3020:28;;;;;;-1:-1:-1;;282:3020:28;;;;4330:25:0;282:3020:28;;;;:::i;:::-;;;-1:-1:-1;282:3020:28;;;;2475:4:0;3901:22;282:3020:28;-1:-1:-1;282:3020:28;3901:22:0;282:3020:28;2475:4:0;:::i;:::-;4330:25;:::i;282:3020:28:-;;;;;;-1:-1:-1;;282:3020:28;;;;;2822:35;282:3020;;;;2822:35;:::i;:::-;282:3020;;;;;;;;;;;;-1:-1:-1;;282:3020:28;;;;;;:::i;:::-;735:10:14;-1:-1:-1;;;;;282:3020:28;;5421:34:0;5417:102;;5529:37;282:3020:28;;;5529:37:0;:::i;5417:102::-;282:3020:28;;-1:-1:-1;;;5478:30:0;;282:3020:28;;5478:30:0;282:3020:28;;;;;;;;;;;;;;;-1:-1:-1;282:3020:28;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;282:3020:28;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;1500:62:2;;:::i;:::-;282:3020:28;;;-1:-1:-1;;;;;;282:3020:28;;;;;;;-1:-1:-1;;;;;282:3020:28;3052:40:2;282:3020:28;;3052:40:2;282:3020:28;;;;;;;;;;;-1:-1:-1;;282:3020:28;;;;;;;;-1:-1:-1;;;;;282:3020:28;;;;;;;;;;;;;;-1:-1:-1;;282:3020:28;;;;;;2954:29:0;282:3020:28;;:::i;:::-;;;-1:-1:-1;282:3020:28;;;;;-1:-1:-1;282:3020:28;;;;;;;;;;;;;;;;;2954:29:0;282:3020:28;;;;;;;;;;;;;;;;-1:-1:-1;;282:3020:28;;;;;;;;;;;;;;;;;-1:-1:-1;;282:3020:28;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;282:3020:28;;;13383:22:4;;13379:94;;13482:35;:46;735:10:14;;-1:-1:-1;282:3020:28;;;;;-1:-1:-1;282:3020:28;;;;;;;;;;;;;;;;;13482:35:4;282:3020:28;;;;;;;;;;;;;;;13482:46:4;282:3020:28;;;;;13543:41:4;282:3020:28;735:10:14;13543:41:4;;282:3020:28;13379:94:4;282:3020:28;;-1:-1:-1;;;13428:34:4;;-1:-1:-1;282:3020:28;13428:34:4;;282:3020:28;;;13428:34:4;282:3020:28;;;;;;;;;;;-1:-1:-1;;;;;282:3020:28;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;735:10:14;-1:-1:-1;282:3020:28;;;;;;;;;;-1:-1:-1;;479:24:28;;-1:-1:-1;;479:24:28;;;;282:3020;;3519:23:0;3515:108;;1544:35:28;;;;;:::i;:::-;282:3020;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;282:3020:28;;;10850:16:4;;10846:88;;10993:29;11088:4;282:3020:28;10993:29:4;1660:33:28;10993:29:4;;;;13707:822;13875:648;;;;;;;;;;;;;;;;;;;;;;;;;;13707:822;10993:29;11088:4;;:::i;:::-;282:3020:28;;;;;1660:33;282:3020;;10846:88:4;282:3020:28;;-1:-1:-1;;;10889:34:4;;2954:6:0;10889:34:4;;282:3020:28;;;;;10889:34:4;3515:108:0;282:3020:28;;;;3565:47:0;;;;;;735:10:14;2954:6:0;3565:47;;282:3020:28;;;;;3565:47:0;282:3020:28;;;;;;-1:-1:-1;;282:3020:28;;;;;;;479:24;282:3020;;;;;;;;;-1:-1:-1;;282:3020:28;;;;4747:26:0;282:3020:28;;;;:::i;:::-;;;-1:-1:-1;282:3020:28;;;;2475:4:0;3901:22;282:3020:28;-1:-1:-1;282:3020:28;3901:22:0;282:3020:28;2475:4:0;:::i;:::-;4747:26;:::i;282:3020:28:-;;;;;;;:::i;:::-;2475:4:0;;;;:::i;:::-;-1:-1:-1;;;;;282:3020:28;;;1985:18;;282:3020;;2055:10;;282:3020;;2201:6;2135:35;;2223;2135;2223;2135;;:::i;:::-;2201:6;;;:::i;:::-;282:3020;;;;;;;;;;;;;2223:35;;;;282:3020;;;;-1:-1:-1;;;282:3020:28;;;;;;;;;;;;;;;;;-1:-1:-1;;;282:3020:28;;;;;;;;;;-1:-1:-1;;;282:3020:28;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;282:3020:28;;;;;;3478:37:4;282:3020:28;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;282:3020:28;;;-1:-1:-1;282:3020:28;;;;;;;;;;;;;;;;-1:-1:-1;282:3020:28;;;;;;;;;;;;;-1:-1:-1;;282:3020:28;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;282:3020:28;;;;735:10:14;3755:14:4;;;;:49;;282:3020:28;3751:129:4;;282:3020:28;;8281:16:4;8277:88;;8378:18;8374:88;;8610:4;282:3020:28;8521:29:4;282:3020:28;;;;13707:822:4;13875:648;;;;;;;;;;;;;;;;;;;;;;;;;;13707:822;8521:29;8610:4;;;;:::i;8374:88::-;282:3020:28;;-1:-1:-1;;;8419:32:4;;-1:-1:-1;282:3020:28;8419:32:4;;282:3020:28;;;8419:32:4;8277:88;282:3020:28;;-1:-1:-1;;;8320:34:4;;-1:-1:-1;282:3020:28;8320:34:4;;282:3020:28;;;8320:34:4;3751:129;282:3020:28;;-1:-1:-1;;;3827:42:4;;735:10:14;282:3020:28;3827:42:4;;282:3020:28;-1:-1:-1;;;;;282:3020:28;;;;;;;;4321:42:4;3755:49;-1:-1:-1;;282:3020:28;;;;;;;;;;;;735:10:14;282:3020:28;;;;;;;;;;3773:31:4;3755:49;;282:3020:28;;;;;;-1:-1:-1;;282:3020:28;;;;;;:::i;:::-;1500:62:2;;:::i;:::-;-1:-1:-1;;;;;282:3020:28;;;;2627:22:2;;2623:91;;282:3020:28;;;;;;;;;;;;3052:40:2;-1:-1:-1;3052:40:2;;282:3020:28;2623:91:2;282:3020:28;;-1:-1:-1;;;2672:31:2;;-1:-1:-1;282:3020:28;2672:31:2;;282:3020:28;;;2672:31:2;3199:103:0;735:10:14;-1:-1:-1;282:3020:28;;;;;;;;;547:24;;282:3020;;2954:29:0;282:3020:28;;3519:23:0;3515:108;;3199:103;:::o;:::-;-1:-1:-1;282:3020:28;;;2954:6:0;282:3020:28;;;;;;;;735:10:14;282:3020:28;;;;;;;;;2954:29:0;282:3020:28;6179:316:0;-1:-1:-1;282:3020:28;;;;2954:6:0;282:3020:28;;;2954:29:0;282:3020:28;;;;;;;;;;;;;;;;;;;;2954:29:0;282:3020:28;;;;;;;2954:6:0;282:3020:28;;;;;;;;-1:-1:-1;;;;;282:3020:28;;-1:-1:-1;282:3020:28;;;;;;;;;-1:-1:-1;;282:3020:28;6347:4:0;282:3020:28;;;735:10:14;;-1:-1:-1;;;;;282:3020:28;;6370:40:0;;;;6347:4;6424:11;:::o;6272:217::-;6466:12;;;;:::o;6730:317::-;-1:-1:-1;282:3020:28;;;;2954:6:0;282:3020:28;;;2954:29:0;282:3020:28;;;;;;;;;;;;;;;;;;;;2954:29:0;282:3020:28;;;;;;;;2954:6:0;282:3020:28;;;;;;;;-1:-1:-1;;;;;282:3020:28;;-1:-1:-1;282:3020:28;;;;;;;;;-1:-1:-1;;282:3020:28;;;735:10:14;;-1:-1:-1;;;;;282:3020:28;;6922:40:0;;;;282:3020:28;6976:11:0;:::o;1796:162:2:-;1710:6;282:3020:28;-1:-1:-1;;;;;282:3020:28;735:10:14;1855:23:2;1851:101;;1796:162::o;1851:101::-;282:3020:28;;-1:-1:-1;;;1901:40:2;;735:10:14;1901:40:2;;;282:3020:28;;;1901:40:2;282:3020:28;;;;;;;;;;;;;-1:-1:-1;;282:3020:28;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;2534:552:4;;;;282:3020:28;;;;2690:29:4;;;2686:121;;282:3020:28;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;2932:3:4;282:3020:28;;2911:19:4;;;;;16237:82:12;;;;;;;;;;17035;;;;;;2348:9:4;282:3020:28;;;;;;;;;;;-1:-1:-1;;;;;282:3020:28;;;;;;;;;;2932:3:4;;16237:82:12;2951:87:4;;;;:::i;:::-;282:3020:28;2932:3:4;:::i;:::-;2896:13;;2911:19;-1:-1:-1;2911:19:4;;-1:-1:-1;;;2534:552:4:o;2686:121::-;282:3020:28;;-1:-1:-1;;;2742:54:4;;;;;282:3020:28;;;;;;;;;;;;;4321:42:4;7002:700;;282:3020:28;;;;5263:27:4;;;;5259:117;;5433:13;;282:3020:28;5464:3:4;282:3020:28;;5448:14:4;;;;;17035:82:12;;;;;;;;;;;;;;;;;5464:3:4;;17035:82:12;;;-1:-1:-1;;;;;282:3020:28;;6028:81:4;;5464:3;;;;;:::i;:::-;5433:13;;6028:81;6068:26;:13;;:17;:13;5445:1;282:3020:28;5445:1:4;282:3020:28;;;5445:1:4;282:3020:28;;;6068:13:4;282:3020:28;;;;;;;;;;;;;;;;6068:17:4;282:3020:28;;;6068:26:4;:::i;:::-;282:3020:28;;6028:81:4;;;;;5448:14;-1:-1:-1;282:3020:28;;5448:14:4;;;;282:3020:28;6133:15:4;5598:18;;17035:82:12;;;;;;;;;282:3020:28;;;;;;;;;;-1:-1:-1;;;;;282:3020:28;;;-1:-1:-1;;735:10:14;;6279:45:4;;;6129:288;-1:-1:-1;;;;;282:3020:28;;7243:453:4;;6129:288;7002:700;;;;:::o;7243:453::-;282:3020:28;;;7328:15:4;5598:18;;17035:82:12;;;7548:4:4;17035:82:12;;;;;;;735:10:14;;7548:4:4;:::i;:::-;7243:453;;;;;;7324:362;7666:4;735:10:14;;7666:4:4;:::i;:::-;7324:362;;6129:288;282:3020:28;;-1:-1:-1;;;;;282:3020:28;;;;;735:10:14;;6360:46:4;;282:3020:28;6360:46:4;;;282:3020:28;6360:46:4;:::i;:::-;;;;6129:288;;7002:700;;;;;282:3020:28;;;;5263:27:4;;;;5259:117;;5433:13;;-1:-1:-1;5464:3:4;282:3020:28;;5448:14:4;;;;;17035:82:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;282:3020:28;17035:82:12;282:3020:28;;;;;5594:420:4;;5464:3;;282:3020:28;;;6028:81:4;;5464:3;;;;:::i;:::-;5433:13;;6028:81;6068:26;:13;;:17;:13;5445:1;282:3020:28;5445:1:4;282:3020:28;;;5445:1:4;282:3020:28;;;6068:26:4;282:3020:28;;6028:81:4;;;;;5594:420;5658:13;;;;;:19;:13;;;5445:1;282:3020:28;5445:1:4;282:3020:28;;;5445:1:4;282:3020:28;;;5658:19:4;282:3020:28;5699:19:4;;;5695:129;;282:3020:28;;;;5464:3:4;282:3020:28;;;;5940:19:4;:13;;;5445:1;282:3020:28;5445:1:4;282:3020:28;;;5445:1:4;282:3020:28;;;5940:19:4;282:3020:28;5594:420:4;;;;5695:129;282:3020:28;;-1:-1:-1;;;5749:56:4;;-1:-1:-1;;;;;282:3020:28;;5749:56:4;;;282:3020:28;;;;;;;;;;;;;;;;;;;;;;4321:42:4;5448:14;;;;;;;;282:3020:28;;;6133:15:4;6129:288;6147:1;;;17035:82:12;;;;;;;;;282:3020:28;;;;;;;;;;-1:-1:-1;;;;;282:3020:28;;;;;;;;735:10:14;;6279:45:4;;;6129:288;-1:-1:-1;;;;;282:3020:28;;7243:453:4;;6129:288;7002:700;;;;;:::o;7243:453::-;282:3020:28;;;7328:15:4;6147:1;;17035:82:12;;7548:4:4;17035:82:12;;;;;;735:10:14;;7548:4:4;:::i;:::-;7243:453;;;;;;;7324:362;7666:4;735:10:14;;;;7666:4:4;:::i;:::-;7324:362;;6129:288;282:3020:28;;-1:-1:-1;;;;;282:3020:28;;;;;;;;735:10:14;;6360:46:4;;282:3020:28;6360:46:4;;;282:3020:28;6360:46:4;:::i;:::-;;;;6129:288;;282:3020:28;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;282:3020:28;;;;:::o;:::-;;;:::o;998:959:8:-;;;;;;1197:14;;1193:758;;998:959;;;;;:::o;1193:758::-;1235:71;282:3020:28;1235:71:8;282:3020:28;;;;;;;;;;1235:71:8;;;;;;;;:::i;:::-;;282:3020:28;;-1:-1:-1;;;;;282:3020:28;;1235:71:8;;282:3020:28;;1235:71:8;;;1193:758;-1:-1:-1;1231:710:8;;1555:386;;;:::i;:::-;282:3020:28;;;;1605:18:8;;;282:3020:28;;-1:-1:-1;;;1710:41:8;;-1:-1:-1;;;;;282:3020:28;;1235:71:8;1710:41;;282:3020:28;;;4321:42:4;1601:326:8;1798:111;;1235:71;1798:111;;1231:710;-1:-1:-1;;;;;;282:3020:28;1355:55:8;1351:189;;1231:710;1193:758;;;;;;;1351:189;282:3020:28;;-1:-1:-1;;;1480:41:8;;-1:-1:-1;;;;;282:3020:28;;;;1235:71:8;1480:41;;282:3020:28;;;4321:42:4;1235:71:8;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;998:959;;;;;;;1197:14;;1193:758;;998:959;;;;;;;:::o;1193:758::-;1235:71;;282:3020:28;;;;;;;;;;;1235:71:8;;;;;;;;:::i;:::-;;282:3020:28;1214:1:8;-1:-1:-1;;;;;282:3020:28;;1235:71:8;;1214:1;;1235:71;;;1193:758;-1:-1:-1;1231:710:8;;1555:386;;;:::i;1231:710::-;-1:-1:-1;;;;;;282:3020:28;1355:55:8;1351:189;;1231:710;1193:758;;;;;;;;1235:71;;;;;;;;;;;;;;;:::i;:::-;;;;;282:3020:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2505:1026:8:-;;;;;;2729:14;;2725:800;;2505:1026;;;;;:::o;2725:800::-;2767:78;282:3020:28;2767:78:8;282:3020:28;;;;;;;;;;2767:78:8;;;;;;;;:::i;2505:1026::-;;;;;;;2729:14;;2725:800;;2505:1026;;;;;;:::o;2725:800::-;2767:78;;282:3020:28;;;;;;;;;;;2767:78:8;;;;;;;;:::i;12107:329:4:-;-1:-1:-1;;;;;282:3020:28;;;12107:329:4;;;12186:18;;12182:88;;12329:29;13875:648;;;;;;;;;;;;;;;;;;;;;;;;;;13707:822;12329:29;282:3020:28;;;;12202:1:4;282:3020:28;;;;;:::i;:::-;;;;;;5263:27:4;;;;5259:117;;5433:13;;12202:1;5464:3;282:3020:28;;5448:14:4;;;;;17035:82:12;;;282:3020:28;17035:82:12;;;;;;;;;;;5658:19:4;:13;;;5445:1;282:3020:28;5445:1:4;282:3020:28;;;5445:1:4;282:3020:28;;;5658:19:4;282:3020:28;5699:19:4;;;5695:129;;282:3020:28;5940:13:4;5464:3;282:3020:28;;;5940:19:4;282:3020:28;;5940:13:4;5445:1;282:3020:28;5445:1:4;282:3020:28;;;5445:1:4;282:3020:28;;;5940:19:4;282:3020:28;5464:3:4;:::i;:::-;5433:13;;5695:129;282:3020:28;;-1:-1:-1;;;5749:56:4;;-1:-1:-1;;;;;282:3020:28;;5749:56:4;;;282:3020:28;;;;;;;;;;;;;;;;;;;;;;4321:42:4;5448:14;;;;12202:1;5448:14;;;;282:3020:28;;;6133:15:4;5598:18;;;;282:3020:28;17035:82:12;;;;;;;;282:3020:28;;;;;;;;735:10:14;;6279:45:4;;282:3020:28;;;;6279:45:4;;;;12107:329::o;6129:288::-;282:3020:28;;735:10:14;;6360:46:4;;282:3020:28;;6360:46:4;;282:3020:28;6360:46:4;:::i;5259:117::-;282:3020:28;;-1:-1:-1;;;5313:52:4;;;;;282:3020:28;;;;;;;;;;;;;4321:42:4;2384:171:28;282:3020;;;2512:34;;;282:3020;;;;;;;;;;2512:34;;282:3020;;;;2512:34;282:3020;2512:34;282:3020;2502:45;;2384:171;:::o;282:3020::-;3075:7;282:3020;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;3075:7;282:3020;;;;;;;-1:-1:-1;282:3020:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;282:3020:28;;;-1:-1:-1;;;282:3020:28;;;;;;;;-1:-1:-1;282:3020:28;;;;;;;;;;-1:-1:-1;282:3020:28;;;;;-1:-1:-1;282:3020:28;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o"},"methodIdentifiers":{"BURNER_ROLE()":"282c51f3","DEFAULT_ADMIN_ROLE()":"a217fddf","MINTER_ROLE()":"d5391393","balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","burn(address,uint256,uint256,uint256)":"de7bf0a2","getRoleAdmin(bytes32)":"248a9ca3","getTokenId(uint256,uint256)":"3112de9a","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","isApprovedForAll(address,address)":"e985e9c5","mint(address,uint256,uint256,uint256)":"a647e8ec","owner()":"8da5cb5b","renounceOwnership()":"715018a6","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BURNER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"marketId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outcomeIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"marketId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outcomeIndex\",\"type\":\"uint256\"}],\"name\":\"getTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"marketId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outcomeIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"burn(address,uint256,uint256,uint256)\":{\"details\":\"Only accounts with BURNER_ROLE can call this function.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"mint(address,uint256,uint256,uint256)\":{\"details\":\"Only accounts with MINTER_ROLE can call this function.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(address,uint256,uint256,uint256)\":{\"notice\":\"Burn tokens for a specific market and outcome.\"},\"getTokenId(uint256,uint256)\":{\"notice\":\"Public function to get the token ID for a specific market and outcome.\"},\"mint(address,uint256,uint256,uint256)\":{\"notice\":\"Mint tokens for a specific market and outcome.\"},\"uri(uint256)\":{\"notice\":\"Override URI function to return metadata URI for a token.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/core/PredictionMarketPositions.sol\":\"PredictionMarketPositions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x22933f0f4897ff70a991c3baebfbc2574fd052dc4bae7fcafec45b07c1f23dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13674cffad18cec55f013056496d7d2e3a34bd7bdbe23d1ef0c7588088c73367\",\"dweb:/ipfs/QmcBkrwxNvCApG48Gyby2L6qCNtuhaFncGpbJt3zuukTmu\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x68d6fdbeb467192c3627a46aa7bf5cbb73267363b740abc511f521a5a41a446e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce608c19d5e917c60f9c8aa3e5f0eb05b326280ac0a235e8bb9a848a3a64a91\",\"dweb:/ipfs/QmdLPsWQJj7JvRae8MM13GEo4PBXaEFmD4b4heqcyMJNPG\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x30afe9013aaeb3ba735284a9310792776f57a3b2db6fc1d99628f2c47287f5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c675b740746031092efcedb2e18179f05fce8ba482de64e982715e4aa16bc90\",\"dweb:/ipfs/QmVdUD89qYudLc88k5AsuQ6VWyz9SE1c6UXrVK32Yqh1YS\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xaf9586854de33dc9d3a7160cad8170fdfb4119d02a44bad90ba16d71d701cc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c15a02762b0a51d66e36be135c27de656093fc09292fa743df8484b87d4486ea\",\"dweb:/ipfs/QmbEozFrt5XwC9nzDFuXvN1RF3hQVwKYNi8c2R4bFvYJ2X\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x8447b57b63810fe2e367c09496a966f143ec0e825d71ddb9fce2506cff84b618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://996cb48f793bf151555045b37138e36b3cdb31d6bc6552d3149285260be00cfb\",\"dweb:/ipfs/QmcLaTTMNVbkMx58xhkp6GeFt4V3GtSyupZuaKG3vYW2Zc\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"src/core/PredictionMarketPositions.sol\":{\"keccak256\":\"0x9ebbbf377f038ef5f16a93dfa6c9e5a4197c32531d65fdb5ec5f592a7e20b50f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b00670f98fe8f76b446fbc203f5a9be83a9391510ae1ccb49113086161335405\",\"dweb:/ipfs/QmTX9DdzyrGXGume61E4xXLqGyQHuwe5Emm1f7WEYkPV6r\"]}},\"version\":1}"}},"src/mock/ERC20Token.sol":{"ERC20Token":{"abi":[{"inputs":[{"internalType":"uint256","name":"initialSupply","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"allocate_memory":{"entryPoint":954,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"608034620003b5576001600160401b0390601f601f1962000a7a388190038381018316850186811186821017620002b957859282916040528339602094859181010312620003b557519362000053620003ba565b92600d84526c29a9a6102aa9a2102a37b5b2b760991b8585015262000077620003ba565b93600685526514d4d31554d160d21b86860152805191838311620002b95760039283546001938482811c92168015620003aa575b8a831014620003945781848493116200033e575b508990848311600114620002db57600092620002cf575b505060001982861b1c191690831b1783555b8551938411620002b95760049586548381811c91168015620002ae575b8982101462000299578281116200024e575b5087918511600114620001e55784955090849291600095620001d9575b50501b92600019911b1c19161781555b3315620001c15760025490838201809211620001ac57506000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91600255338352828152604083208481540190556040519384523393a360405161069f9081620003db8239f35b601190634e487b7160e01b6000525260246000fd5b60249060006040519163ec442f0560e01b8352820152fd5b01519350388062000134565b9291948416928660005284886000209460005b8a898383106200023657505050106200021b575b50505050811b01815562000144565b01519060f884600019921b161c19169055388080806200020c565b868601518955909701969485019488935001620001f8565b87600052886000208380880160051c8201928b89106200028f575b0160051c019084905b8281106200028257505062000117565b6000815501849062000272565b9250819262000269565b602288634e487b7160e01b6000525260246000fd5b90607f169062000105565b634e487b7160e01b600052604160045260246000fd5b015190503880620000d6565b908886941691876000528b6000209260005b8d8282106200032757505084116200030e575b505050811b018355620000e8565b015160001983881b60f8161c1916905538808062000300565b8385015186558997909501949384019301620002ed565b90915085600052896000208480850160051c8201928c86106200038a575b918791869594930160051c01915b8281106200037a575050620000bf565b600081558594508791016200036a565b925081926200035c565b634e487b7160e01b600052602260045260246000fd5b91607f1691620000ab565b600080fd5b60408051919082016001600160401b03811183821017620002b95760405256fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde031461043957508163095ea7b31461038b57816318160ddd1461036c57816323b872dd14610275578163313ce5671461025957816370a082311461022257816395d89b411461010357508063a9059cbb146100d35763dd62ed3e1461008857600080fd5b346100cf57806003193601126100cf57806020926100a461055a565b6100ac610575565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b50346100cf57806003193601126100cf576020906100fc6100f261055a565b602435903361058b565b5160018152f35b8383346100cf57816003193601126100cf57805190828454600181811c90808316928315610218575b6020938484108114610205578388529081156101e95750600114610194575b505050829003601f01601f191682019267ffffffffffffffff841183851017610181575082918261017d925282610511565b0390f35b634e487b7160e01b815260418552602490fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8385106101d5575050505083010185808061014b565b8054888601830152930192849082016101bf565b60ff1916878501525050151560051b840101905085808061014b565b634e487b7160e01b895260228a52602489fd5b91607f169161012c565b5050346100cf5760203660031901126100cf5760209181906001600160a01b0361024a61055a565b16815280845220549051908152f35b5050346100cf57816003193601126100cf576020905160128152f35b905082346103695760603660031901126103695761029161055a565b610299610575565b916044359360018060a01b0383168083526001602052868320338452602052868320549160001983036102d5575b6020886100fc89898961058b565b86831061033d57811561032657331561030f575082526001602090815286832033845281529186902090859003905582906100fc876102c7565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b80fd5b5050346100cf57816003193601126100cf576020906002549051908152f35b9050346104355781600319360112610435576103a561055a565b60243590331561041e576001600160a01b031691821561040757508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b8280fd5b8490843461043557826003193601126104355782600354600181811c90808316928315610507575b6020938484108114610205578388529081156101e957506001146104b157505050829003601f01601f191682019267ffffffffffffffff841183851017610181575082918261017d925282610511565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8385106104f3575050505083010185808061014b565b8054888601830152930192849082016104dd565b91607f1691610461565b6020808252825181830181905290939260005b82811061054657505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610524565b600435906001600160a01b038216820361057057565b600080fd5b602435906001600160a01b038216820361057057565b916001600160a01b0380841692831561065057169283156106375760009083825281602052604082205490838210610605575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fdfea26469706673582212202e12685cd21cb5ddcb076714547e679d07a6910729f95597bb4073cfada83f3564736f6c63430008140033","opcodes":"PUSH1 0x80 CALLVALUE PUSH3 0x3B5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 PUSH1 0x1F PUSH1 0x1F NOT PUSH3 0xA7A CODESIZE DUP2 SWAP1 SUB DUP4 DUP2 ADD DUP4 AND DUP6 ADD DUP7 DUP2 GT DUP7 DUP3 LT OR PUSH3 0x2B9 JUMPI DUP6 SWAP3 DUP3 SWAP2 PUSH1 0x40 MSTORE DUP4 CODECOPY PUSH1 0x20 SWAP5 DUP6 SWAP2 DUP2 ADD SUB SLT PUSH3 0x3B5 JUMPI MLOAD SWAP4 PUSH3 0x53 PUSH3 0x3BA JUMP JUMPDEST SWAP3 PUSH1 0xD DUP5 MSTORE PUSH13 0x29A9A6102AA9A2102A37B5B2B7 PUSH1 0x99 SHL DUP6 DUP6 ADD MSTORE PUSH3 0x77 PUSH3 0x3BA JUMP JUMPDEST SWAP4 PUSH1 0x6 DUP6 MSTORE PUSH6 0x14D4D31554D1 PUSH1 0xD2 SHL DUP7 DUP7 ADD MSTORE DUP1 MLOAD SWAP2 DUP4 DUP4 GT PUSH3 0x2B9 JUMPI PUSH1 0x3 SWAP3 DUP4 SLOAD PUSH1 0x1 SWAP4 DUP5 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x3AA JUMPI JUMPDEST DUP11 DUP4 LT EQ PUSH3 0x394 JUMPI DUP2 DUP5 DUP5 SWAP4 GT PUSH3 0x33E JUMPI JUMPDEST POP DUP10 SWAP1 DUP5 DUP4 GT PUSH1 0x1 EQ PUSH3 0x2DB JUMPI PUSH1 0x0 SWAP3 PUSH3 0x2CF JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP7 SHL SHR NOT AND SWAP1 DUP4 SHL OR DUP4 SSTORE JUMPDEST DUP6 MLOAD SWAP4 DUP5 GT PUSH3 0x2B9 JUMPI PUSH1 0x4 SWAP6 DUP7 SLOAD DUP4 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x2AE JUMPI JUMPDEST DUP10 DUP3 LT EQ PUSH3 0x299 JUMPI DUP3 DUP2 GT PUSH3 0x24E JUMPI JUMPDEST POP DUP8 SWAP2 DUP6 GT PUSH1 0x1 EQ PUSH3 0x1E5 JUMPI DUP5 SWAP6 POP SWAP1 DUP5 SWAP3 SWAP2 PUSH1 0x0 SWAP6 PUSH3 0x1D9 JUMPI JUMPDEST POP POP SHL SWAP3 PUSH1 0x0 NOT SWAP2 SHL SHR NOT AND OR DUP2 SSTORE JUMPDEST CALLER ISZERO PUSH3 0x1C1 JUMPI PUSH1 0x2 SLOAD SWAP1 DUP4 DUP3 ADD DUP1 SWAP3 GT PUSH3 0x1AC JUMPI POP PUSH1 0x0 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 PUSH1 0x2 SSTORE CALLER DUP4 MSTORE DUP3 DUP2 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP5 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE CALLER SWAP4 LOG3 PUSH1 0x40 MLOAD PUSH2 0x69F SWAP1 DUP2 PUSH3 0x3DB DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x11 SWAP1 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x0 PUSH1 0x40 MLOAD SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST ADD MLOAD SWAP4 POP CODESIZE DUP1 PUSH3 0x134 JUMP JUMPDEST SWAP3 SWAP2 SWAP5 DUP5 AND SWAP3 DUP7 PUSH1 0x0 MSTORE DUP5 DUP9 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 JUMPDEST DUP11 DUP10 DUP4 DUP4 LT PUSH3 0x236 JUMPI POP POP POP LT PUSH3 0x21B JUMPI JUMPDEST POP POP POP POP DUP2 SHL ADD DUP2 SSTORE PUSH3 0x144 JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0xF8 DUP5 PUSH1 0x0 NOT SWAP3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH3 0x20C JUMP JUMPDEST DUP7 DUP7 ADD MLOAD DUP10 SSTORE SWAP1 SWAP8 ADD SWAP7 SWAP5 DUP6 ADD SWAP5 DUP9 SWAP4 POP ADD PUSH3 0x1F8 JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE DUP9 PUSH1 0x0 KECCAK256 DUP4 DUP1 DUP9 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP12 DUP10 LT PUSH3 0x28F JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP5 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH3 0x282 JUMPI POP POP PUSH3 0x117 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP5 SWAP1 PUSH3 0x272 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x269 JUMP JUMPDEST PUSH1 0x22 DUP9 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x105 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xD6 JUMP JUMPDEST SWAP1 DUP9 DUP7 SWAP5 AND SWAP2 DUP8 PUSH1 0x0 MSTORE DUP12 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP14 DUP3 DUP3 LT PUSH3 0x327 JUMPI POP POP DUP5 GT PUSH3 0x30E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP4 SSTORE PUSH3 0xE8 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP9 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x300 JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP10 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH3 0x2ED JUMP JUMPDEST SWAP1 SWAP2 POP DUP6 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 DUP5 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP13 DUP7 LT PUSH3 0x38A JUMPI JUMPDEST SWAP2 DUP8 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x37A JUMPI POP POP PUSH3 0xBF JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP8 SWAP2 ADD PUSH3 0x36A JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x35C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0xAB JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x2B9 JUMPI PUSH1 0x40 MSTORE JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x6FDDE03 EQ PUSH2 0x439 JUMPI POP DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x38B JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x36C JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x275 JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x259 JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x222 JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0x103 JUMPI POP DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xD3 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0x88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xCF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xCF JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0xA4 PUSH2 0x55A JUMP JUMPDEST PUSH2 0xAC PUSH2 0x575 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xCF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xCF JUMPI PUSH1 0x20 SWAP1 PUSH2 0xFC PUSH2 0xF2 PUSH2 0x55A JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x58B JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0xCF JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xCF JUMPI DUP1 MLOAD SWAP1 DUP3 DUP5 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x218 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x205 JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1E9 JUMPI POP PUSH1 0x1 EQ PUSH2 0x194 JUMPI JUMPDEST POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x181 JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x17D SWAP3 MSTORE DUP3 PUSH2 0x511 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP4 DUP6 LT PUSH2 0x1D5 JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x14B JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x1BF JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD ADD SWAP1 POP DUP6 DUP1 DUP1 PUSH2 0x14B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x22 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x12C JUMP JUMPDEST POP POP CALLVALUE PUSH2 0xCF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xCF JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x24A PUSH2 0x55A JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0xCF JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xCF JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x369 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x369 JUMPI PUSH2 0x291 PUSH2 0x55A JUMP JUMPDEST PUSH2 0x299 PUSH2 0x575 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 SLOAD SWAP2 PUSH1 0x0 NOT DUP4 SUB PUSH2 0x2D5 JUMPI JUMPDEST PUSH1 0x20 DUP9 PUSH2 0xFC DUP10 DUP10 DUP10 PUSH2 0x58B JUMP JUMPDEST DUP7 DUP4 LT PUSH2 0x33D JUMPI DUP2 ISZERO PUSH2 0x326 JUMPI CALLER ISZERO PUSH2 0x30F JUMPI POP DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP2 MSTORE SWAP2 DUP7 SWAP1 KECCAK256 SWAP1 DUP6 SWAP1 SUB SWAP1 SSTORE DUP3 SWAP1 PUSH2 0xFC DUP8 PUSH2 0x2C7 JUMP JUMPDEST DUP8 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP8 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0xCF JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xCF JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x435 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x435 JUMPI PUSH2 0x3A5 PUSH2 0x55A JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x41E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x407 JUMPI POP DUP1 DUP4 PUSH1 0x20 SWAP6 CALLER DUP2 MSTORE PUSH1 0x1 DUP8 MSTORE DUP2 DUP2 KECCAK256 DUP6 DUP3 MSTORE DUP8 MSTORE KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP5 SWAP1 DUP5 CALLVALUE PUSH2 0x435 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x435 JUMPI DUP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x507 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x205 JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1E9 JUMPI POP PUSH1 0x1 EQ PUSH2 0x4B1 JUMPI POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x181 JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x17D SWAP3 MSTORE DUP3 PUSH2 0x511 JUMP JUMPDEST PUSH1 0x3 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP4 DUP6 LT PUSH2 0x4F3 JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x14B JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x4DD JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x461 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x546 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x524 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x570 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x570 JUMPI JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x650 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x637 JUMPI PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 DUP4 DUP3 LT PUSH2 0x605 JUMPI POP SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E SLT PUSH9 0x5CD21CB5DDCB076714 SLOAD PUSH31 0x679D07A6910729F95597BB4073CFADA83F3564736F6C634300081400330000 ","sourceMap":"114:193:29:-:0;;;;-1:-1:-1;;;;;114:193:29;;-1:-1:-1;;114:193:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;114:193:29;;;;;;:::i;:::-;;;;;-1:-1:-1;;;114:193:29;;;;;;;;;;;;1667:13:9;114:193:29;;;;;;;;;;;;;;;-1:-1:-1;114:193:29;;;;;;;;;;;;;-1:-1:-1;114:193:29;;;;;;;;;;-1:-1:-1;114:193:29;;;;-1:-1:-1;;;;114:193:29;;;;;;;;;;;;;;;;;;;;1690:17:9;114:193:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;114:193:29;;;;;;;;;;;;;;;;;;;233:10;7528:21:9;7524:91;;6233:21;114:193:29;;;;;;;;;;;-1:-1:-1;114:193:29;7083:25:9;114:193:29;6233:21:9;114:193:29;233:10;114:193;;;;;;;;;;;;;;;;;;;233:10;7083:25:9;;114:193:29;;;;;;;;;;;;;;;-1:-1:-1;114:193:29;;;-1:-1:-1;114:193:29;7524:91:9;114:193:29;;-1:-1:-1;114:193:29;;7572:32:9;;;;;;;;114:193:29;7572:32:9;114:193:29;;;;-1:-1:-1;114:193:29;;;;;;;;;;;;-1:-1:-1;114:193:29;;;-1:-1:-1;114:193:29;;-1:-1:-1;114:193:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;114:193:29;;;;;-1:-1:-1;114:193:29;;-1:-1:-1;114:193:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;114:193:29;;;;;;;;;;;;;;;;;;;;-1:-1:-1;114:193:29;;;-1:-1:-1;114:193:29;;;;;;;;;;;;-1:-1:-1;114:193:29;;1690:17:9;114:193:29;;-1:-1:-1;114:193:29;;;;;-1:-1:-1;114:193:29;;;;;;;;;;;;-1:-1:-1;114:193:29;;-1:-1:-1;114:193:29;;-1:-1:-1;114:193:29;;;;;;;;;;-1:-1:-1;114:193:29;;;;;;;;;;;;;;;;-1:-1:-1;;114:193:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;114:193:29;;-1:-1:-1;114:193:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;114:193:29;;;;-1:-1:-1;114:193:29;;;;;;;;;;;;;;;;-1:-1:-1;114:193:29;;;;;-1:-1:-1;114:193:29;;;;;;;;;-1:-1:-1;114:193:29;;;;;;;;;;-1:-1:-1;;;;;114:193:29;;;;;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":1397,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_3493":{"entryPoint":1370,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_address_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_string":{"entryPoint":1297,"id":null,"parameterSlots":2,"returnSlots":1},"fun_transfer":{"entryPoint":1419,"id":2160,"parameterSlots":3,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde031461043957508163095ea7b31461038b57816318160ddd1461036c57816323b872dd14610275578163313ce5671461025957816370a082311461022257816395d89b411461010357508063a9059cbb146100d35763dd62ed3e1461008857600080fd5b346100cf57806003193601126100cf57806020926100a461055a565b6100ac610575565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b50346100cf57806003193601126100cf576020906100fc6100f261055a565b602435903361058b565b5160018152f35b8383346100cf57816003193601126100cf57805190828454600181811c90808316928315610218575b6020938484108114610205578388529081156101e95750600114610194575b505050829003601f01601f191682019267ffffffffffffffff841183851017610181575082918261017d925282610511565b0390f35b634e487b7160e01b815260418552602490fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8385106101d5575050505083010185808061014b565b8054888601830152930192849082016101bf565b60ff1916878501525050151560051b840101905085808061014b565b634e487b7160e01b895260228a52602489fd5b91607f169161012c565b5050346100cf5760203660031901126100cf5760209181906001600160a01b0361024a61055a565b16815280845220549051908152f35b5050346100cf57816003193601126100cf576020905160128152f35b905082346103695760603660031901126103695761029161055a565b610299610575565b916044359360018060a01b0383168083526001602052868320338452602052868320549160001983036102d5575b6020886100fc89898961058b565b86831061033d57811561032657331561030f575082526001602090815286832033845281529186902090859003905582906100fc876102c7565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b80fd5b5050346100cf57816003193601126100cf576020906002549051908152f35b9050346104355781600319360112610435576103a561055a565b60243590331561041e576001600160a01b031691821561040757508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b8280fd5b8490843461043557826003193601126104355782600354600181811c90808316928315610507575b6020938484108114610205578388529081156101e957506001146104b157505050829003601f01601f191682019267ffffffffffffffff841183851017610181575082918261017d925282610511565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8385106104f3575050505083010185808061014b565b8054888601830152930192849082016104dd565b91607f1691610461565b6020808252825181830181905290939260005b82811061054657505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610524565b600435906001600160a01b038216820361057057565b600080fd5b602435906001600160a01b038216820361057057565b916001600160a01b0380841692831561065057169283156106375760009083825281602052604082205490838210610605575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fdfea26469706673582212202e12685cd21cb5ddcb076714547e679d07a6910729f95597bb4073cfada83f3564736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x6FDDE03 EQ PUSH2 0x439 JUMPI POP DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x38B JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x36C JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x275 JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x259 JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x222 JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0x103 JUMPI POP DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xD3 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0x88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xCF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xCF JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0xA4 PUSH2 0x55A JUMP JUMPDEST PUSH2 0xAC PUSH2 0x575 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xCF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xCF JUMPI PUSH1 0x20 SWAP1 PUSH2 0xFC PUSH2 0xF2 PUSH2 0x55A JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x58B JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0xCF JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xCF JUMPI DUP1 MLOAD SWAP1 DUP3 DUP5 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x218 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x205 JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1E9 JUMPI POP PUSH1 0x1 EQ PUSH2 0x194 JUMPI JUMPDEST POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x181 JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x17D SWAP3 MSTORE DUP3 PUSH2 0x511 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP4 DUP6 LT PUSH2 0x1D5 JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x14B JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x1BF JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP5 ADD ADD SWAP1 POP DUP6 DUP1 DUP1 PUSH2 0x14B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x22 DUP11 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x12C JUMP JUMPDEST POP POP CALLVALUE PUSH2 0xCF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xCF JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x24A PUSH2 0x55A JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0xCF JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xCF JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x369 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x369 JUMPI PUSH2 0x291 PUSH2 0x55A JUMP JUMPDEST PUSH2 0x299 PUSH2 0x575 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 SLOAD SWAP2 PUSH1 0x0 NOT DUP4 SUB PUSH2 0x2D5 JUMPI JUMPDEST PUSH1 0x20 DUP9 PUSH2 0xFC DUP10 DUP10 DUP10 PUSH2 0x58B JUMP JUMPDEST DUP7 DUP4 LT PUSH2 0x33D JUMPI DUP2 ISZERO PUSH2 0x326 JUMPI CALLER ISZERO PUSH2 0x30F JUMPI POP DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP2 MSTORE SWAP2 DUP7 SWAP1 KECCAK256 SWAP1 DUP6 SWAP1 SUB SWAP1 SSTORE DUP3 SWAP1 PUSH2 0xFC DUP8 PUSH2 0x2C7 JUMP JUMPDEST DUP8 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP8 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0xCF JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xCF JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x435 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x435 JUMPI PUSH2 0x3A5 PUSH2 0x55A JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x41E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x407 JUMPI POP DUP1 DUP4 PUSH1 0x20 SWAP6 CALLER DUP2 MSTORE PUSH1 0x1 DUP8 MSTORE DUP2 DUP2 KECCAK256 DUP6 DUP3 MSTORE DUP8 MSTORE KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP5 SWAP1 DUP5 CALLVALUE PUSH2 0x435 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x435 JUMPI DUP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x507 JUMPI JUMPDEST PUSH1 0x20 SWAP4 DUP5 DUP5 LT DUP2 EQ PUSH2 0x205 JUMPI DUP4 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1E9 JUMPI POP PUSH1 0x1 EQ PUSH2 0x4B1 JUMPI POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT DUP4 DUP6 LT OR PUSH2 0x181 JUMPI POP DUP3 SWAP2 DUP3 PUSH2 0x17D SWAP3 MSTORE DUP3 PUSH2 0x511 JUMP JUMPDEST PUSH1 0x3 DUP8 MSTORE SWAP2 SWAP3 POP DUP6 SWAP2 DUP4 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP4 DUP6 LT PUSH2 0x4F3 JUMPI POP POP POP POP DUP4 ADD ADD DUP6 DUP1 DUP1 PUSH2 0x14B JUMP JUMPDEST DUP1 SLOAD DUP9 DUP7 ADD DUP4 ADD MSTORE SWAP4 ADD SWAP3 DUP5 SWAP1 DUP3 ADD PUSH2 0x4DD JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x461 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x546 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0x524 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x570 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x570 JUMPI JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x650 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x637 JUMPI PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 DUP4 DUP3 LT PUSH2 0x605 JUMPI POP SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E SLT PUSH9 0x5CD21CB5DDCB076714 SLOAD PUSH31 0x679D07A6910729F95597BB4073CFADA83F3564736F6C634300081400330000 ","sourceMap":"114:193:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;114:193:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3459:5:9;114:193:29;;:::i;:::-;;;735:10:14;;3459:5:9;:::i;:::-;114:193:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;114:193:29;;;;;-1:-1:-1;;114:193:29;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;114:193:29;;;;;;;;;;;;;;-1:-1:-1;114:193:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;114:193:29;;;;;-1:-1:-1;;114:193:29;;;;;;;;-1:-1:-1;114:193:29;;;;;;-1:-1:-1;;;114:193:29;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;114:193:29;;;;;;;;-1:-1:-1;;;;;114:193:29;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2780:2:9;114:193:29;;;;;;;;;;;;-1:-1:-1;;114:193:29;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;735:10:14;114:193:29;;;;;;;;10600:17:9;;;10580:37;;10576:310;;114:193:29;;4986:5:9;;;;;;:::i;10576:310::-;10637:24;;;10633:130;;9813:19;;9809:89;;735:10:14;9911:21:9;9907:90;;-1:-1:-1;114:193:29;;;;;;;;;;735:10:14;114:193:29;;;;;;;;;;;;;;;;4986:5:9;10576:310;;;9907:90;114:193:29;;-1:-1:-1;;;9955:31:9;;;;;114:193:29;;;;;9955:31:9;9809:89;114:193:29;;-1:-1:-1;;;9855:32:9;;;;;114:193:29;;;;;9855:32:9;10633:130;114:193:29;;-1:-1:-1;;;10688:60:9;;735:10:14;10688:60:9;;;114:193:29;;;;;;;;;;;;;;;;;;-1:-1:-1;114:193:29;;10688:60:9;;;114:193:29;;;;;;;;;;;;;;;;;;;2927:12:9;114:193:29;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;735:10:14;;9813:19:9;9809:89;;-1:-1:-1;;;;;114:193:29;;9911:21:9;;9907:90;;735:10:14;;;114:193:29;735:10:14;;114:193:29;;;;;;;;;;;;;;;;;;;;10085:31:9;735:10:14;;10085:31:9;;114:193:29;;;;;9907:90:9;114:193:29;;-1:-1:-1;;;9955:31:9;;;;;114:193:29;;;;;9955:31:9;9809:89;114:193:29;;-1:-1:-1;;;9855:32:9;;;;;114:193:29;;;;;9855:32:9;114:193:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;114:193:29;;;;;-1:-1:-1;;114:193:29;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;114:193:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;114:193:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;114:193:29;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;114:193:29;;;;;;:::o;5393:300:9:-;;-1:-1:-1;;;;;114:193:29;;;;5476:18:9;;5472:86;;114:193:29;5571:16:9;;;5567:86;;6093:540;114:193:29;;;;;;;;;;;6340:19:9;;;;6336:115;;114:193:29;;;;;7083:25:9;114:193:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;7083:25:9;5393:300::o;6336:115::-;114:193:29;;-1:-1:-1;;;6386:50:9;;-1:-1:-1;;;;;114:193:29;;;;6386:50:9;;;114:193:29;;;;;;;;;;;;;;;;10688:60:9;5567:86;114:193:29;;-1:-1:-1;;;5610:32:9;;5492:1;5610:32;;;114:193:29;;;5610:32:9;5472:86;114:193:29;;-1:-1:-1;;;5517:30:9;;5492:1;5517:30;;;114:193:29;;;5517:30:9"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/mock/ERC20Token.sol\":\"ERC20Token\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"src/mock/ERC20Token.sol\":{\"keccak256\":\"0x469bb67854e8693c58d47b574c84ac3e87d8b987980ea48009451d8af76130a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d39dcb17fc8cabfda51231170e8679e95179717a8d6a2fe5e5a2931d1821e203\",\"dweb:/ipfs/QmdS3qc3BDVZNfkr1oaSy5W8cfrd1qYuBcYqJak3tNg6V4\"]}},\"version\":1}"}},"src/utils/ABDKMath64x64.sol":{"ABDKMath64x64":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220344773db47f0e8be393ec228e9c25e567245994a0517524e9e1622e5472bbacc64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE SELFBALANCE PUSH20 0xDB47F0E8BE393EC228E9C25E567245994A051752 0x4E SWAP15 AND 0x22 0xE5 SELFBALANCE 0x2B 0xBA 0xCC PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"666:30314:30:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220344773db47f0e8be393ec228e9c25e567245994a0517524e9e1622e5472bbacc64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE SELFBALANCE PUSH20 0xDB47F0E8BE393EC228E9C25E567245994A051752 0x4E SWAP15 AND 0x22 0xE5 SELFBALANCE 0x2B 0xBA 0xCC PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"666:30314:30:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Smart contract library of mathematical functions operating with signed 64.64-bit fixed point numbers.  Signed 64.64-bit fixed point number is basically a simple fraction whose numerator is signed 128-bit integer and denominator is 2^64.  As long as denominator is always the same, there is no need to store it, thus in Solidity signed 64.64-bit fixed point numbers are represented by int128 type holding only the numerator.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/utils/ABDKMath64x64.sol\":\"ABDKMath64x64\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"src/utils/ABDKMath64x64.sol\":{\"keccak256\":\"0x7a0e725ae9f024d8666abb5f00f9f406745cb464a9165a26ff69fcec9ee28b67\",\"license\":\"BSD-4-Clause\",\"urls\":[\"bzz-raw://a4a24922e21ea082a0450f7860da4d234f0a9a8997f08262d2ea46413b9f613b\",\"dweb:/ipfs/QmVhkvPEFH722LDZqsyndj7M4zvnoNh5dHv3LwqVmQVePs\"]}},\"version\":1}"}}}}}